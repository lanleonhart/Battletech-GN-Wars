18:22:36.625 [Info] ### Harmony id=ModTekPreloader.Harmony12X, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ModTekPreloader.Harmony12X.ShimInjectorPatches::Register(ModTekPreloader.Harmony12X.DynamicShimInjector shimInjector), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\ModTekPreloader.dll
### At 2023-06-01 06.22.36
18:22:36.711 [Info] Patching static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadFrom_Prefix(String& assemblyFile)

18:22:36.715 [Info] Running ILHook manipulator on static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly)
18:22:36.720 [Info] Writing prefixes
18:22:36.736 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssembly_Prefix(String& assemblyRef)

18:22:36.738 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly)
18:22:36.740 [Info] Writing prefixes
18:22:36.746 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssemblyRaw_Prefix(Byte[]& rawAssembly)

18:22:36.748 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly)
18:22:36.750 [Info] Writing prefixes
18:22:36.759 [Info] Patching virtual string System.Reflection.Assembly::get_Location() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLocationPatch::Location(System.Reflection.Assembly __instance, String& __result)

18:22:36.762 [Info] Running ILHook manipulator on virtual string System.Reflection.Assembly::get_Location()
18:22:36.764 [Info] Writing prefixes
18:22:46.008 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.010 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()

18:22:46.012 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:22:46.015 [Info] Writing postfixes
18:22:46.189 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.193 [Info] Patching void ActivateAfterInit::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Patches.ActivateAfterInit_Start_Patch::Prefix(ActivateAfterInit __instance, ActivateAfterInit+ActivateAfter ___activateAfter, UnityEngine.GameObject[] ___activationSet)

18:22:46.195 [Info] Running ILHook manipulator on void ActivateAfterInit::Start()
18:22:46.199 [Info] Writing prefixes
18:22:46.204 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.208 [Info] Patching static string VersionInfo::GetReleaseVersion() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Patches.VersionInfo_GetReleaseVersion_Patch::Postfix(String& __result)

18:22:46.210 [Info] Running ILHook manipulator on static string VersionInfo::GetReleaseVersion()
18:22:46.213 [Info] Writing postfixes
18:22:46.219 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.224 [Info] Patching static void BattleTech.ModSupport.ModLoader::Init(Action callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_Init::Prefix(BattleTech.UnityGameInstance __instance, Action callback)

18:22:46.227 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::Init(Action callback)
18:22:46.229 [Info] Writing prefixes
18:22:46.251 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.254 [Info] Patching static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModLoader_AreModsEnabled::Postfix(Boolean& __result)

18:22:46.257 [Info] Running ILHook manipulator on static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled()
18:22:46.259 [Info] Writing postfixes
18:22:46.266 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.270 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadSystemModStatus::Prefix()

18:22:46.272 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus()
18:22:46.275 [Info] Writing prefixes
18:22:46.280 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.283 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadGameModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadGameModStatus::Prefix()

18:22:46.285 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadGameModStatus()
18:22:46.288 [Info] Writing prefixes
18:22:46.292 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.312 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_InitModResources::Prefix(BattleTech.UI.ModManagerScreen __instance)

18:22:46.315 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::Init()
18:22:46.317 [Info] Writing prefixes
18:22:46.324 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.328 [Info] Patching static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_GetCombinedModStatus::Postfix(System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[BattleTech.ModSupport.ModStatusItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:22:46.332 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus()
18:22:46.335 [Info] Writing postfixes
18:22:46.345 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.349 [Info] Patching static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_SaveModStatusToFile::Prefix(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)

18:22:46.352 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)
18:22:46.355 [Info] Writing prefixes
18:22:46.362 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
18:22:46.366 [Info] Patching bool BattleTech.UI.ModManagerScreen::UnsavedSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_UnsavedSettings::Prefix(BattleTech.UI.ModManagerScreen __instance, Boolean& __result)

18:22:46.370 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerScreen::UnsavedSettings()
18:22:46.374 [Info] Writing prefixes
18:22:46.385 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.390 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ReceiveButtonPress::Prefix(BattleTech.UI.ModManagerScreen __instance, string button)

18:22:46.396 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button)
18:22:46.399 [Info] Writing prefixes
18:22:46.408 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.411 [Info] Patching void BattleTech.UI.ModManagerScreen::ToggleModsEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ToggleModsEnabled::Prefix(BattleTech.UI.ModManagerScreen __instance, BattleTech.UI.HBSDOTweenToggle ___modsEnabledToggleBox)

18:22:46.414 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerScreen::ToggleModsEnabled()
18:22:46.416 [Info] Writing prefixes
18:22:46.420 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.425 [Info] Patching void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_ToggleItemEnabled::Prefix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.UI.HBSDOTweenToggle ___toggleBox, BattleTech.UI.ModManagerScreen ____screen)

18:22:46.428 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled()
18:22:46.431 [Info] Writing prefixes
18:22:46.438 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.443 [Info] Patching void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_SetData::Postfix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.ModSupport.ModStatusItem modStatusItem, BattleTech.UI.TMProWrapper.LocalizableText ___modNameText, BattleTech.UI.HBSDOTweenToggle ___toggleBox)

18:22:46.446 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem)
18:22:46.448 [Info] Writing postfixes
18:22:46.460 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.463 [Info] Patching bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_InitializeList::Prefix(BattleTech.UI.ModManagerInstalledModsPanel __instance, Boolean& __result, BattleTech.UI.ModManagerListView ___modsList)

18:22:46.464 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList()
18:22:46.467 [Info] Writing prefixes
18:22:46.474 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.477 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFilepath_Patch::Prefix(string assetBundleName, String& __result)

18:22:46.480 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName)
18:22:46.483 [Info] Writing prefixes
18:22:46.489 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.492 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFileURL_Patch::Prefix(string assetBundleName, String& __result)

18:22:46.495 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName)
18:22:46.498 [Info] Writing prefixes
18:22:46.503 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.507 [Info] Patching void BattleTech.BattleTechResourceLocator::RefreshTypedEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RefreshTypedEntries_Patch::Prefix()

18:22:46.510 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RefreshTypedEntries()
18:22:46.513 [Info] Writing prefixes
18:22:46.529 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.532 [Info] Patching void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_SetContentPackIndex_Patch::Prefix(BattleTech.Data.ContentPackIndex contentPackIndex)

18:22:46.535 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex)
18:22:46.538 [Info] Writing prefixes
18:22:46.543 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.546 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

18:22:46.549 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum)
18:22:46.552 [Info] Writing prefixes
18:22:46.557 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.559 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

18:22:46.563 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum)
18:22:46.565 [Info] Writing prefixes
18:22:46.570 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.574 [Info] Patching BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetAddendumByName_Patch::Prefix(string name, BattleTech.VersionManifestAddendum& __result)

18:22:46.576 [Info] Running ILHook manipulator on BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name)
18:22:46.579 [Info] Writing prefixes
18:22:46.583 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.587 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

18:22:46.590 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
18:22:46.592 [Info] Writing prefixes
18:22:46.598 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.601 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

18:22:46.604 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
18:22:46.607 [Info] Writing prefixes
18:22:46.613 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.616 [Info] Patching System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoresContainingEntry_Patch::Prefix(BattleTech.BattleTechResourceType resourceType, string id, System.Collections.Generic.List`1[[BattleTech.VersionManifestMemoryStore, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:22:46.618 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id)
18:22:46.622 [Info] Writing prefixes
18:22:46.628 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.631 [Info] Patching BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoreByName_Patch::Prefix(string name, BattleTech.VersionManifestMemoryStore& __result)

18:22:46.634 [Info] Running ILHook manipulator on BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name)
18:22:46.636 [Info] Writing prefixes
18:22:46.659 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.662 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntries_Patch::Prefix(BattleTech.VersionManifestEntry[]& __result)

18:22:46.666 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries()
18:22:46.668 [Info] Writing prefixes
18:22:46.675 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.679 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResource_Patch::Prefix(BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

18:22:46.682 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership)
18:22:46.684 [Info] Writing prefixes
18:22:46.692 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.695 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResourceFromAddendum_Patch::Prefix(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

18:22:46.698 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership)
18:22:46.700 [Info] Writing prefixes
18:22:46.706 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.710 [Info] Patching BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_EntryByID_Patch::Prefix(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry& __result)

18:22:46.713 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership)
18:22:46.715 [Info] Writing prefixes
18:22:46.720 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.725 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveEntry_Patch::Prefix(BattleTech.VersionManifestEntry entry)

18:22:46.727 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry)
18:22:46.730 [Info] Writing prefixes
18:22:46.741 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.744 [Info] Patching bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.ContentPackIndex_IsResourceOwned_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, string resourceId, Boolean& __result)

18:22:46.747 [Info] Running ILHook manipulator on bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId)
18:22:46.750 [Info] Writing prefixes
18:22:46.756 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.759 [Info] Patching void BattleTech.Data.ContentPackIndex::PatchMDD() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Prefix(Boolean& ___rebuildMDDOnLoadComplete, System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance, System.Diagnostics.Stopwatch __state)

18:22:46.762 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::PatchMDD()
18:22:46.775 [Info] Writing prefixes
18:22:46.778 [Info] Writing postfixes
18:22:46.787 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.795 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

18:22:46.798 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
18:22:46.801 [Info] Writing prefixes
18:22:46.803 [Info] Writing postfixes
18:22:46.808 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.811 [Info] Patching void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.DataManager_ProcessPrewarmRequests_Patch::Prefix(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)

18:22:46.813 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)
18:22:46.816 [Info] Writing prefixes
18:22:46.823 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.826 [Info] Patching BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Prefix(BattleTech.Data.LoadRequest __instance, BattleTech.Data.DataManager+FileLoadRequest& __result)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Postfix(BattleTech.Data.DataManager+FileLoadRequest& __result)

18:22:46.828 [Info] Running ILHook manipulator on BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest()
18:22:46.832 [Info] Writing prefixes
18:22:46.835 [Info] Writing postfixes
18:22:46.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.845 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_DB_PATH_Patch::Prefix(String& __result)

18:22:46.848 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH()
18:22:46.851 [Info] Writing prefixes
18:22:46.932 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.935 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_TMP_PATH_Patch::Prefix(String& __result)

18:22:46.938 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH()
18:22:46.941 [Info] Writing prefixes
18:22:46.946 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.949 [Info] Patching static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.SimGame_MDDExtensions_UpdateContract_Patch::Prefix(String& fileID)

18:22:46.952 [Info] Running ILHook manipulator on static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride)
18:22:46.955 [Info] Writing prefixes
18:22:46.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:46.967 [Info] Patching static void BattleTech.DebugBridge::ApplyCurrentSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.DebugBridge_ApplyCurrentSettings_Patch::Prefix()

18:22:46.969 [Info] Running ILHook manipulator on static void BattleTech.DebugBridge::ApplyCurrentSettings()
18:22:46.972 [Info] Writing prefixes
18:22:47.009 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:47.012 [Info] Patching static void HBS.Logging.Logger::CaptureUnityLogs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.Logger_CaptureUnityLogs_Patch::Prefix()

18:22:47.015 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::CaptureUnityLogs()
18:22:47.018 [Info] Writing prefixes
18:22:47.023 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
18:22:47.026 [Info] Patching bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_IsEnabledFor_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, HBS.Logging.LogLevel level, Boolean& __result)

18:22:47.029 [Info] Running ILHook manipulator on bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level)
18:22:47.032 [Info] Writing prefixes
18:22:47.051 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
18:22:47.056 [Info] Patching void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, string ___name, HBS.Logging.LogLevel level, object message, Exception exception, HBS.Logging.IStackTrace location)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:47.058 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
18:22:47.061 [Info] Transpiling void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
18:22:47.075 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:47.103 [Info] Writing prefixes
18:22:47.112 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.117 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
2 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

18:22:47.120 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:22:47.122 [Info] Writing prefixes
18:22:47.125 [Info] Writing postfixes
18:22:47.130 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.134 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_Init_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

18:22:47.137 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::Init()
18:22:47.140 [Info] Writing postfixes
18:22:47.145 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.149 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::LateUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_LateUpdate_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

18:22:47.152 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::LateUpdate()
18:22:47.155 [Info] Writing postfixes
18:22:47.160 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.164 [Info] Patching static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_ShowUntil_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

18:22:47.167 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime)
18:22:47.169 [Info] Writing postfixes
18:22:47.179 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.182 [Info] Patching static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.Logger_HandleUnityLog_Patch::Postfix(string logString, string stackTrace, UnityEngine.LogType type)

18:22:47.185 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type)
18:22:47.188 [Info] Writing postfixes
18:22:47.194 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.197 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

18:22:47.200 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
18:22:47.202 [Info] Writing postfixes
18:22:47.212 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.214 [Info] Patching void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomVideos.Patches.BinkMediaPlayer_Play_Patch::Prefix(BattleTech.BinkMedia.BinkMediaPlayer __instance, string videoName)

18:22:47.217 [Info] Running ILHook manipulator on void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture)
18:22:47.220 [Info] Writing prefixes
18:22:47.234 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.239 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

18:22:47.242 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
18:22:47.245 [Info] Writing postfixes
18:22:47.251 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.255 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)

18:22:47.259 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
18:22:47.262 [Info] Writing postfixes
18:22:47.268 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.273 [Info] Patching SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.AmmoCategory_GetIcon::Postfix(BattleTech.AmmoCategoryValue __instance, SVGImporter.SVGAsset& __result)

18:22:47.276 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon()
18:22:47.279 [Info] Writing postfixes
18:22:47.287 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.291 [Info] Patching SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.WeaponCategoryValue_GetIcon::Postfix(BattleTech.WeaponCategoryValue __instance, SVGImporter.SVGAsset& __result)

18:22:47.294 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon()
18:22:47.298 [Info] Writing postfixes
18:22:47.304 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.307 [Info] Patching void LoadedAudioBank::LoadBank() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Prefix(string ___name)
1 postfixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Postfix(string ___name)

18:22:47.311 [Info] Running ILHook manipulator on void LoadedAudioBank::LoadBank()
18:22:47.313 [Info] Writing prefixes
18:22:47.316 [Info] Writing postfixes
18:22:47.323 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.326 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()

18:22:47.328 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
18:22:47.331 [Info] Writing postfixes
18:22:47.339 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.343 [Info] Patching virtual void BattleTech.UI.AudioSettingsModule::SaveSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioSettingsModule_SaveSettings::Postfix(BattleTech.UI.AudioSettingsModule __instance)

18:22:47.345 [Info] Running ILHook manipulator on virtual void BattleTech.UI.AudioSettingsModule::SaveSettings()
18:22:47.348 [Info] Writing postfixes
18:22:47.354 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.357 [Info] Patching void WwiseManager::LoadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_LoadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

18:22:47.359 [Info] Running ILHook manipulator on void WwiseManager::LoadCombatBanks()
18:22:47.362 [Info] Writing postfixes
18:22:47.367 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.372 [Info] Patching void WwiseManager::UnloadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_UnloadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

18:22:47.376 [Info] Running ILHook manipulator on void WwiseManager::UnloadCombatBanks()
18:22:47.378 [Info] Writing postfixes
18:22:47.403 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.407 [Info] Patching void LoadedAudioBank::UnloadBank() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_UnloadBank::Postfix(LoadedAudioBank __instance)

18:22:47.409 [Info] Running ILHook manipulator on void LoadedAudioBank::UnloadBank()
18:22:47.412 [Info] Writing postfixes
18:22:47.418 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
18:22:47.421 [Info] Patching AKRESULT LoadedAudioBank::LoadBankExternal() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_LoadBankExternal::Prefix(LoadedAudioBank __instance, AKRESULT& __result, UInt32& ___id)

18:22:47.424 [Info] Running ILHook manipulator on AKRESULT LoadedAudioBank::LoadBankExternal()
18:22:47.427 [Info] Writing prefixes
18:22:47.436 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.439 [Info] Patching void BattleTech.GameTipList::.ctor(string filename, int historyLength) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:47.442 [Info] Running ILHook manipulator on void BattleTech.GameTipList::.ctor(string filename, int historyLength)
18:22:47.445 [Info] Transpiling void BattleTech.GameTipList::.ctor(string filename, int historyLength)
18:22:47.450 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:47.461 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.465 [Info] Patching static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_DEFAULT_SETTINGS_FILE_PATH_Patch::Prefix(String& __result)

18:22:47.467 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH()
18:22:47.470 [Info] Writing prefixes
18:22:47.475 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.478 [Info] Patching static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetCustomSettingsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

18:22:47.481 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension)
18:22:47.483 [Info] Writing prefixes
18:22:47.488 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.492 [Info] Patching static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetStreamingAssetsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

18:22:47.494 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension)
18:22:47.497 [Info] Writing prefixes
18:22:47.502 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.506 [Info] Patching virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::Prefix(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

18:22:47.509 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load()
18:22:47.513 [Info] Writing prefixes
18:22:47.518 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.523 [Info] Patching virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::PrefixBase(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

18:22:47.527 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load()
18:22:47.530 [Info] Writing prefixes
18:22:47.909 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.912 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

18:22:47.916 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
18:22:47.919 [Info] Writing prefixes
18:22:47.931 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.935 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)
1 postfixes:
* static void BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Post(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

18:22:47.938 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
18:22:47.941 [Info] Writing prefixes
18:22:47.943 [Info] Writing postfixes
18:22:47.950 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.954 [Info] Patching static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DontStripComments::Prefix(string json, String& __result)

18:22:47.957 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json)
18:22:47.959 [Info] Writing prefixes
18:22:47.966 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
18:22:47.969 [Info] Patching bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.NoSalvageSoftlock::HasAllPriority(BattleTech.UI.AAR_SalvageChosen __instance, Boolean& __result)

18:22:47.972 [Info] Running ILHook manipulator on bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority()
18:22:47.975 [Info] Writing prefixes
18:22:47.983 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
18:22:47.986 [Info] Patching HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:47.989 [Info] Running ILHook manipulator on HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
18:22:47.992 [Info] Transpiling HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
18:22:47.996 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.004 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
18:22:48.028 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

18:22:48.031 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
18:22:48.034 [Info] Writing postfixes
18:22:48.040 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
18:22:48.044 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.ShopTabLagFix::AddItemToInventory(BattleTech.UI.MechLabInventoryWidget_ListView __instance, BattleTech.UI.InventoryDataObject_BASE ItemData)

18:22:48.046 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd)
18:22:48.049 [Info] Writing prefixes
18:22:48.079 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.083 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.086 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
18:22:48.089 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
18:22:48.092 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.098 [Info] Writing prefixes
18:22:48.101 [Info] Writing postfixes
18:22:48.106 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.110 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.113 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
18:22:48.116 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
18:22:48.119 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.124 [Info] Writing prefixes
18:22:48.127 [Info] Writing postfixes
18:22:48.135 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.139 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.141 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
18:22:48.144 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
18:22:48.148 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.154 [Info] Writing prefixes
18:22:48.157 [Info] Writing postfixes
18:22:48.162 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.166 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.169 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
18:22:48.172 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
18:22:48.175 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.180 [Info] Writing prefixes
18:22:48.183 [Info] Writing postfixes
18:22:48.187 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.192 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.195 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
18:22:48.198 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
18:22:48.201 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.206 [Info] Writing prefixes
18:22:48.209 [Info] Writing postfixes
18:22:48.213 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.217 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.219 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
18:22:48.222 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
18:22:48.225 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.230 [Info] Writing prefixes
18:22:48.232 [Info] Writing postfixes
18:22:48.237 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.241 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.243 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
18:22:48.246 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
18:22:48.249 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.253 [Info] Writing prefixes
18:22:48.256 [Info] Writing postfixes
18:22:48.261 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.263 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.266 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
18:22:48.269 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
18:22:48.273 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.276 [Info] Writing prefixes
18:22:48.279 [Info] Writing postfixes
18:22:48.283 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.287 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.290 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
18:22:48.292 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
18:22:48.295 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.299 [Info] Writing prefixes
18:22:48.302 [Info] Writing postfixes
18:22:48.307 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.311 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.313 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
18:22:48.316 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
18:22:48.320 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.326 [Info] Writing prefixes
18:22:48.329 [Info] Writing postfixes
18:22:48.337 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.341 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.345 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
18:22:48.348 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
18:22:48.352 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.358 [Info] Writing prefixes
18:22:48.362 [Info] Writing postfixes
18:22:48.368 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.372 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.376 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
18:22:48.379 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
18:22:48.382 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.387 [Info] Writing prefixes
18:22:48.390 [Info] Writing postfixes
18:22:48.394 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.398 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.401 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
18:22:48.404 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
18:22:48.407 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.411 [Info] Writing prefixes
18:22:48.415 [Info] Writing postfixes
18:22:48.419 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.422 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.425 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
18:22:48.428 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
18:22:48.431 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.436 [Info] Writing prefixes
18:22:48.438 [Info] Writing postfixes
18:22:48.444 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.447 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.450 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
18:22:48.453 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
18:22:48.456 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.461 [Info] Writing prefixes
18:22:48.463 [Info] Writing postfixes
18:22:48.468 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.471 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.474 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
18:22:48.477 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
18:22:48.481 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.486 [Info] Writing prefixes
18:22:48.489 [Info] Writing postfixes
18:22:48.494 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.497 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.500 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
18:22:48.503 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
18:22:48.506 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.511 [Info] Writing prefixes
18:22:48.513 [Info] Writing postfixes
18:22:48.518 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 23 ms
18:22:48.521 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.524 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
18:22:48.527 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
18:22:48.530 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.534 [Info] Writing prefixes
18:22:48.537 [Info] Writing postfixes
18:22:48.541 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.544 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.547 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
18:22:48.549 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
18:22:48.552 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.557 [Info] Writing prefixes
18:22:48.559 [Info] Writing postfixes
18:22:48.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.566 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.569 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
18:22:48.572 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
18:22:48.575 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.580 [Info] Writing prefixes
18:22:48.582 [Info] Writing postfixes
18:22:48.587 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.609 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.612 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
18:22:48.614 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
18:22:48.617 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.622 [Info] Writing prefixes
18:22:48.623 [Info] Writing postfixes
18:22:48.628 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.631 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.634 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
18:22:48.636 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
18:22:48.639 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.644 [Info] Writing prefixes
18:22:48.646 [Info] Writing postfixes
18:22:48.651 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.654 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.657 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.659 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.662 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.667 [Info] Writing prefixes
18:22:48.669 [Info] Writing postfixes
18:22:48.674 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.677 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.679 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.682 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.684 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.688 [Info] Writing prefixes
18:22:48.691 [Info] Writing postfixes
18:22:48.696 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.699 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.701 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.704 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.707 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.711 [Info] Writing prefixes
18:22:48.714 [Info] Writing postfixes
18:22:48.718 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.721 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.724 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.726 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.728 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.733 [Info] Writing prefixes
18:22:48.734 [Info] Writing postfixes
18:22:48.739 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.742 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.745 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.747 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.749 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.754 [Info] Writing prefixes
18:22:48.756 [Info] Writing postfixes
18:22:48.760 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.764 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.766 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.768 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.771 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.776 [Info] Writing prefixes
18:22:48.778 [Info] Writing postfixes
18:22:48.782 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.786 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.788 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.790 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.793 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.797 [Info] Writing prefixes
18:22:48.800 [Info] Writing postfixes
18:22:48.804 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.807 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.810 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.812 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
18:22:48.815 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.819 [Info] Writing prefixes
18:22:48.822 [Info] Writing postfixes
18:22:48.826 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.829 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.832 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
18:22:48.835 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
18:22:48.837 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.841 [Info] Writing prefixes
18:22:48.844 [Info] Writing postfixes
18:22:48.848 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.851 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.854 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
18:22:48.856 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
18:22:48.859 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.863 [Info] Writing prefixes
18:22:48.865 [Info] Writing postfixes
18:22:48.869 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.873 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.875 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
18:22:48.878 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
18:22:48.881 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.886 [Info] Writing prefixes
18:22:48.888 [Info] Writing postfixes
18:22:48.893 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.896 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.898 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
18:22:48.900 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
18:22:48.903 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.907 [Info] Writing prefixes
18:22:48.910 [Info] Writing postfixes
18:22:48.915 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.918 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.920 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
18:22:48.923 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
18:22:48.925 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.930 [Info] Writing prefixes
18:22:48.932 [Info] Writing postfixes
18:22:48.937 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.940 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.942 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
18:22:48.944 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
18:22:48.947 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.951 [Info] Writing prefixes
18:22:48.954 [Info] Writing postfixes
18:22:48.958 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.962 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.964 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
18:22:48.966 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
18:22:48.969 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.973 [Info] Writing prefixes
18:22:48.976 [Info] Writing postfixes
18:22:48.980 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:48.983 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:48.986 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
18:22:48.988 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
18:22:48.991 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:48.995 [Info] Writing prefixes
18:22:48.997 [Info] Writing postfixes
18:22:49.002 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.005 [Info] Patching void BattleTech.EncounterLayerData::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::EncounterLayerData_Constructor(BattleTech.EncounterLayerData __instance)

18:22:49.007 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::.ctor()
18:22:49.009 [Info] Writing postfixes
18:22:49.017 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.020 [Info] Patching void BattleTech.LevelLoader::EnableLogging(bool enable) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.EnableLoggingDuringLoads::EnableLogging(Boolean& enable)

18:22:49.022 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::EnableLogging(bool enable)
18:22:49.024 [Info] Writing prefixes
18:22:49.029 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.032 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)

18:22:49.035 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
18:22:49.037 [Info] Writing prefixes
18:22:49.045 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.048 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

18:22:49.050 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
18:22:49.052 [Info] Writing prefixes
18:22:49.063 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.066 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

18:22:49.069 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
18:22:49.071 [Info] Writing prefixes
18:22:49.074 [Info] Writing postfixes
18:22:49.099 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.102 [Info] Patching void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::InitializeTaggedLance_Pre()

18:22:49.105 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance()
18:22:49.107 [Info] Writing prefixes
18:22:49.111 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.114 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

18:22:49.117 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
18:22:49.119 [Info] Writing prefixes
18:22:49.124 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
18:22:49.128 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

18:22:49.130 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
18:22:49.132 [Info] Writing prefixes
18:22:49.142 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.145 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:49.148 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
18:22:49.150 [Info] Transpiling bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
18:22:49.153 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:49.159 [Info] Writing prefixes
18:22:49.164 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.168 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:49.170 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
18:22:49.172 [Info] Transpiling void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
18:22:49.175 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:49.184 [Info] Writing prefixes
18:22:49.191 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.202 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:22:49.205 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:22:49.207 [Info] Writing prefixes
18:22:49.277 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.280 [Info] Patching void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::Init_Pre(Single& ___betweenRoomTransitionTime, Single& ___inRoomTransitionTime)

18:22:49.282 [Info] Running ILHook manipulator on void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim)
18:22:49.284 [Info] Writing prefixes
18:22:49.291 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.294 [Info] Patching System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::TransitionMech_Pre(Single& fadeDuration)

18:22:49.296 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit)
18:22:49.298 [Info] Writing prefixes
18:22:49.304 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.314 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:22:49.316 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:22:49.319 [Info] Writing prefixes
18:22:49.369 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.372 [Info] Patching virtual bool BattleTech.VersionManifestBase::Contains(string id, string type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.VersionManifestPatches::Contains_Pre(BattleTech.VersionManifestBase __instance, string id, string type, Boolean& __result)

18:22:49.375 [Info] Running ILHook manipulator on virtual bool BattleTech.VersionManifestBase::Contains(string id, string type)
18:22:49.377 [Info] Writing prefixes
18:22:49.383 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.386 [Info] Patching void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DisableSensitiveDataLogDump::OnInternetConnectivityResult(BattleTech.UnityGameInstance __instance, bool success)

18:22:49.389 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success)
18:22:49.391 [Info] Writing prefixes
18:22:49.416 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.421 [Info] Patching void BattleTech.CameraControl::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.CameraControlUpdatePatch::Postfix(BattleTech.CameraControl __instance, BattleTech.DebugFlyCameraControl ___debugFlyCameraControl)

18:22:49.424 [Info] Running ILHook manipulator on void BattleTech.CameraControl::Update()
18:22:49.427 [Info] Writing postfixes
18:22:49.442 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.446 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)

18:22:49.450 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
18:22:49.453 [Info] Writing prefixes
18:22:49.469 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.472 [Info] Patching void BattleTech.RegionGameLogic::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.RegionGameLogicPatch::Postfix(BattleTech.RegionGameLogic __instance)

18:22:49.475 [Info] Running ILHook manipulator on void BattleTech.RegionGameLogic::Update()
18:22:49.477 [Info] Writing postfixes
18:22:49.482 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.485 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

18:22:49.488 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
18:22:49.490 [Info] Writing prefixes
18:22:49.500 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.503 [Info] Patching void BattleTech.UnityGameInstance::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.UnityGameInstancePatch::Postfix(BattleTech.UnityGameInstance __instance)

18:22:49.506 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Update()
18:22:49.509 [Info] Writing postfixes
18:22:49.551 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.554 [Info] Patching bool BattleTech.Contract::get_IsFlashpointContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

18:22:49.556 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointContract()
18:22:49.558 [Info] Writing postfixes
18:22:49.562 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.565 [Info] Patching bool BattleTech.Contract::get_IsFlashpointCampaignContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointCampaignContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

18:22:49.567 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointCampaignContract()
18:22:49.570 [Info] Writing postfixes
18:22:49.574 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.576 [Info] Patching bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.FlashpointDef_GetisHeavyMetalCampaign_Patch::Postfix(BattleTech.FlashpointDef __instance, Boolean& __result)

18:22:49.578 [Info] Running ILHook manipulator on bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign()
18:22:49.581 [Info] Writing postfixes
18:22:49.585 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.589 [Info] Patching void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGContractsWidget_ListContracts::Postfix(BattleTech.UI.SGContractsWidget __instance, System.Collections.Generic.List<BattleTech.UI.SGContractsListItem> ___listedContracts, System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)

18:22:49.591 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)
18:22:49.593 [Info] Writing postfixes
18:22:49.605 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.608 [Info] Patching BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_GetSystemFlashpoint::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.Flashpoint flashpoint, BattleTech.StarmapSystemRenderer& __result)

18:22:49.611 [Info] Running ILHook manipulator on BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint)
18:22:49.613 [Info] Writing postfixes
18:22:49.620 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:49.623 [Info] Patching void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_ShowFlashpointSystems::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState ___simState)

18:22:49.626 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems()
18:22:49.628 [Info] Writing postfixes
18:22:49.646 [Info] ### Harmony id=io.github.denadan.CustomComponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomComponents.Control::Init(string directory, string settingsInitJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomComponents\CustomComponents.dll
### At 2023-06-01 06.22.49
18:22:49.656 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
3 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

18:22:49.659 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:22:49.661 [Info] Writing prefixes
18:22:49.664 [Info] Writing postfixes
18:22:49.671 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)

18:22:49.673 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
18:22:49.676 [Info] Writing prefixes
18:22:49.684 [Info] Patching static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.JSONSerializationUtility_RehydrateObjectFromDictionary_Patch::Postfix(object target, System.Collections.Generic.Dictionary<string, object> values)

18:22:49.687 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates)
18:22:49.689 [Info] Writing postfixes
18:22:49.702 [Info] Patching BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType)
1 postfixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Postfix(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.MechComponentRef __result, BattleTech.SimGameState __instance)

18:22:49.705 [Info] Running ILHook manipulator on BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory)
18:22:49.707 [Info] Writing prefixes
18:22:49.710 [Info] Writing postfixes
18:22:49.743 [Info] Patching bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Get_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.745 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
18:22:49.748 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
18:22:49.751 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Get_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.757 [Info] Patching bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Set::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.760 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
18:22:49.763 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
18:22:49.766 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Set::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.771 [Info] Patching bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Invoke_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.774 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
18:22:49.776 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
18:22:49.780 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Invoke_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.785 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.788 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
18:22:49.791 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
18:22:49.793 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.797 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.800 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
18:22:49.803 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
18:22:49.805 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.810 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::RequestResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.812 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
18:22:49.816 [Info] Transpiling void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
18:22:49.822 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.829 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:49.832 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
18:22:49.834 [Info] Transpiling void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
18:22:49.838 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:49.846 [Info] Patching void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Contract_AddMechComponentToSalvage::Prefix(Boolean& __runOriginal, BattleTech.MechComponentDef& def)

18:22:49.848 [Info] Running ILHook manipulator on void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade)
18:22:49.851 [Info] Writing prefixes
18:22:49.866 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

18:22:49.868 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:22:49.871 [Info] Writing prefixes
18:22:49.896 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

18:22:49.899 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
18:22:49.901 [Info] Writing prefixes
18:22:49.909 [Info] Patching void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ListView_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget_ListView __instance)

18:22:49.912 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting()
18:22:49.914 [Info] Writing prefixes
18:22:49.919 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

18:22:49.922 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:49.924 [Info] Writing postfixes
18:22:49.931 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

18:22:49.934 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:22:49.936 [Info] Writing postfixes
18:22:49.948 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

18:22:49.950 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:22:49.953 [Info] Writing prefixes
18:22:49.973 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)

18:22:49.976 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
18:22:49.978 [Info] Writing postfixes
18:22:49.985 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

18:22:49.987 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
18:22:49.989 [Info] Writing postfixes
18:22:49.994 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)

18:22:49.997 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
18:22:50.000 [Info] Writing postfixes
18:22:50.009 [Info] Patching BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentRepairWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, bool isOnMech, BattleTech.WorkOrderEntry_RepairComponent& __result)

18:22:50.011 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech)
18:22:50.014 [Info] Writing postfixes
18:22:50.019 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SorterMechInventory.Patches.MechDef_SetInventory_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponentRef[]& newInventory)

18:22:50.022 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
18:22:50.024 [Info] Writing prefixes
18:22:50.029 [Info] Patching bool BattleTech.Data.SVGCache::Contains(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Icons.SVGAssets_Contains::Prefix(Boolean& __runOriginal, string id, Boolean& __result)

18:22:50.031 [Info] Running ILHook manipulator on bool BattleTech.Data.SVGCache::Contains(string id)
18:22:50.034 [Info] Writing prefixes
18:22:50.039 [Info] Patching SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Icons.SVGCache_GetAsset::Prefix(Boolean& __runOriginal, string id, SVGImporter.SVGAsset& __result)

18:22:50.041 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id)
18:22:50.044 [Info] Writing prefixes
18:22:50.049 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHPText)

18:22:50.052 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
18:22:50.054 [Info] Writing postfixes
18:22:50.086 [Info] Patching void BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetHardpointData(BattleTech.ChassisDef chassis) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetHardpointData::Prefix(Boolean& __runOriginal)

18:22:50.089 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetHardpointData(BattleTech.ChassisDef chassis)
18:22:50.091 [Info] Writing prefixes
18:22:50.097 [Info] Patching void BattleTech.MechDef::InsertFixedEquipmentIntoInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Fixes.MechDef_InsertFixedEquipmentIntoInventory::Prefix(Boolean& __runOriginal, BattleTech.MechDef __instance, BattleTech.MechComponentRef[]& ___inventory, BattleTech.Data.DataManager ___dataManager)

18:22:50.099 [Info] Running ILHook manipulator on void BattleTech.MechDef::InsertFixedEquipmentIntoInventory()
18:22:50.101 [Info] Writing prefixes
18:22:50.109 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)
* static void CustomComponents.Fixes.SimGameState_CreateComponentInstallWorkOrder::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, string mechSimGameUID, BattleTech.WorkOrderEntry_InstallComponent __result)

18:22:50.112 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
18:22:50.114 [Info] Writing postfixes
18:22:50.123 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:50.125 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
18:22:50.127 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
18:22:50.134 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:50.151 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_ShowHighlightFrame::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, bool isOriginalLocation, bool canBeAdded)

18:22:50.154 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
18:22:50.156 [Info] Writing prefixes
18:22:50.169 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
1 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)

18:22:50.171 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:22:50.174 [Info] Writing prefixes
18:22:50.176 [Info] Writing postfixes
18:22:50.206 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishMechBayPanel_LanceConfiguratorDataLoaded_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishMechBayPanel __instance)

18:22:50.208 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest)
18:22:50.211 [Info] Writing prefixes
18:22:50.219 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)

18:22:50.222 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
18:22:50.224 [Info] Writing prefixes
18:22:50.233 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_InventoryGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_InventoryGear __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:50.235 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.238 [Info] Writing prefixes
18:22:50.243 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_InventoryWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_InventoryWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:50.245 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.248 [Info] Writing prefixes
18:22:50.253 [Info] Patching void BattleTech.UI.InventoryItemElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryItemElement_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement __instance, BattleTech.MechComponentRef ___componentRef)

18:22:50.255 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::RefreshItemColor()
18:22:50.257 [Info] Writing prefixes
18:22:50.262 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryItemElement_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement_NotListView __instance, BattleTech.MechComponentRef ___componentRef)

18:22:50.264 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor()
18:22:50.267 [Info] Writing prefixes
18:22:50.272 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_InventoryGear_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_InventoryGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

18:22:50.275 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:50.277 [Info] Writing prefixes
18:22:50.282 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_InventoryWeapon_NotListViewn_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

18:22:50.285 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:50.287 [Info] Writing prefixes
18:22:50.291 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentListItem_SetData::Postfix(BattleTech.ComponentDamageLevel damageLevel)

18:22:50.294 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor)
18:22:50.296 [Info] Writing postfixes
18:22:50.301 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentListItem_SetTooltipData::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentDef MechDef, BattleTech.UI.UIColorRefTracker ___backgroundColor, BattleTech.UI.UIColorRefTracker ___itemTextColor)

18:22:50.304 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef)
18:22:50.306 [Info] Writing postfixes
18:22:50.312 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechComponentDef_GetUIColor::Postfix(BattleTech.MechComponentDef componentDef, BattleTech.UI.UIColor& __result)

18:22:50.314 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef)
18:22:50.316 [Info] Writing postfixes
18:22:50.322 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechComponentRef_GetUIColor::Postfix(BattleTech.MechComponentRef __instance, BattleTech.UI.UIColor& __result, BattleTech.MechComponentRef componentRef)

18:22:50.325 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef)
18:22:50.328 [Info] Writing postfixes
18:22:50.333 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabSlotItem_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.UIColorRefTracker ___backgroundColor, UnityEngine.GameObject ___fixedEquipmentOverlay, BattleTech.UI.IMechLabDropTarget ___dropParent, BattleTech.UI.UIColorRefTracker ___nameTextColor, BattleTech.UI.UIColorRefTracker ___iconColor, SVGImporter.SVGImage ___icon)

18:22:50.335 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor()
18:22:50.338 [Info] Writing prefixes
18:22:50.343 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_SalvageGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageGear __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:50.345 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.347 [Info] Writing prefixes
18:22:50.353 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_SalvageWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:50.356 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.358 [Info] Writing prefixes
18:22:50.363 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageGear_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

18:22:50.365 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:50.368 [Info] Writing prefixes
18:22:50.375 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageWeapon_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

18:22:50.377 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:50.379 [Info] Writing prefixes
18:22:50.383 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InInventoryDataObject_SalvageFullMech_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:50.386 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.388 [Info] Writing prefixes
18:22:50.393 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageFullMech_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

18:22:50.395 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:50.397 [Info] Writing prefixes
18:22:50.402 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InInventoryDataObject_SalvageMechPart_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageMechPart __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:50.405 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.407 [Info] Writing prefixes
18:22:50.411 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageMechPart_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

18:22:50.414 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:50.416 [Info] Writing prefixes
18:22:50.421 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_ShopWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopWeapon __instance)

18:22:50.424 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.426 [Info] Writing prefixes
18:22:50.430 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.IInventoryDataObject_ShopGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopGear __instance)

18:22:50.433 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
18:22:50.435 [Info] Writing prefixes
18:22:50.441 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechBayChassisInfoWidget_SetHardpoints::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHardpointText, BattleTech.UI.TMProWrapper.LocalizableText ___ballisticHardpointText, BattleTech.ChassisDef ___selectedChassis)

18:22:50.443 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetHardpoints()
18:22:50.446 [Info] Writing prefixes
18:22:50.452 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechBayMechInfoWidget_SetHardpoints::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHardpointText, BattleTech.UI.TMProWrapper.LocalizableText ___ballisticHardpointText, BattleTech.MechDef ___selectedMech)

18:22:50.454 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints()
18:22:50.456 [Info] Writing prefixes
18:22:50.463 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RefreshHardpointData::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

18:22:50.466 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData()
18:22:50.469 [Info] Writing prefixes
18:22:50.477 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_GetTotalHardpoints::Prefix(Boolean& __runOriginal)

18:22:50.480 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints()
18:22:50.482 [Info] Writing prefixes
18:22:50.492 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechValidationRules_ValidateMechInventorySlots::Prefix(Boolean& __runOriginal)

18:22:50.495 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
18:22:50.497 [Info] Writing prefixes
18:22:50.548 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)

18:22:50.551 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
18:22:50.553 [Info] Writing postfixes
18:22:50.562 [Info] Patching void BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetHardpointData(BattleTech.ChassisDef chassis) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetHardpointData::Prefix(Boolean& __runOriginal, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance)

18:22:50.565 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetHardpointData(BattleTech.ChassisDef chassis)
18:22:50.567 [Info] Writing prefixes
18:22:50.572 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()

18:22:50.575 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
18:22:50.577 [Info] Writing postfixes
18:22:50.582 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)

18:22:50.585 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
18:22:50.587 [Info] Writing postfixes
18:22:50.595 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnItemGrab_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.MechComponentRef& __state)
1 postfixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnItemGrab_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.MechComponentRef __state, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.MechLabLocationWidget __instance)

18:22:50.597 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
18:22:50.600 [Info] Writing prefixes
18:22:50.602 [Info] Writing postfixes
18:22:50.607 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData)

18:22:50.610 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
18:22:50.612 [Info] Writing prefixes
18:22:50.621 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:50.624 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:50.626 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:50.629 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:50.635 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RepairStructure(bool validate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RepairStructure_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, System.Collections.Generic.Queue`1[[CustomComponents.Changes.IChange, CustomComponents, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null]]& __state)
1 postfixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RepairStructure_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, System.Collections.Generic.Queue`1[[CustomComponents.Changes.IChange, CustomComponents, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null]]& __state)

18:22:50.638 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RepairStructure(bool validate)
18:22:50.640 [Info] Writing prefixes
18:22:50.643 [Info] Writing postfixes
18:22:50.650 [Info] Patching void BattleTech.UI.MechLabLocationWidget::StripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_StripEquipment_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

18:22:50.652 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::StripEquipment()
18:22:50.655 [Info] Writing prefixes
18:22:50.660 [Info] Patching void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.SimGameState_ML_InstallComponent_Patch::Postfix(BattleTech.WorkOrderEntry_InstallComponent order, BattleTech.SimGameState __instance)

18:22:50.662 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order)
18:22:50.664 [Info] Writing postfixes
18:22:50.676 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText headerLabel)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:50.679 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
18:22:50.681 [Info] Transpiling void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
18:22:50.685 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:50.688 [Info] Writing postfixes
18:22:50.697 [Info] Patching void BattleTech.BaseComponentRef::RefreshComponentDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.BaseComponentRef_RefreshComponentDef::Postfix(BattleTech.BaseComponentRef __instance)

18:22:50.700 [Info] Running ILHook manipulator on void BattleTech.BaseComponentRef::RefreshComponentDef()
18:22:50.702 [Info] Writing postfixes
18:22:50.714 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

18:22:50.717 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
18:22:50.719 [Info] Writing postfixes
18:22:50.727 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanEquipItem_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

18:22:50.730 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly)
18:22:50.732 [Info] Writing prefixes
18:22:50.738 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanUseAmmo_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

18:22:50.741 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
18:22:50.743 [Info] Writing prefixes
18:22:50.749 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SimGameState_AddMechPart_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:50.752 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
18:22:50.754 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
18:22:50.761 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:50.765 [Info] Writing prefixes
18:22:50.773 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SimGameState_ReadyMech_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:50.776 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
18:22:50.778 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
18:22:50.786 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:50.790 [Info] Writing prefixes
18:22:50.798 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleDamagedAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleDamagedAlert::Postfix(UnityEngine.GameObject ___damagedAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.800 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleDamagedAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.803 [Info] Writing postfixes
18:22:50.807 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleGenericAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleGenericAlert::Postfix(UnityEngine.GameObject ___genericAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.810 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleGenericAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.812 [Info] Writing postfixes
18:22:50.817 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleInventoryAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleInventoryAlert::Postfix(UnityEngine.GameObject ___inventoryAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.819 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleInventoryAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.821 [Info] Writing postfixes
18:22:50.826 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleMissingWeaponAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleMissingWeaponAlert::Postfix(UnityEngine.GameObject ___missingWeaponAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.828 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleMissingWeaponAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.831 [Info] Writing postfixes
18:22:50.835 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleNoAmmoAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleNoAmmoAlert::Postfix(UnityEngine.GameObject ___noAmmoAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.837 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleNoAmmoAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.839 [Info] Writing postfixes
18:22:50.844 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleDestroyedAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleDestroyedAlert::Postfix(UnityEngine.GameObject ___destroyedAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.847 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleDestroyedAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.849 [Info] Writing postfixes
18:22:50.853 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleOverweightAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleOverweightAlert::Postfix(UnityEngine.GameObject ___overweightAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.855 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleOverweightAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.857 [Info] Writing postfixes
18:22:50.863 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleUnderweightAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleUnderweightAlert::Postfix(UnityEngine.GameObject ___underweightAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.866 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleUnderweightAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.869 [Info] Writing postfixes
18:22:50.873 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleUnneededAmmoAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleUnneededAmmoAlert::Postfix(UnityEngine.GameObject ___unneededAmmoAlert, System.Collections.Generic.List<Localize.Text> errors)

18:22:50.875 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleUnneededAmmoAlert(System.Collections.Generic.List<Localize.Text> errors)
18:22:50.878 [Info] Writing postfixes
18:22:50.882 [Info] Patching void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Database+DataManager_Clear_Patch::Prefix(Boolean& __runOriginal, bool defs)

18:22:50.889 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests)
18:22:50.892 [Info] Writing prefixes
18:22:50.959 [Info] ### Harmony id=io.github.denadan.CustomFilters, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomFilters.Control::Init(string directory), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomFilters\CustomFilters.dll
### At 2023-06-01 06.22.50
18:22:50.964 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
4 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

18:22:50.967 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:22:50.969 [Info] Writing prefixes
18:22:50.972 [Info] Writing postfixes
18:22:51.007 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:51.009 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:51.012 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:51.016 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:51.019 [Info] Writing prefixes
18:22:51.026 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.InventoryItemElement_NotListView_OnDestroy::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement_NotListView __instance)

18:22:51.028 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy()
18:22:51.030 [Info] Writing prefixes
18:22:51.035 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning)
1 postfixes:
* static void CustomComponents.Patches.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

18:22:51.037 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
18:22:51.039 [Info] Writing prefixes
18:22:51.042 [Info] Writing postfixes
18:22:51.049 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ApplySorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

18:22:51.052 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
18:22:51.054 [Info] Writing prefixes
18:22:51.059 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ClearInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ClearInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

18:22:51.062 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ClearInventory()
18:22:51.064 [Info] Writing prefixes
18:22:51.070 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnAddItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

18:22:51.073 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:51.075 [Info] Writing prefixes
18:22:51.084 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnItemGrab::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

18:22:51.086 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
18:22:51.088 [Info] Writing prefixes
18:22:51.093 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnRemoveItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

18:22:51.096 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:51.098 [Info] Writing prefixes
18:22:51.104 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget::RemoveItemData(BattleTech.UI.ListElementController_BASE_NotListView itemData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_RemoveItemData::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.ListElementController_BASE_NotListView itemData)

18:22:51.107 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget::RemoveItemData(BattleTech.UI.ListElementController_BASE_NotListView itemData)
18:22:51.109 [Info] Writing prefixes
18:22:51.115 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:51.118 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:51.120 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:51.123 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:51.125 [Info] Writing prefixes
18:22:51.131 [Info] Patching void BattleTech.UI.MechLabPanel::PopulateInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_PopulateInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)

18:22:51.134 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::PopulateInventory()
18:22:51.136 [Info] Writing prefixes
18:22:51.146 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshInventorySelectability() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_RefreshInventorySelectability::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)

18:22:51.149 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshInventorySelectability()
18:22:51.151 [Info] Writing prefixes
18:22:51.158 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)

18:22:51.160 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
18:22:51.163 [Info] Writing prefixes
18:22:51.174 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_OnFilterButtonClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

18:22:51.177 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button)
18:22:51.179 [Info] Writing prefixes
18:22:51.186 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::RefreshJumpJetOptions(float tonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_RefreshJumpJetOptions::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, float tonnage)

18:22:51.188 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::RefreshJumpJetOptions(float tonnage)
18:22:51.190 [Info] Writing prefixes
18:22:51.197 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ResetFilters() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_ResetFilters::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

18:22:51.200 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ResetFilters()
18:22:51.202 [Info] Writing prefixes
18:22:51.207 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_SetFilterWeapons::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

18:22:51.210 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons()
18:22:51.212 [Info] Writing prefixes
18:22:51.218 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:51.220 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:51.222 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:51.225 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:51.228 [Info] Writing prefixes
18:22:51.230 [Info] Writing postfixes
18:22:51.236 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

18:22:51.238 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering()
18:22:51.241 [Info] Writing prefixes
18:22:51.247 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::ClearInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ClearInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

18:22:51.250 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::ClearInventory()
18:22:51.252 [Info] Writing prefixes
18:22:51.285 [Info] Patching BattleTech.UI.LanceLoadoutMechItem BattleTech.UI.MechBayMechStorageWidget::CreateLanceItem(BattleTech.MechDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_CreateLanceItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.MechDef def, BattleTech.UI.LanceLoadoutMechItem& __result)

18:22:51.287 [Info] Running ILHook manipulator on BattleTech.UI.LanceLoadoutMechItem BattleTech.UI.MechBayMechStorageWidget::CreateLanceItem(BattleTech.MechDef def)
18:22:51.289 [Info] Writing prefixes
18:22:51.295 [Info] Patching BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetInventoryItem(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_GetInventoryItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, string id, BattleTech.UI.IMechLabDraggableItem& __result)

18:22:51.297 [Info] Running ILHook manipulator on BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetInventoryItem(string id)
18:22:51.300 [Info] Writing prefixes
18:22:51.306 [Info] Patching BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetMechDefByGUID(string GUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_GetMechDefByGUID::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, string GUID, BattleTech.UI.IMechLabDraggableItem& __result)

18:22:51.308 [Info] Running ILHook manipulator on BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetMechDefByGUID(string GUID)
18:22:51.310 [Info] Writing prefixes
18:22:51.316 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_InitInventory_Chassis::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters)

18:22:51.319 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters)
18:22:51.321 [Info] Writing prefixes
18:22:51.330 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_InitInventory_MechDefs::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters)

18:22:51.332 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters)
18:22:51.335 [Info] Writing prefixes
18:22:51.342 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnAddItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, Boolean& __result)

18:22:51.344 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:51.346 [Info] Writing prefixes
18:22:51.352 [Info] Patching virtual void BattleTech.UI.MechBayMechStorageWidget::OnButtonClicked(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnButtonClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

18:22:51.355 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayMechStorageWidget::OnButtonClicked(BattleTech.UI.IMechLabDraggableItem item)
18:22:51.357 [Info] Writing prefixes
18:22:51.361 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnItemGrab::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

18:22:51.364 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
18:22:51.366 [Info] Writing prefixes
18:22:51.371 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnRemoveItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item, Boolean& __result)

18:22:51.374 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:51.376 [Info] Writing prefixes
18:22:51.382 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetData(BattleTech.UI.IMechLabDropTarget dropTarget, BattleTech.Data.DataManager dataManager, string itemPrefabName, bool allowRemovingItems, bool useStockFilter, BattleTech.MechLabDraggableItemType inventoryType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetData::Prefix(Boolean& __runOriginal)

18:22:51.385 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetData(BattleTech.UI.IMechLabDropTarget dropTarget, BattleTech.Data.DataManager dataManager, string itemPrefabName, bool allowRemovingItems, bool useStockFilter, BattleTech.MechLabDraggableItemType inventoryType)
18:22:51.387 [Info] Writing prefixes
18:22:51.392 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetSorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

18:22:51.394 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
18:22:51.396 [Info] Writing prefixes
18:22:51.402 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)
* static void CustomFilters.MechBayScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)

18:22:51.404 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
18:22:51.406 [Info] Writing prefixes
18:22:51.423 [Info] ### Harmony id=io.kmission.localsettings, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomSettings.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomLocalSettings\CustomLocalSettings.dll
### At 2023-06-01 06.22.51
18:22:51.427 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

18:22:51.430 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
18:22:51.433 [Info] Writing postfixes
18:22:51.444 [Info] Patching virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_ReceiveButtonPress::Postfix(BattleTech.UI.SettingsMenu __instance, String& button, BattleTech.UI.TMProWrapper.LocalizableText& ___currentModuleTitle, BattleTech.UI.ISettingsModule& ____activeModule)

18:22:51.448 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button)
18:22:51.450 [Info] Writing postfixes
18:22:51.461 [Info] Patching virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.SettingsMenu __instance)

18:22:51.464 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy()
18:22:51.466 [Info] Writing postfixes
18:22:51.472 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)

18:22:51.475 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
18:22:51.477 [Info] Writing postfixes
18:22:51.495 [Info] ### Harmony id=io.github.denadan.CustomSalvage, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void CustomSalvage.Control::InitNonStatic(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomSalvage\CustomSalvage.dll
### At 2023-06-01 06.22.51
18:22:51.500 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
5 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

18:22:51.502 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:22:51.504 [Info] Writing prefixes
18:22:51.507 [Info] Writing postfixes
18:22:51.512 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

18:22:51.515 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
18:22:51.517 [Info] Writing postfixes
18:22:51.524 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::Postfix()

18:22:51.527 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
18:22:51.529 [Info] Writing postfixes
18:22:51.535 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::Postfix()

18:22:51.537 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
18:22:51.539 [Info] Writing postfixes
18:22:51.546 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

18:22:51.549 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:22:51.551 [Info] Writing prefixes
18:22:51.566 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

18:22:51.569 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
18:22:51.572 [Info] Writing prefixes
18:22:51.581 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnScrapClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

18:22:51.584 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked()
18:22:51.587 [Info] Writing prefixes
18:22:51.594 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisInfoWidget_SetDescriptions::Postfix(BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, TMPro.TextMeshProUGUI ___mechDetails, BattleTech.UI.Tooltips.HBSTooltip ___chassisStorageTooltip, UnityEngine.GameObject ___readyBtnObj, UnityEngine.GameObject ___partsCountObj, BattleTech.UI.MechUnitElementWidget ___mechIcon, TMPro.TextMeshProUGUI ___partsCountText)

18:22:51.597 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions()
18:22:51.600 [Info] Writing postfixes
18:22:51.609 [Info] Patching void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisUnitElement_SetData::Postfix(BattleTech.UI.MechBayChassisUnitElement __instance, UnityEngine.UI.Image ___mechImage, TMPro.TextMeshProUGUI ___partsText, TMPro.TextMeshProUGUI ___partsLabelText, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)

18:22:51.612 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)
18:22:51.615 [Info] Writing postfixes
18:22:51.625 [Info] Patching void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SGEventPanel_SetEvent::Postfix(BattleTech.SimGameEventDef evt, BattleTech.UI.SGEventPanel __instance, TMPro.TextMeshProUGUI ___eventDescription, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___optionParent, System.Collections.Generic.List<BattleTech.UI.SGEventOption> ___optionsList)

18:22:51.628 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry)
18:22:51.630 [Info] Writing postfixes
18:22:51.646 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.SimGameState_AddMechPart::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance, string id)
* static void CustomComponents.Patches.SimGameState_AddMechPart_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:51.649 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
18:22:51.651 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
18:22:51.654 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:51.657 [Info] Writing prefixes
18:22:51.664 [Info] Patching System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.SimGameState_GetAllInventoryMechDefs::Prefix(Boolean& __runOriginal, bool showMechParts, System.Collections.Generic.List`1[[BattleTech.ChassisDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.SimGameState __instance)

18:22:51.667 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts)
18:22:51.669 [Info] Writing prefixes
18:22:51.688 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.691 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

18:22:51.694 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
18:22:51.696 [Info] Writing prefixes
18:22:51.702 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.705 [Info] Patching bool BattleTech.SimGameState::DismissPilot(string pilotID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderBackgrounds.Mod+SimGameState_DismissPilot_Patch::Prefix(string pilotID, BattleTech.SimGameState __instance)

18:22:51.707 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::DismissPilot(string pilotID)
18:22:51.710 [Info] Writing prefixes
18:22:51.727 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.730 [Info] Patching void BattleTech.UI.SGHeaderWidget::RefreshCountdown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void HideCareerModeDays.Patches.SGHeaderWidget_RefreshCountdown_Patch::Postfix(BattleTech.UI.SGHeaderWidget __instance)

18:22:51.733 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::RefreshCountdown()
18:22:51.736 [Info] Writing postfixes
18:22:51.758 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.771 [Info] Patching void BattleTech.SimGameState::InitializeDataFromDefs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SimGameState_InitializeDataFromDefs_Patch::Prefix(BattleTech.SimGameState __instance)

18:22:51.774 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitializeDataFromDefs()
18:22:51.776 [Info] Writing prefixes
18:22:51.857 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.860 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)

18:22:51.863 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
18:22:51.865 [Info] Writing prefixes
18:22:51.870 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.873 [Info] Patching void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Prefix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState& ___simState)
1 postfixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Postfix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState ___simState)

18:22:51.876 [Info] Running ILHook manipulator on void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets()
18:22:51.878 [Info] Writing prefixes
18:22:51.881 [Info] Writing postfixes
18:22:51.889 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.892 [Info] Patching void BattleTech.StarmapBorders::OnWillRenderObject() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapBorders_OnWillRenderObject::Prefix(BattleTech.StarmapBorders __instance)

18:22:51.894 [Info] Running ILHook manipulator on void BattleTech.StarmapBorders::OnWillRenderObject()
18:22:51.897 [Info] Writing prefixes
18:22:51.901 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.905 [Info] Patching void BattleTech.StarmapRenderer::RefreshSystems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_RefreshSystems::Prefix(BattleTech.StarmapRenderer __instance)
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_RefreshSystems::Postfix(BattleTech.StarmapRenderer __instance)

18:22:51.908 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::RefreshSystems()
18:22:51.911 [Info] Writing prefixes
18:22:51.913 [Info] Writing postfixes
18:22:51.927 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
18:22:51.933 [Info] Patching static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_NormalizeToMapSpace_Patch::Prefix(BattleTech.StarmapRenderer __instance, UnityEngine.Vector2 normalizedPos, UnityEngine.Vector3& __result)

18:22:51.937 [Info] Running ILHook manipulator on static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos)
18:22:51.940 [Info] Writing prefixes
18:22:51.951 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 30 ms
18:22:51.955 [Info] Patching void BattleTech.StarmapRenderer::Update() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch::Postfix(BattleTech.StarmapRenderer __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:51.958 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::Update()
18:22:51.961 [Info] Transpiling void BattleTech.StarmapRenderer::Update()
18:22:51.970 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:51.996 [Info] Writing postfixes
18:22:52.008 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 30 ms
18:22:52.011 [Info] Patching void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapRenderer_PlaceLogo_Patch::Postfix(BattleTech.StarmapRenderer __instance, BattleTech.FactionValue faction, UnityEngine.GameObject logo)

18:22:52.013 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo)
18:22:52.015 [Info] Writing postfixes
18:22:52.023 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 30 ms
18:22:52.026 [Info] Patching void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGSystemViewPopulator_UpdateRoutedSystem_Patch::Prefix(BattleTech.UI.SGNavigationActiveFactionWidget __instance, System.Collections.Generic.List<string> activeFactions, string OwnerFaction, System.Collections.Generic.List<BattleTech.UI.HBSButton> ___FactionButtons, System.Collections.Generic.List<UnityEngine.UI.Image> ___FactionIcons, BattleTech.SimGameState ___simState)

18:22:52.028 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction)
18:22:52.031 [Info] Writing prefixes
18:22:52.036 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
18:22:52.039 [Info] Patching void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapSystemRenderer_SetBlackMarket_Patch::Prefix(BattleTech.StarmapSystemRenderer __instance, Boolean& state)

18:22:52.041 [Info] Running ILHook manipulator on void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state)
18:22:52.044 [Info] Writing prefixes
18:22:52.049 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:22:52.052 [Info] PrefixWrapper being created for: CommanderBackgrounds::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
18:22:52.062 [Info] PrefixWrapper created: HXI︳1︳::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
18:22:52.065 [Info] PrefixWrapper being created for: InnerSphereMap::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
18:22:52.068 [Info] PrefixWrapper created: HXI︳2︳::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
18:22:52.070 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.073 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)

18:22:52.076 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
18:22:52.078 [Info] Writing prefixes
18:22:52.171 [Info] ### Harmony id=us.frostraptor.IRBTModUtils, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void IRBTModUtils.Mod::Init(string modDirectory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\IRBTModUtils\IRBTModUtils.dll
### At 2023-06-01 06.22.52
18:22:52.176 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:52.178 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
18:22:52.180 [Info] Writing postfixes
18:22:52.185 [Info] Patching virtual float BattleTech.Mech::get_MaxBackwardDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxBackwardDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:52.188 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxBackwardDistance()
18:22:52.190 [Info] Writing postfixes
18:22:52.195 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:52.197 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
18:22:52.199 [Info] Writing postfixes
18:22:52.204 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

18:22:52.206 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:22:52.208 [Info] Writing postfixes
18:22:52.214 [Info] Patching void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.AAR_ObjectiveListItem__Init::Postfix(BattleTech.UI.AAR_ObjectiveListItem __instance, BattleTech.MissionObjectiveResult missionObjectiveResult)

18:22:52.216 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract)
18:22:52.219 [Info] Writing postfixes
18:22:52.228 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)

18:22:52.231 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
18:22:52.233 [Info] Writing postfixes
18:22:52.250 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()

18:22:52.253 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:22:52.255 [Info] Writing prefixes
18:22:52.267 [Info] Patching void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_SubscribeToMessages::Postfix(BattleTech.UI.CombatHUD __instance, bool shouldAdd)

18:22:52.270 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd)
18:22:52.272 [Info] Writing postfixes
18:22:52.315 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

18:22:52.318 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:22:52.320 [Info] Writing prefixes
18:22:52.322 [Info] Writing postfixes
18:22:52.334 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()

18:22:52.337 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
18:22:52.339 [Info] Writing prefixes
18:22:52.352 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.355 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
1 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()

18:22:52.357 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
18:22:52.360 [Info] Writing prefixes
18:22:52.362 [Info] Writing postfixes
18:22:52.389 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.393 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::InitializeData(BattleTech.UI.MissionResults mission) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_SalvageScreen_InitializeData::Postfix(BattleTech.UI.AAR_SalvageScreen __instance)

18:22:52.395 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::InitializeData(BattleTech.UI.MissionResults mission)
18:22:52.397 [Info] Writing postfixes
18:22:52.403 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.406 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_CalculateAndAddAvailableSalvage::Postfix(BattleTech.UI.AAR_SalvageScreen __instance, System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> ___AllSalvageControllers)

18:22:52.408 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage()
18:22:52.411 [Info] Writing postfixes
18:22:52.418 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.421 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::OnCompleted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.AAR_SalvageScreen_OnCompleted_storage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance)

18:22:52.424 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::OnCompleted()
18:22:52.426 [Info] Writing prefixes
18:22:52.432 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.435 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked_Storage::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

18:22:52.437 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked()
18:22:52.440 [Info] Writing postfixes
18:22:52.446 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.448 [Info] Patching virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnPointerEnter::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

18:22:52.451 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
18:22:52.454 [Info] Writing postfixes
18:22:52.458 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.461 [Info] Patching virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnPointerExit::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

18:22:52.463 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
18:22:52.465 [Info] Writing postfixes
18:22:52.470 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.474 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

18:22:52.477 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:22:52.479 [Info] Writing prefixes
18:22:52.492 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.496 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

18:22:52.499 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:22:52.502 [Info] Writing prefixes
18:22:52.532 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.535 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.ListElementController_SalvageMechPart_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget, BattleTech.MechDef ___mechDef, BattleTech.SalvageDef ___salvageDef)

18:22:52.538 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:52.540 [Info] Writing postfixes
18:22:52.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.551 [Info] Patching void BattleTech.Contract::AddToFinalSalvage(BattleTech.SalvageDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_AddToFinalSalvage::Prefix(BattleTech.Contract __instance, BattleTech.SalvageDef& def)

18:22:52.553 [Info] Running ILHook manipulator on void BattleTech.Contract::AddToFinalSalvage(BattleTech.SalvageDef def)
18:22:52.555 [Info] Writing prefixes
18:22:52.560 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.563 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool LootMagnet.AAR_SalvageScreen_CalculateAndAddAvailableSalvage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance, BattleTech.Contract ___contract, Int32& ___totalSalvageMadeAvailable)
1 postfixes:
* static void LootMagnet.AAR_CalculateAndAddAvailableSalvage::Postfix(BattleTech.UI.AAR_SalvageScreen __instance, System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> ___AllSalvageControllers)

18:22:52.566 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage()
18:22:52.568 [Info] Writing prefixes
18:22:52.571 [Info] Writing postfixes
18:22:52.576 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.578 [Info] Patching void BattleTech.UI.AAR_SalvageChosen::ConvertToFinalState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_SalvageChosen_ConvertToFinalState::Postfix(BattleTech.UI.AAR_SalvageChosen __instance, BattleTech.UI.TMProWrapper.LocalizableText ___howManyReceivedText, BattleTech.UI.AAR_SalvageScreen ___parent, BattleTech.SimGameState ___simState, BattleTech.Contract ___contract)

18:22:52.581 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageChosen::ConvertToFinalState()
18:22:52.584 [Info] Writing postfixes
18:22:52.590 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.593 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::OnCompleted() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void LootMagnet.AAR_SalvageScreen_OnCompleted_storage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance)
* static void LootMagnet.AAR_SalvageScreen_OnCompleted::Prefix()

18:22:52.596 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::OnCompleted()
18:22:52.598 [Info] Writing prefixes
18:22:52.603 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.606 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked_Storage::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

18:22:52.609 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked()
18:22:52.611 [Info] Writing postfixes
18:22:52.679 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.684 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:22:52.687 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:22:52.690 [Info] Writing postfixes
18:22:52.700 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.704 [Info] Patching bool BattleTech.AbstractActor::get_HasBreachingShotAbility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_HasBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

18:22:52.706 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_HasBreachingShotAbility()
18:22:52.709 [Info] Writing postfixes
18:22:52.713 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.716 [Info] Patching bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_IsUsingBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

18:22:52.719 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons)
18:22:52.721 [Info] Writing postfixes
18:22:52.726 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.729 [Info] Patching virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_AddToTeam::Postfix(BattleTech.AbstractActor __instance)

18:22:52.731 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team)
18:22:52.734 [Info] Writing postfixes
18:22:52.739 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.742 [Info] Patching bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AttackSequence_IsBreachingShot::Postfix(BattleTech.AttackDirector+AttackSequence __instance, Boolean& __result)

18:22:52.745 [Info] Running ILHook manipulator on bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot()
18:22:52.747 [Info] Writing postfixes
18:22:52.753 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.757 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

18:22:52.760 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:22:52.762 [Info] Writing prefixes
18:22:52.764 [Info] Writing postfixes
18:22:52.777 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.780 [Info] Patching void BattleTech.UI.MechDetails::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechDetails_SetDescriptions::Postfix(BattleTech.UI.MechDetails __instance)

18:22:52.783 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetDescriptions()
18:22:52.785 [Info] Writing postfixes
18:22:52.790 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.793 [Info] Patching void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechLabStockInfoPopup_StockMechDefLoaded::Postfix(BattleTech.UI.MechLabStockInfoPopup __instance, BattleTech.MechDef def, BattleTech.UI.TMProWrapper.LocalizableText ___descriptionText)

18:22:52.795 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def)
18:22:52.797 [Info] Writing postfixes
18:22:52.802 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.807 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)

18:22:52.810 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
18:22:52.813 [Info] Writing postfixes
18:22:52.835 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.838 [Info] Patching void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksServicePanel_SetPilot::Postfix(BattleTech.UI.SGBarracksServicePanel __instance, BattleTech.Pilot p)

18:22:52.841 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p)
18:22:52.843 [Info] Writing postfixes
18:22:52.851 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
18:22:52.862 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
2 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:22:52.865 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:22:52.867 [Info] Writing prefixes
18:22:52.870 [Info] Writing postfixes
18:22:52.898 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:52.902 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

18:22:52.905 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
18:22:52.907 [Info] Writing postfixes
18:22:52.929 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:52.933 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

18:22:52.936 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
18:22:52.938 [Info] Writing postfixes
18:22:52.949 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:52.956 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)

18:22:52.959 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
18:22:52.962 [Info] Writing prefixes
18:22:53.000 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:53.004 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

18:22:53.007 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
18:22:53.009 [Info] Writing postfixes
18:22:53.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:53.036 [Info] Patching SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_GetPilotRoninIcon::Postfix(BattleTech.SimGameState __instance, BattleTech.Pilot p, SVGImporter.SVGAsset& __result)

18:22:53.038 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p)
18:22:53.040 [Info] Writing postfixes
18:22:53.046 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:53.050 [Info] Patching void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_SetupRoninTooltip::Postfix(BattleTech.SimGameState __instance, BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)

18:22:53.052 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)
18:22:53.054 [Info] Writing postfixes
18:22:53.062 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:53.065 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)

18:22:53.068 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
18:22:53.070 [Info] Writing postfixes
18:22:53.189 [Info] ### Harmony id=MechEngineer.NullableLogger, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Control::Start(string modDirectory, string json), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.193 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
6 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

18:22:53.196 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:22:53.198 [Info] Writing prefixes
18:22:53.200 [Info] Writing postfixes
18:22:53.213 [Info] ### Harmony id=MechEngineer.Features.OrderedStatusEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OrderedStatusEffects.OrderedStatusEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.216 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

18:22:53.218 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
18:22:53.221 [Info] Writing postfixes
18:22:53.231 [Info] ### Harmony id=MechEngineer.Features.OverrideTonnage, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideTonnage.OverrideTonnageSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.234 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechLabMechInfoWidget_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel ___mechLab, Single& ___currentTonnage, TMPro.TextMeshProUGUI ___totalTonnage, BattleTech.UI.UIColorRefTracker ___totalTonnageColor, TMPro.TextMeshProUGUI ___remainingTonnage, BattleTech.UI.UIColorRefTracker ___remainingTonnageColor)

18:22:53.237 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage()
18:22:53.239 [Info] Writing prefixes
18:22:53.247 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(Single& currentValue)

18:22:53.250 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:53.252 [Info] Writing prefixes
18:22:53.255 [Info] Writing postfixes
18:22:53.261 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.263 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
18:22:53.265 [Info] Transpiling static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
18:22:53.268 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.278 [Info] ### Harmony id=MechEngineer.Features.CustomCapacities, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CustomCapacities.CustomCapacitiesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.282 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::RefreshInfo(bool resetOriginalValues) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.CustomCapacities.Patches.MechLabMechInfoWidget_RefreshInfo_Patch::Postfix(BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.TMProWrapper.LocalizableText ___remainingTonnage)

18:22:53.284 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::RefreshInfo(bool resetOriginalValues)
18:22:53.287 [Info] Writing postfixes
18:22:53.303 [Info] ### Harmony id=MechEngineer.Features.HeatSinkCapacityStat, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.HeatSinkCapacityStat.HeatSinkCapacityStatSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.306 [Info] Patching void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.CombatHUD_GrantBonusHeatSinksAndUnhittable_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.309 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced)
18:22:53.311 [Info] Transpiling void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced)
18:22:53.315 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.CombatHUD_GrantBonusHeatSinksAndUnhittable_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.321 [Info] Patching virtual void BattleTech.Mech::CancelCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.324 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::CancelCreatedEffects()
18:22:53.326 [Info] Transpiling virtual void BattleTech.Mech::CancelCreatedEffects()
18:22:53.330 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.335 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Boolean& __runOriginal, Single& __result)

18:22:53.338 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
18:22:53.340 [Info] Writing prefixes
18:22:53.347 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

18:22:53.350 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:22:53.353 [Info] Writing postfixes
18:22:53.358 [Info] Patching virtual void BattleTech.Mech::RestartCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.361 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::RestartCreatedEffects()
18:22:53.363 [Info] Transpiling virtual void BattleTech.Mech::RestartCreatedEffects()
18:22:53.366 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.375 [Info] ### Harmony id=MechEngineer.Features.Engines, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Engines.EngineSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.380 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.382 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:22:53.385 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:22:53.388 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.392 [Info] Writing prefixes
18:22:53.406 [Info] Patching int BattleTech.Mech::CalcJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_CalcJumpHeat_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, float distJumped, Int32& __result)

18:22:53.409 [Info] Running ILHook manipulator on int BattleTech.Mech::CalcJumpHeat(float distJumped)
18:22:53.412 [Info] Writing prefixes
18:22:53.418 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

18:22:53.420 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:22:53.423 [Info] Writing prefixes
18:22:53.426 [Info] Writing postfixes
18:22:53.433 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, Single& __result)

18:22:53.435 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
18:22:53.438 [Info] Writing prefixes
18:22:53.450 [Info] ### Harmony id=MechEngineer.Features.MoveMultiplierStat, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.MoveMultiplierStat.MoveMultiplierStatSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.455 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

18:22:53.458 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:22:53.461 [Info] Writing prefixes
18:22:53.464 [Info] Writing postfixes
18:22:53.471 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:53.473 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
18:22:53.476 [Info] Writing postfixes
18:22:53.486 [Info] ### Harmony id=MechEngineer.Features.CompressFloatieMessages, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CompressFloatieMessages.CompressFloatieMessagesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.489 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)

18:22:53.492 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
18:22:53.494 [Info] Writing prefixes
18:22:53.503 [Info] ### Harmony id=MechEngineer.Features.DamageIgnore, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.DamageIgnore.DamageIgnoreSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.507 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)

18:22:53.510 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:53.513 [Info] Writing prefixes
18:22:53.524 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)

18:22:53.526 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
18:22:53.529 [Info] Writing prefixes
18:22:53.534 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.537 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:22:53.539 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:22:53.545 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.558 [Info] ### Harmony id=MechEngineer.Features.PlaceholderEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.PlaceholderEffects.PlaceholderEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.562 [Info] Patching virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.MechComponent_ApplyPassiveEffectToTarget_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.EffectData& effect)

18:22:53.564 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID)
18:22:53.566 [Info] Writing prefixes
18:22:53.571 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)

18:22:53.574 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
18:22:53.576 [Info] Writing postfixes
18:22:53.585 [Info] ### Harmony id=MechEngineer.Features.CriticalEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CriticalEffects.CriticalEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.589 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID)

18:22:53.591 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
18:22:53.600 [Info] Writing prefixes
18:22:53.612 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.EffectManager_GetTargetStatCollections_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.EffectData effectData, BattleTech.ICombatant target)

18:22:53.615 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
18:22:53.618 [Info] Writing prefixes
18:22:53.627 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
1 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.630 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:53.632 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:53.635 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.638 [Info] Writing prefixes
18:22:53.641 [Info] Writing postfixes
18:22:53.647 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)

18:22:53.650 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
18:22:53.652 [Info] Writing prefixes
18:22:53.657 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)

18:22:53.659 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
18:22:53.662 [Info] Writing prefixes
18:22:53.669 [Info] Patching void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.672 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
18:22:53.674 [Info] Transpiling void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
18:22:53.679 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.692 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:53.695 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
18:22:53.697 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
18:22:53.700 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:53.711 [Info] ### Harmony id=MechEngineer.Features.AccuracyEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.AccuracyEffects.AccuracyEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.714 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(Boolean& __runOriginal, String& description)

18:22:53.717 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
18:22:53.719 [Info] Writing prefixes
18:22:53.727 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

18:22:53.729 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:22:53.732 [Info] Writing prefixes
18:22:53.736 [Info] Writing postfixes
18:22:53.744 [Info] Patching float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.ToHit_GetSelfArmMountedModifier_Patch::Prefix(Boolean& __runOriginal, BattleTech.Weapon weapon, Single& __result)

18:22:53.747 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon)
18:22:53.750 [Info] Writing prefixes
18:22:53.761 [Info] ### Harmony id=MechEngineer.Features.OverrideDescriptions, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideDescriptions.OverrideDescriptionsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.765 [Info] Patching virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.ListElementController_BASE_NotListView_SetComponentTooltipData_Patch::Postfix(BattleTech.UI.ListElementController_BASE_NotListView __instance)

18:22:53.768 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef)
18:22:53.772 [Info] Writing postfixes
18:22:53.781 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)

18:22:53.784 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
18:22:53.786 [Info] Writing postfixes
18:22:53.795 [Info] Patching BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_CreateMechComponentItem_Patch::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.MechComponentRef componentRef, BattleTech.UI.MechLabItemSlotElement __result)

18:22:53.797 [Info] Running ILHook manipulator on BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem)
18:22:53.800 [Info] Writing postfixes
18:22:53.842 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

18:22:53.845 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
18:22:53.847 [Info] Writing postfixes
18:22:53.856 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_EquipmentSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Equipment __instance, object data)

18:22:53.858 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data)
18:22:53.861 [Info] Writing postfixes
18:22:53.870 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)

18:22:53.873 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
18:22:53.875 [Info] Writing postfixes
18:22:53.892 [Info] ### Harmony id=MechEngineer.Features.DynamicSlots, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.DynamicSlots.DynamicSlotsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.896 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerEnter_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance)

18:22:53.898 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
18:22:53.900 [Info] Writing prefixes
18:22:53.905 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerExit_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance)

18:22:53.908 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
18:22:53.911 [Info] Writing prefixes
18:22:53.915 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)

18:22:53.918 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
18:22:53.920 [Info] Writing postfixes
18:22:53.927 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

18:22:53.930 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
18:22:53.932 [Info] Writing postfixes
18:22:53.943 [Info] ### Harmony id=MechEngineer.Features.ShutdownInjuryProtection, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ShutdownInjuryProtection.ShutdownInjuryProtectionSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.53
18:22:53.948 [Info] Patching virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, string sourceID, int stackItemID)

18:22:53.951 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID)
18:22:53.953 [Info] Writing prefixes
18:22:53.959 [Info] Patching void BattleTech.MechShutdownSequence::CheckForHeatDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechShutdownSequence __instance)

18:22:53.962 [Info] Running ILHook manipulator on void BattleTech.MechShutdownSequence::CheckForHeatDamage()
18:22:53.964 [Info] Writing prefixes
18:22:53.971 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)

18:22:53.974 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
18:22:53.976 [Info] Writing prefixes
18:22:53.988 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

18:22:53.991 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:22:53.994 [Info] Writing prefixes
18:22:53.998 [Info] Writing postfixes
18:22:54.005 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)

18:22:54.008 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
18:22:54.010 [Info] Writing postfixes
18:22:54.019 [Info] ### Harmony id=MechEngineer.Features.MechLabSlots, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.MechLabSlots.MechLabSlotsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.023 [Info] Patching static BattleTech.ChassisLocations CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::MountedLocation(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.CCLanceMechEquipmentList_MountedLocation_Patch::Postfix(BattleTech.MechComponentRef componentRef, BattleTech.ChassisLocations& __result)

18:22:54.025 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::MountedLocation(BattleTech.MechComponentRef componentRef)
18:22:54.028 [Info] Writing postfixes
18:22:54.033 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_Awake_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel)

18:22:54.036 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::Awake()
18:22:54.038 [Info] Writing postfixes
18:22:54.044 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

18:22:54.046 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
18:22:54.048 [Info] Writing prefixes
18:22:54.051 [Info] Writing postfixes
18:22:54.057 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.059 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:54.062 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:22:54.064 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.067 [Info] Writing postfixes
18:22:54.072 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData)

18:22:54.075 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData)
18:22:54.077 [Info] Writing prefixes
18:22:54.082 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.085 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:22:54.087 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:22:54.090 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.093 [Info] Writing postfixes
18:22:54.101 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_ShowHighlightFrame_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, bool isOriginalLocation, BattleTech.MechComponentRef& cRef)
* static void CustomComponents.Patches.MechLabLocationWidget_ShowHighlightFrame::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, bool isOriginalLocation, bool canBeAdded)

18:22:54.103 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
18:22:54.106 [Info] Writing prefixes
18:22:54.111 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
2 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.114 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:54.116 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
18:22:54.119 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.122 [Info] Writing prefixes
18:22:54.124 [Info] Writing postfixes
18:22:54.130 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

18:22:54.133 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
18:22:54.135 [Info] Writing postfixes
18:22:54.141 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_RefreshDropHighlights_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

18:22:54.144 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item)
18:22:54.146 [Info] Writing prefixes
18:22:54.157 [Info] ### Harmony id=MechEngineer.Features.InvalidInventory, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.InvalidInventory.InvalidInventorySettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.161 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.164 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
18:22:54.166 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
18:22:54.170 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.173 [Info] Writing prefixes
18:22:54.179 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.182 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
18:22:54.184 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
18:22:54.187 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.189 [Info] Writing prefixes
18:22:54.195 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:22:54.198 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
18:22:54.200 [Info] Writing postfixes
18:22:54.210 [Info] ### Harmony id=MechEngineer.Features.ComponentExplosions, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ComponentExplosions.ComponentExplosionsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.213 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.216 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:54.218 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:54.221 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.229 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
2 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.231 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:54.233 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:22:54.236 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.239 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.242 [Info] Writing prefixes
18:22:54.245 [Info] Writing postfixes
18:22:54.252 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)

18:22:54.255 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
18:22:54.257 [Info] Writing prefixes
18:22:54.262 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)

18:22:54.265 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
18:22:54.267 [Info] Writing prefixes
18:22:54.281 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.284 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
18:22:54.286 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
18:22:54.290 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.303 [Info] ### Harmony id=MechEngineer.Features.ArmorStructureChanges, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ArmorStructureChanges.ArmorStructureChangesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.307 [Info] Patching float BattleTech.Mech::get_ArmorMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ArmorMultiplier_Getter_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:54.309 [Info] Running ILHook manipulator on float BattleTech.Mech::get_ArmorMultiplier()
18:22:54.311 [Info] Writing postfixes
18:22:54.317 [Info] Patching float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxArmor_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:54.320 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location)
18:22:54.322 [Info] Writing postfixes
18:22:54.328 [Info] Patching float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxStructure_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:54.331 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location)
18:22:54.333 [Info] Writing postfixes
18:22:54.342 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)

18:22:54.344 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
18:22:54.347 [Info] Writing prefixes
18:22:54.414 [Info] Patching float BattleTech.Mech::get_StructureMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_StructureMultiplier_Getter_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

18:22:54.417 [Info] Running ILHook manipulator on float BattleTech.Mech::get_StructureMultiplier()
18:22:54.419 [Info] Writing postfixes
18:22:54.425 [Info] Patching BattleTech.MechDef BattleTech.Mech::ToMechDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ToMechDef_Patch::Postfix(BattleTech.Mech __instance, BattleTech.MechDef __result)

18:22:54.427 [Info] Running ILHook manipulator on BattleTech.MechDef BattleTech.Mech::ToMechDef()
18:22:54.430 [Info] Writing postfixes
18:22:54.443 [Info] ### Harmony id=MechEngineer.Features.ArmorMaximizer, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ArmorMaximizer.ArmorMaximizerSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.446 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnFrontArmorAdd() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnFrontArmorAdd_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

18:22:54.449 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnFrontArmorAdd()
18:22:54.451 [Info] Writing prefixes
18:22:54.455 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnFrontArmorSubtract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnFrontArmorSubtract_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

18:22:54.457 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnFrontArmorSubtract()
18:22:54.460 [Info] Writing prefixes
18:22:54.465 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnRearArmorAdd() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnRearArmorAdd_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

18:22:54.468 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnRearArmorAdd()
18:22:54.470 [Info] Writing prefixes
18:22:54.475 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnRearArmorSubtract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnRearArmorSubtract_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

18:22:54.477 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnRearArmorSubtract()
18:22:54.480 [Info] Writing prefixes
18:22:54.484 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_RefreshArmor_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)

18:22:54.487 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshArmor()
18:22:54.490 [Info] Writing postfixes
18:22:54.496 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.498 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:22:54.501 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:22:54.503 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.506 [Info] Writing postfixes
18:22:54.515 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

18:22:54.518 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
18:22:54.520 [Info] Writing prefixes
18:22:54.538 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnStripArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

18:22:54.540 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripArmor()
18:22:54.543 [Info] Writing prefixes
18:22:54.553 [Info] ### Harmony id=MechEngineer.Features.HardpointFix, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.HardpointFix.HardpointFixSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.557 [Info] Patching static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Prefix(Boolean& __runOriginal, BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Postfix(BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:22:54.559 [Info] Running ILHook manipulator on static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location)
18:22:54.562 [Info] Writing prefixes
18:22:54.564 [Info] Writing postfixes
18:22:54.573 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(Boolean& __runOriginal, BattleTech.BaseComponentRef componentRef, String& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)

18:22:54.575 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
18:22:54.577 [Info] Writing prefixes
18:22:54.580 [Info] Writing postfixes
18:22:54.586 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechRepresentationSimGame __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

18:22:54.588 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
18:22:54.590 [Info] Writing prefixes
18:22:54.593 [Info] Writing postfixes
18:22:54.603 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

18:22:54.606 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
18:22:54.608 [Info] Writing prefixes
18:22:54.610 [Info] Writing postfixes
18:22:54.637 [Info] ### Harmony id=MechEngineer.Features.AutoFix, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.AutoFix.AutoFixerSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.640 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

18:22:54.643 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
18:22:54.645 [Info] Writing postfixes
18:22:54.649 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

18:22:54.652 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
18:22:54.655 [Info] Writing postfixes
18:22:54.696 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

18:22:54.698 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
18:22:54.700 [Info] Writing postfixes
18:22:54.705 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

18:22:54.708 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
18:22:54.710 [Info] Writing postfixes
18:22:54.714 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)

18:22:54.717 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
18:22:54.719 [Info] Writing postfixes
18:22:54.728 [Info] ### Harmony id=MechEngineer.Features.Globals, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Globals.GlobalsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.731 [Info] Patching void BattleTech.UI.MechBayPanel::CloseMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_CloseMechBay_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

18:22:54.734 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::CloseMechBay()
18:22:54.736 [Info] Writing postfixes
18:22:54.741 [Info] Patching void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_SelectMech_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

18:22:54.743 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload)
18:22:54.745 [Info] Writing postfixes
18:22:54.752 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

18:22:54.755 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
18:22:54.757 [Info] Writing postfixes
18:22:54.762 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

18:22:54.765 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
18:22:54.767 [Info] Writing postfixes
18:22:54.778 [Info] ### Harmony id=MechEngineer.Features.TurretMechComponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.TurretMechComponents.TurretMechComponentSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.782 [Info] Patching virtual void BattleTech.Turret::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Turret __instance)

18:22:54.785 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
18:22:54.787 [Info] Writing prefixes
18:22:54.803 [Info] ### Harmony id=MechEngineer.Features.TurretLimitedAmmo, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.806 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.809 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
18:22:54.811 [Info] Transpiling virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
18:22:54.815 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.822 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:54.825 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
18:22:54.828 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
18:22:54.832 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:54.844 [Info] ### Harmony id=MechEngineer.Features.OverrideGhostVFX, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideGhostVFX.OverrideGhostVFXSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.849 [Info] Patching virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.GameRepresentation_PlayVFXAt_Patch::Prefix(Boolean& __runOriginal, string vfxName)

18:22:54.852 [Info] Running ILHook manipulator on virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration)
18:22:54.855 [Info] Writing prefixes
18:22:54.881 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
1 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)

18:22:54.883 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
18:22:54.885 [Info] Writing prefixes
18:22:54.888 [Info] Writing postfixes
18:22:54.900 [Info] ### Harmony id=MechEngineer.Features.OverrideStatTooltips, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideStatTooltips.OverrideStatTooltipsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.54
18:22:54.904 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechBayMechInfoWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

18:22:54.906 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::Awake()
18:22:54.909 [Info] Writing postfixes
18:22:54.915 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)

18:22:54.917 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
18:22:54.920 [Info] Writing postfixes
18:22:54.926 [Info] Patching void BattleTech.UI.MechLabStatBlockWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechLabStatBlockWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

18:22:54.929 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStatBlockWidget::Awake()
18:22:54.931 [Info] Writing postfixes
18:22:54.935 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMeleeStat_Patch::Prefix(Boolean& __runOriginal, Single& currentValue, Single& maxValue)

18:22:54.938 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
18:22:54.940 [Info] Writing prefixes
18:22:54.945 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMovementStat_Patch::Prefix(Boolean& __runOriginal, Single& currentValue, Single& maxValue)

18:22:54.947 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
18:22:54.949 [Info] Writing prefixes
18:22:54.955 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateDurabilityStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:22:54.957 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:54.959 [Info] Writing prefixes
18:22:54.967 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:22:54.969 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:54.972 [Info] Writing prefixes
18:22:54.979 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:22:54.982 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:54.984 [Info] Writing prefixes
18:22:54.995 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:22:54.997 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:55.000 [Info] Writing prefixes
18:22:55.006 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMovementStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:22:55.009 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:55.011 [Info] Writing prefixes
18:22:55.016 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:22:55.019 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:22:55.021 [Info] Writing prefixes
18:22:55.027 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)

18:22:55.030 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
18:22:55.032 [Info] Writing postfixes
18:22:55.040 [Info] Patching void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetDurabilityData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:22:55.042 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def)
18:22:55.044 [Info] Writing postfixes
18:22:55.052 [Info] Patching void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetFirepowerData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:22:55.055 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def)
18:22:55.057 [Info] Writing postfixes
18:22:55.063 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:22:55.066 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
18:22:55.068 [Info] Writing postfixes
18:22:55.075 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:22:55.078 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
18:22:55.080 [Info] Writing postfixes
18:22:55.088 [Info] Patching void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMovementData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:22:55.090 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def)
18:22:55.093 [Info] Writing postfixes
18:22:55.101 [Info] Patching void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetRangeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:22:55.103 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def)
18:22:55.106 [Info] Writing postfixes
18:22:55.112 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)

18:22:55.115 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
18:22:55.117 [Info] Writing postfixes
18:22:55.124 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Stats_SetData_Patch::Postfix(object data, BattleTech.UI.TMProWrapper.LocalizableText ___Title)

18:22:55.127 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data)
18:22:55.129 [Info] Writing postfixes
18:22:55.140 [Info] ### Harmony id=MechEngineer.Features.Performance, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Performance.PerformanceSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-01 06.22.55
18:22:55.143 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:55.146 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
18:22:55.149 [Info] Transpiling virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
18:22:55.154 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:55.162 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)

18:22:55.164 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
18:22:55.166 [Info] Writing prefixes
18:22:55.180 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)

18:22:55.183 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
18:22:55.185 [Info] Writing postfixes
18:22:55.197 [Info] Patching static BattleTech.Rendering.BTLight+LightStruct[] BattleTech.Rendering.BTLightController::GetLightArray(UnityEngine.Camera camera, bool simGame, UnityEngine.ComputeBuffer cullBuffer, UnityEngine.ComputeBuffer lightMatricies, UnityEngine.Vector4& numLights, bool isPortrait, float maxDistance, float distanceWidth, BattleTech.Rendering.BTLightController+LightSprite[]& outLightSprites, Int32& numSprites) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_GetLightArray_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.Rendering.BTLight> ___lightList)

18:22:55.200 [Info] Running ILHook manipulator on static BattleTech.Rendering.BTLight+LightStruct[] BattleTech.Rendering.BTLightController::GetLightArray(UnityEngine.Camera camera, bool simGame, UnityEngine.ComputeBuffer cullBuffer, UnityEngine.ComputeBuffer lightMatricies, UnityEngine.Vector4& numLights, bool isPortrait, float maxDistance, float distanceWidth, BattleTech.Rendering.BTLightController+LightSprite[]& outLightSprites, Int32& numSprites)
18:22:55.203 [Info] Writing prefixes
18:22:55.221 [Info] Patching static void BattleTech.Rendering.BTLightController::ProcessCommandBufferLegacy(UnityEngine.Rendering.CommandBuffer buf, UnityEngine.Camera camera, bool simGame, bool isPortrait, float maxDistance, float distanceWidth) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_ProcessCommandBufferLegacy_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.Rendering.BTLight> ___lightList)

18:22:55.224 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::ProcessCommandBufferLegacy(UnityEngine.Rendering.CommandBuffer buf, UnityEngine.Camera camera, bool simGame, bool isPortrait, float maxDistance, float distanceWidth)
18:22:55.227 [Info] Writing prefixes
18:22:55.288 [Info] Patching static void BattleTech.Rendering.BTLightController::SortList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_SortList_Patch::Prefix(Boolean& __runOriginal)

18:22:55.290 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::SortList()
18:22:55.293 [Info] Writing prefixes
18:22:55.297 [Info] Patching static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.BTLightController_AddLight_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:55.300 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light)
18:22:55.302 [Info] Transpiling static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light)
18:22:55.305 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.BTLightController_AddLight_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:55.310 [Info] Patching virtual int BattleTech.Rendering.BTLight::CompareTo(object obj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLight_CompareTo_Patch::Prefix(Boolean& __runOriginal, BattleTech.Rendering.BTLight __instance, object obj, Int32& __result)

18:22:55.312 [Info] Running ILHook manipulator on virtual int BattleTech.Rendering.BTLight::CompareTo(object obj)
18:22:55.314 [Info] Writing prefixes
18:22:55.320 [Info] Patching bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.CombatHUDEvasiveBarPips_TrySetButton_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:55.323 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color)
18:22:55.325 [Info] Transpiling bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color)
18:22:55.329 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.CombatHUDEvasiveBarPips_TrySetButton_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:55.391 [Info] Patching static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.TweenManager_FilteredOperation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:55.394 [Info] Running ILHook manipulator on static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray)
18:22:55.396 [Info] Transpiling static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray)
18:22:55.401 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.TweenManager_FilteredOperation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:55.750 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.753 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

18:22:55.756 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
18:22:55.758 [Info] Writing prefixes
18:22:55.762 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.765 [Info] Patching void BehaviorTree::InitRootNode() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.BehaviourTreeInitRootNodePatch::Postfix(BehaviorTree __instance, BattleTech.AbstractActor ___unit, BehaviorTreeIDEnum ___behaviorTreeIDEnum)

18:22:55.768 [Info] Running ILHook manipulator on void BehaviorTree::InitRootNode()
18:22:55.770 [Info] Writing postfixes
18:22:55.776 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.783 [Info] Patching void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateCompleteLanceConfigurationPrepPatch::Prefix(BattleTech.SimGameState __instance)

18:22:55.785 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request)
18:22:55.788 [Info] Writing prefixes
18:22:55.819 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.822 [Info] Patching static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideSelectLanceDefFromListPatch::Prefix(Int32& ___MAX_DIFF_DIVERGENCE)

18:22:55.824 [Info] Running ILHook manipulator on static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence)
18:22:55.826 [Info] Writing prefixes
18:22:55.832 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.835 [Info] Patching virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.DialogResultPatch::Prefix(BattleTech.Designed.DialogResult __instance, BattleTech.Framework.DialogueRef ___dialogueRef)

18:22:55.838 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName)
18:22:55.840 [Info] Writing prefixes
18:22:55.846 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.849 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()

18:22:55.852 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:22:55.854 [Info] Writing prefixes
18:22:55.857 [Info] Writing postfixes
18:22:55.863 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.867 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)

18:22:55.870 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
18:22:55.872 [Info] Writing prefixes
18:22:55.883 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.887 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

18:22:55.890 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
18:22:55.892 [Info] Writing prefixes
18:22:55.895 [Info] Writing postfixes
18:22:55.904 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.907 [Info] Patching void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractOverrideGenerateUnitsPatch::Prefix(BattleTech.Framework.ContractOverride __instance)

18:22:55.911 [Info] Running ILHook manipulator on void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags)
18:22:55.913 [Info] Writing prefixes
18:22:55.921 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.925 [Info] Patching virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ChunkOverrideCopyPatch::Prefix(BattleTech.Framework.ChunkOverride __instance, BattleTech.Framework.ChunkOverride& __result)

18:22:55.928 [Info] Running ILHook manipulator on virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy()
18:22:55.931 [Info] Writing prefixes
18:22:55.937 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.942 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)

18:22:55.944 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
18:22:55.946 [Info] Writing prefixes
18:22:55.958 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.961 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)

18:22:55.964 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
18:22:55.966 [Info] Writing prefixes
18:22:55.968 [Info] Writing postfixes
18:22:55.975 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.978 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)

18:22:55.980 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:22:55.982 [Info] Writing prefixes
18:22:55.989 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:55.992 [Info] Patching void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterChunkGameLogicApplyContractOverridePatch::Prefix(BattleTech.EncounterChunkGameLogic __instance, BattleTech.Framework.ChunkOverride chunkOverride)

18:22:55.995 [Info] Running ILHook manipulator on void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary)
18:22:55.997 [Info] Writing prefixes
18:22:56.002 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.006 [Info] Patching void BattleTech.EncounterLayerData::OverridePlots() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterLayerDataOverridePlotsPatch::Prefix(BattleTech.EncounterLayerData __instance)

18:22:56.008 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::OverridePlots()
18:22:56.011 [Info] Writing prefixes
18:22:56.015 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.018 [Info] Patching void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Prefix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)
1 postfixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Postfix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)

18:22:56.021 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status)
18:22:56.023 [Info] Writing prefixes
18:22:56.025 [Info] Writing postfixes
18:22:56.030 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.033 [Info] Patching void ItemRegistry::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ItemRegistryPatch::Postfix(ItemRegistry __instance, System.Collections.Generic.Dictionary<TaggedObjectType, System.Collections.Generic.List<ITaggedItem>> ___itemsByType)

18:22:56.036 [Info] Running ILHook manipulator on void ItemRegistry::.ctor()
18:22:56.038 [Info] Writing postfixes
18:22:56.045 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.048 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)

18:22:56.050 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
18:22:56.053 [Info] Writing prefixes
18:22:56.059 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.062 [Info] Patching BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataExporterPatch::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, MissionControl.DataManager dataManager)

18:22:56.065 [Info] Running ILHook manipulator on BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager)
18:22:56.067 [Info] Writing prefixes
18:22:56.074 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.078 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

18:22:56.080 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
18:22:56.082 [Info] Writing postfixes
18:22:56.089 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.093 [Info] Patching void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateFilterActiveMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.WeightedList`1[[BattleTech.Data.MapAndEncounters, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)

18:22:56.096 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)
18:22:56.098 [Info] Writing postfixes
18:22:56.117 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.121 [Info] Patching bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidContractsPatch::Postfix(BattleTech.SimGameState __instance, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)

18:22:56.124 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)
18:22:56.126 [Info] Writing postfixes
18:22:56.132 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.136 [Info] Patching bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system)

18:22:56.138 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps)
18:22:56.140 [Info] Writing postfixes
18:22:56.145 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.148 [Info] Patching System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.TeamDelayEnemySpottedVOPatch::Prefix(BattleTech.Team __instance, BattleTech.AbstractActor actor, System.Collections.IEnumerator& __result)

18:22:56.150 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor)
18:22:56.152 [Info] Writing prefixes
18:22:56.157 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.160 [Info] Patching UnityEngine.Vector3 BattleTech.UnitSpawnPointGameLogic::GetSpawnPosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.UnitSpawnPointGameLogicGetSpawnPositionPatch::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.Vector3& __result, BattleTech.UnitType ___unitType)

18:22:56.162 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UnitSpawnPointGameLogic::GetSpawnPosition()
18:22:56.164 [Info] Writing postfixes
18:22:56.169 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.172 [Info] Patching static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.BehaviourNodeLogAIPatch::Prefix(BehaviorNode __instance, string info)

18:22:56.174 [Info] Running ILHook manipulator on static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName)
18:22:56.176 [Info] Writing prefixes
18:22:56.181 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.184 [Info] Patching BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataGetCellAtPatch::Prefix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell& __result, BattleTech.Point index, BattleTech.MapTerrainDataCell[,] ___mapTerrainDataCells)

18:22:56.186 [Info] Running ILHook manipulator on BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index)
18:22:56.188 [Info] Writing prefixes
18:22:56.193 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.196 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.UnitSpawnPointGameLogicLoadDropPodPrefabsPatch::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)

18:22:56.198 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)
18:22:56.200 [Info] Writing prefixes
18:22:56.206 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.210 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LanceConfiguratorPanelContinueConfirmClickedPatch::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance)

18:22:56.212 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked()
18:22:56.214 [Info] Writing postfixes
18:22:56.226 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.229 [Info] Patching void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDRetreatEscMenuOnRetreatConfirmedPatch::Prefix(BattleTech.UI.CombatHUDRetreatEscMenu __instance)

18:22:56.231 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed()
18:22:56.233 [Info] Writing prefixes
18:22:56.240 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.244 [Info] Patching UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EmotePortraitLoadPortraitPatch::Prefix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)
1 postfixes:
* static void MissionControl.Patches.EmotePortraitLoadPortraitPatch::Postfix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)

18:22:56.246 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits)
18:22:56.249 [Info] Writing prefixes
18:22:56.252 [Info] Writing postfixes
18:22:56.258 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.260 [Info] Patching void BattleTech.EncounterLayerParent::FirstTimeInitialization() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentFirstTimeInitializationPatch::Prefix(BattleTech.EncounterLayerParent __instance)

18:22:56.263 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::FirstTimeInitialization()
18:22:56.265 [Info] Writing prefixes
18:22:56.269 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.272 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)

18:22:56.274 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
18:22:56.277 [Info] Writing prefixes
18:22:56.326 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.329 [Info] Patching void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.CombatHUDMissionEndShowFailurePatch::Prefix(BattleTech.UI.CombatHUDMissionEnd __instance, Boolean& storyMission)

18:22:56.332 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission)
18:22:56.340 [Info] Writing prefixes
18:22:56.349 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
18:22:56.356 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)

18:22:56.359 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
18:22:56.361 [Info] Writing prefixes
18:22:56.364 [Info] Writing postfixes
18:22:56.384 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.387 [Info] Patching virtual BattleTech.LanceDef BattleTech.LanceDef::Copy() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Prefix(BattleTech.LanceDef __instance)
1 postfixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Postfix(BattleTech.LanceDef __instance, BattleTech.LanceDef __result)

18:22:56.390 [Info] Running ILHook manipulator on virtual BattleTech.LanceDef BattleTech.LanceDef::Copy()
18:22:56.392 [Info] Writing prefixes
18:22:56.394 [Info] Writing postfixes
18:22:56.399 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.403 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)

18:22:56.405 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
18:22:56.407 [Info] Writing prefixes
18:22:56.414 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.417 [Info] Patching void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.TurnDirectorOnFirstContactPatch::Postfix(BattleTech.TurnDirector __instance)

18:22:56.419 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message)
18:22:56.422 [Info] Writing postfixes
18:22:56.425 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.429 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.InterpolatorInterpolatePatch::Postfix(String& __result, BattleTech.GameContext context, bool localize)

18:22:56.431 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
18:22:56.433 [Info] Writing postfixes
18:22:56.439 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.442 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.PlayerLanceSpawnerGameLogicSpawnUnitsPatch::Postfix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

18:22:56.445 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen)
18:22:56.447 [Info] Writing postfixes
18:22:56.452 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.456 [Info] Patching void BattleTech.UI.SGDialogWidget::Show(string text, BattleTech.GameContext gameContext, BattleTech.CastDef whoIsTalking, BattleTech.CastMemberEmote emotion, BattleTech.UI.SGDialogWidget+OnContinueCallback onContinueCB, BattleTech.UI.SGDialogWidget+OnResponseCallback onResponseCB, System.Collections.Generic.List<BattleTech.SimGameConversationManager+ResponseData> responses, bool endOfConvo, bool changeFromContinueToResponse) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SGDialogWidgetShowPatch::Prefix(BattleTech.UI.SGDialogWidget __instance, String& text, BattleTech.CastDef& whoIsTalking)
1 postfixes:
* static void MissionControl.Patches.SGDialogWidgetShowPatch::Postfix(BattleTech.UI.SGDialogWidget __instance, BattleTech.UI.ConvDialogEntry ___currentEntry)

18:22:56.458 [Info] Running ILHook manipulator on void BattleTech.UI.SGDialogWidget::Show(string text, BattleTech.GameContext gameContext, BattleTech.CastDef whoIsTalking, BattleTech.CastMemberEmote emotion, BattleTech.UI.SGDialogWidget+OnContinueCallback onContinueCB, BattleTech.UI.SGDialogWidget+OnResponseCallback onResponseCB, System.Collections.Generic.List<BattleTech.SimGameConversationManager+ResponseData> responses, bool endOfConvo, bool changeFromContinueToResponse)
18:22:56.461 [Info] Writing prefixes
18:22:56.463 [Info] Writing postfixes
18:22:56.481 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.483 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
2 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)

18:22:56.486 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
18:22:56.488 [Info] Writing prefixes
18:22:56.491 [Info] Writing postfixes
18:22:56.496 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.499 [Info] Patching void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorCheckEnteredCellsForRegionsPatch::Prefix(BattleTech.AbstractActor __instance)

18:22:56.501 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList)
18:22:56.504 [Info] Writing prefixes
18:22:56.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.517 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)

18:22:56.520 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
18:22:56.522 [Info] Writing prefixes
18:22:56.530 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.533 [Info] Patching virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SmartTriggerResponseEvalutePatch::Prefix(BattleTech.Framework.SmartTriggerResponse __instance)

18:22:56.536 [Info] Running ILHook manipulator on virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message)
18:22:56.538 [Info] Writing prefixes
18:22:56.543 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.547 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)

18:22:56.549 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
18:22:56.552 [Info] Writing prefixes
18:22:56.569 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.573 [Info] Patching static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LevelLoaderLoadScenePatch::Prefix(BattleTech.LevelLoader __instance, string scene)

18:22:56.575 [Info] Running ILHook manipulator on static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene)
18:22:56.578 [Info] Writing prefixes
18:22:56.582 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.586 [Info] Patching static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LoadingCurtainHidePatch::Prefix(BattleTech.UI.LoadingCurtain __instance)

18:22:56.588 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader)
18:22:56.590 [Info] Writing prefixes
18:22:56.594 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.597 [Info] Patching BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMapPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Data.MapAndEncounters& __result)

18:22:56.599 [Info] Running ILHook manipulator on BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap()
18:22:56.601 [Info] Writing prefixes
18:22:56.606 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.608 [Info] Patching BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMoodPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Rendering.Mood.BattleMood& __result)

18:22:56.611 [Info] Running ILHook manipulator on BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood()
18:22:56.613 [Info] Writing prefixes
18:22:56.617 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.620 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)

18:22:56.622 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
18:22:56.625 [Info] Writing prefixes
18:22:56.630 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.634 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LaunchMap() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SkirmishSettingsBetaLaunchMapPatch::Postfix()

18:22:56.637 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LaunchMap()
18:22:56.639 [Info] Writing postfixes
18:22:56.649 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.652 [Info] Patching UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.AssetBundleManagerGetAssetFromBundlePatch::Postfix(BattleTech.Assetbundles.AssetBundleManager __instance, string assetName, string bundleName, UnityEngine.GameObject& __result)

18:22:56.655 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName)
18:22:56.657 [Info] Writing postfixes
18:22:56.663 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.667 [Info] Patching void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.GameInstanceLaunchContractFromSavePatch::Postfix(BattleTech.GameInstance __instance, BattleTech.CombatGameState combat)

18:22:56.670 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat)
18:22:56.672 [Info] Writing postfixes
18:22:56.678 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.680 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)

18:22:56.683 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
18:22:56.685 [Info] Writing prefixes
18:22:56.689 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.693 [Info] Patching virtual void BattleTech.UI.Briefing::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.BriefingInitPatch::Prefix(BattleTech.UI.Briefing __instance, BattleTech.UI.LoadingSpinnerAndTip_Widget ___spinnerGameTip)

18:22:56.695 [Info] Running ILHook manipulator on virtual void BattleTech.UI.Briefing::Init()
18:22:56.697 [Info] Writing prefixes
18:22:56.755 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.758 [Info] Patching void BattleTech.UI.LoadingSpinnerAndTip_Widget::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LoadingSpinnerAndTipWidgetInitPatch::Postfix(BattleTech.UI.LoadingSpinnerAndTip_Widget __instance)

18:22:56.760 [Info] Running ILHook manipulator on void BattleTech.UI.LoadingSpinnerAndTip_Widget::Init()
18:22:56.762 [Info] Writing postfixes
18:22:56.766 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 54 ms
18:22:56.769 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateStartContractPatch::Prefix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

18:22:56.772 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
18:22:56.774 [Info] Writing prefixes
18:22:56.788 [Info] ### Harmony id=io.github.mpstark.NavigationComputer, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void NavigationComputer.Main::Init(string modDir, string settings), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\NavigationComputer\NavigationComputer.dll
### At 2023-06-01 06.22.56
18:22:56.793 [Info] Patching virtual void BattleTech.UI.SGNavigationScreen::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.SGNavigationScreen_Update_Patch::Postfix()

18:22:56.795 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationScreen::Update()
18:22:56.797 [Info] Writing postfixes
18:22:56.803 [Info] Patching void BattleTech.UI.SGNavigationScreen::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomController_Navigation myNavRoom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.SGNavigationScreen_Init_Patch::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState simGame)

18:22:56.806 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomController_Navigation myNavRoom)
18:22:56.808 [Info] Writing postfixes
18:22:56.819 [Info] Patching virtual bool BattleTech.UI.SGNavigationScreen::HandleEscapeKeypress() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SGNavigationScreen_HandleEscapeKeypress_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

18:22:56.822 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SGNavigationScreen::HandleEscapeKeypress()
18:22:56.824 [Info] Writing prefixes
18:22:56.828 [Info] Patching void BattleTech.UI.SGRoomController_Navigation::ExitNavScreen() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SGRoomController_Navigation_ExitNavScreen_Patch::Prefix()

18:22:56.831 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_Navigation::ExitNavScreen()
18:22:56.833 [Info] Writing prefixes
18:22:56.838 [Info] Patching void BattleTech.SimGameState::SetSimRoomState(BattleTech.DropshipLocation state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SimGameState_SetSimRoomState_Patch::Prefix(BattleTech.DropshipLocation state)

18:22:56.841 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetSimRoomState(BattleTech.DropshipLocation state)
18:22:56.843 [Info] Writing prefixes
18:22:56.848 [Info] Patching bool BattleTech.Starmap::SetSelectedSystem(BattleTech.StarSystemNode node) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.Starmap_SetSelectedSystem_Patch::Prefix(Boolean& __runOriginal, BattleTech.Starmap __instance, BattleTech.StarSystemNode node)

18:22:56.851 [Info] Running ILHook manipulator on bool BattleTech.Starmap::SetSelectedSystem(BattleTech.StarSystemNode node)
18:22:56.854 [Info] Writing prefixes
18:22:56.858 [Info] Patching BattleTech.StarSystemNode BattleTech.Starmap::GetLocationByUV(UnityEngine.Vector2 pos, UnityEngine.Rect loc, float scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.Starmap_GetLocationByUV_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.StarSystemNode __result)

18:22:56.861 [Info] Running ILHook manipulator on BattleTech.StarSystemNode BattleTech.Starmap::GetLocationByUV(UnityEngine.Vector2 pos, UnityEngine.Rect loc, float scale)
18:22:56.863 [Info] Writing postfixes
18:22:56.869 [Info] Patching void BattleTech.StarmapRenderer::SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer systemRenderer) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.StarmapRenderer_SetSelectedSystemRenderer_Patch::Prefix(Boolean& __runOriginal, BattleTech.StarmapRenderer __instance, BattleTech.StarmapSystemRenderer systemRenderer)

18:22:56.871 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer systemRenderer)
18:22:56.873 [Info] Writing prefixes
18:22:56.891 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 56 ms
18:22:56.894 [Info] Patching static void BattleTech.Save.CachedSettings::ClearCachedSettings() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_ClearCachedSettings_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:56.896 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::ClearCachedSettings()
18:22:56.899 [Info] Transpiling static void BattleTech.Save.CachedSettings::ClearCachedSettings()
18:22:56.901 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_ClearCachedSettings_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:56.909 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 58 ms
18:22:56.912 [Info] Patching static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SaveSettingsToPlayerPrefs_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:56.914 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings)
18:22:56.917 [Info] Transpiling static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings)
18:22:56.920 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SaveSettingsToPlayerPrefs_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:56.930 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
18:22:56.933 [Info] Patching static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsGetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:56.936 [Info] Running ILHook manipulator on static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings()
18:22:56.938 [Info] Transpiling static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings()
18:22:56.941 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsGetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:56.952 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 63 ms
18:22:56.954 [Info] Patching static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsSetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:56.957 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value)
18:22:56.959 [Info] Transpiling static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value)
18:22:56.962 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsSetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:56.967 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 63 ms
18:22:56.970 [Info] Patching void BattleTech.Save.Core.WriteLocation::.ctor(string rootPath, bool usePlatform) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NewSaveFolder.Patches.WriteLocation_Constructor_Patch::Prefix(String& rootPath, Boolean& usePlatform)

18:22:56.973 [Info] Running ILHook manipulator on void BattleTech.Save.Core.WriteLocation::.ctor(string rootPath, bool usePlatform)
18:22:56.975 [Info] Writing prefixes
18:22:56.989 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 63 ms
18:22:56.993 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)

18:22:56.996 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:22:56.999 [Info] Writing prefixes
18:22:57.002 [Info] Writing postfixes
18:22:57.017 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 63 ms
18:22:57.020 [Info] Patching virtual void BattleTech.IntroCinematicLauncher::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SkipIntro.Patches.IntroCinematicLauncher_Init_Patch::Postfix()

18:22:57.023 [Info] Running ILHook manipulator on virtual void BattleTech.IntroCinematicLauncher::Init()
18:22:57.026 [Info] Writing postfixes
18:22:57.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 63 ms
18:22:57.036 [Info] Patching void SplashLauncher::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SkipIntro.Patches.SplashLauncher_Update_Patch::Prefix(SplashLauncher __instance)

18:22:57.038 [Info] Running ILHook manipulator on void SplashLauncher::Update()
18:22:57.040 [Info] Writing prefixes
18:22:57.052 [Info] ### Harmony id=ru.kmission.travelinfotooltips, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void TravelInfoTooltips.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\TravelInfoTooltips\TravelInfoTooltips.dll
### At 2023-06-01 06.22.57
18:22:57.056 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::SetupTooltips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TravelInfoTooltips.SGSystemViewPopulator_SetupTooltips::Postfix(BattleTech.UI.SGSystemViewPopulator __instance)

18:22:57.058 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::SetupTooltips()
18:22:57.060 [Info] Writing postfixes
18:22:57.073 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 65 ms
18:22:57.076 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:57.078 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
18:22:57.081 [Info] Transpiling void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
18:22:57.084 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:57.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 65 ms
18:22:57.097 [Info] Patching void BattleTech.PilotDef::SaveGameRequestResource(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.PilotDef_SaveGameRequestResourcesPatch::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.LoadRequest loadRequest)

18:22:57.099 [Info] Running ILHook manipulator on void BattleTech.PilotDef::SaveGameRequestResource(BattleTech.Data.LoadRequest loadRequest)
18:22:57.102 [Info] Writing postfixes
18:22:57.107 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 65 ms
18:22:57.110 [Info] Patching UnityEngine.Texture2D BattleTech.Portraits.RenderedPortraitResult::get_Item(BattleTech.Portraits.PortraitManager+PortraitSizes size) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.RenderedPortraitResult_GetItemPatch::Postfix(BattleTech.Portraits.RenderedPortraitResult __instance, UnityEngine.Texture2D& __result)

18:22:57.112 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.Portraits.RenderedPortraitResult::get_Item(BattleTech.Portraits.PortraitManager+PortraitSizes size)
18:22:57.114 [Info] Writing postfixes
18:22:57.122 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
18:22:57.124 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:57.127 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
18:22:57.129 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
18:22:57.132 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:57.138 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
18:22:57.142 [Info] Patching virtual void SGBarracksMWCustomizationPopup::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.SGBarracksMWCustomizationPopup_SavePatch::Postfix(SGBarracksMWCustomizationPopup& __instance)

18:22:57.144 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::Save()
18:22:57.147 [Info] Writing postfixes
18:22:57.155 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
18:22:57.158 [Info] Patching void BattleTech.UI.SGCharacterCreationPortraitCustomization::LoadPortraitSettings(BattleTech.Portraits.PortraitSettings portraitSettingsData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderPortraitLoader.SGBarracksMWCustomizationPopup_LoadPortraitSettingsPatch::Prefix(SGBarracksMWCustomizationPopup& __instance, BattleTech.Portraits.PortraitSettings& portraitSettingsData)

18:22:57.161 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationPortraitCustomization::LoadPortraitSettings(BattleTech.Portraits.PortraitSettings portraitSettingsData)
18:22:57.163 [Info] Writing prefixes
18:22:57.170 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
18:22:57.173 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:57.175 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
18:22:57.177 [Info] Transpiling void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
18:22:57.180 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:57.187 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
18:22:57.189 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::LoadOptions() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderPortraitLoader.SGCharacterCreationNamePanel_LoadOptions_Patch::Prefix()
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationNamePanel_LoadOptions_Patch::Postfix(BattleTech.UI.SGCharacterCreationNamePanel& __instance)

18:22:57.192 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::LoadOptions()
18:22:57.194 [Info] Writing prefixes
18:22:57.197 [Info] Writing postfixes
18:22:57.203 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
18:22:57.205 [Info] Patching BattleTech.Gender BattleTech.UI.SGCharacterCreationNamePanel::get_gender() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderPortraitLoader.SGCharacterCreationNamePanel_get_gender_Patch::Prefix(BattleTech.UI.SGCharacterCreationNamePanel& __instance, BattleTech.Gender& __result)
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationNamePanel_get_gender_Patch::Postfix(BattleTech.UI.SGCharacterCreationNamePanel& __instance, BattleTech.Gender& __result)

18:22:57.208 [Info] Running ILHook manipulator on BattleTech.Gender BattleTech.UI.SGCharacterCreationNamePanel::get_gender()
18:22:57.210 [Info] Writing prefixes
18:22:57.212 [Info] Writing postfixes
18:22:57.217 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
18:22:57.220 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)

18:22:57.223 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
18:22:57.225 [Info] Writing postfixes
18:22:57.239 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
18:22:57.243 [Info] Patching void BattleTech.SpawnableUnit::Init(BattleTech.PilotableActorDef unitDef, BattleTech.PilotDef pilotDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderPortraitLoader.SpawnableUnit_Init_Patch::Prefix(BattleTech.SpawnableUnit& __instance, BattleTech.PilotDef pilotDef)

18:22:57.245 [Info] Running ILHook manipulator on void BattleTech.SpawnableUnit::Init(BattleTech.PilotableActorDef unitDef, BattleTech.PilotDef pilotDef)
18:22:57.248 [Info] Writing prefixes
18:22:57.255 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
18:22:57.258 [Info] Patching static BattleTech.VersionManifest BattleTech.VersionManifestUtilities::LoadDefaultManifest() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.VersionManifestUtilitiesPatch::Postfix(BattleTech.VersionManifest& __result)

18:22:57.261 [Info] Running ILHook manipulator on static BattleTech.VersionManifest BattleTech.VersionManifestUtilities::LoadDefaultManifest()
18:22:57.263 [Info] Writing postfixes
18:22:57.807 [Info] ### Harmony id=io.mission.customlocalization, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomTranslation.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomLocalization\CustomLocalization.dll
### At 2023-06-01 06.22.57
18:22:57.811 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)

18:22:57.814 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
18:22:57.816 [Info] Writing postfixes
18:22:57.822 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.Interpolator_Interpolate::Prefix(String& template, BattleTech.GameContext context)
1 postfixes:
* static void MissionControl.Patches.InterpolatorInterpolatePatch::Postfix(String& __result, BattleTech.GameContext context, bool localize)

18:22:57.824 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
18:22:57.826 [Info] Writing prefixes
18:22:57.829 [Info] Writing postfixes
18:22:57.835 [Info] Patching virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.CSVStringsProvider_LoadCultureFromReader::Postfix(BattleTech.CSVStringsProvider __instance)

18:22:57.837 [Info] Running ILHook manipulator on virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader)
18:22:57.839 [Info] Writing postfixes
18:22:57.850 [Info] Patching void System.IO.StreamReader::.ctor(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.StreamReader_Constructor::Prefix(System.IO.StreamReader __instance, String& path)

18:22:57.852 [Info] Running ILHook manipulator on void System.IO.StreamReader::.ctor(string path)
18:22:57.855 [Info] Writing prefixes
18:22:57.860 [Info] Patching void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.DataLoader_CallHandler::Prefix(String& path, System.Action<string, System.IO.Stream> handler)

18:22:57.862 [Info] Running ILHook manipulator on void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler)
18:22:57.865 [Info] Writing prefixes
18:22:57.871 [Info] Patching virtual void Localize.InterpolatedText::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.InterpolatedText_Append::Prefix(String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.InterpolatedText_Append::Postfix(Localize.InterpolatedText __instance)

18:22:57.873 [Info] Running ILHook manipulator on virtual void Localize.InterpolatedText::Append(string text, object[] args)
18:22:57.875 [Info] Writing prefixes
18:22:57.878 [Info] Writing postfixes
18:22:57.885 [Info] Patching virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ShipModuleUpgrade_FromJSON::Postfix(BattleTech.ShipModuleUpgrade __instance, string json)

18:22:57.887 [Info] Running ILHook manipulator on virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json)
18:22:57.890 [Info] Writing postfixes
18:22:57.895 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)

18:22:57.897 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
18:22:57.899 [Info] Writing prefixes
18:22:57.905 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomTranslation.MechValidationRules_ValidateMechDef::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:22:57.908 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
18:22:57.910 [Info] Writing postfixes
18:22:57.917 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:22:57.920 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
18:22:57.922 [Info] Writing postfixes
18:22:57.927 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
1 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)

18:22:57.930 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
18:22:57.932 [Info] Writing prefixes
18:22:57.934 [Info] Writing postfixes
18:22:57.941 [Info] Patching void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Prefix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text& description)
1 postfixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Postfix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text description, BattleTech.UI.TMProWrapper.LocalizableText ___Text)

18:22:57.943 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description)
18:22:57.946 [Info] Writing prefixes
18:22:57.948 [Info] Writing postfixes
18:22:57.954 [Info] Patching TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.FontLocTable_ConvertFontForCulture::Prefix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)
1 postfixes:
* static void CustomTranslation.FontLocTable_ConvertFontForCulture::Postfix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)

18:22:57.956 [Info] Running ILHook manipulator on TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont)
18:22:57.958 [Info] Writing prefixes
18:22:57.961 [Info] Writing postfixes
18:22:57.966 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

18:22:57.969 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
18:22:57.971 [Info] Writing prefixes
18:22:57.976 [Info] Patching void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.FloatieMessage_Constructor::Prefix(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)

18:22:57.979 [Info] Running ILHook manipulator on void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)
18:22:57.981 [Info] Writing prefixes
18:22:57.989 [Info] Patching void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatieAnchor_AddFloatie::Prefix(BattleTech.UI.CombatHUDFloatieAnchor __instance, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)

18:22:57.991 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)
18:22:57.994 [Info] Writing prefixes
18:22:57.999 [Info] Patching void BattleTech.UnityGameInstance::Reset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.UnityGameInstance_Reset::Postfix(BattleTech.UnityGameInstance __instance)

18:22:58.002 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Reset()
18:22:58.005 [Info] Writing postfixes
18:22:58.013 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
3 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

18:22:58.015 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
18:22:58.017 [Info] Writing prefixes
18:22:58.019 [Info] Writing postfixes
18:22:58.024 [Info] Patching void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ModDefsDatabase_FinishedLoadingMods::Postfix(object __instance)

18:22:58.027 [Info] Running ILHook manipulator on void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries()
18:22:58.029 [Info] Writing postfixes
18:22:58.495 [Info] Patching void BattleTech.UI.LanguageSelect::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.LanguageSelect_Save::Postfix(BattleTech.UI.LanguageSelect __instance)

18:22:58.498 [Info] Running ILHook manipulator on void BattleTech.UI.LanguageSelect::Save()
18:22:58.500 [Info] Writing postfixes
18:22:58.506 [Info] Patching virtual void Localize.Text::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.Text_Append::Prefix(Localize.Text __instance, String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.Text_Append::Postfix(Localize.Text __instance)

18:22:58.508 [Info] Running ILHook manipulator on virtual void Localize.Text::Append(string text, object[] args)
18:22:58.511 [Info] Writing prefixes
18:22:58.514 [Info] Writing postfixes
18:22:58.520 [Info] Patching string BattleTech.DescriptionDef::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_UINameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

18:22:58.522 [Info] Running ILHook manipulator on string BattleTech.DescriptionDef::get_UIName()
18:22:58.524 [Info] Writing postfixes
18:22:58.528 [Info] Patching string BattleTech.BaseDescriptionDef::get_Name() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_NameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

18:22:58.531 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Name()
18:22:58.533 [Info] Writing postfixes
18:22:58.537 [Info] Patching string BattleTech.BaseDescriptionDef::get_Details() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_DetailsGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

18:22:58.540 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Details()
18:22:58.542 [Info] Writing postfixes
18:22:58.554 [Info] ### Harmony id=io.kmission.custompilotdecorator, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPilotDecorator.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomPilotDecorator\CustomPilotDecorator.dll
### At 2023-06-01 06.22.58
18:22:58.558 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

18:22:58.560 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
18:22:58.563 [Info] Writing postfixes
18:22:58.568 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:22:58.571 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:22:58.573 [Info] Writing postfixes
18:22:58.581 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Prefix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon)
2 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon, BattleTech.UI.TMProWrapper.LocalizableText& ___callsign)

18:22:58.584 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
18:22:58.587 [Info] Writing prefixes
18:22:58.589 [Info] Writing postfixes
18:22:58.602 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:58.604 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
18:22:58.606 [Info] Writing postfixes
18:22:58.614 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:58.617 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
18:22:58.620 [Info] Writing postfixes
18:22:58.628 [Info] Patching void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechPilotPortraits_Init::Postfix(BattleTech.UI.LanceMechPilotPortraits __instance, BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)

18:22:58.630 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)
18:22:58.633 [Info] Writing postfixes
18:22:58.639 [Info] Patching void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_Init::Postfix(BattleTech.UI.LanceMechSlot __instance, BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)

18:22:58.641 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)
18:22:58.643 [Info] Writing postfixes
18:22:58.651 [Info] Patching void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechSlot __instance, bool isRandom)

18:22:58.654 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom)
18:22:58.656 [Info] Writing postfixes
18:22:58.662 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_Init::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)

18:22:58.665 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)
18:22:58.667 [Info] Writing postfixes
18:22:58.675 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, bool isRandom)

18:22:58.678 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom)
18:22:58.680 [Info] Writing postfixes
18:22:58.687 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.ListElementController_SalvageFullMech_NotListView_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement theWidget)

18:22:58.689 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
18:22:58.692 [Info] Writing postfixes
18:22:58.701 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

18:22:58.703 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
18:22:58.706 [Info] Writing postfixes
18:22:58.713 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif2::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)

18:22:58.716 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)
18:22:58.719 [Info] Writing postfixes
18:22:58.726 [Info] Patching void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechUnitElementWidget_SetIcon::Postfix(BattleTech.UI.MechUnitElementWidget __instance, string icon)

18:22:58.729 [Info] Running ILHook manipulator on void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon)
18:22:58.731 [Info] Writing postfixes
18:22:58.737 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHPText)
* static void CustomPilotDecorator.TooltipPrefab_Chassis_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, object data)

18:22:58.740 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
18:22:58.742 [Info] Writing postfixes
18:22:58.750 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

18:22:58.753 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
18:22:58.755 [Info] Writing postfixes
18:22:58.765 [Info] Patching void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitPreviewPanel_SetData::Postfix(BattleTech.UI.PortraitPreviewPanel __instance, BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)

18:22:58.768 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)
18:22:58.770 [Info] Writing postfixes
18:22:58.782 [Info] Patching void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitRenderPanel_Render::Postfix(BattleTech.UI.PortraitRenderPanel __instance, BattleTech.Portraits.PortraitSettings portraitSettings)

18:22:58.785 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings)
18:22:58.787 [Info] Writing postfixes
18:22:58.793 [Info] Patching void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGCharacterCreationWidget_UpdateSummary::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance)

18:22:58.796 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary()
18:22:58.798 [Info] Writing postfixes
18:22:58.806 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGBarracksDossierPanel_SetPilot_Gif::Postfix(BattleTech.UI.SGBarracksDossierPanel __instance, BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)

18:22:58.808 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)
18:22:58.811 [Info] Writing postfixes
18:22:58.829 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SG_HiringHall_DetailPanel_DisplayPilot::Postfix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

18:22:58.831 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p)
18:22:58.833 [Info] Writing postfixes
18:22:58.838 [Info] Patching void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.CombatHUDPortrait_ResetDisplayedActor::Postfix(BattleTech.UI.CombatHUDPortrait __instance)

18:22:58.841 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor()
18:22:58.843 [Info] Writing postfixes
18:22:58.850 [Info] Patching UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.SpriteLoadRequest_SpriteFromDisk::Prefix(BattleTech.Data.DataManager+SpriteLoadRequest __instance, string assetPath, UnityEngine.Sprite& __result)

18:22:58.852 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath)
18:22:58.854 [Info] Writing prefixes
18:22:58.862 [Info] Patching void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.TextureManager_ProcessCompletedRequest::Prefix(BattleTech.Data.TextureManager __instance, BattleTech.Data.TextureManager+TextureLoadRequest completed)

18:22:58.864 [Info] Running ILHook manipulator on void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed)
18:22:58.866 [Info] Writing prefixes
18:22:58.896 [Info] ### Harmony id=io.kmission.customunitdecorator, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnitDecorator.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnitDecorator\CustomUnitDecorator.dll
### At 2023-06-01 06.22.58
18:22:58.899 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetAlertIcon(bool shouldShow, BattleTech.UI.UIColor color) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.MechBayMechUnitElement_SetAlertIcon::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, bool shouldShow, BattleTech.UI.UIColor color)

18:22:58.902 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetAlertIcon(bool shouldShow, BattleTech.UI.UIColor color)
18:22:58.905 [Info] Writing postfixes
18:22:58.909 [Info] Patching virtual bool BattleTech.MechComponentDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.MechComponentDef __instance, uint loadWeight, Boolean& __result)

18:22:58.912 [Info] Running ILHook manipulator on virtual bool BattleTech.MechComponentDef::DependenciesLoaded(uint loadWeight)
18:22:58.914 [Info] Writing postfixes
18:22:58.920 [Info] Patching virtual void BattleTech.MechComponentDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.MechComponentDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:22:58.922 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponentDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:22:58.924 [Info] Writing postfixes
18:22:58.930 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnitDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

18:22:58.932 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
18:22:58.935 [Info] Writing postfixes
18:22:58.950 [Info] ### Harmony id=ru.kmission.customunitspawn, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnitSpawn.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnitSpawn\CustomUnitSpawn.dll
### At 2023-06-01 06.22.58
18:22:58.954 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)
* static void CustomUnitSpawn.LanceOverride_RequestLance::Prefix(BattleTech.Framework.LanceOverride __instance, BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)

18:22:58.957 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
18:22:58.959 [Info] Writing prefixes
18:22:58.965 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)
* static void CustomUnitSpawn.LanceOverride_RequestLanceComplete::Prefix(BattleTech.Framework.LanceOverride __instance, BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)

18:22:58.968 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
18:22:58.970 [Info] Writing prefixes
18:22:58.977 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

18:22:58.979 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
18:22:58.986 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags, System.Collections.Generic.List`1[[BattleTech.Data.UnitDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:22:58.988 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
18:22:58.990 [Info] Writing postfixes
18:22:58.996 [IL] Generated patch (System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> DMD<BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs>?-1068095744::BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)):
.locals init (
    BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0 V_0
    System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> V_1
    System.Boolean V_2
)
IL_0000: newobj System.Void BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::.ctor()
IL_0005: stloc.0
IL_0006: ldloc.0
IL_0007: ldarg.0
IL_0008: stfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_000d: ldloc.0
IL_000e: ldarg.s currentDate
IL_0010: stfld System.Nullable`1<System.DateTime> BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::currentDate
IL_0015: ldloc.0
IL_0016: ldarg.s companyTags
IL_0018: stfld HBS.Collections.TagSet BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::companyTags
IL_001d: ldloc.0
IL_001e: ldfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0023: ldc.i4.5
IL_0024: ldarg.1
IL_0025: ldarg.2
IL_0026: ldstr "UnitDef"
IL_002b: ldstr ""
IL_0030: ldarg.3
IL_0031: ldstr "UnitDefID"
IL_0036: call System.Collections.Generic.List`1<DataBaseType> BattleTech.Data.TagSetQueryExtensions::GetMatchingDataByTagSet<BattleTech.Data.UnitDef_MDD>(BattleTech.Data.MetadataDatabase,BattleTech.Data.TagSetType,HBS.Collections.TagSet,HBS.Collections.TagSet,System.String,System.String,System.Boolean,System.String)
IL_003b: dup
IL_003c: ldloc.0
IL_003d: ldftn System.Boolean BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::<GetMatchingUnitDefs>b__0(BattleTech.Data.UnitDef_MDD)
IL_0043: newobj System.Void System.Predicate`1<BattleTech.Data.UnitDef_MDD>::.ctor(System.Object,System.IntPtr)
IL_0048: callvirt System.Int32 System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>::RemoveAll(System.Predicate`1<T>)
IL_004d: pop
IL_004e: br IL_0053
IL_0053: stloc V_1
IL_0057: ldc.i4.1
IL_0058: stloc V_2
IL_005c: ldarg mdd
IL_0060: ldarg requiredTags
IL_0064: ldarg excludedTags
IL_0068: ldarg checkOwnership
IL_006c: ldarg currentDate
IL_0070: ldarg companyTags
IL_0074: ldloca V_1
IL_0078: call System.Void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet,System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>&)
IL_007d: ldloc V_1
IL_0081: ret

18:22:59.018 [Info] ### Harmony id=ru.mission.customvoices, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomVoices.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomVoices\CustomVoices.dll
### At 2023-06-01 06.22.59
18:22:59.022 [Info] Patching void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Briefing_SetStartButtonActive::Prefix(BattleTech.UI.Briefing __instance, bool isActive)

18:22:59.024 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive)
18:22:59.027 [Info] Writing prefixes
18:22:59.032 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

18:22:59.034 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
18:22:59.037 [Info] Writing prefixes
18:22:59.043 [Info] Patching virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWCustomizationPopup_LoadTextSelectorOptions::Prefix(SGBarracksMWCustomizationPopup __instance, BattleTech.UI.HorizontalScrollSelectorText& ___voiceSelector, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___voiceIdMap)

18:22:59.046 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions()
18:22:59.048 [Info] Writing prefixes
18:22:59.056 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

18:22:59.059 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
18:22:59.061 [Info] Writing postfixes
18:22:59.070 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWDetailPanel_CustomizePilot::Prefix(BattleTech.UI.SGBarracksMWDetailPanel __instance, BattleTech.Pilot ___curPilot, BattleTech.UI.SGBarracksWidget ___barracks, BattleTech.UI.SGBarracksDossierPanel ___dossier)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:59.077 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
18:22:59.082 [Info] Transpiling void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
18:22:59.086 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:59.091 [Info] Writing prefixes
18:22:59.100 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.SGCharacterCreationNamePanel_Awake::Postfix(BattleTech.UI.SGCharacterCreationNamePanel __instance)

18:22:59.104 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::Awake()
18:22:59.107 [Info] Writing postfixes
18:22:59.114 [Info] Patching void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SetSwitchById::Postfix(WwiseManager __instance, uint switchGroup, uint switchId, AkGameObj sourceObject)

18:22:59.116 [Info] Running ILHook manipulator on void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject)
18:22:59.119 [Info] Writing postfixes
18:22:59.124 [Info] Patching void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Pilot_Init::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)

18:22:59.128 [Info] Running ILHook manipulator on void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)
18:22:59.131 [Info] Writing prefixes
18:22:59.199 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:59.201 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
18:22:59.205 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
18:22:59.207 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:59.211 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:59.216 [Info] Patching static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksDossierPanel_PlayVO::Prefix(string voice, Boolean& __result)

18:22:59.219 [Info] Running ILHook manipulator on static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice)
18:22:59.221 [Info] Writing prefixes
18:22:59.227 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SG_HiringHall_DetailPanel_PlayPilotSelectionVO::Prefix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

18:22:59.229 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
18:22:59.232 [Info] Writing prefixes
18:22:59.238 [Info] Patching static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_InterruptPilotVOForTeam::Postfix(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)

18:22:59.240 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)
18:22:59.242 [Info] Writing postfixes
18:22:59.248 [Info] Patching void BattleTech.PilotRepresentation::LoadSoundbanks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PilotRepresentation__LoadSoundbanks__Patch::Prefix(BattleTech.PilotRepresentation& __instance, Boolean& ___startedVOStatic)

18:22:59.251 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::LoadSoundbanks()
18:22:59.254 [Info] Writing prefixes
18:22:59.261 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

18:22:59.263 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
18:22:59.266 [Info] Writing postfixes
18:22:59.274 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()
* static void CustomVoices.AudioEventManager_LoadAudioSettings::Postfix()

18:22:59.278 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
18:22:59.280 [Info] Writing postfixes
18:22:59.285 [Info] Patching static void BattleTech.AudioEventManager::SaveAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_SaveAudioSettings::Postfix()

18:22:59.288 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::SaveAudioSettings()
18:22:59.290 [Info] Writing postfixes
18:22:59.295 [Info] Patching void WwiseManager::SuspendSoundEngine(bool processAudio) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SuspendSoundEngine::Postfix(WwiseManager __instance)

18:22:59.297 [Info] Running ILHook manipulator on void WwiseManager::SuspendSoundEngine(bool processAudio)
18:22:59.300 [Info] Writing postfixes
18:22:59.306 [Info] Patching uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_PostEventById::Postfix(WwiseManager __instance, uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie, System.Collections.Generic.Dictionary<string, uint> ___guidIdMap, uint __result)

18:22:59.308 [Info] Running ILHook manipulator on uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
18:22:59.311 [Info] Writing postfixes
18:22:59.318 [Info] Patching static AKRESULT AkSoundEngine::RenderAudio() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AkSoundEngine_RenderAudio::Postfix(AKRESULT __result)

18:22:59.320 [Info] Running ILHook manipulator on static AKRESULT AkSoundEngine::RenderAudio()
18:22:59.323 [Info] Writing postfixes
18:22:59.330 [Info] Patching void WwiseManager::WakeupSoundEngine() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_WakeupSoundEngine::Postfix()

18:22:59.333 [Info] Running ILHook manipulator on void WwiseManager::WakeupSoundEngine()
18:22:59.336 [Info] Writing postfixes
18:22:59.341 [Info] Patching void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioSettingsModule_ApplyUpdatedSlider::Postfix(BattleTech.UI.AudioSettingsModule __instance, string val, float ___currentVolumeMaster, float ___currentVolumeMusic, float ___currentVolumeVoice, float ___currentVolumeSFX, float ___currentVolumeAmbience, float ___currentVolumeCinematic)

18:22:59.344 [Info] Running ILHook manipulator on void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val)
18:22:59.346 [Info] Writing postfixes
18:22:59.353 [Info] Patching static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.AudioEventManager_SetMusicState::Prefix(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic, Boolean& __result)

18:22:59.356 [Info] Running ILHook manipulator on static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic)
18:22:59.358 [Info] Writing prefixes
18:22:59.364 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PlayPilotVOPatch::Prefix(BattleTech.PilotRepresentation __instance, Boolean& ___startedVOStatic, AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:22:59.367 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
18:22:59.370 [Info] Transpiling void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
18:22:59.373 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:22:59.379 [Info] Writing prefixes
18:22:59.441 [Info] ### Harmony id=io.mission.customammocategories.private, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomAmmoCategoriesPrivate.Core::Init(), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategoriesPrivate.dll
### At 2023-06-01 06.22.59
18:22:59.445 [Info] Patching static void ModTek.Features.Manifest.Mods.ModDefsDatabase::FinishedLoadingMods() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPrivate.Core::PrintHarmonySummary_postfix()

18:22:59.448 [Info] Running ILHook manipulator on static void ModTek.Features.Manifest.Mods.ModDefsDatabase::FinishedLoadingMods()
18:22:59.450 [Info] Writing postfixes
18:22:59.718 [Info] ### Harmony id=Sheepy.BattleTechMod.AttackImprovementMod, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Sheepy.BattleTechMod.BattleModModule::Patch(System.Reflection.MethodBase patched, HarmonyLib.HarmonyMethod prefix, HarmonyLib.HarmonyMethod postfix, HarmonyLib.HarmonyMethod transpiler), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\AttackImprovementMod.dll
### At 2023-06-01 06.22.59
18:22:59.721 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

18:22:59.724 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
18:22:59.727 [Info] Writing postfixes
18:22:59.732 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()

18:22:59.736 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
18:22:59.739 [Info] Writing postfixes
18:22:59.748 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
2 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)

18:22:59.752 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:22:59.754 [Info] Writing prefixes
18:22:59.757 [Info] Writing postfixes
18:22:59.768 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)

18:22:59.771 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
18:22:59.773 [Info] Writing prefixes
18:22:59.776 [Info] Writing postfixes
18:22:59.781 [Info] ### Harmony id=io.mission.modrepuation, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CACMain.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategories.dll
### At 2023-06-01 06.22.59
18:22:59.788 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:22:59.791 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
18:22:59.794 [Info] Transpiling void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
18:22:59.798 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:22:59.808 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GetIndividualHits(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.ClusteredShotEnabler::Prefix(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage, BattleTech.AttackDirector+AttackSequence __instance)

18:22:59.811 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GetIndividualHits(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage)
18:22:59.814 [Info] Writing prefixes
18:22:59.826 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

18:22:59.829 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
18:22:59.832 [Info] Writing postfixes
18:22:59.839 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)

18:22:59.841 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:22:59.844 [Info] Writing prefixes
18:22:59.857 [Info] Patching virtual void BallisticEffect::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.BallisticEffectOnCompleteMultifirePatch::Prefix(Int32& ___hitIndex, BallisticEffect __instance)

18:22:59.860 [Info] Running ILHook manipulator on virtual void BallisticEffect::OnComplete()
18:22:59.862 [Info] Writing prefixes
18:22:59.869 [Info] Patching virtual void LaserEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.LaserEffectOnCompleteMultifirePatch::Postfix(Int32& ___hitIndex, LaserEffect __instance)

18:22:59.872 [Info] Running ILHook manipulator on virtual void LaserEffect::OnComplete()
18:22:59.875 [Info] Writing postfixes
18:22:59.881 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CleverGirlAIDamagePrediction.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.AbstractActor __instance)

18:22:59.884 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase)
18:22:59.887 [Info] Writing postfixes
18:22:59.893 [Info] Patching static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrderForTarget::Prefix(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary)

18:22:59.896 [Info] Running ILHook manipulator on static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order)
18:22:59.899 [Info] Writing prefixes
18:22:59.926 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)

18:22:59.929 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
18:22:59.931 [Info] Writing postfixes
18:22:59.946 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerDown::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

18:22:59.949 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
18:22:59.951 [Info] Writing prefixes
18:22:59.958 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerUp::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

18:22:59.961 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
18:22:59.963 [Info] Writing prefixes
18:22:59.970 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

18:22:59.973 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted()
18:22:59.975 [Info] Writing prefixes
18:22:59.982 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshNonHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

18:22:59.984 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted()
18:22:59.987 [Info] Writing prefixes
18:23:00.001 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

18:23:00.003 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
18:23:00.006 [Info] Writing prefixes
18:23:00.008 [Info] Writing postfixes
18:23:00.014 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

18:23:00.016 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
18:23:00.019 [Info] Writing prefixes
18:23:00.042 [Info] Patching float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_GetAdjustedDamage::Postfix(BattleTech.AbstractActor __instance, float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging, Single& __result)

18:23:00.044 [Info] Running ILHook manipulator on float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging)
18:23:00.047 [Info] Writing postfixes
18:23:00.056 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

18:23:00.059 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
18:23:00.061 [Info] Writing prefixes
18:23:00.078 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

18:23:00.080 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:23:00.083 [Info] Writing prefixes
18:23:00.085 [Info] Writing postfixes
18:23:00.093 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

18:23:00.096 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:23:00.099 [Info] Writing prefixes
18:23:00.106 [Info] Patching BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_GetPriorityDesignMask::Postfix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell cell, BattleTech.DesignMaskDef& __result)

18:23:00.108 [Info] Running ILHook manipulator on BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell)
18:23:00.111 [Info] Writing postfixes
18:23:00.116 [Info] Patching AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetAudioSurfaceType::Postfix(BattleTech.MapTerrainDataCell __instance, AudioSwitch_surface_type& __result)

18:23:00.119 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType()
18:23:00.122 [Info] Writing postfixes
18:23:00.127 [Info] Patching string BattleTech.MapTerrainDataCell::GetVFXNameModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetVFXNameModifier::Postfix(BattleTech.MapTerrainDataCell __instance, String& __result)

18:23:00.130 [Info] Running ILHook manipulator on string BattleTech.MapTerrainDataCell::GetVFXNameModifier()
18:23:00.132 [Info] Writing postfixes
18:23:00.137 [Info] Patching void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_LoadData::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)

18:23:00.139 [Info] Running ILHook manipulator on void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)
18:23:00.142 [Info] Writing postfixes
18:23:00.151 [Info] Patching virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_Load::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.154 [Info] Running ILHook manipulator on virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
18:23:00.156 [Info] Transpiling virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
18:23:00.160 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.164 [Info] Writing postfixes
18:23:00.171 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

18:23:00.174 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
18:23:00.176 [Info] Writing postfixes
18:23:00.184 [Info] Patching void BattleTech.Rendering.Trees.TreeContainer::GatherTrees() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TreeContainer_GatherTrees::Postfix(BattleTech.Rendering.Trees.TreeContainer __instance)

18:23:00.187 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.TreeContainer::GatherTrees()
18:23:00.189 [Info] Writing postfixes
18:23:00.203 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionVFX::Postfix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

18:23:00.205 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX()
18:23:00.207 [Info] Writing postfixes
18:23:00.213 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionAudio::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

18:23:00.216 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio()
18:23:00.219 [Info] Writing prefixes
18:23:00.225 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

18:23:00.228 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
18:23:00.231 [Info] Writing postfixes
18:23:00.241 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
2 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

18:23:00.245 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
18:23:00.247 [Info] Writing prefixes
18:23:00.251 [Info] Writing postfixes
18:23:00.258 [Info] Patching void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Postfix(BattleTech.MapMetaDataExporter __instance, UnityEngine.Terrain terrain, bool force)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.262 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
18:23:00.265 [Info] Transpiling void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
18:23:00.269 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.273 [Info] Writing postfixes
18:23:00.282 [Info] Patching BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfo::Prefix(BattleTech.AttackDirector+AttackSequence __instance, BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, Boolean& indirectFire, float dodgedDamage, BattleTech.WeaponHitInfo& __result)

18:23:00.285 [Info] Running ILHook manipulator on BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage)
18:23:00.288 [Info] Writing prefixes
18:23:00.299 [Info] Patching float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.ToHit_GetEvasivePipsModifier::Prefix(BattleTech.ToHit __instance, int evasivePips, BattleTech.Weapon weapon, Single& __result)

18:23:00.301 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon)
18:23:00.304 [Info] Writing prefixes
18:23:00.310 [Info] Patching static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.313 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
18:23:00.315 [Info] Transpiling static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
18:23:00.318 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.324 [Info] Patching static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.327 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
18:23:00.329 [Info] Transpiling static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
18:23:00.332 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.338 [Info] Patching static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.341 [Info] Running ILHook manipulator on static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
18:23:00.343 [Info] Transpiling static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
18:23:00.345 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.351 [Info] Patching BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.353 [Info] Running ILHook manipulator on BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
18:23:00.356 [Info] Transpiling BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
18:23:00.358 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.364 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.367 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
18:23:00.369 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
18:23:00.373 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.380 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.382 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
18:23:00.385 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
18:23:00.388 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.392 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.395 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
18:23:00.398 [Info] Transpiling float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
18:23:00.401 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.409 [Info] Patching static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.412 [Info] Running ILHook manipulator on static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
18:23:00.414 [Info] Transpiling static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
18:23:00.417 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.423 [Info] Patching static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Postfix(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.426 [Info] Running ILHook manipulator on static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
18:23:00.428 [Info] Transpiling static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
18:23:00.430 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.433 [Info] Writing postfixes
18:23:00.438 [Info] Patching static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.446 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
18:23:00.448 [Info] Transpiling static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
18:23:00.454 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.463 [Info] Patching static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.465 [Info] Running ILHook manipulator on static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
18:23:00.467 [Info] Transpiling static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
18:23:00.471 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.479 [Info] Patching virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.482 [Info] Running ILHook manipulator on virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
18:23:00.484 [Info] Transpiling virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
18:23:00.488 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.496 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.498 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:00.500 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:00.503 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.509 [Info] Patching float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.511 [Info] Running ILHook manipulator on float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
18:23:00.514 [Info] Transpiling float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
18:23:00.516 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.524 [Info] Patching float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.527 [Info] Running ILHook manipulator on float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
18:23:00.530 [Info] Transpiling float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
18:23:00.533 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.543 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.545 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:00.548 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:00.553 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.556 [Info] Writing postfixes
18:23:00.566 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.568 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
18:23:00.571 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
18:23:00.575 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.587 [Info] Patching void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.590 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
18:23:00.592 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
18:23:00.596 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.603 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.606 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
18:23:00.608 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
18:23:00.610 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.613 [Info] Writing postfixes
18:23:00.619 [Info] Patching bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Postfix(LOFCache __instance, BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:00.622 [Info] Running ILHook manipulator on bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
18:23:00.624 [Info] Transpiling bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
18:23:00.626 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:00.629 [Info] Writing postfixes
18:23:00.634 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Prefix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Postfix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)

18:23:00.637 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
18:23:00.639 [Info] Writing prefixes
18:23:00.641 [Info] Writing postfixes
18:23:00.648 [Info] Patching static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Prefix(BattleTech.Weapon w)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Postfix()

18:23:00.651 [Info] Running ILHook manipulator on static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
18:23:00.654 [Info] Writing prefixes
18:23:00.656 [Info] Writing postfixes
18:23:00.726 [Info] Patching static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DamageOrderUtility_ApplyDamageToAllLocations::Prefix(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)

18:23:00.729 [Info] Running ILHook manipulator on static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)
18:23:00.731 [Info] Writing prefixes
18:23:00.743 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:00.746 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
18:23:00.749 [Info] Writing postfixes
18:23:00.759 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackSequenceFire::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message, System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> ___sortedWeapons, int[][] ___numberOfShots, BattleTech.WeaponHitInfo?[][] ___weaponHitInfo)

18:23:00.761 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message)
18:23:00.764 [Info] Writing prefixes
18:23:00.778 [Info] Patching float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponHitInfo_ConsolidateInstability::Postfix(BattleTech.WeaponHitInfo& __instance, string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier, Single& __result)

18:23:00.781 [Info] Running ILHook manipulator on float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier)
18:23:00.783 [Info] Writing postfixes
18:23:00.790 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

18:23:00.792 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
18:23:00.795 [Info] Writing prefixes
18:23:00.813 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanUseAmmo_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechLabPanel_MechCanUseAmmo::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.AmmunitionBoxDef ammoBoxDef, Boolean& __result)

18:23:00.815 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
18:23:00.817 [Info] Writing prefixes
18:23:00.820 [Info] Writing postfixes
18:23:00.825 [Info] Patching void BattleTech.AttackDirector+AttackSequence::Cleanup() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_Cleanup::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

18:23:00.828 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::Cleanup()
18:23:00.830 [Info] Writing postfixes
18:23:00.837 [Info] Patching void BattleTech.CombatGameState::RebuildAllLists() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_RebuildAllLists::Postfix(BattleTech.CombatGameState __instance)

18:23:00.839 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::RebuildAllLists()
18:23:00.841 [Info] Writing postfixes
18:23:00.846 [Info] Patching void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Weapon_SetAmmoBoxes::Prefix(BattleTech.Weapon __instance, System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)

18:23:00.849 [Info] Running ILHook manipulator on void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)
18:23:00.851 [Info] Writing prefixes
18:23:00.858 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MechValidationRules_ValidateMechHasAppropriateAmmo::Prefix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)

18:23:00.861 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
18:23:00.863 [Info] Writing prefixes
18:23:00.872 [Info] Patching void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRepresentation_PlayWeaponEffect::Prefix(BattleTech.WeaponRepresentation __instance, BattleTech.WeaponHitInfo hitInfo)

18:23:00.874 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo)
18:23:00.877 [Info] Writing prefixes
18:23:00.881 [Info] Patching void BattleTech.WeaponRepresentation::ResetWeaponEffect() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponRepresentation_ResetWeaponEffect::Postfix(BattleTech.WeaponRepresentation __instance)

18:23:00.884 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::ResetWeaponEffect()
18:23:00.886 [Info] Writing postfixes
18:23:00.890 [Info] Patching static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_ShutdownCombatState::Postfix(BattleTech.CombatGameState __instance)

18:23:00.892 [Info] Running ILHook manipulator on static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI)
18:23:00.894 [Info] Writing postfixes
18:23:00.900 [Info] Patching virtual void MissileEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)

18:23:00.903 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
18:23:00.905 [Info] Writing prefixes
18:23:00.912 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Prefix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo weaponHitInfo)

18:23:00.914 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo)
18:23:00.916 [Info] Writing prefixes
18:23:00.922 [Info] Patching BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_CreateAttackSequence::Postfix(BattleTech.AttackDirector __instance, int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack, BattleTech.AttackDirector+AttackSequence& __result)

18:23:00.925 [Info] Running ILHook manipulator on BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack)
18:23:00.927 [Info] Writing postfixes
18:23:00.934 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

18:23:00.937 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
18:23:00.939 [Info] Writing postfixes
18:23:00.945 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

18:23:00.947 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
18:23:00.949 [Info] Writing postfixes
18:23:00.959 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:00.962 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:00.964 [Info] Writing postfixes
18:23:00.970 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

18:23:00.973 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
18:23:00.975 [Info] Writing postfixes
18:23:00.983 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.PilotableActorRepresentation_ReturnToNeutralFacing::Prefix(BattleTech.PilotableActorRepresentation __instance, bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

18:23:00.986 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
18:23:00.989 [Info] Writing prefixes
18:23:00.993 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)

18:23:00.996 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
18:23:00.998 [Info] Writing prefixes
18:23:01.004 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.006 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
18:23:01.008 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
18:23:01.012 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.019 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.021 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:01.024 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:01.027 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.033 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

18:23:01.036 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
18:23:01.038 [Info] Writing prefixes
18:23:01.047 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

18:23:01.049 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
18:23:01.051 [Info] Writing prefixes
18:23:01.059 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)

18:23:01.062 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable)
18:23:01.064 [Info] Writing prefixes
18:23:01.066 [Info] Writing postfixes
18:23:01.073 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatSelectionHandler_TrySelectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, bool manualSelection)

18:23:01.075 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection)
18:23:01.077 [Info] Writing prefixes
18:23:01.092 [Info] Patching void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUD_OnAttackEnd::Postfix(BattleTech.UI.CombatHUD __instance, MessageCenterMessage message)

18:23:01.095 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message)
18:23:01.098 [Info] Writing postfixes
18:23:01.103 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnitTerrainAttack::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly, bool __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.106 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
18:23:01.109 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
18:23:01.112 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.115 [Info] Writing prefixes
18:23:01.121 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_ShowLineToTarget::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)

18:23:01.123 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)
18:23:01.126 [Info] Writing prefixes
18:23:01.132 [Info] Patching bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.FiringPreviewManager_HasLOS::Postfix(BattleTech.FiringPreviewManager __instance, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies, Boolean& __result)

18:23:01.135 [Info] Running ILHook manipulator on bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies)
18:23:01.137 [Info] Writing postfixes
18:23:01.142 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

18:23:01.145 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
18:23:01.147 [Info] Writing postfixes
18:23:01.152 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)

18:23:01.155 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:01.157 [Info] Writing prefixes
18:23:01.159 [Info] Writing postfixes
18:23:01.170 [Info] Patching virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.SelectionStateCommandTargetSinglePoint_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateCommandTargetSinglePoint __instance, UnityEngine.Vector3 worldPos)

18:23:01.173 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos)
18:23:01.175 [Info] Writing postfixes
18:23:01.183 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDActionButton_ActivateCommandAbility::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string teamGUID, UnityEngine.Vector3 targetPosition)

18:23:01.185 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition)
18:23:01.188 [Info] Writing postfixes
18:23:01.195 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:01.197 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
18:23:01.200 [Info] Writing postfixes
18:23:01.210 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:01.213 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
18:23:01.215 [Info] Writing postfixes
18:23:01.221 [Info] Patching static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.224 [Info] Running ILHook manipulator on static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
18:23:01.226 [Info] Transpiling static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
18:23:01.229 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.237 [Info] Patching void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_CalcAlphaStrikesRem_Patch::Prefix(BattleTech.AbstractActor __instance)

18:23:01.240 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining()
18:23:01.242 [Info] Writing prefixes
18:23:01.255 [Info] Patching void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.257 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
18:23:01.260 [Info] Transpiling void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
18:23:01.264 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.271 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.273 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
18:23:01.275 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
18:23:01.278 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.286 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.288 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
18:23:01.290 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
18:23:01.293 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.300 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.302 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
18:23:01.305 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
18:23:01.308 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.316 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.319 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:01.322 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:01.327 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.339 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.342 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:01.344 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:01.348 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.351 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.360 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.363 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
18:23:01.366 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
18:23:01.369 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.375 [Info] Patching void BattleTech.Weapon::EnableWeapon() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.378 [Info] Running ILHook manipulator on void BattleTech.Weapon::EnableWeapon()
18:23:01.380 [Info] Transpiling void BattleTech.Weapon::EnableWeapon()
18:23:01.383 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.387 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.390 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
18:23:01.392 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
18:23:01.394 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.399 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

18:23:01.402 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
18:23:01.404 [Info] Writing prefixes
18:23:01.407 [Info] Writing postfixes
18:23:01.412 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init0::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, Localize.Text title, bool isPrimary, bool useOnPointer)

18:23:01.414 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer)
18:23:01.416 [Info] Writing postfixes
18:23:01.423 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init1::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)

18:23:01.425 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)
18:23:01.427 [Info] Writing postfixes
18:23:01.441 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

18:23:01.443 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
18:23:01.446 [Info] Writing postfixes
18:23:01.451 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerExit::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

18:23:01.454 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
18:23:01.456 [Info] Writing postfixes
18:23:01.461 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)

18:23:01.463 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
18:23:01.465 [Info] Writing postfixes
18:23:01.470 [Info] Patching void BattleTech.VehicleDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

18:23:01.473 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
18:23:01.475 [Info] Writing postfixes
18:23:01.479 [Info] Patching void BattleTech.TurretDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurretDef_Refresh::Postfix(BattleTech.TurretDef __instance)

18:23:01.482 [Info] Running ILHook manipulator on void BattleTech.TurretDef::Refresh()
18:23:01.484 [Info] Writing postfixes
18:23:01.490 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_SetAllWeaponsArc_Debug::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& weapons, Int32[]& ___MultWeaponShaderVectorInts, Int32[]& ___MultWeaponShaderStrengthInts, Int32& ___MultiWeaponNumberInt)

18:23:01.492 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons)
18:23:01.495 [Info] Writing prefixes
18:23:01.506 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::OnAddToStack() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionStateMove_OnAddToStack_Debug::Prefix(BattleTech.UI.SelectionStateMove __instance)

18:23:01.508 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::OnAddToStack()
18:23:01.511 [Info] Writing prefixes
18:23:01.519 [Info] Patching void BattleTech.CameraControl::UpdatePlayerControl() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Prefix(Boolean& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.522 [Info] Running ILHook manipulator on void BattleTech.CameraControl::UpdatePlayerControl()
18:23:01.524 [Info] Transpiling void BattleTech.CameraControl::UpdatePlayerControl()
18:23:01.533 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.537 [Info] Writing prefixes
18:23:01.556 [Info] Patching void BattleTech.UI.CombatSelectionHandler::ProcessInput() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.558 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::ProcessInput()
18:23:01.560 [Info] Transpiling void BattleTech.UI.CombatSelectionHandler::ProcessInput()
18:23:01.569 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.579 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

18:23:01.582 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
18:23:01.584 [Info] Writing postfixes
18:23:01.593 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
3 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

18:23:01.595 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
18:23:01.598 [Info] Writing prefixes
18:23:01.600 [Info] Writing postfixes
18:23:01.608 [Info] Patching void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_SortSelectedWeapons::Postfix(BattleTech.AttackDirector+AttackSequence __instance, System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___sortedWeapons)

18:23:01.610 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons()
18:23:01.612 [Info] Writing postfixes
18:23:01.621 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)

18:23:01.624 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
18:23:01.626 [Info] Writing postfixes
18:23:01.640 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)

18:23:01.643 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList()
18:23:01.645 [Info] Writing prefixes
18:23:01.647 [Info] Writing postfixes
18:23:01.769 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:01.772 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:01.775 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:01.778 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.787 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:01.790 [Info] Writing postfixes
18:23:01.799 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

18:23:01.802 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
18:23:01.804 [Info] Writing postfixes
18:23:01.814 [Info] Patching virtual void BattleTech.UI.UIModule::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.UIModule_OnAddedToHierarchy::Postfix(BattleTech.UI.UIModule __instance)

18:23:01.816 [Info] Running ILHook manipulator on virtual void BattleTech.UI.UIModule::OnAddedToHierarchy()
18:23:01.818 [Info] Writing postfixes
18:23:01.823 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

18:23:01.826 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
18:23:01.828 [Info] Writing postfixes
18:23:01.838 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

18:23:01.840 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
18:23:01.843 [Info] Writing prefixes
18:23:01.850 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

18:23:01.853 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
18:23:01.855 [Info] Writing prefixes
18:23:01.862 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

18:23:01.864 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
18:23:01.866 [Info] Writing prefixes
18:23:01.868 [Info] Writing postfixes
18:23:01.876 [Info] Patching uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WwiseManager_PostEventByName::Prefix(WwiseManager __instance, string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)

18:23:01.879 [Info] Running ILHook manipulator on uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
18:23:01.881 [Info] Writing prefixes
18:23:01.888 [Info] Patching float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AttackSequence_GetRandomNumberCycle::Prefix(BattleTech.AttackDirector+AttackSequence __instance, int groupIndex, int weaponIndex, Int32[][]& ___randomCacheValuesUsed, Single[][][]& ___randomCache)

18:23:01.891 [Info] Running ILHook manipulator on float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex)
18:23:01.893 [Info] Writing prefixes
18:23:01.901 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

18:23:01.904 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:01.906 [Info] Writing prefixes
18:23:01.908 [Info] Writing postfixes
18:23:01.922 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatString::Prefix(BattleTech.SimGameState __instance, string id, string type, bool damaged)

18:23:01.925 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged)
18:23:01.927 [Info] Writing prefixes
18:23:01.933 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatType::Prefix(BattleTech.SimGameState __instance, string id, Type type, bool damaged)

18:23:01.936 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged)
18:23:01.938 [Info] Writing prefixes
18:23:01.945 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Prefix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, string text, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Postfix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, String& __state)

18:23:01.947 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
18:23:01.950 [Info] Writing prefixes
18:23:01.952 [Info] Writing postfixes
18:23:01.958 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)

18:23:01.961 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
18:23:01.963 [Info] Writing prefixes
18:23:01.965 [Info] Writing postfixes
18:23:01.970 [Info] Patching System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Shop_GetAllInventoryShopItems::Postfix(BattleTech.Shop __instance, System.Collections.Generic.List`1[[BattleTech.ShopDefItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:01.973 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems()
18:23:01.975 [Info] Writing postfixes
18:23:01.985 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SG_Shop_Screen_AddShopInventory::Prefix(BattleTech.UI.SG_Shop_Screen __instance, BattleTech.Shop shop, bool ___isInBuyingState, BattleTech.Data.DataManager ___dm)
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

18:23:01.988 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
18:23:01.990 [Info] Writing prefixes
18:23:01.993 [Info] Writing postfixes
18:23:01.999 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
1 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)

18:23:02.002 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
18:23:02.005 [Info] Writing prefixes
18:23:02.008 [Info] Writing postfixes
18:23:02.016 [Info] Patching virtual void BattleTech.AmmunitionBox::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AmmunitionBox_InitStats::Postfix(BattleTech.AmmunitionBox __instance)

18:23:02.019 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::InitStats()
18:23:02.022 [Info] Writing postfixes
18:23:02.027 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)
* static void CustAmmoCategories.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance)

18:23:02.030 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
18:23:02.032 [Info] Writing prefixes
18:23:02.037 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

18:23:02.039 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
18:23:02.041 [Info] Writing prefixes
18:23:02.048 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceMechEquipmentList_SetLoadout::Prefix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.MechDef& ___activeMech, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___allComponents, BattleTech.Data.DataManager ___dataManager, BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location, BattleTech.UI.UIColor& __state)
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText headerLabel)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.051 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
18:23:02.053 [Info] Transpiling void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
18:23:02.056 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.058 [Info] Writing prefixes
18:23:02.061 [Info] Writing postfixes
18:23:02.067 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)
* static void CustAmmoCategories.SharedVisibilityCache_RebuildCache::Postfix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.TMProWrapper.LocalizableText& ___nameText)

18:23:02.069 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
18:23:02.072 [Info] Writing postfixes
18:23:02.085 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
3 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:23:02.088 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:02.090 [Info] Writing prefixes
18:23:02.092 [Info] Writing postfixes
18:23:02.122 [Info] Patching BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_AddHistoryEvent::Postfix(BattleTech.StatCollection __instance, string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)

18:23:02.125 [Info] Running ILHook manipulator on BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)
18:23:02.127 [Info] Writing postfixes
18:23:02.133 [Info] Patching bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_RemoveHistoryEvent::Postfix(BattleTech.StatCollection __instance, BattleTech.Statistic stat, int eventUID, bool skipLogging)

18:23:02.135 [Info] Running ILHook manipulator on bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging)
18:23:02.138 [Info] Writing postfixes
18:23:02.143 [Info] Patching void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
1 postfixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)

18:23:02.146 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
18:23:02.148 [Info] Writing prefixes
18:23:02.150 [Info] Writing postfixes
18:23:02.155 [Info] Patching BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAttackDirection::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.AttackDirection& __result)

18:23:02.157 [Info] Running ILHook manipulator on BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target)
18:23:02.159 [Info] Writing postfixes
18:23:02.164 [Info] Patching virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SelectionStateFire_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

18:23:02.166 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot()
18:23:02.168 [Info] Writing postfixes
18:23:02.173 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)
* static void CustAmmoCategories.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

18:23:02.175 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
18:23:02.178 [Info] Writing postfixes
18:23:02.183 [Info] Patching void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Briefing_InitializeContractComplete::Prefix(BattleTech.UI.Briefing __instance, MessageCenterMessage message)

18:23:02.186 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message)
18:23:02.188 [Info] Writing prefixes
18:23:02.195 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

18:23:02.196 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
18:23:02.199 [Info] Writing postfixes
18:23:02.202 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_InitData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)

18:23:02.205 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)
18:23:02.208 [Info] Writing postfixes
18:23:02.214 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)

18:23:02.216 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
18:23:02.218 [Info] Writing postfixes
18:23:02.225 [Info] Patching virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_EjectPilot::Postfix(BattleTech.AbstractActor __instance)

18:23:02.228 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent)
18:23:02.230 [Info] Writing postfixes
18:23:02.235 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

18:23:02.238 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
18:23:02.240 [Info] Writing prefixes
18:23:02.243 [Info] Writing postfixes
18:23:02.249 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledMech::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

18:23:02.251 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech()
18:23:02.254 [Info] Writing prefixes
18:23:02.258 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledVehicle::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

18:23:02.261 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle()
18:23:02.263 [Info] Writing prefixes
18:23:02.272 [Info] Patching static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Prefix(BattleTech.SimGameResultAction action, object additionalObject)
1 postfixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Postfix(BattleTech.SimGameResultAction action, object additionalObject)

18:23:02.274 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject)
18:23:02.277 [Info] Writing prefixes
18:23:02.279 [Info] Writing postfixes
18:23:02.334 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

18:23:02.337 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
18:23:02.339 [Info] Writing postfixes
18:23:02.348 [Info] Patching bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameEventTracker_CheckRoll::Postfix(BattleTech.SimGameEventTracker __instance, bool incrementOnFailure, float randomRoll, Boolean& __result)

18:23:02.350 [Info] Running ILHook manipulator on bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll)
18:23:02.353 [Info] Writing postfixes
18:23:02.359 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)

18:23:02.361 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
18:23:02.364 [Info] Writing postfixes
18:23:02.372 [Info] Patching void BattleTech.SGTravelManager::HandleNextTravelStep() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.374 [Info] Running ILHook manipulator on void BattleTech.SGTravelManager::HandleNextTravelStep()
18:23:02.377 [Info] Transpiling void BattleTech.SGTravelManager::HandleNextTravelStep()
18:23:02.381 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.389 [Info] Patching void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.391 [Info] Running ILHook manipulator on void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
18:23:02.394 [Info] Transpiling void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
18:23:02.398 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.410 [Info] Patching virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_Init::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.UI.CombatHUD HUD)

18:23:02.413 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD)
18:23:02.416 [Info] Writing postfixes
18:23:02.423 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

18:23:02.426 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
18:23:02.429 [Info] Writing postfixes
18:23:02.437 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
3 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

18:23:02.440 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:23:02.443 [Info] Writing prefixes
18:23:02.446 [Info] Writing postfixes
18:23:02.459 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)
* static void CustAmmoCategories.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance, BattleTech.Data.LoadRequest batch)

18:23:02.461 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
18:23:02.464 [Info] Writing postfixes
18:23:02.468 [Info] Patching void BattleTech.Data.SVGCache::Clear() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SVGCache_Clear::Prefix(BattleTech.Data.SVGCache __instance)

18:23:02.471 [Info] Running ILHook manipulator on void BattleTech.Data.SVGCache::Clear()
18:23:02.473 [Info] Writing prefixes
18:23:02.479 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)

18:23:02.481 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
18:23:02.483 [Info] Writing postfixes
18:23:02.492 [Info] Patching void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_SetCompanyCrest::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState ___simState)

18:23:02.494 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId)
18:23:02.497 [Info] Writing postfixes
18:23:02.501 [Info] Patching void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_Init::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState simGame)

18:23:02.503 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame)
18:23:02.506 [Info] Writing postfixes
18:23:02.511 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

18:23:02.513 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
18:23:02.516 [Info] Writing postfixes
18:23:02.587 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

18:23:02.590 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
18:23:02.592 [Info] Writing postfixes
18:23:02.601 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

18:23:02.603 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
18:23:02.606 [Info] Writing postfixes
18:23:02.613 [Info] Patching UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.EncounterLayerData_GetEncounterBoundaryTexture::Postfix(BattleTech.EncounterLayerData __instance, UnityEngine.Texture2D& __result)

18:23:02.615 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture()
18:23:02.617 [Info] Writing postfixes
18:23:02.628 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

18:23:02.630 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
18:23:02.633 [Info] Writing postfixes
18:23:02.641 [Info] Patching bool BattleTech.Weapon::get_CanFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_CanFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

18:23:02.643 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_CanFire()
18:23:02.646 [Info] Writing postfixes
18:23:02.652 [Info] Patching void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DefendXUnitsObjective_Tick::Prefix(BattleTech.Designed.DefendXUnitsObjective __instance, MessageCenterMessage message)

18:23:02.655 [Info] Running ILHook manipulator on void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message)
18:23:02.657 [Info] Writing prefixes
18:23:02.663 [Info] Patching void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.TimerObjective_AdvanceTimer::Prefix(BattleTech.Designed.TimerObjective __instance, MessageCenterMessage message)

18:23:02.665 [Info] Running ILHook manipulator on void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message)
18:23:02.668 [Info] Writing prefixes
18:23:02.674 [Info] Patching void BattleTech.TurnDirector::FinishBeginRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.TurnDirector_FinishBeginRound::Postfix(BattleTech.TurnDirector __instance)

18:23:02.677 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::FinishBeginRound()
18:23:02.679 [Info] Writing postfixes
18:23:02.687 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

18:23:02.690 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
18:23:02.692 [Info] Writing postfixes
18:23:02.703 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CombatHUDWeaponSlot_UpdateTooltipStrings::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target)

18:23:02.706 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target)
18:23:02.708 [Info] Writing prefixes
18:23:02.715 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)

18:23:02.717 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:02.720 [Info] Writing prefixes
18:23:02.722 [Info] Writing postfixes
18:23:02.730 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)

18:23:02.733 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
18:23:02.735 [Info] Writing prefixes
18:23:02.737 [Info] Writing postfixes
18:23:02.744 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

18:23:02.747 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
18:23:02.749 [Info] Writing prefixes
18:23:02.761 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.764 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:02.766 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:02.768 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.771 [Info] Writing postfixes
18:23:02.777 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.780 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:23:02.782 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:23:02.785 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.788 [Info] Writing postfixes
18:23:02.797 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.800 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:02.803 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:02.806 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.808 [Info] Writing postfixes
18:23:02.814 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)

18:23:02.817 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:23:02.819 [Info] Writing prefixes
18:23:02.827 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.JammingRealizer::Postfix(BattleTech.Weapon __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:02.829 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
18:23:02.831 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
18:23:02.834 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:02.836 [Info] Writing postfixes
18:23:02.841 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:02.844 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:02.847 [Info] Writing prefixes
18:23:02.849 [Info] Writing postfixes
18:23:02.858 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Prefix(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Postfix(BattleTech.Weapon __instance, BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)

18:23:02.861 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
18:23:02.863 [Info] Writing prefixes
18:23:02.866 [Info] Writing postfixes
18:23:02.873 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Vehicle::Postfix(BattleTech.Weapon __instance, BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)

18:23:02.876 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)
18:23:02.878 [Info] Writing postfixes
18:23:02.884 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Turret::Postfix(BattleTech.Weapon __instance, BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)

18:23:02.886 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)
18:23:02.889 [Info] Writing postfixes
18:23:02.894 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

18:23:02.897 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
18:23:02.899 [Info] Writing postfixes
18:23:02.903 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_DisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon value)

18:23:02.906 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value)
18:23:02.908 [Info] Writing postfixes
18:23:02.914 [Info] Patching void BattleTech.AbstractActor::InitAbilities(bool ModifyStats) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_InitAbilities::Postfix(BattleTech.AbstractActor __instance)

18:23:02.916 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbilities(bool ModifyStats)
18:23:02.918 [Info] Writing postfixes
18:23:02.928 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

18:23:02.930 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
18:23:02.933 [Info] Writing prefixes
18:23:02.935 [Info] Writing postfixes
18:23:02.941 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayPreFire::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

18:23:02.944 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
18:23:02.946 [Info] Writing prefixes
18:23:02.949 [Info] Writing postfixes
18:23:02.955 [Info] Patching virtual void WeaponEffect::PlayImpact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpact::Prefix(WeaponEffect __instance)

18:23:02.957 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpact()
18:23:02.960 [Info] Writing prefixes
18:23:02.968 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

18:23:02.970 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
18:23:02.972 [Info] Writing prefixes
18:23:02.977 [Info] Patching virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Prefix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Postfix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)

18:23:02.979 [Info] Running ILHook manipulator on virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage)
18:23:02.982 [Info] Writing prefixes
18:23:02.984 [Info] Writing postfixes
18:23:02.989 [Info] Patching virtual void MissileEffect::PlayProjectile() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Prefix(MissileEffect __instance)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Postfix(MissileEffect __instance, int ___hitIndex)

18:23:02.991 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
18:23:02.994 [Info] Writing prefixes
18:23:02.996 [Info] Writing postfixes
18:23:03.002 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)

18:23:03.004 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
18:23:03.006 [Info] Writing prefixes
18:23:03.014 [Info] Patching void MissileEffect::GenerateMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateMissilePath::Prefix(MissileEffect __instance)

18:23:03.016 [Info] Running ILHook manipulator on void MissileEffect::GenerateMissilePath()
18:23:03.018 [Info] Writing prefixes
18:23:03.026 [Info] Patching void MissileEffect::GenerateIndirectMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateIndirectMissilePath::Prefix(MissileEffect __instance)

18:23:03.028 [Info] Running ILHook manipulator on void MissileEffect::GenerateIndirectMissilePath()
18:23:03.031 [Info] Writing prefixes
18:23:03.039 [Info] Patching virtual void MissileEffect::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_Update::Postfix(MissileEffect __instance)

18:23:03.042 [Info] Running ILHook manipulator on virtual void MissileEffect::Update()
18:23:03.044 [Info] Writing postfixes
18:23:03.050 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfoAMS::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

18:23:03.053 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo()
18:23:03.055 [Info] Writing postfixes
18:23:03.061 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:03.064 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:03.066 [Info] Writing prefixes
18:23:03.069 [Info] Writing postfixes
18:23:03.076 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Postfix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo?[][] allHitInfo)

18:23:03.079 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo)
18:23:03.081 [Info] Writing postfixes
18:23:03.088 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

18:23:03.091 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
18:23:03.093 [Info] Writing prefixes
18:23:03.095 [Info] Writing postfixes
18:23:03.112 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

18:23:03.115 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
18:23:03.117 [Info] Writing prefixes
18:23:03.128 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)

18:23:03.131 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
18:23:03.134 [Info] Writing prefixes
18:23:03.141 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)

18:23:03.144 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
18:23:03.146 [Info] Writing postfixes
18:23:03.153 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.ClusteredShotRandomCacheEnabler::Prefix(BattleTech.AttackDirector+AttackSequence __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:03.156 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
18:23:03.158 [Info] Transpiling void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
18:23:03.160 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:03.163 [Info] Writing prefixes
18:23:03.171 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:23:03.173 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:03.176 [Info] Writing postfixes
18:23:03.183 [Info] Patching static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AmmoCategoryEnumeration_GetAmmoCategoryByName::Postfix(string name, BattleTech.AmmoCategoryValue& __result)

18:23:03.185 [Info] Running ILHook manipulator on static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name)
18:23:03.188 [Info] Writing postfixes
18:23:03.193 [Info] Patching virtual bool BattleTech.Mech::get_CanSprint() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_CanSprint::Postfix(BattleTech.Mech __instance, Boolean& __result)

18:23:03.195 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_CanSprint()
18:23:03.198 [Info] Writing postfixes
18:23:03.202 [Info] Patching void BattleTech.UI.CombatHUD::HandleMissionComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUD_HandleMissionComplete::Prefix(BattleTech.UI.CombatHUD __instance)

18:23:03.205 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::HandleMissionComplete()
18:23:03.207 [Info] Writing prefixes
18:23:03.211 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)

18:23:03.214 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
18:23:03.216 [Info] Writing postfixes
18:23:03.221 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)

18:23:03.223 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
18:23:03.225 [Info] Writing prefixes
18:23:03.232 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
* static void CustAmmoCategoriesPatches.WeaponRepresentation_InitAMS::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

18:23:03.234 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
18:23:03.237 [Info] Writing postfixes
18:23:03.245 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

18:23:03.248 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
18:23:03.250 [Info] Writing prefixes
18:23:03.256 [Info] Patching int BattleTech.Mech::get_AdjustedHeatsinkCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_HeatSinkCapacity::Postfix(BattleTech.Mech __instance, Int32& __result)

18:23:03.259 [Info] Running ILHook manipulator on int BattleTech.Mech::get_AdjustedHeatsinkCapacity()
18:23:03.261 [Info] Writing postfixes
18:23:03.268 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

18:23:03.270 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
18:23:03.273 [Info] Writing prefixes
18:23:03.280 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_OnNewRound::Postfix(BattleTech.Mech __instance, int round)

18:23:03.282 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round)
18:23:03.284 [Info] Writing postfixes
18:23:03.288 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)

18:23:03.291 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
18:23:03.293 [Info] Writing prefixes
18:23:03.298 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)

18:23:03.300 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
18:23:03.303 [Info] Writing prefixes
18:23:03.307 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)

18:23:03.310 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
18:23:03.312 [Info] Writing prefixes
18:23:03.317 [Info] Patching void BattleTech.Mech::AddSprintHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddSprintHeat::Prefix(BattleTech.Mech __instance)

18:23:03.320 [Info] Running ILHook manipulator on void BattleTech.Mech::AddSprintHeat()
18:23:03.323 [Info] Writing prefixes
18:23:03.327 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)

18:23:03.330 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
18:23:03.332 [Info] Writing prefixes
18:23:03.336 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)

18:23:03.339 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
18:23:03.342 [Info] Writing prefixes
18:23:03.346 [Info] Patching void BattleTech.Mech::AddEnvironmentHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEnvironmentHeat::Prefix(BattleTech.Mech __instance)

18:23:03.348 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEnvironmentHeat()
18:23:03.351 [Info] Writing prefixes
18:23:03.356 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:03.359 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
18:23:03.361 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
18:23:03.364 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:03.370 [Info] Patching BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.Mech_GetHeatSequence::Prefix(BattleTech.Mech __instance, int rootSequenceGUID, Boolean& performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)

18:23:03.372 [Info] Running ILHook manipulator on BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)
18:23:03.375 [Info] Writing prefixes
18:23:03.380 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)

18:23:03.382 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
18:23:03.384 [Info] Writing postfixes
18:23:03.390 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForVisibility::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

18:23:03.393 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility()
18:23:03.395 [Info] Writing postfixes
18:23:03.400 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForTarget::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

18:23:03.402 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget()
18:23:03.405 [Info] Writing postfixes
18:23:03.410 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:03.413 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
18:23:03.415 [Info] Writing postfixes
18:23:03.423 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
3 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:03.426 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:03.428 [Info] Writing prefixes
18:23:03.431 [Info] Writing postfixes
18:23:03.440 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactWD::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

18:23:03.442 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
18:23:03.444 [Info] Writing prefixes
18:23:03.447 [Info] Writing postfixes
18:23:03.462 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSticky() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:03.464 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSticky()
18:23:03.467 [Info] Writing prefixes
18:23:03.469 [Info] Writing postfixes
18:23:03.474 [Info] Patching virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Init::Prefix(BattleTech.AbstractActor __instance)

18:23:03.477 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells)
18:23:03.480 [Info] Writing prefixes
18:23:03.487 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)

18:23:03.490 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
18:23:03.493 [Info] Writing prefixes
18:23:03.576 [Info] Patching virtual void BattleTech.Turret::InitStats() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Turret __instance)
* static void CustAmmoCategoriesPatches.Turret_InitStats::Prefix(BattleTech.Turret __instance)

18:23:03.578 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
18:23:03.581 [Info] Writing prefixes
18:23:03.593 [Info] Patching void BattleTech.AbstractActor::ReapplyDesignMasks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_ReapplyDesignMasks::Prefix(BattleTech.AbstractActor __instance)

18:23:03.595 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ReapplyDesignMasks()
18:23:03.598 [Info] Writing prefixes
18:23:03.604 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

18:23:03.606 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
18:23:03.609 [Info] Writing prefixes
18:23:03.611 [Info] Writing postfixes
18:23:03.620 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

18:23:03.622 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos)
18:23:03.625 [Info] Writing prefixes
18:23:03.628 [Info] Writing postfixes
18:23:03.635 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

18:23:03.638 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
18:23:03.640 [Info] Writing prefixes
18:23:03.643 [Info] Writing postfixes
18:23:03.649 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

18:23:03.652 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
18:23:03.654 [Info] Writing prefixes
18:23:03.657 [Info] Writing postfixes
18:23:03.664 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

18:23:03.666 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
18:23:03.668 [Info] Writing prefixes
18:23:03.671 [Info] Writing postfixes
18:23:03.678 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

18:23:03.680 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
18:23:03.683 [Info] Writing prefixes
18:23:03.685 [Info] Writing postfixes
18:23:03.691 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

18:23:03.694 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
18:23:03.696 [Info] Writing prefixes
18:23:03.698 [Info] Writing postfixes
18:23:03.704 [Info] Patching void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID)
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Postfix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef mask, int stackItemUID)

18:23:03.707 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID)
18:23:03.709 [Info] Writing prefixes
18:23:03.711 [Info] Writing postfixes
18:23:03.719 [Info] Patching virtual void BattleTech.DesignMaskDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.DesignMaskDef_fromJSON::Prefix(BattleTech.VehicleChassisDef __instance, String& json)

18:23:03.722 [Info] Running ILHook manipulator on virtual void BattleTech.DesignMaskDef::FromJSON(string json)
18:23:03.724 [Info] Writing prefixes
18:23:03.729 [Info] Patching void BattleTech.TurnDirector::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_Update::Prefix(BattleTech.TurnDirector __instance, bool ___needsToEndRound)

18:23:03.731 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::Update()
18:23:03.733 [Info] Writing prefixes
18:23:03.741 [Info] Patching bool BattleTech.TurnDirector::CanAdvanceTurns() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.TurnDirector_CanAdvanceTurns::Postfix(BattleTech.TurnDirector __instance, Boolean& __result)

18:23:03.743 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::CanAdvanceTurns()
18:23:03.746 [Info] Writing postfixes
18:23:03.754 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

18:23:03.756 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
18:23:03.759 [Info] Writing postfixes
18:23:03.784 [Info] Patching void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ElementManager_RefreshCommandBufferInt::Prefix(BattleTech.Rendering.UI.ElementManager __instance, UnityEngine.Rendering.CommandBuffer& ____uiCommandBuffer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIBleep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___bleepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UISweep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.BTUIDecal, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepDecalContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UICreep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___creepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIMovementDot, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___dotContainer, UnityEngine.Matrix4x4[]& ___normalTrs, UnityEngine.Matrix4x4[]& ___forestTrs, UnityEngine.Matrix4x4[]& ___waterTrs, UnityEngine.Matrix4x4[]& ___roughTrs, UnityEngine.Matrix4x4[]& ___roadTrs, UnityEngine.Matrix4x4[]& ___specialTrs, UnityEngine.Matrix4x4[]& ___dangerousTrs, Int32& ___log100Count)

18:23:03.786 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt()
18:23:03.788 [Info] Writing prefixes
18:23:03.808 [Info] Patching void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_FireShells::Postfix(MissileEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, bool isIndirect)

18:23:03.811 [Info] Running ILHook manipulator on void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect)
18:23:03.813 [Info] Writing postfixes
18:23:03.829 [Info] Patching void WeaponEffect::PublishWeaponCompleteMessage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Postfix(WeaponEffect __instance)

18:23:03.833 [Info] Running ILHook manipulator on void WeaponEffect::PublishWeaponCompleteMessage()
18:23:03.837 [Info] Writing prefixes
18:23:03.840 [Info] Writing postfixes
18:23:03.848 [Info] Patching void MissileLauncherEffect::SetupMissiles() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileLauncherEffect_SetupMissiles::Postfix(MissileLauncherEffect __instance, bool ___isIndirect)

18:23:03.851 [Info] Running ILHook manipulator on void MissileLauncherEffect::SetupMissiles()
18:23:03.854 [Info] Writing postfixes
18:23:03.861 [Info] Patching virtual void MissileLauncherEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_Update::Prefix(MissileLauncherEffect __instance)

18:23:03.864 [Info] Running ILHook manipulator on virtual void MissileLauncherEffect::Update()
18:23:03.866 [Info] Writing prefixes
18:23:03.872 [Info] Patching virtual void WeaponEffect::InitProjectile() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_InitProjectile::Postfix(WeaponEffect __instance)

18:23:03.875 [Info] Running ILHook manipulator on virtual void WeaponEffect::InitProjectile()
18:23:03.877 [Info] Writing postfixes
18:23:03.885 [Info] Patching void MissileLauncherEffect::ClearMissiles() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_ClearMissiles::Prefix(MissileLauncherEffect __instance)

18:23:03.888 [Info] Running ILHook manipulator on void MissileLauncherEffect::ClearMissiles()
18:23:03.890 [Info] Writing prefixes
18:23:03.896 [Info] Patching virtual void MissileEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_OnComplete::Postfix(MissileEffect __instance)

18:23:03.898 [Info] Running ILHook manipulator on virtual void MissileEffect::OnComplete()
18:23:03.900 [Info] Writing postfixes
18:23:03.905 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategoriesPatches.MissileEffect_DestroyFlimsyObjects::Prefix(MissileEffect __instance, int ___hitIndex)

18:23:03.907 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
18:23:03.910 [Info] Writing prefixes
18:23:03.916 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)
* static void CustAmmoCategoriesPatches.MissileEffect_PlayImpact::Postfix(MissileEffect __instance, int ___hitIndex)

18:23:03.918 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
18:23:03.921 [Info] Writing postfixes
18:23:03.929 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)
* static bool CustAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName, int ___hitIndex, AkGameObj ___projectileAudioObject, UnityEngine.Vector3 ___endPos, UnityEngine.Vector3 ___preFireEndPos, bool ___isSRM)

18:23:03.932 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
18:23:03.934 [Info] Writing prefixes
18:23:03.942 [Info] Patching void MissileLauncherEffect::FireNextMissile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_FireNextMissile::Prefix(MissileLauncherEffect __instance, int ___hitIndex, Int32& ___emitterIndex, AkGameObj ___parentAudioObject)

18:23:03.944 [Info] Running ILHook manipulator on void MissileLauncherEffect::FireNextMissile()
18:23:03.947 [Info] Writing prefixes
18:23:03.952 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

18:23:03.955 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
18:23:03.957 [Info] Writing postfixes
18:23:03.962 [Info] Patching void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_CompleteOrders::Prefix(BattleTech.ActorMovementSequence __instance, System.Collections.Generic.List`1[[BattleTech.WayPoint, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& waypoints, UnityEngine.Vector3& finalHeading, bool sprinting, BattleTech.ICombatant& meleeTarget)

18:23:03.965 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget)
18:23:03.967 [Info] Writing prefixes
18:23:03.977 [Info] Patching void BattleTech.ActorMovementSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Update::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:03.979 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Update()
18:23:03.982 [Info] Writing postfixes
18:23:03.992 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:03.994 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
18:23:03.997 [Info] Writing postfixes
18:23:04.007 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:04.009 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
18:23:04.012 [Info] Writing postfixes
18:23:04.018 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

18:23:04.020 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
18:23:04.023 [Info] Writing prefixes
18:23:04.028 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:04.031 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
18:23:04.033 [Info] Writing postfixes
18:23:04.038 [Info] Patching virtual void BattleTech.MechJumpSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechJumpSequence_CompleteOrders::Postfix(BattleTech.MechJumpSequence __instance)

18:23:04.041 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::CompleteOrders()
18:23:04.043 [Info] Writing postfixes
18:23:04.048 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

18:23:04.051 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
18:23:04.053 [Info] Writing postfixes
18:23:04.058 [Info] Patching void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.SGEventPanel_Init::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameState sim)

18:23:04.060 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim)
18:23:04.063 [Info] Writing prefixes
18:23:04.069 [Info] Patching void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_OnOptionSelected::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameEventOption option)

18:23:04.071 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option)
18:23:04.074 [Info] Writing prefixes
18:23:04.080 [Info] Patching void BattleTech.UI.SGEventPanel::Dismiss() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_Dismiss::Prefix(BattleTech.UI.SGEventPanel __instance)

18:23:04.082 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Dismiss()
18:23:04.084 [Info] Writing prefixes
18:23:04.089 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:04.091 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
18:23:04.094 [Info] Writing postfixes
18:23:04.100 [Info] Patching virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDInfoSidePanel_Update::Prefix(BattleTech.UI.CombatHUDInfoSidePanel __instance, Boolean& ___shownForSingleFrame)

18:23:04.103 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update()
18:23:04.105 [Info] Writing prefixes
18:23:04.112 [Info] Patching void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_OnActorHovered::Postfix(BattleTech.UI.CombatHUD __instance)

18:23:04.114 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message)
18:23:04.117 [Info] Writing postfixes
18:23:04.121 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedHeatInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

18:23:04.123 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo()
18:23:04.126 [Info] Writing postfixes
18:23:04.131 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedStabilityInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

18:23:04.133 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo()
18:23:04.135 [Info] Writing postfixes
18:23:04.143 [Info] Patching void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MoveStatusPreview_DisplayPreviewStatus::Prefix(BattleTech.UI.MoveStatusPreview __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)

18:23:04.146 [Info] Running ILHook manipulator on void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)
18:23:04.149 [Info] Writing prefixes
18:23:04.159 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:04.162 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target)
18:23:04.165 [Info] Writing postfixes
18:23:04.171 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

18:23:04.174 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
18:23:04.177 [Info] Writing postfixes
18:23:04.186 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

18:23:04.188 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
18:23:04.191 [Info] Writing postfixes
18:23:04.196 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

18:23:04.199 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
18:23:04.201 [Info] Writing postfixes
18:23:04.207 [Info] Patching virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_DependenciesLoaded::Prefix(BattleTech.WeaponDef __instance, uint loadWeight, Boolean& __result, BattleTech.Data.DataManager ___dataManager)

18:23:04.209 [Info] Running ILHook manipulator on virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight)
18:23:04.212 [Info] Writing prefixes
18:23:04.220 [Info] Patching virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_GatherDependencies::Prefix(BattleTech.WeaponDef __instance, BattleTech.Data.DataManager& ___dataManager, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:04.222 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:04.225 [Info] Writing prefixes
18:23:04.231 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

18:23:04.234 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
18:23:04.237 [Info] Writing prefixes
18:23:04.239 [Info] Writing postfixes
18:23:04.243 [Info] Patching int BattleTech.Weapon::get_CurrentAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_CurrentAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

18:23:04.246 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_CurrentAmmo()
18:23:04.248 [Info] Writing prefixes
18:23:04.254 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:04.257 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:04.259 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:04.262 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:04.265 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:04.268 [Info] Writing postfixes
18:23:04.276 [Info] Patching bool BattleTech.AbstractActor::get_IsTargetMarked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_IsTargetMarked::Prefix(BattleTech.AbstractActor __instance, Boolean& __result)

18:23:04.279 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_IsTargetMarked()
18:23:04.282 [Info] Writing prefixes
18:23:04.288 [Info] Patching Localize.Text BattleTech.MechComponent::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_UIName::Postfix(BattleTech.MechComponent __instance, Localize.Text& __result)

18:23:04.290 [Info] Running ILHook manipulator on Localize.Text BattleTech.MechComponent::get_UIName()
18:23:04.293 [Info] Writing postfixes
18:23:04.391 [Info] Patching float BattleTech.Weapon::get_DamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_DamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.394 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_DamagePerShot()
18:23:04.397 [Info] Writing postfixes
18:23:04.405 [Info] Patching void BattleTech.Weapon::ResetWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ResetWeapon::Postfix(BattleTech.Weapon __instance)

18:23:04.408 [Info] Running ILHook manipulator on void BattleTech.Weapon::ResetWeapon()
18:23:04.411 [Info] Writing postfixes
18:23:04.419 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)

18:23:04.422 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
18:23:04.424 [Info] Writing postfixes
18:23:04.431 [Info] Patching int BattleTech.Weapon::get_InternalAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_InternalAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

18:23:04.434 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_InternalAmmo()
18:23:04.436 [Info] Writing prefixes
18:23:04.443 [Info] Patching float BattleTech.Weapon::get_StructureDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_StructureDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.446 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_StructureDamagePerShot()
18:23:04.449 [Info] Writing postfixes
18:23:04.455 [Info] Patching float BattleTech.Weapon::get_HeatDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.458 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatDamagePerShot()
18:23:04.460 [Info] Writing postfixes
18:23:04.466 [Info] Patching int BattleTech.Weapon::get_ShotsWhenFired() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShotsWhenFired::Postfix(BattleTech.Weapon __instance, Int32& __result)

18:23:04.469 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ShotsWhenFired()
18:23:04.472 [Info] Writing postfixes
18:23:04.480 [Info] Patching int BattleTech.Weapon::get_ProjectilesPerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ProjectilesPerShot::Postfix(BattleTech.Weapon __instance, Int32& __result)

18:23:04.482 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ProjectilesPerShot()
18:23:04.485 [Info] Writing postfixes
18:23:04.492 [Info] Patching float BattleTech.Weapon::get_ClusteringModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ClusteringModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.495 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ClusteringModifier()
18:23:04.498 [Info] Writing postfixes
18:23:04.503 [Info] Patching float BattleTech.Weapon::get_CriticalChanceMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_CriticalChanceMultiplier::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.506 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_CriticalChanceMultiplier()
18:23:04.509 [Info] Writing postfixes
18:23:04.515 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

18:23:04.517 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
18:23:04.520 [Info] Writing postfixes
18:23:04.526 [Info] Patching float BattleTech.Weapon::get_AccuracyModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AccuracyModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.530 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_AccuracyModifier()
18:23:04.533 [Info] Writing postfixes
18:23:04.539 [Info] Patching float BattleTech.Weapon::get_MinRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MinRange::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.542 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MinRange()
18:23:04.545 [Info] Writing postfixes
18:23:04.551 [Info] Patching float BattleTech.Weapon::get_MaxRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MaxRange::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.554 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MaxRange()
18:23:04.557 [Info] Writing postfixes
18:23:04.564 [Info] Patching float BattleTech.Weapon::get_ShortRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShortRange::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.567 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ShortRange()
18:23:04.570 [Info] Writing postfixes
18:23:04.577 [Info] Patching float BattleTech.Weapon::get_MediumRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MediumRange::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.580 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MediumRange()
18:23:04.584 [Info] Writing postfixes
18:23:04.592 [Info] Patching float BattleTech.Weapon::get_LongRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_LongRange::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.596 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_LongRange()
18:23:04.599 [Info] Writing postfixes
18:23:04.606 [Info] Patching float BattleTech.Weapon::get_HeatGenerated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatGenerated::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.609 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatGenerated()
18:23:04.613 [Info] Writing postfixes
18:23:04.620 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)
* static void CustAmmoCategoriesPatches.Weapon_RefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

18:23:04.622 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
18:23:04.625 [Info] Writing postfixes
18:23:04.632 [Info] Patching bool BattleTech.Weapon::get_IndirectFireCapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_IndirectFireCapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

18:23:04.635 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IndirectFireCapable()
18:23:04.638 [Info] Writing postfixes
18:23:04.645 [Info] Patching bool BattleTech.Weapon::get_AOECapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AOECapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

18:23:04.648 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_AOECapable()
18:23:04.650 [Info] Writing postfixes
18:23:04.656 [Info] Patching float BattleTech.Weapon::Instability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_Instability::Postfix(BattleTech.Weapon __instance, Single& __result)

18:23:04.659 [Info] Running ILHook manipulator on float BattleTech.Weapon::Instability()
18:23:04.662 [Info] Writing postfixes
18:23:04.667 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

18:23:04.672 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
18:23:04.674 [Info] Writing prefixes
18:23:04.677 [Info] Writing postfixes
18:23:04.686 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategories+Weapon_DecrementAmmo::Prefix(BattleTech.Weapon __instance, int stackItemUID, Int32& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:04.689 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
18:23:04.692 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
18:23:04.696 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:04.700 [Info] Writing prefixes
18:23:04.709 [Info] Patching virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:04.712 [Info] Running ILHook manipulator on virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
18:23:04.714 [Info] Transpiling virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
18:23:04.719 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:04.730 [Info] Patching virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:04.733 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
18:23:04.735 [Info] Transpiling virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
18:23:04.740 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:04.755 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.DynamicTreesHelper::OnInsert(object __instance, UnityEngine.Matrix4x4& trs, UnityEngine.Vector3& pos, UnityEngine.Quaternion rot, UnityEngine.Vector3& scale)

18:23:04.758 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale)
18:23:04.760 [Info] Writing postfixes
18:23:04.769 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupFullArray()

18:23:04.772 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray()
18:23:04.775 [Info] Writing prefixes
18:23:04.784 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupComputeBuffer()

18:23:04.787 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer()
18:23:04.790 [Info] Writing prefixes
18:23:04.798 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateCombinedMesh()

18:23:04.801 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh()
18:23:04.804 [Info] Writing prefixes
18:23:04.822 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateMesh()

18:23:04.825 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh()
18:23:04.828 [Info] Writing prefixes
18:23:04.836 [Info] Patching virtual BehaviorTreeResults BraceNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.BraceNode_Tick::Prefix(LeafBehaviorNode __instance, String& ___name, BehaviorTree& ___tree, BattleTech.AbstractActor ___unit, BehaviorNodeState& ___currentState, BehaviorTreeResults& __result)

18:23:04.839 [Info] Running ILHook manipulator on virtual BehaviorTreeResults BraceNode::Tick()
18:23:04.842 [Info] Writing prefixes
18:23:04.886 [Info] ### Harmony id=io.mission.activatablecomponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomActivatableEquipment.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomActivatableEquipment\CustomActivatableEquipment.dll
### At 2023-06-01 06.23.04
18:23:04.894 [Info] Patching BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AITeam_GetUnitThatCanReachECM::Prefix(AITeam __instance, System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits, BattleTech.AbstractActor& __result)

18:23:04.896 [Info] Running ILHook manipulator on BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits)
18:23:04.899 [Info] Writing prefixes
18:23:04.908 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

18:23:04.912 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
18:23:04.915 [Info] Writing prefixes
18:23:04.918 [Info] Writing postfixes
18:23:04.924 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

18:23:04.927 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
18:23:04.930 [Info] Writing prefixes
18:23:04.933 [Info] Writing postfixes
18:23:04.940 [Info] Patching void BattleTech.TurnDirector::BeginNewPhase(int newPhase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.TurnDirector_BeginNewPhase::Postfix(BattleTech.TurnDirector __instance, int newPhase)

18:23:04.942 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewPhase(int newPhase)
18:23:04.945 [Info] Writing postfixes
18:23:04.955 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)

18:23:04.958 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
18:23:04.961 [Info] Writing prefixes
18:23:04.973 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)

18:23:04.976 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:23:04.979 [Info] Writing prefixes
18:23:04.988 [Info] Patching BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_DesiredAuraProjectionState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState& __result, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD)

18:23:04.991 [Info] Running ILHook manipulator on BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState()
18:23:04.994 [Info] Writing prefixes
18:23:05.003 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshAuraRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState auraProjectionState, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange)

18:23:05.006 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState)
18:23:05.008 [Info] Writing prefixes
18:23:05.017 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool showActiveProbe, BattleTech.AbstractActor& ___owner, Single& ___currentAPRange)

18:23:05.021 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe)
18:23:05.024 [Info] Writing prefixes
18:23:05.031 [Info] Patching bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform, Boolean& __result)

18:23:05.034 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState()
18:23:05.037 [Info] Writing prefixes
18:23:05.045 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeColor::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool isBright, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD, Boolean& ___currentAPIsBright)

18:23:05.049 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright)
18:23:05.052 [Info] Writing prefixes
18:23:05.059 [Info] Patching void BattleTech.UI.CombatAuraReticle::UpdatePosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.CombatAuraReticle_UpdatePosition::Postfix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform)

18:23:05.062 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::UpdatePosition()
18:23:05.065 [Info] Writing postfixes
18:23:05.073 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomActivatablePatches.CombatHUD_Update_HideReticlesHotKey::Postfix(BattleTech.UI.CombatHUD __instance)

18:23:05.076 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
18:23:05.079 [Info] Writing postfixes
18:23:05.088 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

18:23:05.091 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
18:23:05.093 [Info] Writing postfixes
18:23:05.100 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomActivatablePatches.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

18:23:05.103 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
18:23:05.106 [Info] Writing prefixes
18:23:05.112 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:05.115 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
18:23:05.118 [Info] Writing postfixes
18:23:05.125 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatablePatches.SelectionState_CanDeselect::Postfix(BattleTech.UI.SelectionState __instance, Boolean& __result)

18:23:05.129 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
18:23:05.132 [Info] Writing prefixes
18:23:05.134 [Info] Writing postfixes
18:23:05.140 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:05.142 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
18:23:05.145 [Info] Writing postfixes
18:23:05.152 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

18:23:05.155 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:23:05.158 [Info] Writing prefixes
18:23:05.161 [Info] Writing postfixes
18:23:05.171 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Boolean& __runOriginal, Single& __result)
1 postfixes:
* static void CustomActivatablePatches.Mech_GetHeatSinkDissipation::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:05.174 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
18:23:05.176 [Info] Writing prefixes
18:23:05.180 [Info] Writing postfixes
18:23:05.186 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)
1 postfixes:
* static void CustomActivatablePatches.Mech_ApplyHeatSinks::Postfix(BattleTech.Mech __instance, int stackID)

18:23:05.189 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
18:23:05.191 [Info] Writing prefixes
18:23:05.194 [Info] Writing postfixes
18:23:05.200 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

18:23:05.203 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
18:23:05.206 [Info] Writing postfixes
18:23:05.214 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)

18:23:05.217 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:05.220 [Info] Writing postfixes
18:23:05.229 [Info] Patching virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStandInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

18:23:05.232 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:05.234 [Info] Writing prefixes
18:23:05.240 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

18:23:05.243 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:05.245 [Info] Writing prefixes
18:23:05.251 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

18:23:05.254 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
18:23:05.256 [Info] Writing prefixes
18:23:05.263 [Info] Patching void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_GenerateFallSequence::Prefix(BattleTech.Mech __instance, int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)

18:23:05.266 [Info] Running ILHook manipulator on void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)
18:23:05.268 [Info] Writing prefixes
18:23:05.275 [Info] Patching virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_RestartCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

18:23:05.279 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh)
18:23:05.282 [Info] Writing prefixes
18:23:05.290 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

18:23:05.293 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
18:23:05.296 [Info] Writing prefixes
18:23:05.308 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Postfix::Postfix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

18:23:05.311 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
18:23:05.314 [Info] Writing prefixes
18:23:05.317 [Info] Writing postfixes
18:23:05.327 [Info] Patching void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> codeInstructions, System.Reflection.Emit.ILGenerator ilGenerator)

18:23:05.330 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
18:23:05.333 [Info] Transpiling void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
18:23:05.337 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> codeInstructions, System.Reflection.Emit.ILGenerator ilGenerator)
18:23:05.346 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatHUDStatusPanel_PreviewDesignMasks::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, System.Collections.Generic.List<BattleTech.WayPoint> waypoints)

18:23:05.349 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints)
18:23:05.352 [Info] Writing prefixes
18:23:05.369 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMoveBase_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

18:23:05.372 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos)
18:23:05.375 [Info] Writing prefixes
18:23:05.382 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
1 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

18:23:05.385 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
18:23:05.388 [Info] Writing prefixes
18:23:05.392 [Info] Writing postfixes
18:23:05.401 [Info] Patching void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatMovementReticle_UpdateReticle::Prefix(BattleTech.UI.CombatMovementReticle __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked)

18:23:05.404 [Info] Running ILHook manipulator on void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI)
18:23:05.407 [Info] Writing prefixes
18:23:05.421 [Info] Patching void BattleTech.AuraCache::ResetForFullRebuild() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ResetForFullRebuild_Disable::Prefix(BattleTech.AuraCache __instance)

18:23:05.424 [Info] Running ILHook manipulator on void BattleTech.AuraCache::ResetForFullRebuild()
18:23:05.426 [Info] Writing prefixes
18:23:05.431 [Info] Patching bool BattleTech.AuraCache::HasAlreadyChecked(string guid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_HasAlreadyChecked_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

18:23:05.434 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::HasAlreadyChecked(string guid)
18:23:05.437 [Info] Writing prefixes
18:23:05.442 [Info] Patching void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraAdded::Prefix(BattleTech.AbstractActor __instance)

18:23:05.445 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message)
18:23:05.448 [Info] Writing prefixes
18:23:05.456 [Info] Patching void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraRemoved::Prefix(BattleTech.AbstractActor __instance)

18:23:05.459 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message)
18:23:05.462 [Info] Writing prefixes
18:23:05.471 [Info] Patching static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAllAuras_Disable::Prefix()

18:23:05.473 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate)
18:23:05.476 [Info] Writing prefixes
18:23:05.483 [Info] Patching static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAurasToActor_Disable::Prefix()

18:23:05.486 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
18:23:05.489 [Info] Writing prefixes
18:23:05.496 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()

18:23:05.498 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
18:23:05.501 [Info] Writing prefixes
18:23:05.508 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Ability_Disable::Prefix()

18:23:05.512 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
18:23:05.515 [Info] Writing prefixes
18:23:05.523 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()

18:23:05.526 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
18:23:05.529 [Info] Writing prefixes
18:23:05.536 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

18:23:05.540 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
18:23:05.542 [Info] Writing prefixes
18:23:05.550 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Ability_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

18:23:05.553 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
18:23:05.555 [Info] Writing prefixes
18:23:05.561 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

18:23:05.564 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
18:23:05.567 [Info] Writing prefixes
18:23:05.572 [Info] Patching bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AddEffectIfNotPresent_Disable::Prefix()

18:23:05.575 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource)
18:23:05.579 [Info] Writing prefixes
18:23:05.584 [Info] Patching bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RemoveEffectIfPresent_Disable::Prefix()

18:23:05.587 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource)
18:23:05.590 [Info] Writing prefixes
18:23:05.597 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAuraFrom_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

18:23:05.600 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor)
18:23:05.602 [Info] Writing prefixes
18:23:05.608 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAnyAura() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAnyAura_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

18:23:05.708 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAnyAura()
18:23:05.711 [Info] Writing prefixes
18:23:05.720 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:05.723 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
18:23:05.725 [Info] Writing prefixes
18:23:05.734 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasFromActorAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:05.737 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
18:23:05.740 [Info] Writing prefixes
18:23:05.748 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffectingOthers_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:05.750 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
18:23:05.752 [Info] Writing prefixes
18:23:05.760 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffecting_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:05.763 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
18:23:05.766 [Info] Writing prefixes
18:23:05.775 [Info] Patching int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyGhostSpottedCount_Disable::Prefix(BattleTech.AuraCache __instance, Int32& __result)

18:23:05.779 [Info] Running ILHook manipulator on int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
18:23:05.782 [Info] Writing prefixes
18:23:05.791 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraA_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:05.795 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared)
18:23:05.797 [Info] Writing prefixes
18:23:05.804 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:05.807 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
18:23:05.809 [Info] Writing prefixes
18:23:05.816 [Info] Patching static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RefreshECMStates_Disable::Prefix(BattleTech.AuraCache __instance)

18:23:05.819 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource)
18:23:05.822 [Info] Writing prefixes
18:23:05.830 [Info] Patching BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_GetBestECMState_Disable::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor& __result)

18:23:05.833 [Info] Running ILHook manipulator on BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors)
18:23:05.836 [Info] Writing prefixes
18:23:05.849 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)

18:23:05.852 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
18:23:05.855 [Info] Writing postfixes
18:23:05.867 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_RefreshDisplayedEquipment::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDEquipmentSlot> ___EquipmentSlots, BattleTech.AbstractActor ___displayedActor)

18:23:05.870 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment()
18:23:05.873 [Info] Writing postfixes
18:23:05.890 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)
1 postfixes:
* static void CustomActivatableEquipment.TurnDirector_BeginNewRound::Postfix(BattleTech.TurnDirector __instance)

18:23:05.893 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
18:23:05.895 [Info] Writing prefixes
18:23:05.898 [Info] Writing postfixes
18:23:05.904 [Info] Patching virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDSidePanelHoverElement_OnPointerClick::Postfix(BattleTech.UI.CombatHUDSidePanelHoverElement __instance)

18:23:05.907 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
18:23:05.909 [Info] Writing postfixes
18:23:05.915 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)

18:23:05.918 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
18:23:05.922 [Info] Writing postfixes
18:23:05.928 [Info] Patching bool BattleTech.UI.CombatHUDActionButton::TryActivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_IsActive::Postfix(BattleTech.UI.CombatHUDActionButton __instance, Boolean& __result)

18:23:05.930 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDActionButton::TryActivate()
18:23:05.933 [Info] Writing postfixes
18:23:05.941 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_ProcessPressedButtons::Prefix(BattleTech.UI.CombatSelectionHandler __instance)

18:23:05.944 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons()
18:23:05.947 [Info] Writing prefixes
18:23:05.955 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

18:23:05.958 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
18:23:05.961 [Info] Writing postfixes
18:23:05.968 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_ResetDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

18:23:05.971 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons()
18:23:05.974 [Info] Writing postfixes
18:23:05.981 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

18:23:05.983 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
18:23:05.987 [Info] Writing prefixes
18:23:05.990 [Info] Writing postfixes
18:23:05.998 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

18:23:06.002 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
18:23:06.005 [Info] Writing postfixes
18:23:06.012 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatTargetingReticle_Create::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)

18:23:06.015 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)
18:23:06.017 [Info] Writing postfixes
18:23:06.027 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

18:23:06.030 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
18:23:06.033 [Info] Writing prefixes
18:23:06.040 [Info] Patching void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_ProcessAddedMark::Postfix(BattleTech.AbstractActor __instance)

18:23:06.043 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect)
18:23:06.046 [Info] Writing postfixes
18:23:06.051 [Info] Patching void BattleTech.AbstractActor::set_DistMovedThisRound(float value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_DistMovedThisRound_set::Postfix(BattleTech.AbstractActor __instance, float value)

18:23:06.054 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::set_DistMovedThisRound(float value)
18:23:06.057 [Info] Writing postfixes
18:23:06.062 [Info] Patching virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_OnEffectEnd::Postfix(BattleTech.AbstractActor __instance)

18:23:06.065 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect)
18:23:06.067 [Info] Writing postfixes
18:23:06.075 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)
1 postfixes:
* static void CustomActivatableEquipment.CombatAuraReticle_Init_Aura::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant, System.Collections.Generic.List`1[[BattleTech.UI.CombatAuraReticle, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AuraReticles, BattleTech.UI.CombatHUD ___HUD)

18:23:06.078 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
18:23:06.081 [Info] Writing prefixes
18:23:06.084 [Info] Writing postfixes
18:23:06.095 [Info] Patching void BattleTech.AbstractActor::EvaluateStealthState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.AbstractActor_EvaluateStealthState::Prefix(BattleTech.AbstractActor __instance)

18:23:06.099 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::EvaluateStealthState()
18:23:06.101 [Info] Writing prefixes
18:23:06.111 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:06.114 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
18:23:06.117 [Info] Writing postfixes
18:23:06.126 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)

18:23:06.129 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
18:23:06.132 [Info] Writing postfixes
18:23:06.138 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)

18:23:06.140 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
18:23:06.143 [Info] Writing postfixes
18:23:06.152 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()
* static bool CustomActivatableEquipment.AuraCache_UpdateAurasComponents::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)

18:23:06.155 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
18:23:06.158 [Info] Writing prefixes
18:23:06.165 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_ShouldAffectThisActor::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

18:23:06.168 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
18:23:06.171 [Info] Writing prefixes
18:23:06.174 [Info] Writing postfixes
18:23:06.184 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()
* static bool CustomActivatableEquipment.AuraCache_UpdateAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)

18:23:06.187 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
18:23:06.190 [Info] Writing prefixes
18:23:06.198 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static bool CustomActivatableEquipment.AuraCache_PreviewAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:06.200 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
18:23:06.204 [Info] Writing prefixes
18:23:06.210 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_AuraConditionsPassed::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

18:23:06.213 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
18:23:06.215 [Info] Writing prefixes
18:23:06.218 [Info] Writing postfixes
18:23:06.224 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:06.227 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
18:23:06.230 [Info] Writing postfixes
18:23:06.238 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)

18:23:06.241 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
18:23:06.243 [Info] Writing postfixes
18:23:06.248 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(Boolean& __runOriginal, String& description)
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponSlot_AddToolTipDetail::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, string description, int modifier)

18:23:06.251 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
18:23:06.254 [Info] Writing prefixes
18:23:06.256 [Info] Writing postfixes
18:23:06.262 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

18:23:06.265 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:23:06.267 [Info] Writing prefixes
18:23:06.270 [Info] Writing postfixes
18:23:06.279 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

18:23:06.282 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
18:23:06.285 [Info] Writing postfixes
18:23:06.292 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_SetState::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

18:23:06.295 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
18:23:06.297 [Info] Writing postfixes
18:23:06.303 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)
* static void CustomActivatableEquipment.Turret_InitGameRep::Postfix(BattleTech.Turret __instance)

18:23:06.306 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
18:23:06.308 [Info] Writing postfixes
18:23:06.316 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

18:23:06.319 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
18:23:06.322 [Info] Writing postfixes
18:23:06.329 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
2 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

18:23:06.332 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
18:23:06.334 [Info] Writing prefixes
18:23:06.337 [Info] Writing postfixes
18:23:06.348 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 3 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
3 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:06.351 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:06.354 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:06.357 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:06.359 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:06.363 [Info] Writing prefixes
18:23:06.366 [Info] Writing postfixes
18:23:06.374 [Info] Patching virtual void BattleTech.MechComponent::InitPassiveSelfEffects() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Prefix(BattleTech.MechComponent __instance)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Postfix(BattleTech.MechComponent __instance)

18:23:06.377 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitPassiveSelfEffects()
18:23:06.380 [Info] Writing prefixes
18:23:06.382 [Info] Writing postfixes
18:23:06.389 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)

18:23:06.392 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
18:23:06.394 [Info] Writing postfixes
18:23:06.400 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)
* static void CustomActivatableEquipment.StatisticEffect_initStatisiticEffect::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)

18:23:06.403 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
18:23:06.406 [Info] Writing postfixes
18:23:06.413 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.EffectManager_GetTargetStatCollections_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.EffectData effectData, BattleTech.ICombatant target)
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_GetTargetStatCollections::Postfix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:06.416 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
18:23:06.419 [Info] Writing prefixes
18:23:06.422 [Info] Writing postfixes
18:23:06.430 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)

18:23:06.432 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
18:23:06.435 [Info] Writing prefixes
18:23:06.450 [Info] Patching void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_InitAbstractActor::Prefix(BattleTech.AbstractActor __instance)

18:23:06.453 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat)
18:23:06.456 [Info] Writing prefixes
18:23:06.467 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance)

18:23:06.470 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
18:23:06.473 [Info] Writing prefixes
18:23:06.476 [Info] Writing postfixes
18:23:06.481 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance)

18:23:06.484 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
18:23:06.486 [Info] Writing prefixes
18:23:06.489 [Info] Writing postfixes
18:23:06.494 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance)

18:23:06.498 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
18:23:06.500 [Info] Writing prefixes
18:23:06.504 [Info] Writing postfixes
18:23:06.510 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance)

18:23:06.513 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
18:23:06.516 [Info] Writing prefixes
18:23:06.519 [Info] Writing postfixes
18:23:06.525 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance)

18:23:06.528 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
18:23:06.531 [Info] Writing prefixes
18:23:06.533 [Info] Writing postfixes
18:23:06.538 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.StatCollection_ModifyStatistic::Prefix(BattleTech.StatCollection __instance, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant)
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

18:23:06.541 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
18:23:06.544 [Info] Writing prefixes
18:23:06.547 [Info] Writing postfixes
18:23:06.552 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)
* static void CustomActivatableEquipment.MechComponent_InitStats::Postfix(BattleTech.MechComponent __instance)

18:23:06.556 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
18:23:06.558 [Info] Writing postfixes
18:23:06.563 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)
* static bool CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Postfix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)

18:23:06.566 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
18:23:06.568 [Info] Writing prefixes
18:23:06.572 [Info] Writing postfixes
18:23:06.578 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

18:23:06.581 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
18:23:06.584 [Info] Writing prefixes
18:23:06.592 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
4 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

18:23:06.594 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:23:06.597 [Info] Writing prefixes
18:23:06.600 [Info] Writing postfixes
18:23:06.614 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:06.617 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:06.619 [Info] Writing postfixes
18:23:06.630 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:06.633 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:06.635 [Info] Writing postfixes
18:23:06.643 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:06.646 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:06.648 [Info] Writing postfixes
18:23:06.657 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)

18:23:06.659 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
18:23:06.662 [Info] Writing postfixes
18:23:06.675 [Info] Patching void BattleTech.UI.InventoryItemElement::SetData(BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.InventoryItemElement_SetData::Prefix(BattleTech.UI.InventoryItemElement __instance, BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback)

18:23:06.678 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::SetData(BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback)
18:23:06.681 [Info] Writing prefixes
18:23:06.689 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechBayMechUnitElement_SetData::Prefix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

18:23:06.692 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
18:23:06.695 [Info] Writing prefixes
18:23:06.698 [Info] Writing postfixes
18:23:06.705 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:06.708 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:06.711 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:06.714 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:06.718 [Info] Writing postfixes
18:23:06.724 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 5 postfixes, 1 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
* static void CustomActivatableEquipment.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:06.726 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:23:06.729 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
18:23:06.732 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:06.736 [Info] Writing postfixes
18:23:06.746 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetData(BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechBayMechInfoWidget_SetData::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton)

18:23:06.749 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetData(BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton)
18:23:06.753 [Info] Writing prefixes
18:23:06.763 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:06.767 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:06.770 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:06.773 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:06.778 [Info] Writing postfixes
18:23:06.784 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::ClearData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_ClearData::Postfix(BattleTech.UI.MechLabItemSlotElement __instance)

18:23:06.788 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::ClearData()
18:23:06.792 [Info] Writing postfixes
18:23:06.801 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechValidationRules_GetMechFieldableWarnings::Prefix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:06.805 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
18:23:06.808 [Info] Writing prefixes
18:23:06.811 [Info] Writing postfixes
18:23:06.819 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
2 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

18:23:06.822 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
18:23:06.824 [Info] Writing prefixes
18:23:06.827 [Info] Writing postfixes
18:23:06.833 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentListItem_SetComponentRef::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)

18:23:06.837 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)
18:23:06.840 [Info] Writing postfixes
18:23:06.851 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)

18:23:06.854 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:06.857 [Info] Writing prefixes
18:23:06.990 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
4 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)

18:23:06.993 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:06.996 [Info] Writing prefixes
18:23:06.999 [Info] Writing postfixes
18:23:07.033 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_AssignAmmoToWeapons::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

18:23:07.036 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
18:23:07.039 [Info] Writing prefixes
18:23:07.042 [Info] Writing postfixes
18:23:07.048 [Info] Patching virtual void BattleTech.ActorDef::SetGuid(string newGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.ActorDef_SetGuid::Postfix(BattleTech.ActorDef __instance)

18:23:07.051 [Info] Running ILHook manipulator on virtual void BattleTech.ActorDef::SetGuid(string newGuid)
18:23:07.054 [Info] Writing postfixes
18:23:07.062 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
2 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)

18:23:07.065 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
18:23:07.067 [Info] Writing prefixes
18:23:07.071 [Info] Writing postfixes
18:23:07.081 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)

18:23:07.083 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
18:23:07.087 [Info] Writing prefixes
18:23:07.096 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:07.099 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:07.102 [Info] Writing prefixes
18:23:07.106 [Info] Writing postfixes
18:23:07.115 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

18:23:07.117 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
18:23:07.120 [Info] Writing prefixes
18:23:07.123 [Info] Writing postfixes
18:23:07.129 [Info] Patching void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddAbsoluteInstability_Patch::Postfix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

18:23:07.132 [Info] Running ILHook manipulator on void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
18:23:07.135 [Info] Writing postfixes
18:23:07.142 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

18:23:07.146 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
18:23:07.148 [Info] Writing postfixes
18:23:07.156 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:07.159 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:07.163 [Info] Writing prefixes
18:23:07.166 [Info] Writing postfixes
18:23:07.173 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:07.175 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:07.178 [Info] Writing prefixes
18:23:07.180 [Info] Writing postfixes
18:23:07.188 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:07.191 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:07.193 [Info] Writing prefixes
18:23:07.196 [Info] Writing postfixes
18:23:07.205 [Info] Patching virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AreAnyHostilesInWeaponRangeNode_Tick::Prefix(BehaviorNode __instance, BehaviorTreeResults& __result, BehaviorTree& ___tree, BattleTech.AbstractActor& ___unit)

18:23:07.208 [Info] Running ILHook manipulator on virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick()
18:23:07.211 [Info] Writing prefixes
18:23:07.234 [Info] ### Harmony id=io.mission.custommaps, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomMaps.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomMaps\CustomMaps.dll
### At 2023-06-01 06.23.07
18:23:07.238 [Info] Patching void DestructibleObject::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructibleObject_Start::Prefix(DestructibleObject __instance)

18:23:07.241 [Info] Running ILHook manipulator on void DestructibleObject::Start()
18:23:07.243 [Info] Writing prefixes
18:23:07.249 [Info] Patching void DestructibleObject::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructibleObject_OnEnable::Prefix(DestructibleObject __instance)

18:23:07.253 [Info] Running ILHook manipulator on void DestructibleObject::OnEnable()
18:23:07.255 [Info] Writing prefixes
18:23:07.262 [Info] Patching void DestructionConstants::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructionConstants_OnEnable::Prefix(DestructionConstants __instance)

18:23:07.264 [Info] Running ILHook manipulator on void DestructionConstants::OnEnable()
18:23:07.267 [Info] Writing prefixes
18:23:07.274 [Info] Patching void DestructionConstants::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructionConstants_LateUpdate::Prefix(DestructionConstants __instance)

18:23:07.276 [Info] Running ILHook manipulator on void DestructionConstants::LateUpdate()
18:23:07.279 [Info] Writing prefixes
18:23:07.286 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
5 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)

18:23:07.289 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:23:07.291 [Info] Writing prefixes
18:23:07.294 [Info] Writing postfixes
18:23:07.311 [Info] Patching void BattleTech.Rendering.TerrainClipRoot::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.TerrainClipRoot_Start::Prefix(BattleTech.Rendering.TerrainClipRoot __instance)

18:23:07.314 [Info] Running ILHook manipulator on void BattleTech.Rendering.TerrainClipRoot::Start()
18:23:07.317 [Info] Writing prefixes
18:23:07.331 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomMaps.Patches.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

18:23:07.334 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
18:23:07.337 [Info] Writing postfixes
18:23:07.344 [Info] Patching void BattleTech.Contract::AllDependenciesReady() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.Contract_AllDependenciesReady::Prefix(BattleTech.Contract __instance)

18:23:07.347 [Info] Running ILHook manipulator on void BattleTech.Contract::AllDependenciesReady()
18:23:07.349 [Info] Writing prefixes
18:23:07.357 [Info] Patching void BattleTech.Contract::.ctor(string mapName, string mapPath, string encounterLayerGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.GameInstance game, BattleTech.Framework.ContractOverride contractOverride, BattleTech.GameContext baseContext, bool fromSim, int difficulty, int initialContractValue, int? playerOneMoraleOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.Contract_Constructor::Prefix(string mapName, string mapPath, String& encounterLayerGuid, BattleTech.GameInstance game)

18:23:07.359 [Info] Running ILHook manipulator on void BattleTech.Contract::.ctor(string mapName, string mapPath, string encounterLayerGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.GameInstance game, BattleTech.Framework.ContractOverride contractOverride, BattleTech.GameContext baseContext, bool fromSim, int difficulty, int initialContractValue, int? playerOneMoraleOverride)
18:23:07.362 [Info] Writing prefixes
18:23:07.378 [Info] Patching void BattleTech.LevelLoader::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.LevelLoader_Start::Prefix(BattleTech.LevelLoader __instance)

18:23:07.382 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::Start()
18:23:07.385 [Info] Writing prefixes
18:23:07.392 [Info] Patching void BattleTech.LevelLoadRequestListener::BundlesLoaded(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.LevelLoadRequestListener_BundlesLoaded::Prefix(BattleTech.LevelLoadRequestListener __instance, BattleTech.Data.LoadRequest request)

18:23:07.396 [Info] Running ILHook manipulator on void BattleTech.LevelLoadRequestListener::BundlesLoaded(BattleTech.Data.LoadRequest request)
18:23:07.399 [Info] Writing prefixes
18:23:07.405 [Info] Patching void BattleTech.LevelLoadRequestListener::OnRequestLevelLoad(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.LevelLoadRequestListener_OnRequestLevelLoad::Prefix(BattleTech.LevelLoadRequestListener __instance, MessageCenterMessage message)

18:23:07.408 [Info] Running ILHook manipulator on void BattleTech.LevelLoadRequestListener::OnRequestLevelLoad(MessageCenterMessage message)
18:23:07.412 [Info] Writing prefixes
18:23:07.421 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.RenderTrees_InitQuadTree::Prefix(BattleTech.Rendering.Trees.RenderTrees __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

18:23:07.424 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
18:23:07.427 [Info] Writing prefixes
18:23:07.431 [Info] Writing postfixes
18:23:07.447 [Info] Patching void BattleTech.MapMetaDataExporter::LoadMapMetaDataOnly(BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.MapMetaDataExporter_LoadMapMetaDataOnly::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager)

18:23:07.450 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::LoadMapMetaDataOnly(BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager)
18:23:07.453 [Info] Writing prefixes
18:23:07.461 [Info] Patching void BattleTech.EncounterLayerData::ReattachReferences() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.EncounterLayerData_ReattachReferences::Prefix(BattleTech.EncounterLayerData __instance)

18:23:07.464 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::ReattachReferences()
18:23:07.467 [Info] Writing prefixes
18:23:07.475 [Info] Patching bool BattleTech.InclineMeshData::LoadFromPath(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.InclineMeshData_LoadFromPath::Prefix(BattleTech.InclineMeshData __instance, String& path)

18:23:07.478 [Info] Running ILHook manipulator on bool BattleTech.InclineMeshData::LoadFromPath(string path)
18:23:07.481 [Info] Writing prefixes
18:23:07.490 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.PlayerLanceSpawnerGameLogic_SpawnUnits::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance, bool offScreen)
1 postfixes:
* static void MissionControl.Patches.PlayerLanceSpawnerGameLogicSpawnUnitsPatch::Postfix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

18:23:07.493 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen)
18:23:07.496 [Info] Writing prefixes
18:23:07.499 [Info] Writing postfixes
18:23:07.503 [Info] Patching void BattleTech.EncounterLayerData::LoadRaycastInfo(HBS.Util.SerializationStream stream) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.EncounterLayerData_LoadRaycastInfo::Prefix(BattleTech.EncounterLayerData __instance, HBS.Util.SerializationStream& stream)

18:23:07.507 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::LoadRaycastInfo(HBS.Util.SerializationStream stream)
18:23:07.509 [Info] Writing prefixes
18:23:07.516 [Info] Patching static BattleTech.MapMetaData BattleTech.MapMetaData::LoadMapMetaData(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.MapMetaData_LoadMapMetaData::Prefix(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager, String& __state, BattleTech.MapMetaData& __result)
1 postfixes:
* static void CustomMaps.Patches.MapMetaData_LoadMapMetaData::Postfix(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager, String& __state, BattleTech.MapMetaData& __result)

18:23:07.519 [Info] Running ILHook manipulator on static BattleTech.MapMetaData BattleTech.MapMetaData::LoadMapMetaData(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager)
18:23:07.522 [Info] Writing prefixes
18:23:07.524 [Info] Writing postfixes
18:23:07.699 [Info] ### Harmony id=io.mission.customunits, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnits.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomUnits.dll
### At 2023-06-01 06.23.07
18:23:07.705 [Info] ### Harmony id=io.mission.customdeploy, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomDeploy.Core::Init(string directory, bool debugLog), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomDeploy.dll
### At 2023-06-01 06.23.07
18:23:07.709 [Info] Patching void BattleTech.FollowActorCameraSequence::CheckForFinished() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.FollowActorCameraSequence_CheckForFinished::Prefix(BattleTech.FollowActorCameraSequence __instance)

18:23:07.712 [Info] Running ILHook manipulator on void BattleTech.FollowActorCameraSequence::CheckForFinished()
18:23:07.715 [Info] Writing prefixes
18:23:07.721 [Info] Patching System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_DangerousLocationCellsList::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, System.Collections.Generic.List`1[[BattleTech.MapTerrainDataCell, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:07.724 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList()
18:23:07.726 [Info] Writing prefixes
18:23:07.735 [Info] Patching float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_GetEvaluationAtPositionOrientation::Prefix(BattleTech.InfluenceMapEvaluator __instance, UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode, Single& __result)

18:23:07.738 [Info] Running ILHook manipulator on float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
18:23:07.740 [Info] Writing prefixes
18:23:07.751 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_GetStringFromObjectDispatch::Prefix(String& __result, object obj, string expr)

18:23:07.754 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr)
18:23:07.756 [Info] Writing prefixes
18:23:07.766 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_LookupStringFromObjectAndMaybeDispatch::Prefix(String& __result, object obj, string expr, Boolean& dispatchLocalize)

18:23:07.769 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize)
18:23:07.772 [Info] Writing prefixes
18:23:07.779 [Info] Patching void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.HeapSnapshotCollector_CollectStaticFields::Prefix(UnityHeapCrawler.HeapSnapshotCollector __instance)

18:23:07.781 [Info] Running ILHook manipulator on void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields()
18:23:07.784 [Info] Writing prefixes
18:23:07.797 [Info] Patching static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AssemblyUtil_FindMethods::Prefix(System.Reflection.MethodInfo[]& __result, System.Reflection.Assembly assembly, string methodName, string typeName)

18:23:07.800 [Info] Running ILHook manipulator on static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName)
18:23:07.803 [Info] Writing prefixes
18:23:07.814 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_unit::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.SpawnableUnit spawnableUnit)

18:23:07.817 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit)
18:23:07.821 [Info] Writing postfixes
18:23:07.829 [Info] Patching void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.LanceConfiguration_AddUnits::Prefix(BattleTech.LanceConfiguration __instance, System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)

18:23:07.832 [Info] Running ILHook manipulator on void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)
18:23:07.835 [Info] Writing prefixes
18:23:07.843 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_logic::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.UnitSpawnPointGameLogic logic)

18:23:07.846 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic)
18:23:07.849 [Info] Writing postfixes
18:23:07.856 [Info] Patching static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AkTriggerBase_GetAllDerivedTypes::Prefix(System.Collections.Generic.Dictionary`2[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:07.859 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes()
18:23:07.863 [Info] Writing prefixes
18:23:07.873 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:23:07.876 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:07.879 [Info] Writing prefixes
18:23:07.888 [Info] Patching bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.LoadRequest_TryCreateAndAddLoadRequest::Postfix(BattleTech.Data.LoadRequest __instance, BattleTech.BattleTechResourceType resourceType, string resourceId, bool __result)

18:23:07.891 [Info] Running ILHook manipulator on bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership)
18:23:07.894 [Info] Writing postfixes
18:23:07.904 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomDeploy.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

18:23:07.907 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
18:23:07.910 [Info] Writing postfixes
18:23:07.918 [Info] Patching string BattleTech.StarSystem::GetLastPilotAddedToHiringName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.StarSystem_GetLastPilotAddedToHiringName::Prefix(BattleTech.StarSystem __instance, String& __result)

18:23:07.921 [Info] Running ILHook manipulator on string BattleTech.StarSystem::GetLastPilotAddedToHiringName()
18:23:07.923 [Info] Writing prefixes
18:23:07.931 [Info] Patching bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.SimGameState_AddPilotToHiringHall::Prefix(BattleTech.SimGameState __instance, string pilotDefID, string starSystemID, Boolean& __result)

18:23:07.934 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID)
18:23:07.937 [Info] Writing prefixes
18:23:07.944 [Info] Patching void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.StarSystem_AddAvailablePilot::Prefix(BattleTech.StarSystem __instance, BattleTech.PilotDef def, bool isRonin)

18:23:07.947 [Info] Running ILHook manipulator on void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin)
18:23:07.950 [Info] Writing prefixes
18:23:07.956 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

18:23:07.959 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
18:23:07.961 [Info] Writing prefixes
18:23:07.969 [Info] Patching void BattleTech.Data.DataManager::UpdateRequests() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.DataManager_UpdateRequests::Prefix(BattleTech.Data.DataManager __instance)

18:23:07.972 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::UpdateRequests()
18:23:07.975 [Info] Writing prefixes
18:23:07.983 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)

18:23:07.986 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:07.989 [Info] Writing prefixes
18:23:07.996 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.CombatHUDHeatDisplay_UpdateOverheatWarnings::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, Boolean& overHeated, Boolean& shutDown)

18:23:07.999 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown)
18:23:08.002 [Info] Writing prefixes
18:23:08.008 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

18:23:08.011 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
18:23:08.014 [Info] Writing postfixes
18:23:08.020 [Info] Patching static void Utilities::BuildExtensionMethodCacheForType(Type type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Utilities_BuildExtensionMethodCacheForType::Prefix(Type type)

18:23:08.023 [Info] Running ILHook manipulator on static void Utilities::BuildExtensionMethodCacheForType(Type type)
18:23:08.025 [Info] Writing prefixes
18:23:08.037 [Info] Patching System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Briefing_BuildSimGameResults::Prefix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride, System.Collections.Generic.List`1[[BattleTech.ResultDescriptionEntry, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:08.040 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride)
18:23:08.043 [Info] Writing prefixes
18:23:08.073 [Info] Patching static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr) with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomUnits.PatchingDebug::GetOriginalMethod_Finalizer(Exception __exception, HarmonyLib.HarmonyMethod attr)

18:23:08.076 [Info] Running ILHook manipulator on static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr)
18:23:08.079 [Info] Writing finalizers
18:23:08.098 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetSorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)
* static bool SortByTonnage.MechBayMechStorageWidget_SetSorting_Patch::Prefix(BattleTech.UI.MechBayMechStorageWidget __instance)

18:23:08.101 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
18:23:08.104 [Info] Writing prefixes
18:23:08.109 [Info] Patching void BattleTech.SimGameState::_OnDefsLoadComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Postfix(BattleTech.SimGameState __instance)

18:23:08.112 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnDefsLoadComplete()
18:23:08.115 [Info] Writing prefixes
18:23:08.117 [Info] Writing postfixes
18:23:08.126 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
3 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

18:23:08.128 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
18:23:08.131 [Info] Writing prefixes
18:23:08.135 [Info] Writing postfixes
18:23:08.150 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.Patches.SimGameState_ReadyMech_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Postfix(int baySlot, string id, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:08.153 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
18:23:08.156 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
18:23:08.159 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:08.163 [Info] Writing prefixes
18:23:08.166 [Info] Writing postfixes
18:23:08.174 [Info] Patching void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_RemoveMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, BattleTech.SimGameState __instance)

18:23:08.177 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active)
18:23:08.180 [Info] Writing postfixes
18:23:08.186 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

18:23:08.189 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
18:23:08.192 [Info] Writing postfixes
18:23:08.198 [Info] Patching bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapInativeMech_Patch::Postfix(string id, bool pay, BattleTech.SimGameState __instance)

18:23:08.201 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay)
18:23:08.204 [Info] Writing postfixes
18:23:08.210 [Info] Patching void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_StripMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

18:23:08.213 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def)
18:23:08.215 [Info] Writing postfixes
18:23:08.220 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

18:23:08.223 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
18:23:08.226 [Info] Writing postfixes
18:23:08.231 [Info] Patching void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

18:23:08.234 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
18:23:08.236 [Info] Writing prefixes
18:23:08.241 [Info] Patching void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_Cancel_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

18:23:08.244 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
18:23:08.247 [Info] Writing prefixes
18:23:08.253 [Info] Patching void BattleTech.UI.MechBayPanel::OnMechLabClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechBayPanel_OnMechLabClosed_Patch::Prefix(BattleTech.UI.MechBayPanel __instance)

18:23:08.256 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnMechLabClosed()
18:23:08.259 [Info] Writing prefixes
18:23:08.265 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

18:23:08.268 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder()
18:23:08.271 [Info] Writing prefixes
18:23:08.273 [Info] Writing postfixes
18:23:08.277 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

18:23:08.280 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech()
18:23:08.282 [Info] Writing prefixes
18:23:08.285 [Info] Writing postfixes
18:23:08.292 [Info] Patching void BattleTech.UI.MechPlacementPopup::OnConfirmClicked() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

18:23:08.295 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::OnConfirmClicked()
18:23:08.298 [Info] Writing prefixes
18:23:08.300 [Info] Writing postfixes
18:23:08.308 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

18:23:08.310 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
18:23:08.313 [Info] Writing postfixes
18:23:08.318 [Info] Patching void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechRepresentationSimGame_Init_Patch::Postfix(BattleTech.MechRepresentationSimGame __instance)

18:23:08.321 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef)
18:23:08.323 [Info] Writing postfixes
18:23:08.330 [Info] Patching void BattleTech.MouseRotation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechSpin.Patches.MouseRotation_Update::Prefix(BattleTech.MouseRotation __instance)

18:23:08.333 [Info] Running ILHook manipulator on void BattleTech.MouseRotation::Update()
18:23:08.335 [Info] Writing prefixes
18:23:08.343 [Info] Patching void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.TurretRepresentationInitPatch::Postfix(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented, BattleTech.TurretRepresentation __instance)

18:23:08.346 [Info] Running ILHook manipulator on void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented)
18:23:08.349 [Info] Writing postfixes
18:23:08.355 [Info] Patching void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.GameRepresentationInitPatch::Postfix(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented, BattleTech.VehicleRepresentation __instance)

18:23:08.358 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented)
18:23:08.360 [Info] Writing postfixes
18:23:08.367 [Info] Patching virtual void WeaponEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechResizer.WeaponEffectPlayProjectilePatch::Prefix(WeaponEffect __instance)

18:23:08.370 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayProjectile()
18:23:08.375 [Info] Writing prefixes
18:23:08.383 [Info] Patching void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LoadRequest_CompleteLoadTracker::Postfix(BattleTech.Data.LoadRequest __instance, object tracker, bool loadSuccess)

18:23:08.386 [Info] Running ILHook manipulator on void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess)
18:23:08.388 [Info] Writing postfixes
18:23:08.395 [Info] Patching void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AttackDirector_PerformAttack::Prefix(BattleTech.AttackDirector __instance, BattleTech.AttackDirector+AttackSequence sequence)

18:23:08.398 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence)
18:23:08.401 [Info] Writing prefixes
18:23:08.408 [Info] Patching virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_OnAudioEvent::Prefix(BattleTech.VehicleRepresentation __instance, string audioEvent)

18:23:08.411 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent)
18:23:08.414 [Info] Writing prefixes
18:23:08.420 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStartAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStartAudio::Prefix(BattleTech.VehicleRepresentation __instance)

18:23:08.423 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStartAudio()
18:23:08.425 [Info] Writing prefixes
18:23:08.432 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStopAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStopAudio::Prefix(BattleTech.VehicleRepresentation __instance)

18:23:08.435 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStopAudio()
18:23:08.437 [Info] Writing prefixes
18:23:08.444 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
3 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)
* static void CustomUnits.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

18:23:08.447 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
18:23:08.450 [Info] Writing prefixes
18:23:08.453 [Info] Writing postfixes
18:23:08.466 [Info] Patching UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_GetAttachTransform::Prefix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, UnityEngine.Transform& __result)

18:23:08.469 [Info] Running ILHook manipulator on UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location)
18:23:08.472 [Info] Writing prefixes
18:23:08.479 [Info] Patching virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_IsTargetPositionInFiringArc::Prefix(BattleTech.Vehicle __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

18:23:08.483 [Info] Running ILHook manipulator on virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
18:23:08.486 [Info] Writing prefixes
18:23:08.494 [Info] Patching virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_IsTargetPositionInFiringArc::Prefix(BattleTech.Mech __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

18:23:08.497 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
18:23:08.500 [Info] Writing prefixes
18:23:08.507 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

18:23:08.510 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
18:23:08.513 [Info] Writing postfixes
18:23:08.519 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:08.522 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:08.524 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:08.528 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:08.531 [Info] Writing postfixes
18:23:08.540 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateStartContractPatch::Prefix(BattleTech.SimGameState __instance, BattleTech.Contract contract)
1 postfixes:
* static void CustomUnits.SimGameState_StartContract::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

18:23:08.543 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
18:23:08.545 [Info] Writing prefixes
18:23:08.548 [Info] Writing postfixes
18:23:08.554 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet& requiredTags, HBS.Collections.TagSet& excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
1 postfixes:
* static void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags, System.Collections.Generic.List`1[[BattleTech.Data.UnitDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:08.557 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
18:23:08.559 [Info] Writing prefixes
18:23:08.562 [Info] Writing postfixes
18:23:08.565 [IL] Generated patch (System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> DMD<BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs>?-1996085504::BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)):
.locals init (
    BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0 V_0
    System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> V_1
    System.Boolean V_2
)
IL_0000: ldc.i4.1
IL_0001: stloc V_2
IL_0005: ldarg mdd
IL_0009: ldarga requiredTags
IL_000d: ldarga excludedTags
IL_0011: ldarg checkOwnership
IL_0015: ldarg currentDate
IL_0019: ldarg companyTags
IL_001d: call System.Boolean CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet&,HBS.Collections.TagSet&,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)
IL_0022: ldloc V_2
IL_0026: and
IL_0027: stloc V_2
IL_002b: ldloc V_2
IL_002f: brfalse IL_0087
IL_0034: newobj System.Void BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::.ctor()
IL_0039: stloc.0
IL_003a: ldloc.0
IL_003b: ldarg.0
IL_003c: stfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0041: ldloc.0
IL_0042: ldarg.s currentDate
IL_0044: stfld System.Nullable`1<System.DateTime> BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::currentDate
IL_0049: ldloc.0
IL_004a: ldarg.s companyTags
IL_004c: stfld HBS.Collections.TagSet BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::companyTags
IL_0051: ldloc.0
IL_0052: ldfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0057: ldc.i4.5
IL_0058: ldarg.1
IL_0059: ldarg.2
IL_005a: ldstr "UnitDef"
IL_005f: ldstr ""
IL_0064: ldarg.3
IL_0065: ldstr "UnitDefID"
IL_006a: call System.Collections.Generic.List`1<DataBaseType> BattleTech.Data.TagSetQueryExtensions::GetMatchingDataByTagSet<BattleTech.Data.UnitDef_MDD>(BattleTech.Data.MetadataDatabase,BattleTech.Data.TagSetType,HBS.Collections.TagSet,HBS.Collections.TagSet,System.String,System.String,System.Boolean,System.String)
IL_006f: dup
IL_0070: ldloc.0
IL_0071: ldftn System.Boolean BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::<GetMatchingUnitDefs>b__0(BattleTech.Data.UnitDef_MDD)
IL_0077: newobj System.Void System.Predicate`1<BattleTech.Data.UnitDef_MDD>::.ctor(System.Object,System.IntPtr)
IL_007c: callvirt System.Int32 System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>::RemoveAll(System.Predicate`1<T>)
IL_0081: pop
IL_0082: br IL_008b
IL_0087: ldloc V_1
IL_008b: stloc V_1
IL_008f: ldarg mdd
IL_0093: ldarg requiredTags
IL_0097: ldarg excludedTags
IL_009b: ldarg checkOwnership
IL_009f: ldarg currentDate
IL_00a3: ldarg companyTags
IL_00a7: ldloca V_1
IL_00ab: call System.Void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet,System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>&)
IL_00b0: ldloc V_1
IL_00b4: ret

18:23:08.570 [Info] Patching void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector__SendTurnActorActivateMessage::Postfix(BattleTech.TurnDirector __instance, int turnActorIndex)

18:23:08.572 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex)
18:23:08.575 [Info] Writing postfixes
18:23:08.582 [Info] Patching UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDInWorldScalingActorInfo_GetWorldPos::Postfix(BattleTech.UI.CombatHUDInWorldScalingActorInfo __instance, UnityEngine.Vector3& __result)

18:23:08.584 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos()
18:23:08.586 [Info] Writing postfixes
18:23:08.593 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

18:23:08.596 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
18:23:08.598 [Info] Writing postfixes
18:23:08.603 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

18:23:08.610 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:23:08.613 [Info] Writing prefixes
18:23:08.615 [Info] Writing postfixes
18:23:08.624 [Info] Patching void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceContractDetailsWidget_PopulateContract::Postfix(BattleTech.UI.LanceContractDetailsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

18:23:08.627 [Info] Running ILHook manipulator on void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract)
18:23:08.629 [Info] Writing postfixes
18:23:08.647 [Info] Patching void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SGContractsWidget_PopulateContract::Postfix(BattleTech.UI.SGContractsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

18:23:08.649 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated)
18:23:08.652 [Info] Writing postfixes
18:23:08.678 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

18:23:08.681 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
18:23:08.683 [Info] Writing postfixes
18:23:08.689 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerEnter::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, UnityEngine.EventSystems.PointerEventData data)

18:23:08.692 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data)
18:23:08.694 [Info] Writing prefixes
18:23:08.700 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

18:23:08.703 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
18:23:08.705 [Info] Writing postfixes
18:23:08.714 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_Init::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD HUD)

18:23:08.717 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD)
18:23:08.719 [Info] Writing postfixes
18:23:08.725 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

18:23:08.728 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay()
18:23:08.731 [Info] Writing prefixes
18:23:08.734 [Info] Writing postfixes
18:23:08.832 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.AttackDirection& ___shownAttackDirection, BattleTech.Mech ___displayedMech, BattleTech.Vehicle ___displayedVehicle)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.Mech ___displayedMech, BattleTech.AttackDirection& ___shownAttackDirection)

18:23:08.834 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value)
18:23:08.837 [Info] Writing prefixes
18:23:08.841 [Info] Writing postfixes
18:23:08.850 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_ShowMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

18:23:08.853 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay()
18:23:08.856 [Info] Writing prefixes
18:23:08.861 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShowVehicleDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

18:23:08.864 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay()
18:23:08.866 [Info] Writing postfixes
18:23:08.873 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_ShowMechDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

18:23:08.875 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay()
18:23:08.878 [Info] Writing postfixes
18:23:08.885 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showVehicleDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

18:23:08.888 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay()
18:23:08.891 [Info] Writing postfixes
18:23:08.898 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showBuildingDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

18:23:08.900 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay()
18:23:08.903 [Info] Writing postfixes
18:23:08.909 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showTurretDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

18:23:08.912 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay()
18:23:08.915 [Info] Writing postfixes
18:23:08.921 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDTargetingComputer_UpdateStructureAndArmor::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)

18:23:08.924 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor()
18:23:08.926 [Info] Writing prefixes
18:23:08.933 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_RefreshHoverInfoSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:08.936 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo()
18:23:08.939 [Info] Writing prefixes
18:23:08.957 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.Mech value)

18:23:08.960 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value)
18:23:08.964 [Info] Writing prefixes
18:23:08.972 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)

18:23:08.975 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
18:23:08.978 [Info] Writing prefixes
18:23:08.991 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechDefSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.MechDef value)

18:23:08.994 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value)
18:23:08.997 [Info] Writing prefixes
18:23:09.003 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedChassisDef::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ChassisDef value)

18:23:09.006 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value)
18:23:09.008 [Info] Writing prefixes
18:23:09.015 [Info] Patching void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDVehicleArmorReadout_Init::Postfix(BattleTech.UI.HUDVehicleArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)

18:23:09.017 [Info] Running ILHook manipulator on void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)
18:23:09.020 [Info] Writing postfixes
18:23:09.028 [Info] Patching void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.GameRepresentation_SetHighlightAlpha::Prefix(BattleTech.GameRepresentation __instance, float alpha)

18:23:09.031 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha)
18:23:09.033 [Info] Writing prefixes
18:23:09.039 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

18:23:09.042 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
18:23:09.045 [Info] Writing postfixes
18:23:09.052 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
3 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:09.055 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
18:23:09.057 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
18:23:09.060 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:09.063 [Info] Writing prefixes
18:23:09.066 [Info] Writing postfixes
18:23:09.073 [Info] Patching void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)
1 postfixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)

18:23:09.076 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request)
18:23:09.078 [Info] Writing prefixes
18:23:09.081 [Info] Writing postfixes
18:23:09.087 [Info] Patching void BattleTech.UI.MechLabPanel::ConfirmRevertMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Prefix(BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Postfix(BattleTech.UI.MechLabPanel __instance)

18:23:09.090 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ConfirmRevertMech()
18:23:09.093 [Info] Writing prefixes
18:23:09.095 [Info] Writing postfixes
18:23:09.101 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_ExitMechLab::Postfix(BattleTech.UI.MechLabPanel __instance)

18:23:09.104 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
18:23:09.106 [Info] Writing postfixes
18:23:09.112 [Info] Patching void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryWeapon_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance)

18:23:09.115 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor()
18:23:09.117 [Info] Writing postfixes
18:23:09.123 [Info] Patching void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryGear_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryGear_NotListView __instance)

18:23:09.125 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor()
18:23:09.128 [Info] Writing postfixes
18:23:09.133 [Info] Patching void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechLabPanel_ShowDropErrorMessage::Postfix(BattleTech.UI.MechLabPanel __instance, Localize.Text msg)

18:23:09.136 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg)
18:23:09.139 [Info] Writing postfixes
18:23:09.145 [Info] Patching int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_GetBayRowFromSlot::Prefix(BattleTech.UI.MechBayPanel __instance, Int32& slot)

18:23:09.147 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot)
18:23:09.150 [Info] Writing prefixes
18:23:09.157 [Info] Patching void BattleTech.UI.MechBayPanel::ViewMechStorage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewMechStorage::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, BattleTech.SimGameState ___sim)

18:23:09.159 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewMechStorage()
18:23:09.161 [Info] Writing postfixes
18:23:09.168 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_Init::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.SimGameState sim)
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

18:23:09.171 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
18:23:09.174 [Info] Writing prefixes
18:23:09.176 [Info] Writing postfixes
18:23:09.182 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

18:23:09.185 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
18:23:09.188 [Info] Writing prefixes
18:23:09.196 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, Boolean& locked, Single& minTonnage, Single& maxTonnage)

18:23:09.199 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage)
18:23:09.201 [Info] Writing prefixes
18:23:09.210 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
1 postfixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Postfix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)

18:23:09.213 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
18:23:09.216 [Info] Writing prefixes
18:23:09.219 [Info] Writing postfixes
18:23:09.227 [Info] Patching void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_SaveLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration config, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

18:23:09.230 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config)
18:23:09.232 [Info] Writing prefixes
18:23:09.239 [Info] Patching virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceLoadoutSlot_OnAddItem::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, bool __result, BattleTech.UI.LanceConfiguratorPanel ___LC)

18:23:09.242 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
18:23:09.244 [Info] Writing prefixes
18:23:09.254 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

18:23:09.258 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
18:23:09.260 [Info] Writing prefixes
18:23:09.263 [Info] Writing postfixes
18:23:09.271 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

18:23:09.274 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
18:23:09.276 [Info] Writing prefixes
18:23:09.279 [Info] Writing postfixes
18:23:09.293 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_MoveMultiplier::Prefix(BattleTech.Mech __instance, Single& __result)
2 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MoveMultiplier::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:09.296 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
18:23:09.298 [Info] Writing prefixes
18:23:09.301 [Info] Writing postfixes
18:23:09.307 [Info] Patching void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LogMechKillInflicted::Prefix(BattleTech.Pilot __instance, int stackID, string sourceID)

18:23:09.309 [Info] Running ILHook manipulator on void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID)
18:23:09.312 [Info] Writing prefixes
18:23:09.318 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
4 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

18:23:09.321 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
18:23:09.323 [Info] Writing prefixes
18:23:09.326 [Info] Writing postfixes
18:23:09.334 [Info] Patching void BattleTech.Rendering.MechMeshMerge::GenerateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_GenerateCache::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

18:23:09.337 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::GenerateCache()
18:23:09.339 [Info] Writing prefixes
18:23:09.356 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnDestroy::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

18:23:09.358 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnDestroy()
18:23:09.361 [Info] Writing prefixes
18:23:09.372 [Info] Patching void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_BuildCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

18:23:09.375 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh()
18:23:09.378 [Info] Writing prefixes
18:23:09.397 [Info] Patching void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_RefreshCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

18:23:09.399 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged)
18:23:09.402 [Info] Writing prefixes
18:23:09.409 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnEnable::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

18:23:09.412 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnEnable()
18:23:09.414 [Info] Writing prefixes
18:23:09.423 [Info] Patching virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_ContractInitialize::Postfix(BattleTech.UnitSpawnPointGameLogic __instance)

18:23:09.425 [Info] Running ILHook manipulator on virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize()
18:23:09.429 [Info] Writing postfixes
18:23:09.437 [Info] Patching static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorFactory_CreateMech::Prefix(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

18:23:09.440 [Info] Running ILHook manipulator on static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
18:23:09.443 [Info] Writing prefixes
18:23:09.448 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

18:23:09.451 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
18:23:09.453 [Info] Writing prefixes
18:23:09.460 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

18:23:09.463 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
18:23:09.466 [Info] Writing postfixes
18:23:09.471 [Info] Patching static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorFactory_CreateVehicle::Postfix(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Vehicle& __result)

18:23:09.473 [Info] Running ILHook manipulator on static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
18:23:09.476 [Info] Writing postfixes
18:23:09.481 [Info] Patching void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDestructibleObject_Collapse::Prefix(MechDestructibleObject __instance, UnityEngine.Vector3 forceDirection, float forceMagnitude, UnityEngine.Rigidbody[]& ___destroyedRigidbodies)

18:23:09.484 [Info] Running ILHook manipulator on void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude)
18:23:09.486 [Info] Writing prefixes
18:23:09.493 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_TryShow::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance, BattleTech.MechRepresentationSimGame mechRep)

18:23:09.496 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep)
18:23:09.498 [Info] Writing prefixes
18:23:09.504 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_OnValueChanged::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance)

18:23:09.506 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged()
18:23:09.509 [Info] Writing prefixes
18:23:09.514 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshPaintSelector() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechLabPanel_RefreshPaintSelector::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechPaintPatternSelectorWidget ___paintSelector)

18:23:09.517 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshPaintSelector()
18:23:09.520 [Info] Writing prefixes
18:23:09.525 [Info] Patching UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_childrenRenderers::Prefix(BattleTech.Rendering.MechMeshMerge __instance, Boolean& __state, UnityEngine.SkinnedMeshRenderer[]& ____childrenRenderers, UnityEngine.GameObject& ___visibleObject, UnityEngine.SkinnedMeshRenderer[]& __result)

18:23:09.528 [Info] Running ILHook manipulator on UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers()
18:23:09.531 [Info] Writing prefixes
18:23:09.535 [Info] Patching void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Renderer_sharedMaterial_set::Prefix(UnityEngine.Renderer __instance, UnityEngine.Material value)

18:23:09.538 [Info] Running ILHook manipulator on void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value)
18:23:09.541 [Info] Writing prefixes
18:23:09.545 [Info] Patching void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmorStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)
1 postfixes:
* static void CustomUnits.Mech_ApplyArmorStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)

18:23:09.548 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
18:23:09.550 [Info] Writing prefixes
18:23:09.553 [Info] Writing postfixes
18:23:09.559 [Info] Patching void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_SetNeedsInjury::Prefix(BattleTech.Pilot __instance, BattleTech.InjuryReason reason)

18:23:09.562 [Info] Running ILHook manipulator on void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason)
18:23:09.565 [Info] Writing prefixes
18:23:09.570 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)

18:23:09.573 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location)
18:23:09.575 [Info] Writing prefixes
18:23:09.578 [Info] Writing postfixes
18:23:09.584 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)

18:23:09.587 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location)
18:23:09.589 [Info] Writing prefixes
18:23:09.592 [Info] Writing postfixes
18:23:09.599 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.ArmorLocation value)
1 postfixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.ArmorLocation value)

18:23:09.602 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value)
18:23:09.605 [Info] Writing prefixes
18:23:09.607 [Info] Writing postfixes
18:23:09.613 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Prefix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

18:23:09.616 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
18:23:09.619 [Info] Writing prefixes
18:23:09.622 [Info] Writing postfixes
18:23:09.629 [Info] Patching static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetLongArmorLocation::Postfix(BattleTech.ArmorLocation location, Localize.Text& __result)

18:23:09.632 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location)
18:23:09.634 [Info] Writing postfixes
18:23:09.640 [Info] Patching static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetAbbreviatedChassisLocation::Postfix(BattleTech.ChassisLocations location, Localize.Text& __result)

18:23:09.642 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location)
18:23:09.645 [Info] Writing postfixes
18:23:09.651 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, bool ___usedForCalledShots)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance)

18:23:09.654 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data)
18:23:09.656 [Info] Writing prefixes
18:23:09.659 [Info] Writing postfixes
18:23:09.666 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:09.669 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
18:23:09.672 [Info] Writing prefixes
18:23:09.674 [Info] Writing postfixes
18:23:09.686 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:09.689 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
18:23:09.692 [Info] Writing postfixes
18:23:09.700 [Info] Patching void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Prefix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)
1 postfixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Postfix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)

18:23:09.703 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat)
18:23:09.705 [Info] Writing prefixes
18:23:09.708 [Info] Writing postfixes
18:23:09.720 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_NukeStructureLocation::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomUnits.Mech_NukeStructureLocation::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

18:23:09.723 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
18:23:09.726 [Info] Writing prefixes
18:23:09.728 [Info] Writing postfixes
18:23:09.735 [Info] Patching static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechStructureRules_GetDependentLocation::Postfix(BattleTech.ChassisLocations location, BattleTech.ChassisLocations& __result)

18:23:09.738 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location)
18:23:09.740 [Info] Writing postfixes
18:23:09.745 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

18:23:09.747 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
18:23:09.750 [Info] Writing prefixes
18:23:09.754 [Info] Writing postfixes
18:23:09.759 [Info] Patching bool BattleTech.Mech::get_IsLegged() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsLegged::Postfix(BattleTech.Mech __instance, Boolean& __result)

18:23:09.762 [Info] Running ILHook manipulator on bool BattleTech.Mech::get_IsLegged()
18:23:09.764 [Info] Writing postfixes
18:23:09.769 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:09.772 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
18:23:09.774 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
18:23:09.777 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:09.780 [Info] Writing postfixes
18:23:09.786 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

18:23:09.789 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:09.791 [Info] Writing prefixes
18:23:09.794 [Info] Writing postfixes
18:23:09.808 [Info] Patching bool BattleTech.MechDef::get_IsDestroyed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsDestroyed::Postfix(BattleTech.MechDef __instance, Boolean& __result)

18:23:09.811 [Info] Running ILHook manipulator on bool BattleTech.MechDef::get_IsDestroyed()
18:23:09.813 [Info] Writing postfixes
18:23:09.818 [Info] Patching void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyLegStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

18:23:09.821 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
18:23:09.824 [Info] Writing prefixes
18:23:09.829 [Info] Patching void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

18:23:09.833 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
18:23:09.835 [Info] Writing prefixes
18:23:09.840 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
* static bool CustomUnits.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

18:23:09.843 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
18:23:09.846 [Info] Writing prefixes
18:23:09.851 [Info] Patching void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplySideTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

18:23:09.854 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
18:23:09.857 [Info] Writing prefixes
18:23:09.864 [Info] Patching void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyCenterTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

18:23:09.866 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
18:23:09.869 [Info] Writing prefixes
18:23:09.881 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:09.884 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:09.887 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:09.889 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:09.892 [Info] Writing prefixes
18:23:09.896 [Info] Writing postfixes
18:23:09.905 [Info] Patching virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Prefix(BattleTech.Mech __instance, BattleTech.AttackDirection attackDirection, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Postfix()

18:23:09.908 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection)
18:23:09.910 [Info] Writing prefixes
18:23:09.913 [Info] Writing postfixes
18:23:09.919 [Info] Patching void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Prefix(BattleTech.UI.CombatDebugHUD __instance)
1 postfixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Postfix()

18:23:09.922 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics()
18:23:09.924 [Info] Writing prefixes
18:23:09.927 [Info] Writing postfixes
18:23:09.932 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
1 postfixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:09.935 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
18:23:09.937 [Info] Writing prefixes
18:23:09.940 [Info] Writing postfixes
18:23:09.946 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)

18:23:09.950 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)
18:23:09.952 [Info] Writing prefixes
18:23:09.955 [Info] Writing postfixes
18:23:09.962 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetAdjacentHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)

18:23:09.965 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)
18:23:09.968 [Info] Writing prefixes
18:23:09.974 [Info] Writing postfixes
18:23:09.982 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)

18:23:09.985 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
18:23:09.988 [Info] Writing prefixes
18:23:09.990 [Info] Writing postfixes
18:23:09.999 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeIn::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

18:23:10.001 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length)
18:23:10.004 [Info] Writing prefixes
18:23:10.008 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeOut::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

18:23:10.011 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length)
18:23:10.014 [Info] Writing prefixes
18:23:10.018 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_OnUnitSpawnComplete::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

18:23:10.021 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
18:23:10.023 [Info] Writing prefixes
18:23:10.026 [Info] Writing postfixes
18:23:10.032 [Info] Patching System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_GetRealMissionObjectiveResults::Postfix(BattleTech.Contract __instance, BattleTech.TeamController teamController, System.Collections.Generic.List`1[[BattleTech.MissionObjectiveResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:10.035 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController)
18:23:10.038 [Info] Writing postfixes
18:23:10.049 [Info] Patching bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HostilityMatrix_IsFriendly::Prefix(BattleTech.HostilityMatrix __instance, BattleTech.Team teamOne, BattleTech.Team teamTwo, Boolean& __result)

18:23:10.052 [Info] Running ILHook manipulator on bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo)
18:23:10.055 [Info] Writing prefixes
18:23:10.061 [Info] Patching virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateJump_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

18:23:10.065 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos)
18:23:10.067 [Info] Writing prefixes
18:23:10.167 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

18:23:10.171 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
18:23:10.173 [Info] Writing prefixes
18:23:10.180 [Info] Patching void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, MessageCenterMessage message, String& ____teamId, BattleTech.Team& ____team)

18:23:10.183 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message)
18:23:10.186 [Info] Writing postfixes
18:23:10.192 [Info] Patching virtual void BattleTech.Mech::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_HandleDeath::Postfix(BattleTech.Mech __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

18:23:10.195 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::HandleDeath(string attackerGUID)
18:23:10.197 [Info] Writing postfixes
18:23:10.205 [Info] Patching virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_HandleDeath::Postfix(BattleTech.Vehicle __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

18:23:10.208 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID)
18:23:10.211 [Info] Writing postfixes
18:23:10.217 [Info] Patching virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.OccupyRegionObjective_UpdateCounts::Postfix(BattleTech.Designed.OccupyRegionObjective __instance)

18:23:10.221 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts()
18:23:10.224 [Info] Writing postfixes
18:23:10.232 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ObjectiveGameLogic_ActivateObjectiveConvoy::Prefix(BattleTech.Framework.ObjectiveGameLogic __instance)
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

18:23:10.234 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
18:23:10.238 [Info] Writing prefixes
18:23:10.241 [Info] Writing postfixes
18:23:10.248 [Info] Patching float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetTerrainModifiedCost::Postfix(BattleTech.PathNodeGrid __instance, BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable, BattleTech.AbstractActor ___owningActor, BattleTech.CombatGameState ___combat, Single& __result)

18:23:10.251 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable)
18:23:10.253 [Info] Writing postfixes
18:23:10.261 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

18:23:10.264 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
18:23:10.267 [Info] Writing postfixes
18:23:10.279 [Info] Patching virtual void BattleTech.MechJumpSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_OnAdded::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:10.282 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnAdded()
18:23:10.284 [Info] Writing postfixes
18:23:10.302 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
1 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

18:23:10.305 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
18:23:10.308 [Info] Writing prefixes
18:23:10.310 [Info] Writing postfixes
18:23:10.319 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardDelta::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 delta)

18:23:10.322 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta)
18:23:10.325 [Info] Writing postfixes
18:23:10.333 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)

18:23:10.336 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
18:23:10.339 [Info] Writing prefixes
18:23:10.350 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
4 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:10.353 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
18:23:10.356 [Info] Writing prefixes
18:23:10.358 [Info] Writing postfixes
18:23:10.369 [Info] Patching void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechJumpSequence_Constructor::Prefix(BattleTech.MechJumpSequence __instance, UnityEngine.Vector3& finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)

18:23:10.372 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)
18:23:10.375 [Info] Writing prefixes
18:23:10.383 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

18:23:10.386 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
18:23:10.388 [Info] Writing prefixes
18:23:10.394 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

18:23:10.397 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
18:23:10.399 [Info] Writing prefixes
18:23:10.406 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

18:23:10.408 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
18:23:10.411 [Info] Writing prefixes
18:23:10.419 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

18:23:10.422 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
18:23:10.425 [Info] Writing prefixes
18:23:10.432 [Info] Patching void BattleTech.ActorMovementSequence::set_DamageParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_DamageParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

18:23:10.434 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_DamageParam(float value)
18:23:10.437 [Info] Writing prefixes
18:23:10.443 [Info] Patching void BattleTech.MechJumpSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_UpdateSquad::Postfix(BattleTech.MechJumpSequence __instance, bool ___HasStarted, float ___t)

18:23:10.446 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Update()
18:23:10.448 [Info] Writing postfixes
18:23:10.457 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_JumpDistance::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:10.460 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
18:23:10.463 [Info] Writing prefixes
18:23:10.465 [Info] Writing postfixes
18:23:10.472 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechJumpSequence_CompleteJump::Prefix(BattleTech.MechJumpSequence __instance, Boolean& __state)
3 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomUnits.MechJumpSequence_CompleteJump::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __state)

18:23:10.475 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
18:23:10.477 [Info] Writing prefixes
18:23:10.480 [Info] Writing postfixes
18:23:10.486 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_RefreshSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, bool forceUpdate, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

18:23:10.489 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
18:23:10.492 [Info] Writing prefixes
18:23:10.495 [Info] Writing postfixes
18:23:10.503 [Info] Patching virtual void BattleTech.MechRepresentation::LateUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:10.506 [Info] Running ILHook manipulator on virtual void BattleTech.MechRepresentation::LateUpdate()
18:23:10.508 [Info] Transpiling virtual void BattleTech.MechRepresentation::LateUpdate()
18:23:10.514 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:10.525 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_OnAdded::Prefix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType& ___moveType)

18:23:10.527 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnAdded()
18:23:10.531 [Info] Writing prefixes
18:23:10.543 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadDamageState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentationSimGame_LoadDamageState::Prefix(BattleTech.MechRepresentationSimGame __instance)

18:23:10.546 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadDamageState()
18:23:10.548 [Info] Writing prefixes
18:23:10.553 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:10.556 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
18:23:10.558 [Info] Writing postfixes
18:23:10.564 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)
* static void CustomUnits.Mech_WorkingJumpjets::Postfix(BattleTech.Mech __instance, Int32& __result)

18:23:10.567 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
18:23:10.569 [Info] Writing postfixes
18:23:10.575 [Info] Patching System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateJump_GetAllDFATargets::Postfix(BattleTech.UI.SelectionStateJump __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:10.578 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets()
18:23:10.581 [Info] Writing postfixes
18:23:10.592 [Info] Patching virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanDFATargetFromPosition::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, Boolean& __result)

18:23:10.594 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position)
18:23:10.597 [Info] Writing postfixes
18:23:10.602 [Info] Patching virtual int BattleTech.AbstractActor::get_GuardLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GuardLevel::Postfix(BattleTech.Mech __instance, Int32& __result)

18:23:10.605 [Info] Running ILHook manipulator on virtual int BattleTech.AbstractActor::get_GuardLevel()
18:23:10.607 [Info] Writing postfixes
18:23:10.614 [Info] Patching bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanEngageTarget::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, String& debugMsg, Boolean& __result)

18:23:10.617 [Info] Running ILHook manipulator on bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg)
18:23:10.620 [Info] Writing postfixes
18:23:10.626 [Info] Patching void BattleTech.MechDisplacementSequence::ApplyDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDisplacementSequence_ApplyDamage::Prefix(BattleTech.MechDisplacementSequence __instance)

18:23:10.629 [Info] Running ILHook manipulator on void BattleTech.MechDisplacementSequence::ApplyDamage()
18:23:10.631 [Info] Writing prefixes
18:23:10.643 [Info] Patching void BattleTech.Rendering.UI.UICreep::RefreshCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_RefreshCache::Prefix(BattleTech.Rendering.UI.UICreep __instance, UnityEngine.Bounds& ___creepBounds)

18:23:10.646 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.UICreep::RefreshCache()
18:23:10.649 [Info] Writing prefixes
18:23:10.660 [Info] Patching void BattleTech.MechRepresentation::SetLoadAnimation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetLoadAnimation::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.663 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetLoadAnimation()
18:23:10.666 [Info] Writing prefixes
18:23:10.672 [Info] Patching void BattleTech.MechRepresentation::UpdateHeatSetting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateHeatSetting::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.675 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateHeatSetting()
18:23:10.678 [Info] Writing prefixes
18:23:10.683 [Info] Patching void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateLegDamageAnimFlags::Prefix(BattleTech.MechRepresentation __instance, BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)

18:23:10.686 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)
18:23:10.688 [Info] Writing prefixes
18:23:10.692 [Info] Patching void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerMeleeTransition::Prefix(BattleTech.MechRepresentation __instance, bool meleeIn)

18:23:10.695 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn)
18:23:10.697 [Info] Writing prefixes
18:23:10.702 [Info] Patching void BattleTech.MechRepresentation::ClearLoadState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ClearLoadState::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.705 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ClearLoadState()
18:23:10.707 [Info] Writing prefixes
18:23:10.712 [Info] Patching void BattleTech.MechRepresentation::PlayComponentCritVFX(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayComponentCritVFX::Prefix(BattleTech.MechRepresentation __instance, int location)

18:23:10.715 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayComponentCritVFX(int location)
18:23:10.717 [Info] Writing prefixes
18:23:10.723 [Info] Patching void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayDeathFloatie::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod)

18:23:10.726 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod)
18:23:10.728 [Info] Writing prefixes
18:23:10.733 [Info] Patching void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetMeleeIdleState::Prefix(BattleTech.MechRepresentation __instance, bool isMelee)

18:23:10.736 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee)
18:23:10.738 [Info] Writing prefixes
18:23:10.743 [Info] Patching void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleRandomIdles::Prefix(BattleTech.MechRepresentation __instance, bool shouldIdle)

18:23:10.746 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle)
18:23:10.748 [Info] Writing prefixes
18:23:10.754 [Info] Patching void BattleTech.MechRepresentation::SetIdleAnimState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetIdleAnimState::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.757 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetIdleAnimState()
18:23:10.760 [Info] Writing prefixes
18:23:10.766 [Info] Patching void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayImpactAnimSimple::Prefix(BattleTech.MechRepresentation __instance, BattleTech.AttackDirection attackDirection, float totalDamage)

18:23:10.769 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage)
18:23:10.772 [Info] Writing prefixes
18:23:10.779 [Info] Patching void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetUnsteadyAnim::Prefix(BattleTech.MechRepresentation __instance, bool isUnsteady)

18:23:10.782 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady)
18:23:10.784 [Info] Writing prefixes
18:23:10.789 [Info] Patching void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ForceKnockdown::Prefix(BattleTech.MechRepresentation __instance, UnityEngine.Vector2 attackDirection)

18:23:10.791 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection)
18:23:10.794 [Info] Writing prefixes
18:23:10.800 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.802 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetAudio()
18:23:10.805 [Info] Writing prefixes
18:23:10.810 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.813 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetAudio()
18:23:10.816 [Info] Writing prefixes
18:23:10.821 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.824 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetEffect()
18:23:10.827 [Info] Writing prefixes
18:23:10.832 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.835 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetEffect()
18:23:10.837 [Info] Writing prefixes
18:23:10.842 [Info] Patching void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleHeadlights::Prefix(BattleTech.MechRepresentation __instance, bool headlightsActive)

18:23:10.845 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive)
18:23:10.848 [Info] Writing prefixes
18:23:10.853 [Info] Patching void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_HandleDeathOnLoad::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod, int location)

18:23:10.856 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location)
18:23:10.858 [Info] Writing prefixes
18:23:10.863 [Info] Patching void BattleTech.MechRepresentation::PlayAlliesReportDeathVO() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayAlliesReportDeathVO::Prefix(BattleTech.MechRepresentation __instance)

18:23:10.866 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayAlliesReportDeathVO()
18:23:10.869 [Info] Writing prefixes
18:23:10.875 [Info] Patching void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerFootFall::Prefix(BattleTech.MechRepresentation __instance, int leftFoot)

18:23:10.878 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot)
18:23:10.881 [Info] Writing prefixes
18:23:10.897 [Info] Patching void BattleTech.ActorMovementSequence::PlayMeleeAnim() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Prefix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee, BattleTech.ICombatant ___meleeTarget)

18:23:10.900 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::PlayMeleeAnim()
18:23:10.902 [Info] Writing prefixes
18:23:10.905 [Info] Writing postfixes
18:23:10.913 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateCache::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

18:23:10.916 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateCache()
18:23:10.919 [Info] Writing prefixes
18:23:10.928 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateProperties() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateProperties::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

18:23:10.931 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateProperties()
18:23:10.933 [Info] Writing prefixes
18:23:11.037 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_AddProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)

18:23:11.040 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)
18:23:11.042 [Info] Writing prefixes
18:23:11.048 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_RemoveProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)

18:23:11.051 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)
18:23:11.053 [Info] Writing prefixes
18:23:11.060 [Info] Patching virtual void BattleTech.VehicleRepresentation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_Update::Prefix(BattleTech.VehicleRepresentation __instance)

18:23:11.062 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::Update()
18:23:11.065 [Info] Writing prefixes
18:23:11.070 [Info] Patching virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:11.073 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
18:23:11.075 [Info] Transpiling virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
18:23:11.078 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:11.085 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:11.088 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
18:23:11.090 [Info] Transpiling void BattleTech.MechDef::Refresh()
18:23:11.093 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:11.096 [Info] Writing postfixes
18:23:11.101 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SorterMechInventory.Patches.MechDef_SetInventory_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponentRef[]& newInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:11.104 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
18:23:11.107 [Info] Transpiling void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
18:23:11.109 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:11.112 [Info] Writing prefixes
18:23:11.119 [Info] Patching virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_GatherDependencies::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:11.122 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:11.125 [Info] Writing prefixes
18:23:11.135 [Info] Patching void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_RequestInventoryPrefabs::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:11.139 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:11.142 [Info] Writing prefixes
18:23:11.153 [Info] Patching virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_GatherDependencies::Postfix(BattleTech.VehicleChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:11.157 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:11.160 [Info] Writing postfixes
18:23:11.173 [Info] Patching virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_DependenciesLoaded::Postfix(BattleTech.VehicleChassisDef __instance, uint loadWeight, Boolean& __result)

18:23:11.176 [Info] Running ILHook manipulator on virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight)
18:23:11.178 [Info] Writing postfixes
18:23:11.186 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:11.189 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:11.191 [Info] Writing postfixes
18:23:11.199 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:11.202 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:11.205 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:11.208 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:11.212 [Info] Writing postfixes
18:23:11.220 [Info] Patching virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight)
1 postfixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Postfix(BattleTech.MechDef __instance, uint loadWeight, Boolean& __result)

18:23:11.223 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight)
18:23:11.226 [Info] Writing prefixes
18:23:11.228 [Info] Writing postfixes
18:23:11.236 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_BeginRequestResources::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

18:23:11.239 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
18:23:11.242 [Info] Writing prefixes
18:23:11.244 [Info] Writing postfixes
18:23:11.255 [Info] Patching virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ChassisDef_DependenciesLoaded::Prefix(BattleTech.ChassisDef __instance, uint loadWeight, Boolean& __result, BattleTech.MechComponentRef[]& ___fixedEquipment)

18:23:11.258 [Info] Running ILHook manipulator on virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight)
18:23:11.261 [Info] Writing prefixes
18:23:11.269 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

18:23:11.272 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
18:23:11.274 [Info] Writing postfixes
18:23:11.280 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUD_OnActorSelected::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

18:23:11.283 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
18:23:11.286 [Info] Writing postfixes
18:23:11.293 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)

18:23:11.296 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
18:23:11.298 [Info] Writing prefixes
18:23:11.305 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

18:23:11.308 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
18:23:11.311 [Info] Writing prefixes
18:23:11.314 [Info] Writing postfixes
18:23:11.323 [Info] Patching void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbstractActor_OnPlayerVisibilityChanged::Prefix(BattleTech.AbstractActor __instance, BattleTech.VisibilityLevel& newLevel)

18:23:11.327 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
18:23:11.329 [Info] Writing prefixes
18:23:11.336 [Info] Patching void BattleTech.PathingManager::removeDeadPaths() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingManager_removeDeadPaths::Prefix(BattleTech.PathingManager __instance)

18:23:11.339 [Info] Running ILHook manipulator on void BattleTech.PathingManager::removeDeadPaths()
18:23:11.342 [Info] Writing prefixes
18:23:11.350 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)

18:23:11.353 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
18:23:11.355 [Info] Writing prefixes
18:23:11.363 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)
* static void CustomUnits.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

18:23:11.367 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
18:23:11.369 [Info] Writing postfixes
18:23:11.376 [Info] Patching void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SharedVisibilityCache_RebuildCache::Prefix(BattleTech.SharedVisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

18:23:11.379 [Info] Running ILHook manipulator on void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
18:23:11.382 [Info] Writing prefixes
18:23:11.393 [Info] Patching void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_RebuildCache::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

18:23:11.396 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
18:23:11.398 [Info] Writing prefixes
18:23:11.405 [Info] Patching void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_UpdateCacheReciprocal::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

18:23:11.408 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
18:23:11.410 [Info] Writing prefixes
18:23:11.423 [Info] Patching BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_getSharedValue::Prefix(BattleTech.VisibilityCache __instance, BattleTech.ICombatant target, BattleTech.VisibilityLevelAndAttribution& __result)

18:23:11.426 [Info] Running ILHook manipulator on BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target)
18:23:11.429 [Info] Writing prefixes
18:23:11.450 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyContact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyContact::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

18:23:11.453 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyContact()
18:23:11.456 [Info] Writing prefixes
18:23:11.462 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyVisibility::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

18:23:11.465 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility()
18:23:11.467 [Info] Writing prefixes
18:23:11.473 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMech::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech __result)

18:23:11.476 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
18:23:11.478 [Info] Writing postfixes
18:23:11.485 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_ShowWeaponsUpTo::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

18:23:11.488 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
18:23:11.491 [Info] Writing prefixes
18:23:11.494 [Info] Writing postfixes
18:23:11.503 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)

18:23:11.506 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
18:23:11.509 [Info] Writing prefixes
18:23:11.522 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_InitStats::Postfix(BattleTech.Mech __instance)

18:23:11.524 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
18:23:11.527 [Info] Writing prefixes
18:23:11.530 [Info] Writing postfixes
18:23:11.550 [Info] Patching void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_OnUnitSpawn::Prefix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_OnUnitSpawn::Postfix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

18:23:11.553 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message)
18:23:11.555 [Info] Writing prefixes
18:23:11.558 [Info] Writing postfixes
18:23:11.564 [Info] Patching void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_AddViewer::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_AddViewer::Postfix(FogOfWar.FogOfWarSystem __instance, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

18:23:11.568 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit)
18:23:11.570 [Info] Writing prefixes
18:23:11.572 [Info] Writing postfixes
18:23:11.579 [Info] Patching void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatSelectionHandler_DeselectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

18:23:11.582 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor)
18:23:11.585 [Info] Writing prefixes
18:23:11.590 [Info] Patching void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_WipeToValue::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.FogOfWarState& fowState)

18:23:11.593 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState)
18:23:11.596 [Info] Writing prefixes
18:23:11.603 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

18:23:11.606 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
18:23:11.608 [Info] Writing prefixes
18:23:11.611 [Info] Writing postfixes
18:23:11.616 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants0::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:11.619 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid)
18:23:11.622 [Info] Writing postfixes
18:23:11.627 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants1::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:11.630 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags)
18:23:11.633 [Info] Writing postfixes
18:23:11.639 [Info] Patching void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_DEBUG_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation& aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)

18:23:11.641 [Info] Running ILHook manipulator on void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)
18:23:11.644 [Info] Writing prefixes
18:23:11.655 [Info] Patching BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AITeam_getInvocationForCurrentUnit::Prefix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)
1 postfixes:
* static void CustomUnits.AITeam_getInvocationForCurrentUnit::Postfix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)

18:23:11.658 [Info] Running ILHook manipulator on BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit()
18:23:11.661 [Info] Writing prefixes
18:23:11.664 [Info] Writing postfixes
18:23:11.686 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActorInfo_UpdateItemVisibility::Prefix(BattleTech.UI.CombatHUDActorInfo __instance)

18:23:11.689 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility()
18:23:11.691 [Info] Writing prefixes
18:23:11.702 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PlayerLanceSpawnerGameLogic_OnEnterActive::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

18:23:11.705 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive()
18:23:11.708 [Info] Writing prefixes
18:23:11.714 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_UpdateSplineAnim::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 ___Forward, float ___t)

18:23:11.716 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
18:23:11.719 [Info] Writing prefixes
18:23:11.722 [Info] Writing postfixes
18:23:11.730 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_TurnParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

18:23:11.733 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
18:23:11.735 [Info] Writing prefixes
18:23:11.740 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_ForwardParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

18:23:11.742 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
18:23:11.745 [Info] Writing prefixes
18:23:11.750 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_IsMovingParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

18:23:11.753 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
18:23:11.755 [Info] Writing prefixes
18:23:11.761 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_BeginMovementParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

18:23:11.763 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
18:23:11.766 [Info] Writing prefixes
18:23:11.772 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init_fakeTurret::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

18:23:11.775 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
18:23:11.778 [Info] Writing prefixes
18:23:11.780 [Info] Writing postfixes
18:23:11.787 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_DisplayedTurret_set::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.Turret value)

18:23:11.790 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value)
18:23:11.792 [Info] Writing prefixes
18:23:11.798 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_UpdateTurretStructureAndArmor::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance)

18:23:11.800 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor()
18:23:11.803 [Info] Writing prefixes
18:23:11.809 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_OnActorTakeDamage::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, MessageCenterMessage message)

18:23:11.812 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message)
18:23:11.814 [Info] Writing prefixes
18:23:11.819 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_Init::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.UI.CombatHUD HUD)

18:23:11.822 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD)
18:23:11.824 [Info] Writing prefixes
18:23:11.829 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)

18:23:11.832 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
18:23:11.835 [Info] Writing postfixes
18:23:11.840 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_RefreshActorInfo::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:11.843 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
18:23:11.845 [Info] Writing prefixes
18:23:11.848 [Info] Writing postfixes
18:23:11.853 [Info] Patching float BattleTech.Mech::get_WalkSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_WalkSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:11.856 [Info] Running ILHook manipulator on float BattleTech.Mech::get_WalkSpeed()
18:23:11.859 [Info] Writing postfixes
18:23:11.863 [Info] Patching float BattleTech.Mech::get_RunSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_RunSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:11.866 [Info] Running ILHook manipulator on float BattleTech.Mech::get_RunSpeed()
18:23:11.868 [Info] Writing postfixes
18:23:11.873 [Info] Patching BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_propertyBlock::Prefix(BattleTech.GameRepresentation __instance, BattleTech.Rendering.PropertyBlockManager& __result)

18:23:11.876 [Info] Running ILHook manipulator on BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock()
18:23:11.878 [Info] Writing prefixes
18:23:11.883 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargetable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:11.886 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargetable()
18:23:11.889 [Info] Writing prefixes
18:23:11.894 [Info] Patching void BattleTech.GameRepresentation::set_IsTargetable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

18:23:11.896 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargetable(bool value)
18:23:11.899 [Info] Writing prefixes
18:23:11.903 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargeted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:11.906 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargeted()
18:23:11.909 [Info] Writing prefixes
18:23:11.914 [Info] Patching void BattleTech.GameRepresentation::set_IsTargeted(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

18:23:11.916 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargeted(bool value)
18:23:11.919 [Info] Writing prefixes
18:23:11.923 [Info] Patching bool BattleTech.GameRepresentation::get_IsAvailable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:11.926 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsAvailable()
18:23:11.929 [Info] Writing prefixes
18:23:11.933 [Info] Patching void BattleTech.GameRepresentation::set_IsAvailable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

18:23:11.936 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsAvailable(bool value)
18:23:11.939 [Info] Writing prefixes
18:23:11.943 [Info] Patching bool BattleTech.GameRepresentation::get_IsSelected() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:11.946 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsSelected()
18:23:11.949 [Info] Writing prefixes
18:23:11.953 [Info] Patching void BattleTech.GameRepresentation::set_IsSelected(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

18:23:11.956 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsSelected(bool value)
18:23:11.959 [Info] Writing prefixes
18:23:11.964 [Info] Patching bool BattleTech.GameRepresentation::get_IsHovered() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:11.967 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsHovered()
18:23:11.969 [Info] Writing prefixes
18:23:11.974 [Info] Patching void BattleTech.GameRepresentation::set_IsHovered(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

18:23:11.976 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsHovered(bool value)
18:23:11.979 [Info] Writing prefixes
18:23:11.984 [Info] Patching bool BattleTech.GameRepresentation::get_IsDead() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:11.987 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsDead()
18:23:11.989 [Info] Writing prefixes
18:23:11.993 [Info] Patching void BattleTech.GameRepresentation::set_IsDead(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

18:23:11.996 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsDead(bool value)
18:23:11.999 [Info] Writing prefixes
18:23:12.003 [Info] Patching bool BattleTech.GameRepresentation::get_VisibleToPlayer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_VisibleToPlayer::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

18:23:12.006 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_VisibleToPlayer()
18:23:12.008 [Info] Writing prefixes
18:23:12.014 [Info] Patching void BattleTech.GameRepresentation::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_Awake::Prefix(BattleTech.GameRepresentation __instance)

18:23:12.017 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::Awake()
18:23:12.020 [Info] Writing prefixes
18:23:12.026 [Info] Patching void BattleTech.GameRepresentation::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_OnDestroy::Prefix(BattleTech.GameRepresentation __instance)

18:23:12.028 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::OnDestroy()
18:23:12.031 [Info] Writing prefixes
18:23:12.037 [Info] Patching void BattleTech.GameRepresentation::InitHighlighting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_InitHighlighting::Prefix(BattleTech.GameRepresentation __instance)

18:23:12.039 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::InitHighlighting()
18:23:12.042 [Info] Writing prefixes
18:23:12.048 [Info] Patching void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_SetHighlightColor::Prefix(BattleTech.GameRepresentation __instance, BattleTech.CombatGameState combat, BattleTech.Team team)

18:23:12.051 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team)
18:23:12.054 [Info] Writing prefixes
18:23:12.060 [Info] Patching void BattleTech.GameRepresentation::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeIn::Prefix(BattleTech.GameRepresentation __instance, float length)

18:23:12.063 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeIn(float length)
18:23:12.065 [Info] Writing prefixes
18:23:12.069 [Info] Patching void BattleTech.GameRepresentation::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeOut::Prefix(BattleTech.GameRepresentation __instance, float length)

18:23:12.072 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeOut(float length)
18:23:12.075 [Info] Writing prefixes
18:23:12.080 [Info] Patching void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopManualPersistentVFX::Prefix(BattleTech.GameRepresentation __instance, string vfxName)

18:23:12.083 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName)
18:23:12.085 [Info] Writing prefixes
18:23:12.092 [Info] Patching void BattleTech.GameRepresentation::PauseAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_PauseAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

18:23:12.095 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::PauseAllPersistentVFX()
18:23:12.097 [Info] Writing prefixes
18:23:12.105 [Info] Patching void BattleTech.GameRepresentation::ResumeAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_ResumeAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

18:23:12.107 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::ResumeAllPersistentVFX()
18:23:12.110 [Info] Writing prefixes
18:23:12.116 [Info] Patching void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopAllPersistentVFXAttachedToLocation::Prefix(BattleTech.GameRepresentation __instance, int location)

18:23:12.118 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location)
18:23:12.121 [Info] Writing prefixes
18:23:12.129 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

18:23:12.132 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
18:23:12.135 [Info] Writing prefixes
18:23:12.137 [Info] Writing postfixes
18:23:12.142 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(Boolean& __runOriginal, BattleTech.BaseComponentRef componentRef, String& __result)
2 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)
* static void CustomUnits.MechHardpointRules_GetComponentPrefabName::Postfix(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames, String& __result)

18:23:12.145 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
18:23:12.147 [Info] Writing prefixes
18:23:12.150 [Info] Writing postfixes
18:23:12.154 [Info] Patching void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_RequestInventoryPrefabs::Prefix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)
1 postfixes:
* static void CustomUnits.MechDef_RequestInventoryPrefabs::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)

18:23:12.157 [Info] Running ILHook manipulator on void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight)
18:23:12.160 [Info] Writing prefixes
18:23:12.162 [Info] Writing postfixes
18:23:12.168 [Info] Patching bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_InventoryPrefabsLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight, BattleTech.MechComponentRef[] ___inventory, Boolean& __result)

18:23:12.170 [Info] Running ILHook manipulator on bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight)
18:23:12.173 [Info] Writing prefixes
18:23:12.180 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:12.183 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:12.186 [Info] Writing prefixes
18:23:12.189 [Info] Writing postfixes
18:23:12.197 [Info] Patching virtual void WeaponEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeaponEffect_UpdatePrefire::Prefix(WeaponEffect __instance, Single& ___preFireRate, BattleTech.CombatGameState ___Combat, Single& ___t)

18:23:12.200 [Info] Running ILHook manipulator on virtual void WeaponEffect::Update()
18:23:12.202 [Info] Writing prefixes
18:23:12.209 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
* static bool CustomUnits.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

18:23:12.213 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
18:23:12.216 [Info] Writing prefixes
18:23:12.218 [Info] Writing postfixes
18:23:12.226 [Info] Patching virtual void WeaponEffect::PlayMuzzleFlash() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.WeaponEffect_PlayMuzzleFlash::Postfix(WeaponEffect __instance)

18:23:12.229 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayMuzzleFlash()
18:23:12.232 [Info] Writing postfixes
18:23:12.239 [Info] Patching virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ComponentRepresentation_Init::Prefix(BattleTech.ComponentRepresentation __instance, BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)

18:23:12.243 [Info] Running ILHook manipulator on virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)
18:23:12.246 [Info] Writing prefixes
18:23:12.252 [Info] Patching virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_InitGameRep::Prefix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName, BattleTech.CombatGameState ___combat)
1 postfixes:
* static void CustomUnits.Weapon_InitGameRep::Postfix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)

18:23:12.256 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)
18:23:12.259 [Info] Writing prefixes
18:23:12.262 [Info] Writing postfixes
18:23:12.275 [Info] Patching bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DataManager_Exists::Prefix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, String& id)
1 postfixes:
* static void CustomUnits.DataManager_Exists::Postfix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, string id, Boolean& __result)

18:23:12.277 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id)
18:23:12.280 [Info] Writing prefixes
18:23:12.283 [Info] Writing postfixes
18:23:12.423 [Info] Patching void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_RequestResource::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& id)

18:23:12.426 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id)
18:23:12.429 [Info] Writing prefixes
18:23:12.435 [Info] Patching bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_Contains::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& resourceId)

18:23:12.438 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId)
18:23:12.440 [Info] Writing prefixes
18:23:12.447 [Info] Patching void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DataManager_PoolGameObject::Prefix(BattleTech.Data.DataManager __instance, String& id, UnityEngine.GameObject gameObj)

18:23:12.450 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj)
18:23:12.453 [Info] Writing prefixes
18:23:12.459 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)

18:23:12.462 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
18:23:12.465 [Info] Writing prefixes
18:23:12.472 [Info] Patching virtual void BattleTech.EncounterLayerParent::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.EncounterLayerParent_Update::Postfix(BattleTech.EncounterLayerParent __instance)

18:23:12.475 [Info] Running ILHook manipulator on virtual void BattleTech.EncounterLayerParent::Awake()
18:23:12.478 [Info] Writing postfixes
18:23:12.486 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:12.489 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
18:23:12.492 [Info] Writing prefixes
18:23:12.514 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
2 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void CustomUnits.EncounterLayerParent_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

18:23:12.517 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
18:23:12.520 [Info] Writing prefixes
18:23:12.523 [Info] Writing postfixes
18:23:12.533 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
6 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

18:23:12.536 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:23:12.539 [Info] Writing prefixes
18:23:12.542 [Info] Writing postfixes
18:23:12.559 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

18:23:12.562 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:12.564 [Info] Writing prefixes
18:23:12.595 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
5 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:23:12.597 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:12.601 [Info] Writing prefixes
18:23:12.603 [Info] Writing postfixes
18:23:12.635 [Info] Patching void BattleTech.SimGameState::FillContractLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_FillContractLance::Prefix(BattleTech.SimGameState __instance)

18:23:12.638 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FillContractLance()
18:23:12.641 [Info] Writing prefixes
18:23:12.649 [Info] Patching void BattleTech.SimGameState::OnLanceConfiguratorAccept() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_OnLanceConfiguratorAccept::Prefix(BattleTech.SimGameState __instance)

18:23:12.651 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnLanceConfiguratorAccept()
18:23:12.654 [Info] Writing prefixes
18:23:12.660 [Info] Patching BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GetLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration& __result, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

18:23:12.662 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance()
18:23:12.665 [Info] Writing prefixes
18:23:12.673 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:12.676 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
18:23:12.684 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
18:23:12.687 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:12.690 [Info] Writing prefixes
18:23:12.693 [Info] Writing postfixes
18:23:12.701 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults, Int32& ___numUnits, Int32& ___numOpponentUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState, BattleTech.Data.DataManager& ___dm)

18:23:12.704 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract)
18:23:12.706 [Info] Writing prefixes
18:23:12.709 [Info] Writing postfixes
18:23:12.718 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract)

18:23:12.721 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
18:23:12.723 [Info] Writing prefixes
18:23:12.730 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowMyResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults)

18:23:12.733 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults()
18:23:12.736 [Info] Writing prefixes
18:23:12.743 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLanceTonnage::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText)

18:23:12.746 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage()
18:23:12.748 [Info] Writing prefixes
18:23:12.756 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLance::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText, BattleTech.UI.LanceHeaderWidget& ___headerWidget)

18:23:12.759 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance()
18:23:12.761 [Info] Writing prefixes
18:23:12.769 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static bool CustomUnits.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

18:23:12.772 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
18:23:12.775 [Info] Writing prefixes
18:23:12.784 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
* static bool CustomUnits.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:12.787 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
18:23:12.790 [Info] Transpiling void BattleTech.SimGameState::ResolveCompleteContract()
18:23:12.793 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:12.800 [Info] Writing prefixes
18:23:12.803 [Info] Writing postfixes
18:23:12.826 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowOpponentResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults)

18:23:12.829 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults()
18:23:12.832 [Info] Writing prefixes
18:23:12.838 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)

18:23:12.841 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config)
18:23:12.843 [Info] Writing prefixes
18:23:12.846 [Info] Writing postfixes
18:23:12.854 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

18:23:12.857 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
18:23:12.859 [Info] Writing prefixes
18:23:12.862 [Info] Writing postfixes
18:23:12.869 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

18:23:12.872 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
18:23:12.874 [Info] Writing prefixes
18:23:12.880 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

18:23:12.883 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
18:23:12.886 [Info] Writing prefixes
18:23:12.891 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits)

18:23:12.894 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
18:23:12.896 [Info] Writing prefixes
18:23:12.906 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustomUnits.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

18:23:12.908 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
18:23:12.911 [Info] Writing postfixes
18:23:12.916 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:12.919 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
18:23:12.922 [Info] Writing prefixes
18:23:12.925 [Info] Writing postfixes
18:23:12.934 [Info] Patching void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUD_updateHUDElements::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

18:23:12.937 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor)
18:23:12.940 [Info] Writing postfixes
18:23:12.946 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorSelected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:12.949 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message)
18:23:12.951 [Info] Writing postfixes
18:23:12.957 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorDeselected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:12.960 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID)
18:23:12.963 [Info] Writing postfixes
18:23:12.967 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayInvoked::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:12.970 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message)
18:23:12.973 [Info] Writing postfixes
18:23:12.977 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayDismissed::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:12.980 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message)
18:23:12.983 [Info] Writing postfixes
18:23:12.989 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

18:23:12.992 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
18:23:12.994 [Info] Writing postfixes
18:23:13.007 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

18:23:13.010 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
18:23:13.013 [Info] Writing postfixes
18:23:13.020 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Enabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

18:23:13.023 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter()
18:23:13.025 [Info] Writing postfixes
18:23:13.030 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Selected_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

18:23:13.032 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter()
18:23:13.035 [Info] Writing postfixes
18:23:13.039 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Highlighted_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

18:23:13.042 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter()
18:23:13.045 [Info] Writing postfixes
18:23:13.051 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Disabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

18:23:13.054 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter()
18:23:13.056 [Info] Writing postfixes
18:23:13.062 [Info] Patching static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ShortcutExtensions_DOScale::Prefix(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)

18:23:13.065 [Info] Running ILHook manipulator on static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)
18:23:13.068 [Info] Writing prefixes
18:23:13.079 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD)

18:23:13.084 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
18:23:13.088 [Info] Writing prefixes
18:23:13.097 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

18:23:13.100 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
18:23:13.102 [Info] Writing postfixes
18:23:13.108 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerExit::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

18:23:13.111 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
18:23:13.113 [Info] Writing postfixes
18:23:13.120 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)

18:23:13.123 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
18:23:13.126 [Info] Writing prefixes
18:23:13.128 [Info] Writing postfixes
18:23:13.138 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_InitAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:13.141 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
18:23:13.143 [Info] Writing prefixes
18:23:13.146 [Info] Writing postfixes
18:23:13.154 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshActionHotKeys::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

18:23:13.157 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys()
18:23:13.160 [Info] Writing prefixes
18:23:13.168 [Info] Patching bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionState_ProcessDoneWithMechButton::Prefix(BattleTech.UI.SelectionState __instance, string button, Boolean& __result)

18:23:13.171 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button)
18:23:13.174 [Info] Writing prefixes
18:23:13.182 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)

18:23:13.185 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
18:23:13.188 [Info] Writing prefixes
18:23:13.190 [Info] Writing postfixes
18:23:13.205 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomUnits.CombatHUDActionButton_ExecuteClickAbilities::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

18:23:13.208 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
18:23:13.210 [Info] Writing prefixes
18:23:13.318 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:13.320 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
18:23:13.323 [Info] Writing prefixes
18:23:13.326 [Info] Writing postfixes
18:23:13.337 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

18:23:13.340 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
18:23:13.344 [Info] Writing prefixes
18:23:13.347 [Info] Writing postfixes
18:23:13.354 [Info] Patching System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeightedFactor_CollectMasksForCellAndPathNode::Prefix(BattleTech.WeightedFactor __instance, BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:13.357 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode)
18:23:13.360 [Info] Writing prefixes
18:23:13.368 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_OnLanceConfiguratorClosed::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance)

18:23:13.371 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed()
18:23:13.374 [Info] Writing prefixes
18:23:13.380 [Info] Patching void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Prefix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Postfix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

18:23:13.383 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
18:23:13.386 [Info] Writing prefixes
18:23:13.389 [Info] Writing postfixes
18:23:13.399 [Info] Patching void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_InitDistanceClamp::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Transform xform)

18:23:13.402 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform)
18:23:13.404 [Info] Writing postfixes
18:23:13.420 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
2 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
* static void CustomUnits.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

18:23:13.422 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
18:23:13.426 [Info] Writing prefixes
18:23:13.429 [Info] Writing postfixes
18:23:13.438 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

18:23:13.440 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
18:23:13.443 [Info] Writing prefixes
18:23:13.446 [Info] Writing postfixes
18:23:13.452 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMove_UpdateMousePosUI::Postfix(BattleTech.UI.SelectionStateMove __instance)

18:23:13.455 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate()
18:23:13.457 [Info] Writing postfixes
18:23:13.464 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxWalkDistance::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:13.466 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
18:23:13.469 [Info] Writing postfixes
18:23:13.475 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxSprintDistance::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:13.477 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
18:23:13.480 [Info] Writing postfixes
18:23:13.485 [Info] Patching virtual float BattleTech.Vehicle::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxWalkDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

18:23:13.488 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxWalkDistance()
18:23:13.490 [Info] Writing postfixes
18:23:13.496 [Info] Patching virtual float BattleTech.Vehicle::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxSprintDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

18:23:13.499 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxSprintDistance()
18:23:13.501 [Info] Writing postfixes
18:23:13.507 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)
* static void CustomUnits.JumpPathing_JumpPathing::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

18:23:13.510 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
18:23:13.513 [Info] Writing postfixes
18:23:13.521 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:13.524 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
18:23:13.526 [Info] Writing postfixes
18:23:13.536 [Info] Patching virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_InitNaval::Prefix(BattleTech.Mech __instance, UnityEngine.Vector3& position, float facing, bool checkEncounterCells)

18:23:13.539 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
18:23:13.542 [Info] Writing prefixes
18:23:13.554 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)

18:23:13.557 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
18:23:13.560 [Info] Writing prefixes
18:23:13.567 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
5 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMovePartial::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:13.570 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
18:23:13.572 [Info] Writing prefixes
18:23:13.575 [Info] Writing postfixes
18:23:13.585 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
* static void CustomUnits.Pathing_ResetPathGridIfTouchingPartial::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor actor)

18:23:13.587 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
18:23:13.590 [Info] Writing prefixes
18:23:13.597 [Info] Patching void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Pathing_UpdateCurrentPath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

18:23:13.600 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI)
18:23:13.603 [Info] Writing postfixes
18:23:13.610 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
1 postfixes:
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

18:23:13.612 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
18:23:13.615 [Info] Writing prefixes
18:23:13.618 [Info] Writing postfixes
18:23:13.624 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickPosPartial::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

18:23:13.627 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
18:23:13.630 [Info] Writing prefixes
18:23:13.632 [Info] Writing postfixes
18:23:13.638 [Info] Patching void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_LockToRotateInPlace::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

18:23:13.640 [Info] Running ILHook manipulator on void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI)
18:23:13.643 [Info] Writing prefixes
18:23:13.648 [Info] Patching virtual void BattleTech.UI.SelectionState::OnAddToStack() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_OnAddToStack::Postfix(BattleTech.UI.SelectionState __instance)

18:23:13.650 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionState::OnAddToStack()
18:23:13.653 [Info] Writing postfixes
18:23:13.658 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_CanBackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, Boolean& __result)

18:23:13.661 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut()
18:23:13.663 [Info] Writing postfixes
18:23:13.668 [Info] Patching void BattleTech.JumpPathing::UpdateCurrentPath() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Prefix(BattleTech.JumpPathing __instance, Single& __state)
1 postfixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Postfix(BattleTech.JumpPathing __instance, Single& __state)

18:23:13.671 [Info] Running ILHook manipulator on void BattleTech.JumpPathing::UpdateCurrentPath()
18:23:13.674 [Info] Writing prefixes
18:23:13.676 [Info] Writing postfixes
18:23:13.681 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::BackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_BackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance)

18:23:13.684 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::BackOut()
18:23:13.687 [Info] Writing postfixes
18:23:13.691 [Info] Patching AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_CurrentSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, AudioSwitch_surface_type& __result)

18:23:13.694 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType()
18:23:13.696 [Info] Writing prefixes
18:23:13.701 [Info] Patching bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_BlipDisplayed::Prefix(BattleTech.PilotableActorRepresentation __instance, Boolean& __result)

18:23:13.704 [Info] Running ILHook manipulator on bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed()
18:23:13.708 [Info] Writing prefixes
18:23:13.714 [Info] Patching void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_Init::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)

18:23:13.716 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)
18:23:13.719 [Info] Writing prefixes
18:23:13.729 [Info] Patching void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_InitPaintScheme::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.HeraldryDef heraldryDef, string teamGUID)

18:23:13.732 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID)
18:23:13.735 [Info] Writing prefixes
18:23:13.746 [Info] Patching void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newVisibility, bool showUI)

18:23:13.750 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI)
18:23:13.752 [Info] Writing prefixes
18:23:13.758 [Info] Patching void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_ClearForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)

18:23:13.761 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)
18:23:13.763 [Info] Writing prefixes
18:23:13.769 [Info] Patching void BattleTech.PilotableActorRepresentation::PlayEjectFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_PlayEjectFX::Prefix(BattleTech.PilotableActorRepresentation __instance)

18:23:13.772 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::PlayEjectFX()
18:23:13.774 [Info] Writing prefixes
18:23:13.779 [Info] Patching void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetBlipPositionRotation::Prefix(BattleTech.PilotableActorRepresentation __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

18:23:13.782 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
18:23:13.784 [Info] Writing prefixes
18:23:13.790 [Info] Patching virtual void BattleTech.PilotDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_FromJSON::Postfix(BattleTech.PilotDef __instance)

18:23:13.792 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::FromJSON(string json)
18:23:13.794 [Info] Writing postfixes
18:23:13.799 [Info] Patching void BattleTech.PilotDef::PostDeserialzation() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_PostDeserialzation::Postfix(BattleTech.PilotDef __instance)

18:23:13.802 [Info] Running ILHook manipulator on void BattleTech.PilotDef::PostDeserialzation()
18:23:13.804 [Info] Writing postfixes
18:23:13.810 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)
* static void CustomUnits.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

18:23:13.812 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
18:23:13.815 [Info] Writing postfixes
18:23:13.824 [Info] Patching void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Postfix(BattleTech.SimGameState __instance)

18:23:13.827 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs()
18:23:13.830 [Info] Writing prefixes
18:23:13.832 [Info] Writing postfixes
18:23:13.854 [Info] Patching void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_OnCareerModeCharacterCreationComplete::Prefix(BattleTech.SimGameState __instance, BattleTech.Pilot& p)

18:23:13.857 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p)
18:23:13.859 [Info] Writing prefixes
18:23:13.865 [Info] Patching System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotGenerator_GeneratePilots::Postfix(BattleTech.PilotGenerator __instance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:13.868 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList)
18:23:13.871 [Info] Writing postfixes
18:23:13.878 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

18:23:13.881 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
18:23:13.884 [Info] Writing prefixes
18:23:13.890 [Info] Patching virtual bool BattleTech.AbstractActor::get_IsShutDown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_IsShutDown::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

18:23:13.893 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::get_IsShutDown()
18:23:13.895 [Info] Writing postfixes
18:23:13.900 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByTypeShutdown::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

18:23:13.903 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
18:23:13.906 [Info] Writing prefixes
18:23:13.909 [Info] Writing postfixes
18:23:13.916 [Info] Patching void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ToggleAbilityState::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

18:23:13.918 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState()
18:23:13.921 [Info] Writing prefixes
18:23:13.926 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ActivateAbility::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

18:23:13.929 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility()
18:23:13.931 [Info] Writing prefixes
18:23:13.938 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomUnits.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

18:23:13.941 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
18:23:13.944 [Info] Writing postfixes
18:23:13.951 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:13.954 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:13.957 [Info] Writing postfixes
18:23:13.965 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)
* static void CustomUnits.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

18:23:13.967 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
18:23:13.970 [Info] Writing postfixes
18:23:13.978 [Info] Patching static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetTerrainCost::Prefix(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType, Single& __result)

18:23:13.981 [Info] Running ILHook manipulator on static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType)
18:23:13.983 [Info] Writing prefixes
18:23:13.992 [Info] Patching BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetPathNode::Prefix(BattleTech.PathNodeGrid __instance, int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors, BattleTech.PathNode& __result, BattleTech.PathNode[,]& ___pathNodes, BattleTech.MapTerrainDataCell& ___gpnCell, BattleTech.CombatGameState& ___combat, BattleTech.AbstractActor& ___owningActor)

18:23:13.994 [Info] Running ILHook manipulator on BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors)
18:23:13.997 [Info] Writing prefixes
18:23:14.004 [Info] Patching void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LethalInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

18:23:14.007 [Info] Running ILHook manipulator on void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:23:14.009 [Info] Writing prefixes
18:23:14.016 [Info] Patching void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_MaxInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

18:23:14.018 [Info] Running ILHook manipulator on void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:23:14.021 [Info] Writing prefixes
18:23:14.026 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
2 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

18:23:14.029 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:23:14.032 [Info] Writing prefixes
18:23:14.034 [Info] Writing postfixes
18:23:14.041 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)
* static void CustomUnits.MessageCenter_PublishMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

18:23:14.044 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
18:23:14.047 [Info] Writing prefixes
18:23:14.052 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 4 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
4 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:14.059 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:14.062 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:14.065 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.068 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.071 [Info] Writing prefixes
18:23:14.075 [Info] Writing postfixes
18:23:14.083 [Info] Patching void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_KillPilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

18:23:14.086 [Info] Running ILHook manipulator on void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:23:14.089 [Info] Writing prefixes
18:23:14.094 [Info] Patching float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetCurrentStructureSquad::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, Single& __result)

18:23:14.097 [Info] Running ILHook manipulator on float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location)
18:23:14.100 [Info] Writing postfixes
18:23:14.104 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomUnits.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

18:23:14.107 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
18:23:14.110 [Info] Writing postfixes
18:23:14.115 [Info] Patching virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_NullWidgets::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

18:23:14.117 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets()
18:23:14.120 [Info] Writing prefixes
18:23:14.126 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::RemoveMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_RemoveMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

18:23:14.129 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::RemoveMech()
18:23:14.131 [Info] Writing prefixes
18:23:14.138 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SGRoomController_MechBay_LoadMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force, BattleTech.MechDef& ___loadedMechDef)

18:23:14.140 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force)
18:23:14.143 [Info] Writing prefixes
18:23:14.149 [Info] Patching void BattleTech.UI.MechBayPanel::ViewBays() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)

18:23:14.152 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewBays()
18:23:14.154 [Info] Writing postfixes
18:23:14.160 [Info] Patching void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechPlacementPopup_SetData::Prefix(BattleTech.UI.MechPlacementPopup __instance, BattleTech.UI.MechBayRowGroupWidget ___rowGroupWidget, BattleTech.SimGameState sim)

18:23:14.163 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech)
18:23:14.166 [Info] Writing prefixes
18:23:14.173 [Info] Patching void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayRowGroupWidget_SetData::Prefix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim, BattleTech.UI.MechBayRowWidget[]& ___bays)
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_SetData::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)

18:23:14.176 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)
18:23:14.179 [Info] Writing prefixes
18:23:14.182 [Info] Writing postfixes
18:23:14.194 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_strings::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& startingMechs)

18:23:14.197 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs)
18:23:14.200 [Info] Writing prefixes
18:23:14.208 [Info] Patching void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Prefix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
1 postfixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Postfix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)

18:23:14.211 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
18:23:14.213 [Info] Writing prefixes
18:23:14.216 [Info] Writing postfixes
18:23:14.224 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_MechDefs::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& startingMechs)

18:23:14.227 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs)
18:23:14.230 [Info] Writing prefixes
18:23:14.236 [Info] Patching int BattleTech.SimGameState::GetFirstFreeMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SimGameState_GetFirstFreeMechBay::Postfix(BattleTech.SimGameState __instance, Int32& __result)

18:23:14.239 [Info] Running ILHook manipulator on int BattleTech.SimGameState::GetFirstFreeMechBay()
18:23:14.241 [Info] Writing postfixes
18:23:14.246 [Info] Patching int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_GetFirstFreeBaySlot::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, Int32& __result)

18:23:14.249 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot()
18:23:14.252 [Info] Writing postfixes
18:23:14.260 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static bool CustomUnits.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.StatCollection ___companyStats, BattleTech.UI.SimGameInterruptManager ___interruptQueue)
3 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

18:23:14.263 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
18:23:14.267 [Info] Writing prefixes
18:23:14.270 [Info] Writing postfixes
18:23:14.282 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechRepresentationSimGame __instance)
* static bool CustomUnits.MechRepresentationSimGame_LoadWeapons::Prefix(BattleTech.MechRepresentationSimGame __instance, BattleTech.Data.DataManager ___dataManager)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

18:23:14.285 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
18:23:14.287 [Info] Writing prefixes
18:23:14.290 [Info] Writing postfixes
18:23:14.297 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)
* static bool CustomUnits.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement)

18:23:14.300 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
18:23:14.303 [Info] Writing prefixes
18:23:14.310 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)
* static void CustomUnits.MechBayPanel_::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisInfoWidget ___chassisInfoWidget)

18:23:14.312 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
18:23:14.315 [Info] Writing postfixes
18:23:14.321 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

18:23:14.324 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
18:23:14.327 [Info] Writing prefixes
18:23:14.331 [Info] Writing postfixes
18:23:14.340 [Info] Patching virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Get::Prefix(object __instance, String& id)

18:23:14.343 [Info] Running ILHook manipulator on virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id)
18:23:14.346 [Info] Writing prefixes
18:23:14.353 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Exists::Prefix(object __instance, String& id)

18:23:14.356 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id)
18:23:14.359 [Info] Writing prefixes
18:23:14.364 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_TryGet::Prefix(object __instance, String& id)

18:23:14.484 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t)
18:23:14.486 [Info] Writing prefixes
18:23:14.494 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

18:23:14.497 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
18:23:14.500 [Info] Writing prefixes
18:23:14.503 [Info] Writing postfixes
18:23:14.509 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

18:23:14.511 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
18:23:14.514 [Info] Writing prefixes
18:23:14.517 [Info] Writing postfixes
18:23:14.523 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:14.526 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:14.529 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:14.532 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.542 [Info] Writing prefixes
18:23:14.545 [Info] Writing postfixes
18:23:14.555 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:14.558 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:14.560 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:14.564 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.567 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.570 [Info] Writing postfixes
18:23:14.583 [Info] Patching void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_SetOccupiedDesignMask::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& approvedMasks)

18:23:14.586 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks)
18:23:14.589 [Info] Writing prefixes
18:23:14.597 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_OnPositionUpdate::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, Boolean& updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
1 postfixes:
* static void CustomUnits.AbstractActor_OnPositionUpdate::Postfix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging, BattleTech.DesignMaskDef& ___opuDesignMask)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:14.599 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
18:23:14.602 [Info] Transpiling virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
18:23:14.605 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.608 [Info] Writing prefixes
18:23:14.611 [Info] Writing postfixes
18:23:14.618 [Info] Patching float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_DamagePerShotFromPosition::Prefix(BattleTech.Weapon __instance, BattleTech.DesignMaskDef& designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)

18:23:14.621 [Info] Running ILHook manipulator on float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)
18:23:14.623 [Info] Writing prefixes
18:23:14.631 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_FindBlockerBetween::Postfix(BattleTech.PathNodeGrid __instance, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

18:23:14.634 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
18:23:14.636 [Info] Writing postfixes
18:23:14.651 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_FindBlockerReciprocal::Prefix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

18:23:14.654 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
18:23:14.658 [Info] Writing prefixes
18:23:14.663 [Info] Patching virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleRepresentation_GetDestructibleObject::Postfix(BattleTech.VehicleRepresentation __instance, MechDestructibleObject& __result)

18:23:14.666 [Info] Running ILHook manipulator on virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location)
18:23:14.669 [Info] Writing postfixes
18:23:14.677 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:23:14.680 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:14.682 [Info] Writing postfixes
18:23:14.692 [Info] Patching float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameState_GetTargetTerrainModifier::Postfix(BattleTech.ToHit __instance, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee, Single& __result)

18:23:14.695 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee)
18:23:14.697 [Info] Writing postfixes
18:23:14.704 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)
* static bool CustomUnits.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

18:23:14.707 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
18:23:14.709 [Info] Writing prefixes
18:23:14.715 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnCollisionEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collision other)

18:23:14.718 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other)
18:23:14.721 [Info] Writing prefixes
18:23:14.727 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnParticleCollision::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.GameObject other)

18:23:14.731 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other)
18:23:14.733 [Info] Writing prefixes
18:23:14.740 [Info] Patching virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_Init::Postfix(BattleTech.Vehicle __instance, UnityEngine.Vector3 position, float facing, bool checkEncounterCells)

18:23:14.743 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
18:23:14.746 [Info] Writing postfixes
18:23:14.756 [Info] Patching static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingUtil_DoesMovementLineCollide::Prefix(BattleTech.AbstractActor thisActor, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& actors)
1 postfixes:
* static void CustomUnits.PathingUtil_DoesMovementLineCollide::Postfix(BattleTech.AbstractActor thisActor, BattleTech.AbstractActor& collision, Boolean& __result)

18:23:14.759 [Info] Running ILHook manipulator on static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier)
18:23:14.761 [Info] Writing prefixes
18:23:14.764 [Info] Writing postfixes
18:23:14.772 [Info] Patching static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNode_HasCollisionAt::Prefix(BattleTech.AbstractActor unit, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allActors)
1 postfixes:
* static void CustomUnits.PathNode_HasCollisionAt::Postfix(BattleTech.AbstractActor unit, Boolean& __result)

18:23:14.776 [Info] Running ILHook manipulator on static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor)
18:23:14.778 [Info] Writing prefixes
18:23:14.780 [Info] Writing postfixes
18:23:14.789 [Info] Patching float BattleTech.PathNodeGrid::GetGradeModifier(float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetGradeModifier::Postfix(BattleTech.PathNodeGrid __instance, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

18:23:14.792 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetGradeModifier(float grade)
18:23:14.795 [Info] Writing postfixes
18:23:14.801 [Info] Patching float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSteepnessMultiplier::Postfix(BattleTech.PathNodeGrid __instance, float steepness, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

18:23:14.804 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade)
18:23:14.807 [Info] Writing postfixes
18:23:14.813 [Info] Patching bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_WillFireAtTarget::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, Boolean& __result)

18:23:14.816 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target)
18:23:14.819 [Info] Writing postfixes
18:23:14.825 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:14.828 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
18:23:14.831 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
18:23:14.834 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:14.836 [Info] Writing postfixes
18:23:14.843 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

18:23:14.846 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
18:23:14.849 [Info] Writing prefixes
18:23:14.857 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)

18:23:14.860 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
18:23:14.862 [Info] Writing postfixes
18:23:14.873 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForMelee::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

18:23:14.876 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
18:23:14.879 [Info] Writing postfixes
18:23:14.886 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForDFA::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

18:23:14.890 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
18:23:14.892 [Info] Writing postfixes
18:23:14.900 [Info] Patching bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDWeaponSlot_contemplatingMelee::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, Boolean& __result)

18:23:14.903 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target)
18:23:14.905 [Info] Writing postfixes
18:23:14.912 [Info] Patching float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_GetToHitFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack, Single& __result)

18:23:14.915 [Info] Running ILHook manipulator on float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack)
18:23:14.917 [Info] Writing postfixes
18:23:14.925 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)
* static void CustomUnits.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

18:23:14.928 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
18:23:14.931 [Info] Writing postfixes
18:23:14.939 [Info] Patching void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_AddInstability::Prefix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

18:23:14.942 [Info] Running ILHook manipulator on void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
18:23:14.944 [Info] Writing prefixes
18:23:14.954 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)
* static void CustomUnits.MechDef_RefreshChassis::Postfix(BattleTech.MechDef __instance)

18:23:14.957 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
18:23:14.960 [Info] Writing postfixes
18:23:14.967 [Info] Patching virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetActorInfoFromVisLevel::Postfix(BattleTech.Mech __instance, BattleTech.VisibilityLevel visLevel, Localize.Text& __result)

18:23:14.969 [Info] Running ILHook manipulator on virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel)
18:23:14.972 [Info] Writing postfixes
18:23:14.983 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetHeatData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:23:14.986 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
18:23:14.989 [Info] Writing prefixes
18:23:14.992 [Info] Writing postfixes
18:23:15.002 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnitDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnits.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.LanceStatGraphic& ___MeleeBar, BattleTech.UI.LanceStatGraphic& ___HeatEffBar)

18:23:15.005 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
18:23:15.007 [Info] Writing postfixes
18:23:15.017 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)
* static void CustomUnits.SG_Shop_FullMechDetailPanel_FillInFullMech::Postfix(BattleTech.UI.SG_Shop_FullMechDetailPanel __instance, BattleTech.MechDef theMech, BattleTech.UI.LanceStat& ___Stat4, BattleTech.UI.LanceStat& ___Stat6)

18:23:15.020 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
18:23:15.023 [Info] Writing postfixes
18:23:15.031 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

18:23:15.034 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
18:23:15.036 [Info] Writing postfixes
18:23:15.043 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

18:23:15.046 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
18:23:15.048 [Info] Writing postfixes
18:23:15.055 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetMeleeData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

18:23:15.058 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
18:23:15.060 [Info] Writing prefixes
18:23:15.063 [Info] Writing postfixes
18:23:15.070 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ChassisLocations location, Single& __result)

18:23:15.073 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location)
18:23:15.076 [Info] Writing postfixes
18:23:15.080 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location, Single& __result)

18:23:15.083 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location)
18:23:15.086 [Info] Writing postfixes
18:23:15.092 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ArmorLocation location, Single& __result)

18:23:15.095 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location)
18:23:15.097 [Info] Writing postfixes
18:23:15.102 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location, Single& __result)

18:23:15.105 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location)
18:23:15.107 [Info] Writing postfixes
18:23:15.112 [Info] Patching virtual bool BattleTech.Mech::get_IsAnyStructureExposed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsAnyStructureExposed::Postfix(BattleTech.Mech __instance, Boolean& __result)

18:23:15.115 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsAnyStructureExposed()
18:23:15.117 [Info] Writing postfixes
18:23:15.123 [Info] Patching virtual float BattleTech.Mech::get_SummaryStructureCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_SummaryStructureCurrent::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:15.126 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_SummaryStructureCurrent()
18:23:15.128 [Info] Writing postfixes
18:23:15.134 [Info] Patching float BattleTech.MechDef::get_MechDefCurrentStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefCurrentStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

18:23:15.137 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefCurrentStructure()
18:23:15.139 [Info] Writing postfixes
18:23:15.144 [Info] Patching float BattleTech.MechDef::get_MechDefMaxStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefMaxStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

18:23:15.147 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefMaxStructure()
18:23:15.150 [Info] Writing postfixes
18:23:15.155 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_ResetArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:15.158 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars()
18:23:15.160 [Info] Writing prefixes
18:23:15.171 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_UpdateArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:15.174 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars()
18:23:15.177 [Info] Writing prefixes
18:23:15.184 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)
* static void CustomUnits.MechDetails_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList, BattleTech.MechDef ___activeMech)

18:23:15.187 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
18:23:15.190 [Info] Writing postfixes
18:23:15.197 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnMechLabClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

18:23:15.200 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked()
18:23:15.202 [Info] Writing prefixes
18:23:15.208 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

18:23:15.211 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked()
18:23:15.213 [Info] Writing prefixes
18:23:15.219 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

18:23:15.222 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
18:23:15.225 [Info] Writing prefixes
18:23:15.230 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnRepairClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

18:23:15.233 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked()
18:23:15.235 [Info] Writing prefixes
18:23:15.240 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnScrapClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

18:23:15.243 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked()
18:23:15.245 [Info] Writing prefixes
18:23:15.253 [Info] Patching static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDHeatDisplay_GetProjectedHeat::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, BattleTech.Mech mech, BattleTech.UI.CombatHUD hud, Int32& __result)

18:23:15.256 [Info] Running ILHook manipulator on static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud)
18:23:15.259 [Info] Writing postfixes
18:23:15.265 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

18:23:15.268 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel()
18:23:15.271 [Info] Writing prefixes
18:23:15.276 [Info] Patching virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDStabilityDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

18:23:15.279 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel()
18:23:15.281 [Info] Writing prefixes
18:23:15.286 [Info] Patching int BattleTech.Mech::get__heat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech__heat_get::Postfix(BattleTech.Mech __instance, Int32& __result)

18:23:15.289 [Info] Running ILHook manipulator on int BattleTech.Mech::get__heat()
18:23:15.292 [Info] Writing postfixes
18:23:15.296 [Info] Patching void BattleTech.Mech::set__heat(int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech__heat_set::Prefix(BattleTech.Mech __instance, Int32& value)

18:23:15.299 [Info] Running ILHook manipulator on void BattleTech.Mech::set__heat(int value)
18:23:15.301 [Info] Writing prefixes
18:23:15.306 [Info] Patching int BattleTech.Mech::get_TempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_TempHeat_get::Postfix(BattleTech.Mech __instance, Int32& __result, Int32& ____tempHeat)

18:23:15.308 [Info] Running ILHook manipulator on int BattleTech.Mech::get_TempHeat()
18:23:15.311 [Info] Writing postfixes
18:23:15.316 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddEngineDamageHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

18:23:15.319 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
18:23:15.322 [Info] Writing prefixes
18:23:15.324 [Info] Writing postfixes
18:23:15.329 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)

18:23:15.332 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
18:23:15.334 [Info] Writing prefixes
18:23:15.337 [Info] Writing postfixes
18:23:15.342 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddJumpHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

18:23:15.345 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
18:23:15.347 [Info] Writing prefixes
18:23:15.350 [Info] Writing postfixes
18:23:15.355 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWalkHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

18:23:15.359 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
18:23:15.362 [Info] Writing prefixes
18:23:15.365 [Info] Writing postfixes
18:23:15.371 [Info] Patching void BattleTech.Mech::AddTempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_AddSprintHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

18:23:15.374 [Info] Running ILHook manipulator on void BattleTech.Mech::AddTempHeat()
18:23:15.376 [Info] Writing postfixes
18:23:15.381 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWeaponHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

18:23:15.384 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
18:23:15.386 [Info] Writing prefixes
18:23:15.389 [Info] Writing postfixes
18:23:15.395 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:15.398 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:15.401 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:15.405 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:15.409 [Info] Writing prefixes
18:23:15.412 [Info] Writing postfixes
18:23:15.433 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:23:15.436 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:15.439 [Info] Writing prefixes
18:23:15.442 [Info] Writing postfixes
18:23:15.451 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(Single& currentValue)
* static void CustomUnits.MechStatisticsRules_CalculateTonnage::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:23:15.454 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:15.457 [Info] Writing prefixes
18:23:15.459 [Info] Writing postfixes
18:23:15.466 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateCBillValue::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:23:15.469 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:15.471 [Info] Writing prefixes
18:23:15.474 [Info] Writing postfixes
18:23:15.479 [Info] Patching bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_CreateMeleeOrders::Prefix(BattleTech.UI.SelectionStateMove __instance)

18:23:15.482 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders()
18:23:15.485 [Info] Writing prefixes
18:23:15.491 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

18:23:15.495 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:15.498 [Info] Writing prefixes
18:23:15.506 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayMechInfoWidget_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.LanceStat[] ___mechStats, BattleTech.MechDef ___selectedMech)

18:23:15.509 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetStats()
18:23:15.512 [Info] Writing postfixes
18:23:15.520 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
3 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void CustomUnits.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.TMProWrapper.LocalizableText ___headLabel, BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftLegLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightLegLabel, BattleTech.MechDef ___activeMech)
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

18:23:15.523 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
18:23:15.526 [Info] Writing prefixes
18:23:15.529 [Info] Writing postfixes
18:23:15.536 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:15.539 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
18:23:15.542 [Info] Writing prefixes
18:23:15.545 [Info] Writing postfixes
18:23:15.557 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:15.560 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
18:23:15.562 [Info] Transpiling void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
18:23:15.575 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:15.591 [Info] Patching static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_AlignVehicleToGround::Prefix(UnityEngine.Transform vehicleTransform, float deltaTime)

18:23:15.594 [Info] Running ILHook manipulator on static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime)
18:23:15.596 [Info] Writing prefixes
18:23:15.604 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.MechDef_GatherDependencies_fake::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:15.607 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:15.610 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:15.612 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:15.615 [Info] Writing postfixes
18:23:15.623 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.ChassisDef_GatherDependencies_fake::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

18:23:15.626 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
18:23:15.628 [Info] Writing postfixes
18:23:15.635 [Info] Patching virtual void BattleTech.VehicleDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_RefreshChassis::Postfix(BattleTech.VehicleDef __instance)

18:23:15.638 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::RefreshChassis()
18:23:15.640 [Info] Writing postfixes
18:23:15.647 [Info] Patching bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsLocationDestroyed::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisLocations loc, Boolean& __result)

18:23:15.650 [Info] Running ILHook manipulator on bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc)
18:23:15.652 [Info] Writing postfixes
18:23:15.656 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechStructureSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

18:23:15.659 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef)
18:23:15.661 [Info] Writing postfixes
18:23:15.668 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
1 postfixes:
* static void CustomUnits.Contract_GenerateSalvage::Postfix(System.Collections.Generic.List<BattleTech.UnitResult> lostUnits)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:15.671 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:23:15.673 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
18:23:15.677 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:15.681 [Info] Writing prefixes
18:23:15.684 [Info] Writing postfixes
18:23:15.698 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)
* static void CustomUnits.MechValidationRules_ValidateMechCanBeFielded::Postfix(BattleTech.SimGameState sim, BattleTech.MechDef mechDef, Boolean& __result)

18:23:15.701 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
18:23:15.704 [Info] Writing postfixes
18:23:15.709 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechPosessesWeaponsSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

18:23:15.711 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef)
18:23:15.714 [Info] Writing postfixes
18:23:15.718 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)

18:23:15.721 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
18:23:15.724 [Info] Writing prefixes
18:23:15.728 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
2 postfixes:
* static void CustomUnits.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

18:23:15.731 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
18:23:15.734 [Info] Writing prefixes
18:23:15.738 [Info] Writing postfixes
18:23:15.743 [Info] Patching void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_OnActorTakeDamage::Prefix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenterMessage message)

18:23:15.745 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message)
18:23:15.748 [Info] Writing prefixes
18:23:15.755 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
1 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

18:23:15.758 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
18:23:15.760 [Info] Writing prefixes
18:23:15.763 [Info] Writing postfixes
18:23:15.771 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:15.773 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
18:23:15.776 [Info] Writing prefixes
18:23:15.779 [Info] Writing postfixes
18:23:15.788 [Info] Patching void BattleTech.VehicleDef::Refresh() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_Refresh::Prefix(BattleTech.VehicleDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

18:23:15.791 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
18:23:15.793 [Info] Writing prefixes
18:23:15.796 [Info] Writing postfixes
18:23:15.800 [Info] Patching void BattleTech.VehicleChassisDef::Refresh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleChassisDef_Refresh::Prefix(BattleTech.VehicleChassisDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)

18:23:15.803 [Info] Running ILHook manipulator on void BattleTech.VehicleChassisDef::Refresh()
18:23:15.805 [Info] Writing prefixes
18:23:15.811 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_refreshMechInfo::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUDStatusPanel ___StatusPanel, BattleTech.AbstractActor ___displayedActor)
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

18:23:15.814 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
18:23:15.817 [Info] Writing prefixes
18:23:15.819 [Info] Writing postfixes
18:23:15.825 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.SkirmishSettings_Beta_FinalizeLances::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LancePreviewPanel ___playerLancePreview, BattleTech.UI.UIManager ___uiManager)

18:23:15.828 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
18:23:15.831 [Info] Writing prefixes
18:23:15.833 [Info] Writing postfixes
18:23:15.938 [Info] Patching virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SkirmishSettings_Beta_OnAddedToHierarchy::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance)

18:23:15.941 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy()
18:23:15.943 [Info] Writing prefixes
18:23:15.951 [Info] Patching void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatMeter_RefreshHeatInfo::Prefix(BattleTech.UI.CombatHUDHeatMeter __instance, float ___underlyingHeatTarget, float ___underlyingHeatDisplayed, float ___underlyingPredictionTarget, float ___underlyingPredictionDisplayed)

18:23:15.953 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo()
18:23:15.956 [Info] Writing prefixes
18:23:15.966 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMoveBase_CreateMoveOrders::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, bool isJump, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:15.968 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
18:23:15.971 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
18:23:15.974 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:15.977 [Info] Writing prefixes
18:23:15.988 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, bool consideringJump, bool useCOILPathingPreview, BattleTech.AbstractActor ___displayedActor, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

18:23:15.991 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
18:23:15.994 [Info] Writing prefixes
18:23:15.997 [Info] Writing postfixes
18:23:16.009 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardWaypoint::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType ___moveType)

18:23:16.012 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest)
18:23:16.015 [Info] Writing postfixes
18:23:16.021 [Info] Patching void BattleTech.ActorTwistSequence::update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_update::Prefix(BattleTech.ActorTwistSequence __instance, Object& __state)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_update::Postfix(BattleTech.ActorTwistSequence __instance, float ___t, Object& __state, BattleTech.PilotableActorRepresentation ___actorRep)

18:23:16.023 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::update()
18:23:16.026 [Info] Writing prefixes
18:23:16.029 [Info] Writing postfixes
18:23:16.073 [Info] ### Harmony id=com.BattleTech.PanicSystem, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void PanicSystem.PanicSystem::Init(string modDir, string settings), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\PanicSystem\PanicSystem.dll
### At 2023-06-01 06.23.16
18:23:16.078 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.AAR_UnitStatusWidget __instance)
2 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)
* static void PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:16.081 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
18:23:16.084 [Info] Transpiling void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
18:23:16.087 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:16.091 [Info] Writing prefixes
18:23:16.094 [Info] Writing postfixes
18:23:16.103 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:23:16.107 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:16.109 [Info] Writing postfixes
18:23:16.121 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_OnActivationBegin_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance)

18:23:16.124 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
18:23:16.127 [Info] Writing prefixes
18:23:16.136 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 5 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

18:23:16.140 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:23:16.142 [Info] Writing prefixes
18:23:16.146 [Info] Writing postfixes
18:23:16.156 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)
* static void PanicSystem.Patches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:16.159 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
18:23:16.161 [Info] Writing postfixes
18:23:16.171 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
5 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void PanicSystem.Patches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:16.174 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:16.177 [Info] Writing prefixes
18:23:16.180 [Info] Writing postfixes
18:23:16.189 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
3 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()

18:23:16.192 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:23:16.195 [Info] Writing prefixes
18:23:16.198 [Info] Writing postfixes
18:23:16.207 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()

18:23:16.210 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
18:23:16.212 [Info] Writing postfixes
18:23:16.221 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)
1 postfixes:
* static void PanicSystem.Patches.CombatHUDFloatieStack_AddFloatie_Patch1::Postfix(BattleTech.UI.CombatHUDFloatieStack __instance)

18:23:16.225 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
18:23:16.227 [Info] Writing prefixes
18:23:16.229 [Info] Writing postfixes
18:23:16.236 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(Localize.Text text, BattleTech.FloatieMessage+MessageNature nature) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.CombatHUDFloatieStack_AddFloatie_Patch2::Postfix(BattleTech.UI.CombatHUDFloatieStack __instance)

18:23:16.239 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(Localize.Text text, BattleTech.FloatieMessage+MessageNature nature)
18:23:16.241 [Info] Writing postfixes
18:23:16.248 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()
* static void PanicSystem.Patches.GameInstance_LaunchContract_Patch::Postfix()

18:23:16.251 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
18:23:16.254 [Info] Writing prefixes
18:23:16.257 [Info] Writing postfixes
18:23:16.262 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PanicSystem.Patches.GameInstance_Load_Patch::Prefix(Boolean& __runOriginal, BattleTech.Save.GameInstanceSave save)

18:23:16.264 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
18:23:16.268 [Info] Writing prefixes
18:23:16.275 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

18:23:16.277 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
18:23:16.280 [Info] Writing postfixes
18:23:16.287 [Info] Patching virtual void BattleTech.LanceSpawnerGameLogic::OnTriggerSpawn(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.LanceSpawnerGameLogic_OnTriggerSpawn_Patch::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

18:23:16.290 [Info] Running ILHook manipulator on virtual void BattleTech.LanceSpawnerGameLogic::OnTriggerSpawn(MessageCenterMessage message)
18:23:16.293 [Info] Writing postfixes
18:23:16.299 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)
* static void PanicSystem.Patches.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

18:23:16.302 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
18:23:16.305 [Info] Writing prefixes
18:23:16.307 [Info] Writing postfixes
18:23:16.312 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:16.315 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:16.318 [Info] Writing prefixes
18:23:16.320 [Info] Writing postfixes
18:23:16.328 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
* static void PanicSystem.Patches.Mech_OnLocationDestroyed_Patch::Postfix(BattleTech.Mech __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:16.331 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:16.333 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:16.337 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:16.340 [Info] Writing prefixes
18:23:16.342 [Info] Writing postfixes
18:23:16.351 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void PanicSystem.Patches.MechMeleeSequence_CompleteOrders::Postfix()

18:23:16.354 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
18:23:16.357 [Info] Writing postfixes
18:23:16.363 [Info] Patching void BattleTech.SimGameState::_OnFirstPlayInit(BattleTech.SimGameState+SimGameType gameType, bool allowDebug) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.SimGameState__OnFirstPlayInit_Patch::Postfix()

18:23:16.366 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnFirstPlayInit(BattleTech.SimGameState+SimGameType gameType, bool allowDebug)
18:23:16.369 [Info] Writing postfixes
18:23:16.388 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:16.391 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:16.394 [Info] Writing prefixes
18:23:16.397 [Info] Writing postfixes
18:23:16.403 [Info] Patching virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Components.SelectionStateEject_CreateConfirmationOrders_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:16.406 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders()
18:23:16.408 [Info] Transpiling virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders()
18:23:16.411 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Components.SelectionStateEject_CreateConfirmationOrders_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:16.418 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()
* static void PanicSystem.Components.StatusEffect+CombatGameState_LoadComplete_Patch::Postfix()

18:23:16.421 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
18:23:16.423 [Info] Writing postfixes
18:23:16.448 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:16.450 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
18:23:16.453 [Info] PrefixWrapper created: HXI︳3︳::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
18:23:16.456 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
18:23:16.459 [Info] PrefixWrapper created: HXI︳4︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
18:23:16.461 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 84 ms
18:23:16.465 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract, Boolean& __runOriginal)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:16.468 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
18:23:16.470 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
18:23:16.473 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:16.476 [Info] Writing prefixes
18:23:16.479 [Info] Writing postfixes
18:23:16.485 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:16.488 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
18:23:16.491 [Info] PrefixWrapper created: HXI︳5︳::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
18:23:16.493 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
18:23:16.497 [Info] PrefixWrapper created: HXI︳6︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
18:23:16.500 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
18:23:16.503 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, Boolean& __runOriginal)

18:23:16.506 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
18:23:16.509 [Info] Writing prefixes
18:23:16.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
18:23:16.519 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:16.522 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:16.525 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:16.529 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:16.533 [Info] Writing prefixes
18:23:16.536 [Info] Writing postfixes
18:23:16.550 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
18:23:16.554 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void PanicSystem.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)
* static void BiggerDrops.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

18:23:16.557 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
18:23:16.559 [Info] Writing postfixes
18:23:16.565 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
18:23:16.569 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PanicSystem.Patches.GameInstance_Load_Patch::Prefix(Boolean& __runOriginal, BattleTech.Save.GameInstanceSave save)
* static void BiggerDrops.Patches.GameInstance_Load_Patch::Prefix(BattleTech.Save.GameInstanceSave save)

18:23:16.572 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
18:23:16.575 [Info] Writing prefixes
18:23:16.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
18:23:16.586 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)

18:23:16.590 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
18:23:16.593 [Info] Writing prefixes
18:23:16.596 [Info] Writing postfixes
18:23:16.608 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:16.611 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
18:23:16.614 [Info] PrefixWrapper created: HXI︳7︳::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
18:23:16.617 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
18:23:16.620 [Info] PrefixWrapper created: HXI︳8︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
18:23:16.623 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 114 ms
18:23:16.627 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

18:23:16.630 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
18:23:16.632 [Info] Writing prefixes
18:23:16.635 [Info] Writing postfixes
18:23:16.640 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:16.643 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
18:23:16.646 [Info] PrefixWrapper created: HXI︳9︳::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
18:23:16.648 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
18:23:16.651 [Info] PrefixWrapper created: HXI︳10︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
18:23:16.653 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 127 ms
18:23:16.657 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots)

18:23:16.659 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
18:23:16.662 [Info] Writing prefixes
18:23:16.664 [Info] Writing postfixes
18:23:16.670 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 127 ms
18:23:16.673 [Info] Patching void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.LancePreviewPanel_SaveLance::Prefix(BattleTech.UI.LancePreviewPanel __instance, BattleTech.LanceDef lanceToSave)

18:23:16.675 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave)
18:23:16.678 [Info] Writing prefixes
18:23:16.683 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:16.685 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.LancePreviewPanelSetData::Prefix
18:23:16.688 [Info] PrefixWrapper created: HXI︳11︳::MissionControl.Patches.LancePreviewPanelSetData::Prefix
18:23:16.690 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LancePreviewPanel_SetData::Prefix
18:23:16.693 [Info] PrefixWrapper created: HXI︳12︳::CustomUnits.LancePreviewPanel_SetData::Prefix
18:23:16.696 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
18:23:16.698 [Info] PrefixWrapper created: HXI︳13︳::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
18:23:16.701 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.705 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Boolean& __runOriginal)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)

18:23:16.708 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
18:23:16.711 [Info] Writing prefixes
18:23:16.720 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.724 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

18:23:16.727 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
18:23:16.729 [Info] Writing prefixes
18:23:16.734 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.737 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

18:23:16.739 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
18:23:16.742 [Info] Writing prefixes
18:23:16.747 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.750 [Info] Patching virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGCmdCenterLanceConfigBG_OnAddedToHierarchy::Postfix(BattleTech.UI.SGCmdCenterLanceConfigBG __instance)

18:23:16.753 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy()
18:23:16.756 [Info] Writing postfixes
18:23:16.761 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.766 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)

18:23:16.769 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
18:23:16.771 [Info] Writing prefixes
18:23:16.792 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.795 [Info] Patching void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_CleanUpAllUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

18:23:16.798 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips()
18:23:16.801 [Info] Writing postfixes
18:23:16.808 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.811 [Info] Patching void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_ClearUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

18:23:16.814 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container)
18:23:16.816 [Info] Writing postfixes
18:23:16.822 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.826 [Info] Patching void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Patches.SGEngineeringScreen_AddUpgradePip::Prefix(BattleTech.UI.SGEngineeringScreen __instance, BattleTech.ShipModuleUpgrade upgrade)

18:23:16.828 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade)
18:23:16.831 [Info] Writing prefixes
18:23:16.841 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.852 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
6 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:23:16.854 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:16.857 [Info] Writing prefixes
18:23:16.860 [Info] Writing postfixes
18:23:16.890 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.895 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

18:23:16.898 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
18:23:16.900 [Info] Writing postfixes
18:23:16.908 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.912 [Info] Patching void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_AddArgoUpgrade::Postfix(BattleTech.SimGameState __instance)

18:23:16.915 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade)
18:23:16.917 [Info] Writing postfixes
18:23:16.924 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.927 [Info] Patching void BattleTech.SimGameState::ApplyArgoUpgrades() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_ApplyArgoUpgrades::Postfix(BattleTech.SimGameState __instance)

18:23:16.930 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ApplyArgoUpgrades()
18:23:16.933 [Info] Writing postfixes
18:23:16.939 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.943 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SkirmishMechBayPanel_SelectLance::Prefix(BattleTech.UI.SkirmishMechBayPanel __instance, BattleTech.LanceDef lance)

18:23:16.945 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance)
18:23:16.948 [Info] Writing prefixes
18:23:16.957 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
18:23:16.960 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Features.Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

18:23:16.963 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState)
18:23:16.966 [Info] Writing prefixes
18:23:16.971 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:16.974 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
18:23:16.977 [Info] PrefixWrapper created: HXI︳14︳::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
18:23:16.980 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
18:23:16.982 [Info] PrefixWrapper created: HXI︳15︳::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
18:23:16.985 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 160 ms
18:23:16.988 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.CombatGameState ___Combat, Boolean& __runOriginal)

18:23:16.991 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
18:23:16.994 [Info] Writing prefixes
18:23:16.998 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:17.001 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
18:23:17.004 [Info] PrefixWrapper created: HXI︳16︳::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
18:23:17.007 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
18:23:17.010 [Info] PrefixWrapper created: HXI︳17︳::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
18:23:17.013 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 174 ms
18:23:17.018 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)
* static void BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

18:23:17.021 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
18:23:17.024 [Info] Writing prefixes
18:23:17.026 [Info] Writing postfixes
18:23:17.226 [Info] ### Harmony id=us.frostraptor.CBTBehaviorsEnhanced, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CBTBehaviorsEnhanced.Mod::Init(string modDirectory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CBTBehaviorsEnhanced\CBTBehaviorsEnhanced.dll
### At 2023-06-01 06.23.17
18:23:17.230 [Info] Patching virtual void BattleTech.MechFallSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Piloting.MechFallSequence_OnAdded::Postfix(BattleTech.MechFallSequence __instance)

18:23:17.233 [Info] Running ILHook manipulator on virtual void BattleTech.MechFallSequence::OnAdded()
18:23:17.235 [Info] Writing postfixes
18:23:17.241 [Info] Patching virtual void BattleTech.MechFallSequence::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Piloting.MechFallSequence_OnComplete::Prefix(BattleTech.MechFallSequence __instance)

18:23:17.244 [Info] Running ILHook manipulator on virtual void BattleTech.MechFallSequence::OnComplete()
18:23:17.247 [Info] Writing prefixes
18:23:17.255 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.Pathing::GetMeleeDestsForTarget(BattleTech.AbstractActor target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.Pathing_GetMeleeDestsForTarget::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor target, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:17.258 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.Pathing::GetMeleeDestsForTarget(BattleTech.AbstractActor target)
18:23:17.260 [Info] Writing prefixes
18:23:17.271 [Info] Patching BattleTech.PathNodeGrid BattleTech.Pathing::getGrid(BattleTech.MoveType moveType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.Pathing_getGrid::Postfix(BattleTech.Pathing __instance, BattleTech.MoveType moveType, BattleTech.PathNodeGrid& __result)

18:23:17.274 [Info] Running ILHook manipulator on BattleTech.PathNodeGrid BattleTech.Pathing::getGrid(BattleTech.MoveType moveType)
18:23:17.276 [Info] Writing postfixes
18:23:17.283 [Info] Patching void BattleTech.Pathing::SetMeleeTarget(BattleTech.AbstractActor target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.Pathing_SetMeleeTarget::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor target)

18:23:17.286 [Info] Running ILHook manipulator on void BattleTech.Pathing::SetMeleeTarget(BattleTech.AbstractActor target)
18:23:17.288 [Info] Writing prefixes
18:23:17.295 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

18:23:17.297 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
18:23:17.300 [Info] Writing prefixes
18:23:17.303 [Info] Writing postfixes
18:23:17.309 [Info] Patching virtual float BattleTech.UI.SelectionStateJump::get_ProjectedStabilityForState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateJump_ProjectedStabilityForState_Getter::Postfix(BattleTech.UI.SelectionStateJump __instance, Single& __result)

18:23:17.311 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SelectionStateJump::get_ProjectedStabilityForState()
18:23:17.313 [Info] Writing postfixes
18:23:17.319 [Info] Patching virtual float BattleTech.UI.SelectionStateMove::get_ProjectedStabilityForState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_ProjectedStabilityForState_Getter::Postfix(BattleTech.UI.SelectionStateMove __instance, Single& __result)

18:23:17.322 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SelectionStateMove::get_ProjectedStabilityForState()
18:23:17.324 [Info] Writing postfixes
18:23:17.331 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:17.334 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
18:23:17.336 [Info] Writing postfixes
18:23:17.343 [Info] Patching void BattleTech.MechDFASequence::Init(BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination, UnityEngine.Quaternion finalJumpRotation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_Init::Postfix(BattleTech.MechDFASequence __instance, BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination)

18:23:17.345 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::Init(BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination, UnityEngine.Quaternion finalJumpRotation)
18:23:17.348 [Info] Writing postfixes
18:23:17.354 [Info] Patching virtual void BattleTech.MechDFASequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_OnAdded::Prefix(BattleTech.MechMeleeSequence __instance)

18:23:17.357 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::OnAdded()
18:23:17.360 [Info] Writing prefixes
18:23:17.366 [Info] Patching void BattleTech.MechDFASequence::BuildMeleeDirectorSequence() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_BuildMeleeDirectorSequence::Postfix(BattleTech.MechDFASequence __instance, System.Collections.Generic.List<BattleTech.Weapon> ___requestedWeapons)

18:23:17.369 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::BuildMeleeDirectorSequence()
18:23:17.372 [Info] Writing postfixes
18:23:17.380 [Info] Patching void BattleTech.MechDFASequence::ExecuteJump() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_ExecuteJump::Prefix(BattleTech.MechDFASequence __instance)

18:23:17.383 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::ExecuteJump()
18:23:17.385 [Info] Writing prefixes
18:23:17.394 [Info] Patching void BattleTech.MechDFASequence::OnMeleeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_OnMeleeComplete::Prefix(BattleTech.MechDFASequence __instance, MessageCenterMessage message, BattleTech.AttackStackSequence ___meleeSequence)

18:23:17.397 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::OnMeleeComplete(MessageCenterMessage message)
18:23:17.400 [Info] Writing prefixes
18:23:17.406 [Info] Patching void BattleTech.MechDFASequence::FireWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_FireWeapons::Prefix(BattleTech.MechDFASequence __instance)

18:23:17.409 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::FireWeapons()
18:23:17.411 [Info] Writing prefixes
18:23:17.418 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

18:23:17.420 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
18:23:17.423 [Info] Writing postfixes
18:23:17.430 [Info] Patching void BattleTech.MechMeleeSequence::.ctor(BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ctor::Postfix(BattleTech.MechMeleeSequence __instance, BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition)

18:23:17.433 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::.ctor(BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition)
18:23:17.435 [Info] Writing postfixes
18:23:17.444 [Info] Patching virtual void BattleTech.MechMeleeSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_OnAdded::Prefix(BattleTech.MechMeleeSequence __instance)

18:23:17.446 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::OnAdded()
18:23:17.448 [Info] Writing prefixes
18:23:17.456 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance, System.Collections.Generic.List<BattleTech.Weapon> ___requestedWeapons)
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

18:23:17.459 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
18:23:17.461 [Info] Writing prefixes
18:23:17.468 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ExecuteMove::Prefix(BattleTech.MechMeleeSequence __instance)
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:17.470 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
18:23:17.472 [Info] Writing prefixes
18:23:17.475 [Info] Writing postfixes
18:23:17.480 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ExecuteMelee::Prefix(BattleTech.MechMeleeSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:17.483 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
18:23:17.485 [Info] Writing prefixes
18:23:17.488 [Info] Writing postfixes
18:23:17.496 [Info] Patching void BattleTech.MechMeleeSequence::OnMeleeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_OnMeleeComplete::Prefix(BattleTech.MechMeleeSequence __instance, MessageCenterMessage message, BattleTech.AttackStackSequence ___meleeSequence)

18:23:17.499 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::OnMeleeComplete(MessageCenterMessage message)
18:23:17.502 [Info] Writing prefixes
18:23:17.510 [Info] Patching void BattleTech.MechMeleeSequence::FireWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_FireWeapons::Prefix(BattleTech.MechMeleeSequence __instance, BattleTech.AttackStackSequence ___meleeSequence)

18:23:17.513 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::FireWeapons()
18:23:17.516 [Info] Writing prefixes
18:23:17.524 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void PanicSystem.Patches.MechMeleeSequence_CompleteOrders::Postfix()
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

18:23:17.527 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
18:23:17.529 [Info] Writing postfixes
18:23:17.537 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CBTBehaviorsEnhanced.HullIntegrity.AttackDirector_OnAttackSequenceBegin::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:17.539 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
18:23:17.542 [Info] Writing postfixes
18:23:17.551 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.AttackDirector_OnAttackSequenceEnd::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:17.553 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceEnd(MessageCenterMessage message)
18:23:17.555 [Info] Writing postfixes
18:23:17.564 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
2 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
* static void CBTBehaviorsEnhanced.HullIntegrity.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)

18:23:17.567 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
18:23:17.569 [Info] Writing prefixes
18:23:17.572 [Info] Writing postfixes
18:23:17.579 [Info] Patching void BattleTech.Turret::ApplyStructureStatDamage(BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.Turret_ApplyStructureStatDamage::Postfix(BattleTech.Turret __instance, BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)

18:23:17.583 [Info] Running ILHook manipulator on void BattleTech.Turret::ApplyStructureStatDamage(BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
18:23:17.585 [Info] Writing postfixes
18:23:17.591 [Info] Patching void BattleTech.Vehicle::applyStructureStatDamage(BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.Vehicle_ApplyStructureStatDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)

18:23:17.594 [Info] Running ILHook manipulator on void BattleTech.Vehicle::applyStructureStatDamage(BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
18:23:17.596 [Info] Writing postfixes
18:23:17.603 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)
* static bool CBTBehaviorsEnhanced.Heat.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState)

18:23:17.605 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:17.608 [Info] Writing prefixes
18:23:17.613 [Info] Patching int BattleTech.Mech::get_SprintHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Heat.Mech_SprintHeat_Getter::Postfix(BattleTech.Mech __instance, Int32& __result)

18:23:17.616 [Info] Running ILHook manipulator on int BattleTech.Mech::get_SprintHeat()
18:23:17.618 [Info] Writing postfixes
18:23:17.623 [Info] Patching int BattleTech.Mech::get_WalkHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Heat.Mech_WalkHeat_Getter::Postfix(BattleTech.Mech __instance, Int32& __result)

18:23:17.626 [Info] Running ILHook manipulator on int BattleTech.Mech::get_WalkHeat()
18:23:17.628 [Info] Writing postfixes
18:23:17.636 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:23:17.638 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:17.640 [Info] Writing postfixes
18:23:17.650 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

18:23:17.653 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
18:23:17.655 [Info] Writing prefixes
18:23:17.658 [Info] Writing postfixes
18:23:17.666 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnRecomputePathing::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnRecomputePathing::Postfix(BattleTech.AbstractActor __instance)

18:23:17.669 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
18:23:17.671 [Info] Writing prefixes
18:23:17.674 [Info] Writing postfixes
18:23:17.681 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_ResetPathing::Postfix(BattleTech.AbstractActor __instance)

18:23:17.684 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
18:23:17.687 [Info] Writing prefixes
18:23:17.690 [Info] Writing postfixes
18:23:17.697 [Info] Patching void BattleTech.Pathing::ResetPathGrid(UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Pathing_ResetPathGrid::Prefix(BattleTech.Pathing __instance, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Pathing_ResetPathGrid::Postfix(BattleTech.Pathing __instance, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)

18:23:17.700 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGrid(UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)
18:23:17.703 [Info] Writing prefixes
18:23:17.706 [Info] Writing postfixes
18:23:17.713 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
4 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()
* static void CBTBehaviorsEnhanced.Patches.CombatGameState_OnCombatGameDestroyed::Postfix()

18:23:17.716 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:23:17.718 [Info] Writing prefixes
18:23:17.721 [Info] Writing postfixes
18:23:17.729 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatDebugHUDPatches::Postfix(BattleTech.UI.CombatHUD ___combatHUD)

18:23:17.733 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
18:23:17.735 [Info] Writing postfixes
18:23:17.740 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_Init::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

18:23:17.743 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
18:23:17.745 [Info] Writing postfixes
18:23:17.750 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_ShowFireButton::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, String& additionalDetails, bool showHeatWarnings)
3 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, String& additionalDetails, bool showHeatWarnings)

18:23:17.753 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
18:23:17.755 [Info] Writing prefixes
18:23:17.758 [Info] Writing postfixes
18:23:17.763 [Info] Patching void BattleTech.UI.CombatHUDFireButton::set_CurrentFireMode(BattleTech.UI.CombatHUDFireButton+FireMode value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDFireButton_CurrentFireMode_Setter::Postfix(BattleTech.UI.CombatHUDFireButton __instance, BattleTech.UI.CombatHUDFireButton+FireMode value)

18:23:17.766 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::set_CurrentFireMode(BattleTech.UI.CombatHUDFireButton+FireMode value)
18:23:17.768 [Info] Writing postfixes
18:23:17.774 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)
* static bool CBTBehaviorsEnhanced.Patches.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

18:23:17.777 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
18:23:17.779 [Info] Writing prefixes
18:23:17.784 [Info] Patching int BattleTech.UI.CombatHUDHeatMeter::GetMaxOuterHeatLevel(BattleTech.Mech mech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatMeter_GetMaxOuterHeatLevel::Postfix(BattleTech.UI.CombatHUDHeatMeter __instance, BattleTech.Mech mech, Int32& __result)

18:23:17.787 [Info] Running ILHook manipulator on int BattleTech.UI.CombatHUDHeatMeter::GetMaxOuterHeatLevel(BattleTech.Mech mech)
18:23:17.789 [Info] Writing postfixes
18:23:17.793 [Info] Patching virtual void BattleTech.UI.CombatHUDHeatDisplay::Init(float dangerLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_Init::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance)

18:23:17.795 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDHeatDisplay::Init(float dangerLevel)
18:23:17.798 [Info] Writing postfixes
18:23:17.802 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::get_DangerLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_DangerLevel_Getter::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

18:23:17.805 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::get_DangerLevel()
18:23:17.807 [Info] Writing postfixes
18:23:17.811 [Info] Patching void BattleTech.UI.CombatHUDHeatDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance)

18:23:17.814 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatDisplay::RefreshInfo()
18:23:17.816 [Info] Writing postfixes
18:23:17.821 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:17.824 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
18:23:17.826 [Info] Writing postfixes
18:23:17.839 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
2 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance)

18:23:17.843 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
18:23:17.848 [Info] Writing prefixes
18:23:17.853 [Info] Writing postfixes
18:23:17.861 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowShutDownIndicator(BattleTech.Mech mech) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.CombatHUDStatusPanel_ShowShutDownIndicator::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDStatusPanel_ShowShutDownIndicator::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.Mech mech)

18:23:17.865 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowShutDownIndicator(BattleTech.Mech mech)
18:23:17.868 [Info] Writing prefixes
18:23:17.870 [Info] Writing postfixes
18:23:17.876 [Info] Patching virtual void BattleTech.UI.CombatHUDAttackModeSelector::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_Update::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance)

18:23:17.879 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDAttackModeSelector::Update()
18:23:17.881 [Info] Writing postfixes
18:23:17.887 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

18:23:17.890 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
18:23:17.892 [Info] Writing postfixes
18:23:17.900 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 1 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD, BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType ___weaponSlotType)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:17.903 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:17.905 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
18:23:17.907 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:17.910 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:17.913 [Info] Writing prefixes
18:23:17.915 [Info] Writing postfixes
18:23:17.922 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateMeleeWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_UpdateMeleeWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

18:23:17.925 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateMeleeWeapon()
18:23:17.928 [Info] Writing postfixes
18:23:17.932 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateDFAWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_UpdateDFAWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

18:23:17.934 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateDFAWeapon()
18:23:17.936 [Info] Writing postfixes
18:23:17.941 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::GenerateToolTipStrings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_GenerateToolTipStrings::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD, int ___displayedHeat)

18:23:17.944 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::GenerateToolTipStrings()
18:23:17.946 [Info] Writing postfixes
18:23:17.954 [Info] Patching void BattleTech.UI.CombatSelectionHandler::RemoveCompletedItems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatSelectionHandler_RemoveCompletedItems::Prefix(BattleTech.UI.CombatSelectionHandler __instance, Boolean& __state)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatSelectionHandler_RemoveCompletedItems::Postfix(BattleTech.UI.CombatSelectionHandler __instance, Boolean& __state)

18:23:17.957 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::RemoveCompletedItems()
18:23:17.959 [Info] Writing prefixes
18:23:17.961 [Info] Writing postfixes
18:23:17.974 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
4 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void CBTBehaviorsEnhanced.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

18:23:17.976 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
18:23:17.979 [Info] Writing prefixes
18:23:17.984 [Info] Writing postfixes
18:23:17.991 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, Single& damageAmount, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:17.994 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:17.996 [Info] Writing prefixes
18:23:17.999 [Info] Writing postfixes
18:23:18.005 [Info] Patching void BattleTech.Mech::ApplyStartupHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.Mech_ApplyStartupHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

18:23:18.007 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStartupHeatSinks(int stackID)
18:23:18.010 [Info] Writing prefixes
18:23:18.015 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)
* static bool CBTBehaviorsEnhanced.Patches.Mech_CheckForHeatDamage::Prefix(BattleTech.Mech __instance, int stackID, string attackerID)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

18:23:18.017 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
18:23:18.020 [Info] Writing prefixes
18:23:18.022 [Info] Writing postfixes
18:23:18.029 [Info] Patching virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, string sourceID, int stackItemID)
* static void CBTBehaviorsEnhanced.Patches.Mech_OnActivationEnd::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_OnActivationEnd::Postfix(BattleTech.Mech __instance)

18:23:18.031 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID)
18:23:18.034 [Info] Writing prefixes
18:23:18.037 [Info] Writing postfixes
18:23:18.042 [Info] Patching virtual float BattleTech.Mech::get_MaxMeleeEngageRangeDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_MaxMeleeEngageRangeDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

18:23:18.044 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxMeleeEngageRangeDistance()
18:23:18.046 [Info] Writing postfixes
18:23:18.051 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance)

18:23:18.054 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
18:23:18.056 [Info] Writing prefixes
18:23:18.068 [Info] Patching virtual void BattleTech.Mech::StandFromProne() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_StandFromProne::Prefix(BattleTech.Mech __instance)

18:23:18.070 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::StandFromProne()
18:23:18.073 [Info] Writing prefixes
18:23:18.078 [Info] Patching System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Team::DoneWithAllAvailableActors() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Team_DoneWithAllAvailableActors::Prefix(BattleTech.Team __instance, System.Collections.Generic.List<BattleTech.IStackSequence> __result)

18:23:18.080 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Team::DoneWithAllAvailableActors()
18:23:18.083 [Info] Writing prefixes
18:23:18.090 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)

18:23:18.093 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
18:23:18.095 [Info] Writing prefixes
18:23:18.098 [Info] Writing postfixes
18:23:18.103 [Info] Patching float BattleTech.ToHit::GetDFAModifier(BattleTech.MeleeAttackType meleeAttackType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetDFAModifier::Postfix(BattleTech.ToHit __instance, Single& __result)

18:23:18.105 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetDFAModifier(BattleTech.MeleeAttackType meleeAttackType)
18:23:18.108 [Info] Writing postfixes
18:23:18.114 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:18.117 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:18.120 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:18.122 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:18.126 [Info] Writing prefixes
18:23:18.129 [Info] Writing postfixes
18:23:18.137 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, String& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:18.139 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:18.142 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:18.151 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:18.154 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:18.156 [Info] Writing postfixes
18:23:18.166 [Info] Patching float BattleTech.ToHit::GetHeatModifier(BattleTech.AbstractActor attacker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetHeatModifier::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker)

18:23:18.169 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetHeatModifier(BattleTech.AbstractActor attacker)
18:23:18.171 [Info] Writing postfixes
18:23:18.176 [Info] Patching void BattleTech.TurnDirector::OnEncounterBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_OnEncounterBegin::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

18:23:18.178 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnEncounterBegin(MessageCenterMessage message)
18:23:18.181 [Info] Writing postfixes
18:23:18.187 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_OnTurnActorActivateComplete::Prefix(BattleTech.TurnDirector __instance)

18:23:18.190 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
18:23:18.192 [Info] Writing prefixes
18:23:18.197 [Info] Patching bool BattleTech.TurnDirector::get_DoAnyUnitsHaveContactWithEnemy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_DoAnyUnitsHaveContactWithEnemy_Getter::Prefix(BattleTech.TurnDirector __instance, Boolean& __result)

18:23:18.200 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::get_DoAnyUnitsHaveContactWithEnemy()
18:23:18.202 [Info] Writing prefixes
18:23:18.208 [Info] Patching void BattleTech.TurnDirector::NotifyContact(BattleTech.VisibilityLevel contactLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_NotifyContact::Prefix(BattleTech.TurnDirector __instance, BattleTech.VisibilityLevel contactLevel)

18:23:18.210 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::NotifyContact(BattleTech.VisibilityLevel contactLevel)
18:23:18.213 [Info] Writing prefixes
18:23:18.218 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

18:23:18.221 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
18:23:18.223 [Info] Writing postfixes
18:23:18.229 [Info] Patching void BattleTech.TurnDirector::OnLostContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_OnLostContact::Postfix(BattleTech.TurnDirector __instance)

18:23:18.232 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnLostContact(MessageCenterMessage message)
18:23:18.234 [Info] Writing postfixes
18:23:18.238 [Info] Patching bool BattleTech.Turret::DamageLocation(BattleTech.WeaponHitInfo hitInfo, BattleTech.BuildingLocation bLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Turret_DamageLocation::Prefix(BattleTech.Turret __instance)

18:23:18.241 [Info] Running ILHook manipulator on bool BattleTech.Turret::DamageLocation(BattleTech.WeaponHitInfo hitInfo, BattleTech.BuildingLocation bLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage)
18:23:18.244 [Info] Writing prefixes
18:23:18.253 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Vehicle_DamageLocation::Prefix(BattleTech.Vehicle __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:18.256 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
18:23:18.258 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
18:23:18.261 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:18.263 [Info] Writing prefixes
18:23:18.271 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)
* static void CBTBehaviorsEnhanced.Patches.Weapon_WillFire_Getter::Postfix(BattleTech.Weapon __instance, Boolean& __result)

18:23:18.274 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
18:23:18.277 [Info] Writing postfixes
18:23:18.281 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)
* static void CBTBehaviorsEnhanced.Patches.Melee.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

18:23:18.284 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
18:23:18.286 [Info] Writing postfixes
18:23:18.291 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.VehicleChassisLocations, int> BattleTech.HitLocation::GetVehicleHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Melee.HitLocation_GetVehicleHitTable::Postfix(BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.VehicleChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:18.293 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.VehicleChassisLocations, int> BattleTech.HitLocation::GetVehicleHitTable(BattleTech.AttackDirection from, bool log)
18:23:18.295 [Info] Writing postfixes
18:23:18.303 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CBTBehaviorsEnhanced.Patches.Melee.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:18.305 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
18:23:18.308 [Info] Writing postfixes
18:23:18.314 [Info] Patching BattleTech.MeleeAttackType BattleTech.MeleeRules::SelectRandomMeleeAttack(BattleTech.Mech attacker, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant target, float rnd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Melee.MeleeRules_SelectRandomMeleeAttack::Postfix(BattleTech.Mech attacker, BattleTech.ICombatant target, BattleTech.MeleeAttackType& __result)

18:23:18.317 [Info] Running ILHook manipulator on BattleTech.MeleeAttackType BattleTech.MeleeRules::SelectRandomMeleeAttack(BattleTech.Mech attacker, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant target, float rnd)
18:23:18.319 [Info] Writing postfixes
18:23:18.326 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.AI.AIUtil_ExpectedDamageForAttack::Prefix(AIUtil __instance, BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
2 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.AI.AIUtil_ExpectedDamageForAttack::Postfix(AIUtil __instance, BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext, float __result)

18:23:18.329 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
18:23:18.332 [Info] Writing prefixes
18:23:18.334 [Info] Writing postfixes
18:23:18.344 [Info] Patching static float AIUtil::GetAcceptableHeatLevelForMech(BattleTech.Mech mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.AI.AIUtil_GetAcceptableHeatLevelForMech::Prefix(BattleTech.Mech mech, Single& __result)

18:23:18.347 [Info] Running ILHook manipulator on static float AIUtil::GetAcceptableHeatLevelForMech(BattleTech.Mech mech)
18:23:18.349 [Info] Writing prefixes
18:23:18.355 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)
* static void CBTBehaviorsEnhanced.Patches.AI.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, BehaviorTreeResults& __result)

18:23:18.357 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
18:23:18.360 [Info] Writing postfixes
18:23:18.412 [Info] Patching virtual BehaviorTreeResults CanMeleeHostileTargetsNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.AI.CanMeleeHostileTargetsNode_Tick_Patch::Prefix(BehaviorTreeResults& __result, string ___name, BehaviorTree ___tree, BattleTech.AbstractActor ___unit)

18:23:18.415 [Info] Running ILHook manipulator on virtual BehaviorTreeResults CanMeleeHostileTargetsNode::Tick()
18:23:18.417 [Info] Writing prefixes
18:23:18.465 [Info] Patching virtual BehaviorTreeResults MechStartUpNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AI.MechStartUpNode_Tick::Postfix(BehaviorNode __instance, BehaviorTreeResults& __result)

18:23:18.468 [Info] Running ILHook manipulator on virtual BehaviorTreeResults MechStartUpNode::Tick()
18:23:18.470 [Info] Writing postfixes
18:23:18.474 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+OrderSequence_OnUpdate::Prefix(BattleTech.OrderSequence __instance, Boolean& __state)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+OrderSequence_OnUpdate::Postfix(BattleTech.OrderSequence __instance, bool __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:18.477 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
18:23:18.479 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
18:23:18.481 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:18.484 [Info] Writing prefixes
18:23:18.486 [Info] Writing postfixes
18:23:18.491 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_OnComplete::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_OnComplete::Postfix(BattleTech.ActorMovementSequence __instance)

18:23:18.494 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnComplete()
18:23:18.496 [Info] Writing prefixes
18:23:18.498 [Info] Writing postfixes
18:23:18.503 [Info] Patching virtual bool BattleTech.ActorMovementSequence::get_ConsumesFiring() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_ConsumesFiring_Getter::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __result)

18:23:18.505 [Info] Running ILHook manipulator on virtual bool BattleTech.ActorMovementSequence::get_ConsumesFiring()
18:23:18.508 [Info] Writing postfixes
18:23:18.513 [Info] Patching virtual bool BattleTech.MechJumpSequence::get_ConsumesFiring() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+MechJumpSequence_ConsumesFiring_Getter::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __result)

18:23:18.515 [Info] Running ILHook manipulator on virtual bool BattleTech.MechJumpSequence::get_ConsumesFiring()
18:23:18.518 [Info] Writing postfixes
18:23:18.521 [Info] Patching virtual void BattleTech.MechJumpSequence::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+MechJumpSequence_OnComplete::Prefix(BattleTech.MechJumpSequence __instance)

18:23:18.525 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnComplete()
18:23:18.527 [Info] Writing prefixes
18:23:18.532 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+AbstractActorMovementInvocation_Invoke::Postfix(BattleTech.AbstractActorMovementInvocation __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:18.535 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:18.537 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
18:23:18.541 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:18.544 [Info] Writing postfixes
18:23:18.550 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
* static bool CBTBehaviorsEnhanced.MovementPatches+AbstractActor_ResolveAttackSequence_Patch::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+AbstractActor_ResolveAttackSequence_Patch::Postfix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

18:23:18.553 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
18:23:18.556 [Info] Writing prefixes
18:23:18.559 [Info] Writing postfixes
18:23:18.566 [Info] Patching virtual void BattleTech.Mech::ResolveWeaponDamage(BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.PilotingPatches+Mech_ResolveWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType)

18:23:18.569 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ResolveWeaponDamage(BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType)
18:23:18.572 [Info] Writing postfixes
18:23:18.810 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 174 ms
18:23:18.814 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
7 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_Init_Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

18:23:18.816 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
18:23:18.818 [Info] Writing prefixes
18:23:18.820 [Info] Writing postfixes
18:23:18.831 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 174 ms
18:23:18.834 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_OnCombatGameDestroyed_Postfix()

18:23:18.836 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
18:23:18.837 [Info] Writing prefixes
18:23:18.839 [Info] Writing postfixes
18:23:18.843 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 174 ms
18:23:18.846 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Init_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.ActiveChatListView ____activeChatList)

18:23:18.849 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Init()
18:23:18.851 [Info] Writing postfixes
18:23:18.859 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 174 ms
18:23:18.862 [Info] Patching void BattleTech.UI.CombatChatModule::CombatInit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_CombatInit_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField, UnityEngine.GameObject ____activeChatWindow, BattleTech.UI.ActiveChatListView ____activeChatList, BattleTech.UI.PassiveChatListView ____passiveChatList)

18:23:18.864 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::CombatInit()
18:23:18.866 [Info] Writing postfixes
18:23:18.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 174 ms
18:23:18.876 [Info] Patching void BattleTech.UI.CombatChatModule::Active_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Active_OnEnter_Postfix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField)

18:23:18.878 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::Active_OnEnter()
18:23:18.880 [Info] Writing postfixes
18:23:18.885 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:18.888 [Info] PrefixWrapper being created for: CustomLocalization::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
18:23:18.891 [Info] PrefixWrapper created: HXI︳18︳::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
18:23:18.893 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
18:23:18.895 [Info] PrefixWrapper created: HXI︳19︳::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
18:23:18.898 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.901 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, BattleTech.CombatGameState ___combat, Boolean& __runOriginal)

18:23:18.903 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
18:23:18.905 [Info] Writing prefixes
18:23:18.911 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.914 [Info] Patching void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatLog::MessageCenter_RemoveSubscriber_Prefix(MessageCenter __instance, MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber, System.Collections.Generic.Dictionary<MessageCenterMessageType, System.Collections.Generic.List<MessageSubscription>> ___messageTable)

18:23:18.917 [Info] Running ILHook manipulator on void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber)
18:23:18.919 [Info] Writing prefixes
18:23:18.928 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.932 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

18:23:18.934 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
18:23:18.945 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.949 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

18:23:18.952 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
18:23:18.960 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.963 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

18:23:18.966 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
18:23:18.971 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.974 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

18:23:18.977 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
18:23:18.982 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:18.985 [Info] Patching void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

18:23:18.988 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState)
18:23:18.996 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.000 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
5 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()
* static void CBTBehaviorsEnhanced.Patches.CombatGameState_OnCombatGameDestroyed::Postfix()
* static void IRTweaks.Patches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

18:23:19.003 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
18:23:19.005 [Info] Writing prefixes
18:23:19.007 [Info] Writing postfixes
18:23:19.018 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.021 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)
* static void IRTweaks.Modules.UI.TgtComputerTonnage+CombatHUDActorDetailsDisplay_RefreshInfo_Patch::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

18:23:19.024 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
18:23:19.026 [Info] Writing postfixes
18:23:19.032 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.036 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatLog+CombatChatModule_Update::Prefix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.ActiveChatListView ____activeChatList)

18:23:19.038 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Update()
18:23:19.040 [Info] Writing prefixes
18:23:19.048 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.051 [Info] Patching virtual void BattleTech.UI.SimGameOptionsMenu::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.SimGameOptionsMenu_Update::Postfix(BattleTech.UI.SimGameOptionsMenu __instance, BattleTech.UI.HBSDOTweenButton ___saveGame, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___saveTooltip, BattleTech.UI.HBSDOTweenButton ___restartMission, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___restartTooltip)

18:23:19.054 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameOptionsMenu::Update()
18:23:19.057 [Info] Writing postfixes
18:23:19.064 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.068 [Info] Patching void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.SimGameOptionsMenu_QuitPopup::Prefix(BattleTech.UI.SimGameOptionsMenu __instance, Action quitAction)

18:23:19.070 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction)
18:23:19.073 [Info] Writing prefixes
18:23:19.081 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.084 [Info] Patching void BattleTech.CombatGameState::TriggerAutoSaving() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatGameState_TriggerAutoSaving::Prefix(BattleTech.CombatGameState __instance)

18:23:19.087 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::TriggerAutoSaving()
18:23:19.089 [Info] Writing prefixes
18:23:19.097 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 186 ms
18:23:19.100 [Info] Patching void BattleTech.UI.MechLabPanel::ToggleLayout() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_ToggleLayout::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabDismountWidget ___dismountWidget, BattleTech.UI.HBSDOTweenButton ___btn_mechViewerButton)

18:23:19.103 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ToggleLayout()
18:23:19.105 [Info] Writing postfixes
18:23:19.112 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 187 ms
18:23:19.116 [Info] Patching void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_SetData_1::Postfix(BattleTech.UI.MechLabPanel __instance)

18:23:19.119 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB)
18:23:19.121 [Info] Writing postfixes
18:23:19.130 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:19.133 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix
18:23:19.136 [Info] PrefixWrapper created: HXI︳20︳::MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix
18:23:19.138 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix
18:23:19.140 [Info] PrefixWrapper created: HXI︳21︳::IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix
18:23:19.143 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
18:23:19.147 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem, Boolean& __runOriginal)

18:23:19.149 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
18:23:19.152 [Info] Writing prefixes
18:23:19.165 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
18:23:19.168 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.MechLabPanel_OnStripEquipment_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, bool ___batchActionInProgress, BattleTech.UI.MechLabItemSlotElement ___dragItem)

18:23:19.171 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripEquipment()
18:23:19.173 [Info] Writing prefixes
18:23:19.180 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
18:23:19.183 [Info] Patching bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabLocationWidget_ValidateAdd::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef newComponent, BattleTech.UI.MechLabPanel ___mechLab)

18:23:19.186 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent)
18:23:19.188 [Info] Writing postfixes
18:23:19.194 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:19.196 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
18:23:19.198 [Info] PrefixWrapper created: HXI︳22︳::CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
18:23:19.200 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
18:23:19.203 [Info] PrefixWrapper created: HXI︳23︳::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
18:23:19.205 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.208 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType, BattleTech.UI.MechLabPanel ___mechLab, Localize.Text ____dropErrorMessage, Boolean& __runOriginal)
* static void CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData, Boolean& __runOriginal)

18:23:19.211 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
18:23:19.213 [Info] Writing prefixes
18:23:19.221 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.224 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)
1 postfixes:
* static void IRTweaks.Modules.UI.SkirmishSettings_Beta_OnLoadComplete::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.TMProWrapper.HBS_Dropdown ___lanceBudgetDropdown)

18:23:19.227 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
18:23:19.229 [Info] Writing prefixes
18:23:19.232 [Info] Writing postfixes
18:23:19.239 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.244 [Info] Patching void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGContractsWidget_Init::Postfix(BattleTech.UI.SGContractsWidget __instance, UnityEngine.GameObject ___ContractList)

18:23:19.246 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted)
18:23:19.249 [Info] Writing postfixes
18:23:19.261 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.264 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_ResetFlyoutsToPrefab::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.TMProWrapper.LocalizableText ___text, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, int ___flyoutButtonCount)

18:23:19.267 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
18:23:19.270 [Info] Writing postfixes
18:23:19.276 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.280 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_SetStateAccordingToSimDropship::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipType shipType, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

18:23:19.282 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
18:23:19.285 [Info] Writing postfixes
18:23:19.292 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.295 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnPointerEnter::Postfix(BattleTech.UI.SGNavigationButton __instance, UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

18:23:19.298 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
18:23:19.300 [Info] Writing postfixes
18:23:19.306 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.309 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnClick::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.SGNavigationList ___buttonParent, BattleTech.UI.TMProWrapper.LocalizableText ___text)

18:23:19.311 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
18:23:19.313 [Info] Writing postfixes
18:23:19.318 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.321 [Info] Patching void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationWidgetLeft_Init::Postfix(BattleTech.UI.SGNavigationWidgetLeft __instance, BattleTech.UI.SGShipMap ___shipMap, BattleTech.UI.SGNavigationList ___locationList)

18:23:19.323 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager)
18:23:19.326 [Info] Writing postfixes
18:23:19.331 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.334 [Info] Patching void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_FlyoutClicked::Prefix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipMenuType buttonID, BattleTech.UI.TMProWrapper.LocalizableText ___text, BattleTech.UI.SGNavigationList ___buttonParent)

18:23:19.337 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID)
18:23:19.339 [Info] Writing prefixes
18:23:19.343 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.346 [Info] Patching void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.SimGameState simState)

18:23:19.348 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState)
18:23:19.350 [Info] Writing postfixes
18:23:19.356 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.359 [Info] Patching void BattleTech.UI.SGNavigationList::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_Start::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.UI.HBSRadioSet ___radioSet, BattleTech.UI.SGNavigationButton ___argoButton)

18:23:19.361 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::Start()
18:23:19.364 [Info] Writing postfixes
18:23:19.371 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
18:23:19.374 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

18:23:19.377 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
18:23:19.379 [Info] Writing postfixes
18:23:19.383 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.386 [Info] Patching void BattleTech.UI.CombatHUDPipBar::CalcPipsAndActivate(float min, float max, int targetPointsPerPip, int targetMinPips) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_CalcPipsAndActivate::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

18:23:19.388 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPipBar::CalcPipsAndActivate(float min, float max, int targetPointsPerPip, int targetMinPips)
18:23:19.391 [Info] Writing postfixes
18:23:19.396 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.399 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::CacheActorData(BattleTech.AbstractActor actor, bool actorTargeted, bool actorSelected) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_CacheActorData::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.AbstractActor actor)

18:23:19.402 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::CacheActorData(BattleTech.AbstractActor actor, bool actorTargeted, bool actorSelected)
18:23:19.404 [Info] Writing postfixes
18:23:19.412 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.416 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMoveIndicators(BattleTech.AbstractActor target, float currentEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDStatusPanel_ShowMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor target, float currentEvasive)

18:23:19.419 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMoveIndicators(BattleTech.AbstractActor target, float currentEvasive)
18:23:19.421 [Info] Writing postfixes
18:23:19.427 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.430 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)
1 postfixes:
* static void IRTweaks.Modules.UI.EffectManager_CreateEffect::Postfix(BattleTech.ICombatant target)

18:23:19.433 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
18:23:19.435 [Info] Writing prefixes
18:23:19.438 [Info] Writing postfixes
18:23:19.447 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.451 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)
* static void IRTweaks.Modules.UI.EffectManager_EffectComplete::Postfix(BattleTech.Effect e)

18:23:19.454 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
18:23:19.456 [Info] Writing postfixes
18:23:19.461 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.465 [Info] Patching static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_ShowCurrent_Postfix_Patch::Prefix()

18:23:19.467 [Info] Running ILHook manipulator on static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)
18:23:19.469 [Info] Writing prefixes
18:23:19.475 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.478 [Info] Patching void BattleTech.AttackStackSequence::FireSequence(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.AttackStackSequence_FireSequence::Prefix(BattleTech.AttackStackSequence __instance, BattleTech.AttackDirector+AttackSequence sequence)

18:23:19.481 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::FireSequence(BattleTech.AttackDirector+AttackSequence sequence)
18:23:19.483 [Info] Writing prefixes
18:23:19.495 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.499 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)

18:23:19.502 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
18:23:19.504 [Info] Writing postfixes
18:23:19.522 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.526 [Info] Patching void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_FromPilotDef::Postfix(BattleTech.Pilot __instance)

18:23:19.528 [Info] Running ILHook manipulator on void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def)
18:23:19.530 [Info] Writing postfixes
18:23:19.535 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.538 [Info] Patching void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_AddXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, int value)

18:23:19.540 [Info] Running ILHook manipulator on void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value)
18:23:19.543 [Info] Writing postfixes
18:23:19.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.551 [Info] Patching bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, uint value)

18:23:19.553 [Info] Running ILHook manipulator on bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value)
18:23:19.556 [Info] Writing prefixes
18:23:19.558 [Info] Writing postfixes
18:23:19.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.565 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksMWDetailPanel_OnPilotReset::Postfix(BattleTech.UI.SGBarracksMWDetailPanel __instance)

18:23:19.568 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset()
18:23:19.570 [Info] Writing postfixes
18:23:19.574 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.577 [Info] Patching virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksWidget_ReceiveButtonPress::Postfix(BattleTech.UI.SGBarracksWidget __instance, string button)

18:23:19.579 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button)
18:23:19.582 [Info] Writing postfixes
18:23:19.587 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.590 [Info] Patching void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SGBarracksAdvancementPanel_OnValueClick_Patch::Prefix(BattleTech.UI.SGBarracksAdvancementPanel __instance, string type, int value)

18:23:19.592 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value)
18:23:19.595 [Info] Writing prefixes
18:23:19.600 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.603 [Info] Patching virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGRoomController_Barracks_Close_Patch::Postfix(BattleTech.UI.SGRoomController_Barracks __instance)

18:23:19.605 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader)
18:23:19.607 [Info] Writing postfixes
18:23:19.611 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.615 [Info] Patching void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Prefix(BattleTech.SimGameState __instance, int val)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Postfix(BattleTech.SimGameState __instance, int val)

18:23:19.617 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained)
18:23:19.619 [Info] Writing prefixes
18:23:19.621 [Info] Writing postfixes
18:23:19.627 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.630 [Info] Patching static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGS_SetSimGameStat::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)

18:23:19.633 [Info] Running ILHook manipulator on static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)
18:23:19.635 [Info] Writing postfixes
18:23:19.643 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.654 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
7 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)

18:23:19.656 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:19.658 [Info] Writing prefixes
18:23:19.661 [Info] Writing postfixes
18:23:19.690 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.698 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)

18:23:19.700 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:19.703 [Info] Writing prefixes
18:23:19.722 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.725 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
1 postfixes:
* static void IRTweaks.Modules.Misc.SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Postfix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

18:23:19.728 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
18:23:19.730 [Info] Writing prefixes
18:23:19.732 [Info] Writing postfixes
18:23:19.737 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.740 [Info] Patching bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddAllyFaction::Postfix(BattleTech.SimGameState __instance)

18:23:19.742 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement)
18:23:19.745 [Info] Writing postfixes
18:23:19.750 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.753 [Info] Patching void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_RemoveAllyFaction::Postfix(BattleTech.SimGameState __instance, BattleTech.FactionValue faction)

18:23:19.755 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction)
18:23:19.758 [Info] Writing postfixes
18:23:19.765 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.768 [Info] Patching BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetStatsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, BattleTech.StatCollection& __result)

18:23:19.770 [Info] Running ILHook manipulator on BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope)
18:23:19.772 [Info] Writing postfixes
18:23:19.779 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 212 ms
18:23:19.782 [Info] Patching HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetTagsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, HBS.Collections.TagSet& __result)

18:23:19.785 [Info] Running ILHook manipulator on HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope)
18:23:19.787 [Info] Writing postfixes
18:23:19.796 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.799 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:19.802 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
18:23:19.804 [Info] Transpiling void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
18:23:19.808 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:19.820 [Info] Writing prefixes
18:23:19.823 [Info] Writing postfixes
18:23:19.829 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.833 [Info] Patching void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.MechDef_constructor::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)

18:23:19.836 [Info] Running ILHook manipulator on void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)
18:23:19.839 [Info] Writing postfixes
18:23:19.847 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.852 [Info] Patching static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_ApplySimGameEventResult::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)

18:23:19.855 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)
18:23:19.857 [Info] Writing postfixes
18:23:19.869 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.873 [Info] Patching void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficulty_RefreshCareerScoreMultiplier::Prefix(BattleTech.SimGameDifficulty __instance, System.Collections.Generic.Dictionary<string, BattleTech.SimGameDifficulty+DifficultySetting> ___difficultyDict, System.Collections.Generic.Dictionary<string, int> ___difficultyIndices, Single& ___curCareerModifier)

18:23:19.876 [Info] Running ILHook manipulator on void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier()
18:23:19.878 [Info] Writing prefixes
18:23:19.885 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.888 [Info] Patching float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_CalculateRawScoreMod::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, Single& __result)

18:23:19.890 [Info] Running ILHook manipulator on float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod()
18:23:19.893 [Info] Writing postfixes
18:23:19.900 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.911 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
8 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:23:19.913 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:19.916 [Info] Writing prefixes
18:23:19.919 [Info] Writing postfixes
18:23:19.947 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.950 [Info] Patching void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.UnityGameInstance_CalcGameHash::Prefix()

18:23:19.953 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm)
18:23:19.955 [Info] Writing prefixes
18:23:19.960 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.963 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
1 postfixes:
* static void IRTweaks.Modules.Misc.UnitSpawnPointGameLogic_initializeActor::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

18:23:19.965 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
18:23:19.968 [Info] Writing prefixes
18:23:19.970 [Info] Writing postfixes
18:23:19.975 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 214 ms
18:23:19.979 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
7 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:23:19.981 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:19.984 [Info] Writing postfixes
18:23:19.993 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:19.998 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:20.001 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
18:23:20.003 [Info] Transpiling void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
18:23:20.006 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:20.121 [Info] Writing prefixes
18:23:20.132 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.136 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Prefix(BattleTech.UI.MainMenu __instance)
4 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

18:23:20.138 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
18:23:20.141 [Info] Writing prefixes
18:23:20.143 [Info] Writing postfixes
18:23:20.149 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.152 [Info] Patching void BattleTech.SimGameState::ShowLowFundsWarning() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameState_ShowLowFundsWarning::Prefix()

18:23:20.155 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ShowLowFundsWarning()
18:23:20.157 [Info] Writing prefixes
18:23:20.164 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.167 [Info] Patching bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.LineOfSight_FindSecondaryImpactTarget::Postfix(BattleTech.LineOfSight __instance, UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3& impactPoint, Boolean& __result)

18:23:20.170 [Info] Running ILHook manipulator on bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint)
18:23:20.172 [Info] Writing postfixes
18:23:20.182 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.185 [Info] Patching void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_UpdateDifficultyScoreBar_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)

18:23:20.187 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar()
18:23:20.189 [Info] Writing prefixes
18:23:20.196 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.199 [Info] Patching void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.PreGameCareerModeSettingsTotalScoreDescAndBar_RefreshInfo_Patch::Prefix(BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar __instance, float newMod)

18:23:20.202 [Info] Running ILHook manipulator on void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod)
18:23:20.204 [Info] Writing prefixes
18:23:20.212 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.215 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

18:23:20.218 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
18:23:20.220 [Info] Writing postfixes
18:23:20.236 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.239 [Info] Patching void BattleTech.SimGameState::Destroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__Destroy_Patch::Postfix(BattleTech.SimGameState __instance)

18:23:20.241 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Destroy()
18:23:20.244 [Info] Writing postfixes
18:23:20.249 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.253 [Info] Patching virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, string ___ironManModeId, string ___autoEquipMechsId, string ___mechPartsReqId, string ___skipPrologueId, string ___randomMechId, string ___argoUpgradeCostId, BattleTech.UI.SGDSToggle ___ironManModeToggle, BattleTech.UI.SGDSDropdown ___mechPartsReqDropdown, UnityEngine.GameObject ___disabledOverlay, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___activeDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___activeToggles, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___cachedDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___cachedToggles, BattleTech.UI.SGDSToggle ___togglePrefab, BattleTech.UI.SGDSDropdown ___dropdownPrefab)

18:23:20.256 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings()
18:23:20.258 [Info] Writing prefixes
18:23:20.261 [Info] Writing postfixes
18:23:20.276 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.280 [Info] Patching void BattleTech.SimGameState::AddRandomStartingMechs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameState_AddRandomStartingMechs::Prefix(BattleTech.SimGameState __instance)

18:23:20.283 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddRandomStartingMechs()
18:23:20.285 [Info] Writing prefixes
18:23:20.297 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.300 [Info] Patching void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameConstantOverride_ApplyOverride::Postfix(BattleTech.SimGameConstantOverride __instance, string constantType, string constantName)

18:23:20.303 [Info] Running ILHook manipulator on void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName)
18:23:20.305 [Info] Writing postfixes
18:23:20.312 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 217 ms
18:23:20.315 [Info] Patching virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.RandomStartByDifficulty_SGDifficultySettingObject_CurCareerModifier::Prefix(BattleTech.UI.SGDifficultySettingObject __instance, Single& __result, int ___curIdx)

18:23:20.318 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier()
18:23:20.320 [Info] Writing prefixes
18:23:20.328 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.332 [Info] Patching byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:20.335 [Info] Running ILHook manipulator on byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
18:23:20.337 [Info] Transpiling byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
18:23:20.340 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:20.352 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.357 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_InitStats::Postfix(BattleTech.Weapon __instance)

18:23:20.359 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
18:23:20.361 [Info] Writing postfixes
18:23:20.375 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.378 [Info] Patching bool BattleTech.Weapon::get_IsDisabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_IsDisabled::Postfix(BattleTech.Weapon __instance, Boolean& __result)

18:23:20.380 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IsDisabled()
18:23:20.382 [Info] Writing postfixes
18:23:20.388 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.392 [Info] Patching void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ObstructionGameLogic_ExplodeBuildingIfNeeded::Prefix(BattleTech.ObstructionGameLogic __instance)

18:23:20.394 [Info] Running ILHook manipulator on void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded()
18:23:20.396 [Info] Writing prefixes
18:23:20.406 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.409 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)

18:23:20.411 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
18:23:20.413 [Info] Writing postfixes
18:23:20.421 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.424 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)

18:23:20.427 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
18:23:20.429 [Info] Writing postfixes
18:23:20.438 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.441 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced_OnFire::Postfix(CustomUnits.CustomMech __instance)

18:23:20.444 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
18:23:20.446 [Info] Writing postfixes
18:23:20.453 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.456 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced_OnFire::Postfix(BattleTech.Mech __instance)

18:23:20.458 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
18:23:20.460 [Info] Writing postfixes
18:23:20.466 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.474 [Info] Patching void BattleTech.Weapon::ProcessOnFiredFloatieEffects() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_ProcessOnFiredFloatieEffects_Patch::Postfix(BattleTech.Weapon __instance, BattleTech.CombatGameState ___combat)

18:23:20.476 [Info] Running ILHook manipulator on void BattleTech.Weapon::ProcessOnFiredFloatieEffects()
18:23:20.478 [Info] Writing postfixes
18:23:20.485 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 219 ms
18:23:20.489 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void IRTweaks.Modules.Combat.AttackDirectorAttackSequence_OnAttackSequenceResolveDamage::Postfix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)

18:23:20.491 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
18:23:20.494 [Info] Writing prefixes
18:23:20.496 [Info] Writing postfixes
18:23:20.511 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:20.514 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
18:23:20.517 [Info] PrefixWrapper created: HXI︳24︳::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
18:23:20.519 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.JammingEnabler::Prefix
18:23:20.522 [Info] PrefixWrapper created: HXI︳25︳::CustAmmoCategories.JammingEnabler::Prefix
18:23:20.525 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
18:23:20.527 [Info] PrefixWrapper created: HXI︳26︳::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
18:23:20.530 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AttackDirector_OnAttackComplete::Prefix
18:23:20.532 [Info] PrefixWrapper created: HXI︳27︳::CustomUnits.AttackDirector_OnAttackComplete::Prefix
18:23:20.535 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
18:23:20.538 [Info] PrefixWrapper created: HXI︳28︳::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
18:23:20.540 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.544 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 5 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state, Boolean& __runOriginal)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
5 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void PanicSystem.Patches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

18:23:20.547 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
18:23:20.549 [Info] Writing prefixes
18:23:20.553 [Info] Writing postfixes
18:23:20.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.566 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
2 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
* static void IRTweaks.Modules.Combat.CombatHUDFloatie_Init_Patch::Postfix(BattleTech.UI.CombatHUDFloatie __instance)

18:23:20.569 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
18:23:20.571 [Info] Writing prefixes
18:23:20.573 [Info] Writing postfixes
18:23:20.580 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.585 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
8 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

18:23:20.587 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:20.590 [Info] Writing postfixes
18:23:20.599 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.602 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.HUDMechArmorReadout_SetHoveredAmor::Postfix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ArmorLocation location, BattleTech.Mech ___displayedMech)

18:23:20.605 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location)
18:23:20.607 [Info] Writing postfixes
18:23:20.613 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.615 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_AL::Postfix(BattleTech.UI.SelectionStateFire __instance, BattleTech.ArmorLocation location)

18:23:20.618 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location)
18:23:20.620 [Info] Writing postfixes
18:23:20.626 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.629 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_VCL::Postfix(BattleTech.UI.SelectionStateFire __instance)

18:23:20.631 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location)
18:23:20.634 [Info] Writing postfixes
18:23:20.639 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.642 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

18:23:20.645 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
18:23:20.647 [Info] Writing postfixes
18:23:20.653 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.656 [Info] Patching float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ToHit_GetMoraleAttackModifier::Postfix(Single& __result)

18:23:20.659 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack)
18:23:20.661 [Info] Writing postfixes
18:23:20.667 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.671 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
3 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiers::Postfix(Single& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:20.674 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:20.676 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:20.679 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:20.682 [Info] Writing prefixes
18:23:20.684 [Info] Writing postfixes
18:23:20.694 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.697 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 3 postfixes, 2 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, String& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiersDescription::Postfix(String& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:20.700 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:20.702 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
18:23:20.705 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:20.709 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:20.712 [Info] Writing postfixes
18:23:20.722 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.725 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)
* static void IRTweaks.Modules.Combat.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

18:23:20.727 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
18:23:20.730 [Info] Writing postfixes
18:23:20.737 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.740 [Info] Patching virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDCalledShotPopUp_Update::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD)

18:23:20.743 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update()
18:23:20.744 [Info] Writing postfixes
18:23:20.751 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.754 [Info] Patching virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechMeleeSequence_ConsumesFiring_Getter::Prefix(BattleTech.MechMeleeSequence __instance)

18:23:20.756 [Info] Running ILHook manipulator on virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring()
18:23:20.759 [Info] Writing prefixes
18:23:20.764 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.767 [Info] Patching virtual bool BattleTech.MechDFASequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechDFASequence_ConsumesFiring_Getter::Prefix(BattleTech.MechDFASequence __instance)

18:23:20.769 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDFASequence::get_ConsumesFiring()
18:23:20.772 [Info] Writing prefixes
18:23:20.777 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.782 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
9 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)

18:23:20.785 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:20.787 [Info] Writing postfixes
18:23:20.795 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.798 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

18:23:20.801 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
18:23:20.803 [Info] Writing prefixes
18:23:20.805 [Info] Writing postfixes
18:23:20.811 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.815 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List<BattleTech.ICombatant> __result)

18:23:20.817 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
18:23:20.819 [Info] Writing postfixes
18:23:20.825 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.828 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

18:23:20.830 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
18:23:20.833 [Info] Writing prefixes
18:23:20.835 [Info] Writing postfixes
18:23:20.841 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.844 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDWeaponPanel_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

18:23:20.846 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
18:23:20.848 [Info] Writing postfixes
18:23:20.854 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 248 ms
18:23:20.856 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

18:23:20.859 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor)
18:23:20.862 [Info] Writing prefixes
18:23:20.867 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.870 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState2::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)

18:23:20.873 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)
18:23:20.875 [Info] Writing prefixes
18:23:20.881 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.886 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:20.889 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
18:23:20.891 [Info] Writing prefixes
18:23:20.894 [Info] Writing postfixes
18:23:20.909 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.912 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDActionButton_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string creatorGUID, string targetGUID)

18:23:20.915 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID)
18:23:20.918 [Info] Writing postfixes
18:23:20.924 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.928 [Info] Patching virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDEquipmentSlot_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDEquipmentSlot __instance, string creatorGUID, string targetGUID)

18:23:20.930 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID)
18:23:20.933 [Info] Writing postfixes
18:23:20.939 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.943 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
3 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButtons_Patch::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

18:23:20.945 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
18:23:20.947 [Info] Writing prefixes
18:23:20.950 [Info] Writing postfixes
18:23:20.956 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.959 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)
2 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

18:23:20.962 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
18:23:20.964 [Info] Writing prefixes
18:23:20.967 [Info] Writing postfixes
18:23:20.973 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
18:23:20.976 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:20.978 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
18:23:20.980 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
18:23:20.983 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:20.986 [Info] Writing postfixes
18:23:20.990 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:20.992 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix
18:23:20.995 [Info] PrefixWrapper created: HXI︳29︳::MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix
18:23:20.997 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix
18:23:21.000 [Info] PrefixWrapper created: HXI︳30︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix
18:23:21.002 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 261 ms
18:23:21.005 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent, Boolean& __runOriginal)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

18:23:21.008 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
18:23:21.010 [Info] Writing prefixes
18:23:21.013 [Info] Writing postfixes
18:23:21.019 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:21.022 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
18:23:21.024 [Info] PrefixWrapper created: HXI︳31︳::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
18:23:21.027 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
18:23:21.029 [Info] PrefixWrapper created: HXI︳32︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
18:23:21.031 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.035 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 2 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
* static void PanicSystem.Patches.Mech_OnLocationDestroyed_Patch::Postfix(BattleTech.Mech __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:21.038 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:21.040 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
18:23:21.043 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:21.046 [Info] Writing prefixes
18:23:21.048 [Info] Writing postfixes
18:23:21.056 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.059 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.TurnDirector_StartFirstRound::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

18:23:21.062 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
18:23:21.064 [Info] Writing prefixes
18:23:21.067 [Info] Writing postfixes
18:23:21.071 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.074 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatHUDStatusPanel_ShowMeleeDamageMultipliers::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor)

18:23:21.076 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor)
18:23:21.078 [Info] Writing prefixes
18:23:21.084 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.087 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, Single& damageAmount, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Mech_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:21.090 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:21.092 [Info] Writing prefixes
18:23:21.095 [Info] Writing postfixes
18:23:21.101 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.105 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Vehicle_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:21.107 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:21.110 [Info] Writing prefixes
18:23:21.112 [Info] Writing postfixes
18:23:21.119 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.123 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Turret_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:21.126 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:21.129 [Info] Writing prefixes
18:23:21.133 [Info] Writing postfixes
18:23:21.139 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 273 ms
18:23:21.142 [Info] Patching virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Building_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Building __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

18:23:21.145 [Info] Running ILHook manipulator on virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
18:23:21.148 [Info] Writing postfixes
18:23:21.153 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:21.156 [Info] PrefixWrapper being created for: CustomAmmoCategories::WeaponRealizer.JammingEnabler::Prefix
18:23:21.160 [Info] PrefixWrapper created: HXI︳33︳::WeaponRealizer.JammingEnabler::Prefix
18:23:21.163 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
18:23:21.166 [Info] PrefixWrapper created: HXI︳34︳::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
18:23:21.169 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.unJammingEnabler::Prefix
18:23:21.171 [Info] PrefixWrapper created: HXI︳35︳::CustAmmoCategories.unJammingEnabler::Prefix
18:23:21.174 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
18:23:21.177 [Info] PrefixWrapper created: HXI︳36︳::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
18:23:21.180 [Info] PrefixWrapper being created for: PanicSystem::PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix
18:23:21.184 [Info] PrefixWrapper created: HXI︳37︳::PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix
18:23:21.187 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
18:23:21.190 [Info] PrefixWrapper created: HXI︳38︳::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
18:23:21.192 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 312 ms
18:23:21.197 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 6 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

18:23:21.200 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
18:23:21.203 [Info] Writing prefixes
18:23:21.207 [Info] Writing postfixes
18:23:21.215 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 312 ms
18:23:21.220 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_InitStats::Postfix(BattleTech.Weapon __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Weapon_InitStats_Patch::Postfix(BattleTech.Weapon __instance)

18:23:21.223 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
18:23:21.226 [Info] Writing postfixes
18:23:21.236 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 312 ms
18:23:21.241 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
10 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)

18:23:21.243 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:21.246 [Info] Writing postfixes
18:23:21.255 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:21.258 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
18:23:21.261 [Info] PrefixWrapper created: HXI︳39︳::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
18:23:21.263 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.Mech_DamageLocation::Prefix
18:23:21.266 [Info] PrefixWrapper created: HXI︳40︳::CustAmmoCategories.Mech_DamageLocation::Prefix
18:23:21.269 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
18:23:21.272 [Info] PrefixWrapper created: HXI︳41︳::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
18:23:21.275 [Info] PrefixWrapper being created for: CBTBehaviorsEnhanced::CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix
18:23:21.277 [Info] PrefixWrapper created: HXI︳42︳::CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix
18:23:21.280 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
18:23:21.283 [Info] PrefixWrapper created: HXI︳43︳::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
18:23:21.286 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 343 ms
18:23:21.289 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 5 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)

18:23:21.292 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
18:23:21.295 [Info] Writing prefixes
18:23:21.307 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 343 ms
18:23:21.310 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.AmmunitionBox_DamageComponent::Prefix(BattleTech.AmmunitionBox __instance, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:21.313 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:21.315 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:21.318 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:21.321 [Info] Writing prefixes
18:23:21.327 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:21.330 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.PilotInjurePilotPatch::Prefix
18:23:21.333 [Info] PrefixWrapper created: HXI︳44︳::MissionControl.Patches.PilotInjurePilotPatch::Prefix
18:23:21.336 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
18:23:21.338 [Info] PrefixWrapper created: HXI︳45︳::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
18:23:21.342 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 357 ms
18:23:21.345 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
2 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

18:23:21.348 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:23:21.350 [Info] Writing prefixes
18:23:21.353 [Info] Writing postfixes
18:23:21.360 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 357 ms
18:23:21.363 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_OnTurnActorActivateComplete::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void IRTweaks.Modules.Combat.TurnDirector_OnTurnActorActivateComplete::Postfix(BattleTech.TurnDirector __instance)

18:23:21.366 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
18:23:21.369 [Info] Writing prefixes
18:23:21.371 [Info] Writing postfixes
18:23:21.379 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 359 ms
18:23:21.382 [Info] Patching virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.385 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
18:23:21.387 [Info] Transpiling virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
18:23:21.392 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.407 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 362 ms
18:23:21.411 [Info] Patching void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.414 [Info] Running ILHook manipulator on void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
18:23:21.416 [Info] Transpiling void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
18:23:21.420 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.436 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 362 ms
18:23:21.441 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 11 postfixes, 0 transpilers, 0 finalizers
11 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_PainTolerance::Postfix(BattleTech.AbstractActor __instance)

18:23:21.444 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
18:23:21.446 [Info] Writing postfixes
18:23:21.454 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:21.457 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
18:23:21.460 [Info] PrefixWrapper created: HXI︳46︳::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
18:23:21.463 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AbstractActor_IsFriendly::Prefix
18:23:21.467 [Info] PrefixWrapper created: HXI︳47︳::CustomUnits.AbstractActor_IsFriendly::Prefix
18:23:21.470 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
18:23:21.473 [Info] PrefixWrapper created: HXI︳48︳::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
18:23:21.476 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.479 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)

18:23:21.481 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
18:23:21.484 [Info] Writing prefixes
18:23:21.489 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.495 [Info] Patching void BattleTech.Pilot::InitStatValidators() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ExtendedStats_Pilot_InitStatValidators::Prefix(BattleTech.Pilot __instance, BattleTech.StatCollection ___statCollection)

18:23:21.497 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitStatValidators()
18:23:21.500 [Info] Writing prefixes
18:23:21.511 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.515 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()
* static void PanicSystem.Components.StatusEffect+CombatGameState_LoadComplete_Patch::Postfix()
* static void IRTweaks.Modules.Combat.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance, BattleTech.Contract contract)

18:23:21.518 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
18:23:21.520 [Info] Writing postfixes
18:23:21.528 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.531 [Info] Patching void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Building_AttachBuildingToObjective::Postfix(BattleTech.Building __instance, BattleTech.Framework.ObjectiveGameLogic objective)

18:23:21.533 [Info] Running ILHook manipulator on void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective)
18:23:21.536 [Info] Writing postfixes
18:23:21.541 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.544 [Info] Patching void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ScaleObjectiveBuildingStructure_TurnDirector_OnInitializeContractComplete::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

18:23:21.547 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message)
18:23:21.549 [Info] Writing postfixes
18:23:21.554 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.557 [Info] Patching void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SpawnProtection_Team_AddUnit::Postfix(BattleTech.Team __instance, BattleTech.AbstractActor unit)

18:23:21.560 [Info] Running ILHook manipulator on void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit)
18:23:21.563 [Info] Writing postfixes
18:23:21.585 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.588 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)
* static void CustomShops.SG_Stores_MultiPurchasePopup_Refresh::ReplaceTitle(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

18:23:21.591 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
18:23:21.593 [Info] Writing postfixes
18:23:21.600 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.603 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::Postfix()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnCancel::HandleExit()

18:23:21.606 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
18:23:21.609 [Info] Writing postfixes
18:23:21.614 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.618 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::Postfix()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnConfirm::HandleExit()

18:23:21.620 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
18:23:21.622 [Info] Writing postfixes
18:23:21.628 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 383 ms
18:23:21.637 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)

18:23:21.639 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
18:23:21.642 [Info] Writing prefixes
18:23:21.662 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 386 ms
18:23:21.665 [Info] Patching bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.668 [Info] Running ILHook manipulator on bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
18:23:21.671 [Info] Transpiling bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
18:23:21.674 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.685 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 388 ms
18:23:21.687 [Info] Patching void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.690 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
18:23:21.693 [Info] Transpiling void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
18:23:21.697 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.711 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 391 ms
18:23:21.715 [Info] Patching bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.717 [Info] Running ILHook manipulator on bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
18:23:21.720 [Info] Transpiling bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
18:23:21.724 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.736 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 393 ms
18:23:21.738 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.741 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.744 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.747 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.757 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 396 ms
18:23:21.760 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.763 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.765 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.768 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.899 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 399 ms
18:23:21.902 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.905 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.907 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.910 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.922 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:21.925 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

18:23:21.928 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.930 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
18:23:21.933 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?2132796928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
18:23:21.943 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:21.947 [Info] Patching void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_RefreshColorAreas::Prefix()

18:23:21.949 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas()
18:23:21.952 [Info] Writing prefixes
18:23:21.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:21.967 [Info] Patching void BattleTech.UI.SG_Shop_Screen::BeginShop() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_BeginShop::BeginShop(BattleTech.UI.SG_Shop_Screen __instance)

18:23:21.970 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::BeginShop()
18:23:21.973 [Info] Writing prefixes
18:23:21.980 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:21.989 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:21.993 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:21.995 [Info] Writing prefixes
18:23:21.999 [Info] Writing postfixes
18:23:22.025 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.027 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()
* static void CustomShops.Patches.SimGameState_Init::OnInit(BattleTech.SimGameState __instance)

18:23:22.030 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
18:23:22.033 [Info] Writing postfixes
18:23:22.040 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.045 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()

18:23:22.048 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
18:23:22.051 [Info] Writing postfixes
18:23:22.063 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.067 [Info] Patching void BattleTech.StarSystem::RefreshShops() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.StarSystem_RefreshShops::RefreshShops()

18:23:22.069 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshShops()
18:23:22.071 [Info] Writing prefixes
18:23:22.078 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.081 [Info] Patching void BattleTech.StarSystem::CompletedContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.StarSystem_CompletedContract::RefreshShops()

18:23:22.084 [Info] Running ILHook manipulator on void BattleTech.StarSystem::CompletedContract()
18:23:22.086 [Info] Writing postfixes
18:23:22.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.098 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

18:23:22.100 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
18:23:22.103 [Info] Writing postfixes
18:23:22.109 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.120 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
9 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)

18:23:22.123 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:22.126 [Info] Writing prefixes
18:23:22.129 [Info] Writing postfixes
18:23:22.162 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.165 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.SimGameState_SetCurrentSystem::UpdateSystem(BattleTech.StarSystem system)
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

18:23:22.168 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
18:23:22.171 [Info] Writing prefixes
18:23:22.173 [Info] Writing postfixes
18:23:22.181 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.185 [Info] Patching void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Dehydrate::OverrideSaveShops(Boolean& saveShops)

18:23:22.188 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops)
18:23:22.190 [Info] Writing prefixes
18:23:22.198 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.204 [Info] Patching void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Rehydrate::OverrideLoadShops(Boolean& loadShops)

18:23:22.207 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops)
18:23:22.210 [Info] Writing prefixes
18:23:22.226 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.232 [Info] Patching BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerate(BattleTech.ItemCollectionDef collection, int count, string parentGUID)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerated(BattleTech.ItemCollectionDef collection, BattleTech.ItemCollectionResult __result)

18:23:22.234 [Info] Running ILHook manipulator on BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID)
18:23:22.237 [Info] Writing prefixes
18:23:22.242 [Info] Writing postfixes
18:23:22.267 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.270 [Info] Patching void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_InsertItemCollectionEntry::OnInsert(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)

18:23:22.273 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)
18:23:22.276 [Info] Writing prefixes
18:23:22.282 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.286 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnComplete(BattleTech.ItemCollectionResult collectionResult)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnCompleted(BattleTech.ItemCollectionResult collectionResult)

18:23:22.288 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult)
18:23:22.290 [Info] Writing prefixes
18:23:22.293 [Info] Writing postfixes
18:23:22.301 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.305 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionDefRetrieved::OnComplete(BattleTech.ItemCollectionDef& def, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<BattleTech.ItemCollectionDef+Entry, string>>> ____pendingGenerateRequests)

18:23:22.308 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def)
18:23:22.310 [Info] Writing prefixes
18:23:22.319 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.324 [Info] Patching void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_ProcessQueuedReferenceCollections::OnComplete(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)

18:23:22.327 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)
18:23:22.329 [Info] Writing prefixes
18:23:22.341 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 401 ms
18:23:22.344 [Info] Patching void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.Shop_OnItemsCollected::OnResultReveived(BattleTech.ItemCollectionResult result)

18:23:22.347 [Info] Running ILHook manipulator on void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result)
18:23:22.349 [Info] Writing prefixes
18:23:22.357 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 402 ms
18:23:22.359 [Info] Patching virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.DEBUG_Patches.SG_Shop_Screen_ReceiveButtonPress::Prefix(string button)

18:23:22.363 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button)
18:23:22.367 [Info] Writing prefixes
18:23:22.381 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 402 ms
18:23:22.384 [Info] Patching static bool IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::IsShopActive(BattleTech.SimGameState simState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.IsShopActive::ShowButton(Boolean& __result)

18:23:22.386 [Info] Running ILHook manipulator on static bool IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::IsShopActive(BattleTech.SimGameState simState)
18:23:22.389 [Info] Writing prefixes
18:23:22.433 [Info] ### Harmony id=LewdableTanks, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void LewdableTanks.Control::init(string directory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\LewdableTanks\LewdableTanks.dll
### At 2023-06-01 06.23.22
18:23:22.438 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
7 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

18:23:22.442 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
18:23:22.444 [Info] Writing prefixes
18:23:22.447 [Info] Writing postfixes
18:23:22.452 [Info] Patching virtual string BattleTech.UI.ListElementController_SalvageMechPart_NotListView::GetName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.SortFix.ListElementController_SalvageMechPart_NotListView_GetName::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, String& __result)

18:23:22.455 [Info] Running ILHook manipulator on virtual string BattleTech.UI.ListElementController_SalvageMechPart_NotListView::GetName()
18:23:22.458 [Info] Writing prefixes
18:23:22.464 [Info] Patching static System.Collections.Generic.HashSet<string> CustomSalvage.ChassisHandler::build_mech_tags(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_build_mech_tags::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

18:23:22.467 [Info] Running ILHook manipulator on static System.Collections.Generic.HashSet<string> CustomSalvage.ChassisHandler::build_mech_tags(BattleTech.MechDef mech)
18:23:22.469 [Info] Writing prefixes
18:23:22.476 [Info] Patching static string CustomSalvage.ChassisHandler::GetMechType(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetMechType::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, String& __result)

18:23:22.480 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetMechType(BattleTech.MechDef mech)
18:23:22.483 [Info] Writing prefixes
18:23:22.489 [Info] Patching static string CustomSalvage.ChassisHandler::GetPrefabId(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetPrefabId::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, String& __result)

18:23:22.493 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetPrefabId(BattleTech.MechDef mech)
18:23:22.495 [Info] Writing prefixes
18:23:22.501 [Info] Patching static CustomSalvage.IAssemblyVariant CustomSalvage.ChassisHandler::get_variant(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_get_variant::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, CustomSalvage.IAssemblyVariant& __result)

18:23:22.504 [Info] Running ILHook manipulator on static CustomSalvage.IAssemblyVariant CustomSalvage.ChassisHandler::get_variant(BattleTech.MechDef mech)
18:23:22.507 [Info] Writing prefixes
18:23:22.513 [Info] Patching static void CustomSalvage.ChassisHandler::MakeMech(BattleTech.SimGameState sim, int other_parts) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_MakeMech::Prefix(Boolean& __runOriginal)
1 postfixes:
* static void LewdableTanks.Patches.ChassisHandler_MakeMech::Postfix()

18:23:22.516 [Info] Running ILHook manipulator on static void CustomSalvage.ChassisHandler::MakeMech(BattleTech.SimGameState sim, int other_parts)
18:23:22.519 [Info] Writing prefixes
18:23:22.521 [Info] Writing postfixes
18:23:22.534 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
3 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void LewdableTanks.Patches.Contract_CompleteContract::Postfix(BattleTech.Contract __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:22.537 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:22.539 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:22.543 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:22.547 [Info] Writing prefixes
18:23:22.550 [Info] Writing postfixes
18:23:22.565 [Info] Patching static void CustomSalvage.Contract_GenerateSalvage::ProccessPlayerMech(BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.Contract_GenerateSalvage_ProccessPlayerMech::Prefix(Boolean& __runOriginal, BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract)

18:23:22.568 [Info] Running ILHook manipulator on static void CustomSalvage.Contract_GenerateSalvage::ProccessPlayerMech(BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract)
18:23:22.571 [Info] Writing prefixes
18:23:22.577 [Info] Patching static void CustomSalvage.Contract_GenerateSalvage::AddVechicleToSalvage(BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.GenerateSalvage_AddVechicleToSalvage::Prefix(Boolean& __runOriginal, BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame)

18:23:22.579 [Info] Running ILHook manipulator on static void CustomSalvage.Contract_GenerateSalvage::AddVechicleToSalvage(BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame)
18:23:22.582 [Info] Writing prefixes
18:23:22.587 [Info] Patching static string CustomSalvage.ChassisHandler::GetMDefFromCDef(string cdefid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetMDefFromCDef::Prefix(Boolean& __runOriginal, String& __result, string cdefid)

18:23:22.590 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetMDefFromCDef(string cdefid)
18:23:22.593 [Info] Writing prefixes
18:23:22.597 [Info] Patching static string CustomShops.Control::GetMDefFromCDef(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.Control_GetMDefFromCDef::Prefix(Boolean& __runOriginal, String& __result, string id)

18:23:22.600 [Info] Running ILHook manipulator on static string CustomShops.Control::GetMDefFromCDef(string id)
18:23:22.602 [Info] Writing prefixes
18:23:22.607 [Info] Patching static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.MechBayMechInfoWidget_OnUnreadyClicked_Prefix::Prefix(Boolean& __runOriginal)
1 postfixes:
* static void LewdableTanks.Patches.MechBayMechInfoWidget_OnUnreadyClicked_Prefix::Postfix()

18:23:22.610 [Info] Running ILHook manipulator on static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)
18:23:22.612 [Info] Writing prefixes
18:23:22.615 [Info] Writing postfixes
18:23:22.621 [Info] Patching void BattleTech.UI.MechBayPanel::RefreshData(bool resetFilters) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LewdableTanks.Patches.MechBayPanel_Init::Postfix(BattleTech.UI.MechBayPanel __instance)

18:23:22.624 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::RefreshData(bool resetFilters)
18:23:22.627 [Info] Writing postfixes
18:23:22.635 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
* static void LewdableTanks.Patches.MechBayPanel_OnReadyMech::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayChassisUnitElement& ___selectedChassis, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

18:23:22.638 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
18:23:22.641 [Info] Writing prefixes
18:23:22.645 [Info] Writing postfixes
18:23:22.657 [Info] Patching void BattleTech.ShopDefItem::ToSalvageDef(BattleTech.SalvageDef& salvageDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ShopDefItem_ToSalvageDef::Prefix(Boolean& __runOriginal, BattleTech.SalvageDef& salvageDef, BattleTech.ShopDefItem __instance)

18:23:22.660 [Info] Running ILHook manipulator on void BattleTech.ShopDefItem::ToSalvageDef(BattleTech.SalvageDef& salvageDef)
18:23:22.662 [Info] Writing prefixes
18:23:22.681 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)
* static void LewdableTanks.Patches.SH_Shop_Screen_AddShopItemToWidget::Prefix(Boolean& __runOriginal, BattleTech.ShopDefItem& itemDef, BattleTech.Shop shop, bool isBulkAdd, bool isSelling, BattleTech.UI.IMechLabDropTarget targetWidget, BattleTech.UI.MechLabInventoryWidget_ListView ___inventoryWidget, bool ___isInBuyingState, BattleTech.SimGameState ___simState, BattleTech.UI.SG_Shop_Screen __instance)

18:23:22.684 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
18:23:22.686 [Info] Writing prefixes
18:23:22.702 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_ScrapActiveMech::Prefix(Boolean& __runOriginal, int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

18:23:22.704 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
18:23:22.707 [Info] Writing prefixes
18:23:22.710 [Info] Writing postfixes
18:23:22.716 [Info] Patching bool BattleTech.SimGameState::ScrapMechPart(string id, float partCount, float partMax, bool pay) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_ScrapMechPart::Prefix(Boolean& __runOriginal, string id, float partCount, float partMax, bool pay, BattleTech.SimGameState __instance, Boolean& __result)

18:23:22.718 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapMechPart(string id, float partCount, float partMax, bool pay)
18:23:22.721 [Info] Writing prefixes
18:23:22.727 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_UnreadyMech::Prefix(Boolean& __runOriginal, int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

18:23:22.730 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
18:23:22.733 [Info] Writing prefixes
18:23:22.735 [Info] Writing postfixes
18:23:22.811 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 402 ms
18:23:22.815 [Info] Patching int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SGContractsWidget_GetContractComparePriority_Patch::Prefix(BattleTech.UI.SGContractsWidget __instance, Int32& __result, BattleTech.Contract contract)

18:23:22.817 [Info] Running ILHook manipulator on int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract)
18:23:22.819 [Info] Writing prefixes
18:23:22.825 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 402 ms
18:23:22.828 [Info] Patching void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_OnTargetSystemFound::Prefix(BattleTech.SimGameState __instance)

18:23:22.831 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result)
18:23:22.834 [Info] Writing prefixes
18:23:22.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 402 ms
18:23:22.890 [Info] Patching BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Prefix(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
1 postfixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Postfix(BattleTech.FactionDef employer)

18:23:22.892 [Info] Running ILHook manipulator on BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
18:23:22.896 [Info] Writing prefixes
18:23:22.898 [Info] Writing postfixes
18:23:22.913 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 402 ms
18:23:22.917 [Info] Patching void BattleTech.StarSystem::RefreshBreadcrumbs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_RefreshBreadcrumbs::Prefix(BattleTech.StarSystem __instance)

18:23:22.919 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshBreadcrumbs()
18:23:22.922 [Info] Writing prefixes
18:23:22.928 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
18:23:22.931 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.SimGameState_GeneratePotentialContracts::Prefix
18:23:22.934 [Info] PrefixWrapper created: HXI︳49︳::CustomUnits.SimGameState_GeneratePotentialContracts::Prefix
18:23:22.937 [Info] PrefixWrapper being created for: PersistentMapClient::PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix
18:23:22.940 [Info] PrefixWrapper created: HXI︳50︳::PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix
18:23:22.943 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:22.946 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine, Boolean& __runOriginal)
* static bool PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine, Boolean& __runOriginal)

18:23:22.949 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
18:23:22.951 [Info] Writing prefixes
18:23:22.956 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:22.959 [Info] Patching void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Contract_FinalizeSalvage_Patch::Postfix(BattleTech.Contract __instance, System.Collections.Generic.List<BattleTech.SalvageDef> ___finalPotentialSalvage)

18:23:22.962 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems)
18:23:22.965 [Info] Writing postfixes
18:23:22.975 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:22.978 [Info] Patching void BattleTech.UI.SG_Shop_Screen::OnCompleted() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SG_Shop_Screen_OnCompleted_Patch::Postfix()

18:23:22.981 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::OnCompleted()
18:23:22.983 [Info] Writing postfixes
18:23:22.989 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:22.993 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

18:23:22.996 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
18:23:22.999 [Info] Writing postfixes
18:23:23.007 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.015 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
10 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

18:23:23.018 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
18:23:23.020 [Info] Writing prefixes
18:23:23.023 [Info] Writing postfixes
18:23:23.051 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.054 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_DeductQuarterlyFunds_Patch::Prefix(BattleTech.SimGameState __instance, int quarterPassed)
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

18:23:23.057 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
18:23:23.060 [Info] Writing prefixes
18:23:23.063 [Info] Writing postfixes
18:23:23.071 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.076 [Info] Patching void BattleTech.UI.SGDebugEventWidget::Submit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGDebugEventWidget_Submit_Patch::Postfix(BattleTech.UI.SGDebugEventWidget __instance, BattleTech.UI.SGDebugEventWidget+DebugType ___curType, BattleTech.SimGameState ___Sim)

18:23:23.079 [Info] Running ILHook manipulator on void BattleTech.UI.SGDebugEventWidget::Submit()
18:23:23.082 [Info] Writing postfixes
18:23:23.099 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.103 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CompleteAllContractObjectives_Patch::Postfix()

18:23:23.106 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives()
18:23:23.109 [Info] Writing postfixes
18:23:23.117 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.120 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillTarget_Patch::Postfix()

18:23:23.123 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget()
18:23:23.126 [Info] Writing postfixes
18:23:23.134 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.137 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillAllEnemies_Patch::Postfix()

18:23:23.139 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies()
18:23:23.142 [Info] Writing postfixes
18:23:23.150 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.154 [Info] Patching void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_SetGodMode_Patch::Postfix()

18:23:23.157 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team)
18:23:23.159 [Info] Writing postfixes
18:23:23.167 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.170 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_DamageTarget_Patch::Postfix()

18:23:23.173 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget()
18:23:23.176 [Info] Writing postfixes
18:23:23.187 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.190 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CritTarget_Patch::Postfix()

18:23:23.193 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget()
18:23:23.195 [Info] Writing postfixes
18:23:23.202 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.205 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_ApplyInstability_Patch::Postfix()

18:23:23.208 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability()
18:23:23.210 [Info] Writing postfixes
18:23:23.216 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.219 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUDDEBUG_KnockdownTarget_Patch::Postfix()

18:23:23.221 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget()
18:23:23.223 [Info] Writing postfixes
18:23:23.228 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.231 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatDebugHUDPatches::Postfix(BattleTech.UI.CombatHUD ___combatHUD)
* static void PersistentMapClient.CombatDebugHUD_DEBUG_OverheatTarget_Patch::Postfix()

18:23:23.234 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
18:23:23.236 [Info] Writing postfixes
18:23:23.241 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.244 [Info] Patching void BattleTech.StarSystem::ResetContracts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.StarSystem_ResetContracts_Patch::Postfix(BattleTech.StarSystem __instance)

18:23:23.247 [Info] Running ILHook manipulator on void BattleTech.StarSystem::ResetContracts()
18:23:23.249 [Info] Writing postfixes
18:23:23.254 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.257 [Info] Patching void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_PrepareBreadcrumb_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract& contract)

18:23:23.260 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract)
18:23:23.263 [Info] Writing postfixes
18:23:23.270 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.274 [Info] Patching BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_AddPredefinedContract_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract __result)

18:23:23.276 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData)
18:23:23.279 [Info] Writing postfixes
18:23:23.288 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.293 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGSystemViewPopulator_UpdateRoutedSystem_Patch::Postfix(BattleTech.UI.SGSystemViewPopulator __instance, BattleTech.StarSystem ___starSystem, BattleTech.SimGameState ___simState)

18:23:23.296 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem()
18:23:23.299 [Info] Writing postfixes
18:23:23.315 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.318 [Info] Patching void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Starmap_PopulateMap_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.SimGameState simGame)

18:23:23.321 [Info] Running ILHook manipulator on void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame)
18:23:23.324 [Info] Writing postfixes
18:23:23.329 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.333 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
4 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void LewdableTanks.Patches.Contract_CompleteContract::Postfix(BattleTech.Contract __instance)
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:23.336 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:23.338 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
18:23:23.343 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:23.347 [Info] Writing prefixes
18:23:23.349 [Info] Writing postfixes
18:23:23.363 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.366 [Info] Patching void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Prefix(BattleTech.StarSystem __instance, Action onContractsFetched)
1 postfixes:
* static void PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Postfix(BattleTech.StarSystem __instance)

18:23:23.370 [Info] Running ILHook manipulator on void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched)
18:23:23.372 [Info] Writing prefixes
18:23:23.375 [Info] Writing postfixes
18:23:23.380 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.384 [Info] Patching BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_CreateTravelContract_Patch::Prefix(BattleTech.FactionValue& employer, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& neutralToAll, BattleTech.FactionValue& hostileToAll)

18:23:23.386 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty)
18:23:23.389 [Info] Writing prefixes
18:23:23.398 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.402 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
* static void PersistentMapClient.SimGameState_PrepContract_Patch::Prefix(BattleTech.SimGameState __instance, BattleTech.FactionValue& employer, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& NeutralToAll, BattleTech.FactionValue& HostileToAll, BattleTech.StarSystem& system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

18:23:23.404 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
18:23:23.407 [Info] Writing prefixes
18:23:23.409 [Info] Writing postfixes
18:23:23.539 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.543 [Info] Patching void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_CreateBreakContractWarning_Patch::Prefix(BattleTech.SimGameState __instance, Action continueAction, Action cancelAction)

18:23:23.545 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction)
18:23:23.548 [Info] Writing prefixes
18:23:23.555 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.559 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()
* static void PersistentMapClient.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

18:23:23.562 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
18:23:23.564 [Info] Writing postfixes
18:23:23.574 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 417 ms
18:23:23.579 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

18:23:23.581 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
18:23:23.584 [Info] Writing postfixes
18:23:28.691 [Info] ### Harmony id=io.kmission.fastload, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPrewarm.Core::FinishedLoading(System.Collections.Generic.List<string> loadOrder), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomPrewarm\CustomPrewarm.dll
### At 2023-06-01 06.23.28
18:23:28.695 [Info] Patching void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameContext_Rehydrate::Prefix(BattleTech.SimGameContext __instance, BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:28.697 [Info] Running ILHook manipulator on void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:28.699 [Info] Writing prefixes
18:23:28.706 [Info] Patching void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MetadataDatabase_WriteInMemoryDBToDisk::Prefix(BattleTech.Data.MetadataDatabase __instance, string filePath)

18:23:28.708 [Info] Running ILHook manipulator on void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath)
18:23:28.710 [Info] Writing prefixes
18:23:28.717 [Info] Patching void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameUXCreator_OnSimGameInitializeComplete::Prefix(BattleTech.UI.SimGameUXCreator __instance, MessageCenterMessage message)

18:23:28.719 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message)
18:23:28.721 [Info] Writing prefixes
18:23:28.726 [Info] Patching virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SGRoomController_Navigation_LeaveRoom::Prefix(BattleTech.UI.SGRoomController_Navigation __instance, bool ignoreFader)

18:23:28.728 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader)
18:23:28.729 [Info] Writing prefixes
18:23:28.734 [Info] Patching virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MechDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+MechDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:28.736 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:28.738 [Info] Writing prefixes
18:23:28.744 [Info] Patching virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.PilotHandler_Rehydrate::Prefix(BattleTech.SimGameContext+PilotHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:28.746 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:28.748 [Info] Writing prefixes
18:23:28.753 [Info] Patching virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.StarSystemHandler_Rehydrate::Prefix(BattleTech.SimGameContext+StarSystemHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:28.755 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:28.757 [Info] Writing prefixes
18:23:28.763 [Info] Patching virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FactionDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FactionDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:28.765 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:28.767 [Info] Writing prefixes
18:23:28.773 [Info] Patching virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FlashpointHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FlashpointHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

18:23:28.775 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
18:23:28.777 [Info] Writing prefixes
18:23:28.782 [Info] Patching void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.GameInstance_CreateSim::Prefix(BattleTech.GameInstance __instance, BattleTech.SimGameState+SimGameType gameType, bool debug)

18:23:28.784 [Info] Running ILHook manipulator on void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug)
18:23:28.786 [Info] Writing prefixes
18:23:28.791 [Info] Patching System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SaveGameStructure_GetAllCareerSlots::Postfix(BattleTech.Save.SaveGameStructure.SaveGameStructure __instance, System.Collections.Generic.List`1[[BattleTech.Save.SaveGameStructure.SlotModel, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:28.793 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots()
18:23:28.795 [Info] Writing postfixes
18:23:28.802 [Info] Patching bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MainMenu_EnableCareerLoadIfCareerSaves::Prefix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

18:23:28.805 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message)
18:23:28.806 [Info] Writing prefixes
18:23:28.813 [Info] Patching bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.MainMenu_ShowRefreshingSaves::Postfix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

18:23:28.815 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message)
18:23:28.817 [Info] Writing postfixes
18:23:28.824 [Info] Patching static void HBS.Util.JSONSerializationUtility::LogWarning(string error) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.JSONSerializationUtility_JSONSerializationUtility::Prefix()

18:23:28.827 [Info] Running ILHook manipulator on static void HBS.Util.JSONSerializationUtility::LogWarning(string error)
18:23:28.828 [Info] Writing prefixes
18:23:28.937 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.SimGameState__OnInit::Prefix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

18:23:28.939 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
18:23:28.941 [Info] Writing prefixes
18:23:28.943 [Info] Writing postfixes
18:23:28.951 [Info] Patching bool BattleTech.SimGameState::_OnHeadlessComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SimGameState__OnHeadlessComplete::Postfix(BattleTech.SimGameState __instance, Boolean& __result)

18:23:28.953 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::_OnHeadlessComplete()
18:23:28.955 [Info] Writing postfixes
18:23:28.963 [Info] Patching bool BattleTech.SimGameState::HandleSaveHydrate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_HandleSaveHydrate::Prefix(BattleTech.SimGameState __instance, Boolean& __result, BattleTech.Save.GameInstanceSave& ___save)

18:23:28.965 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HandleSaveHydrate()
18:23:28.967 [Info] Writing prefixes
18:23:28.974 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
* static void CustomPrewarm.SimGameState_RespondToDefsLoadComplete::Prefix()

18:23:28.976 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
18:23:28.978 [Info] Writing prefixes
18:23:28.984 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_RequestDataManagerResources::Prefix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:28.986 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
18:23:28.988 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
18:23:28.991 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:28.995 [Info] Writing prefixes
18:23:29.008 [Info] Patching void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Prefix(System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Postfix(System.Diagnostics.Stopwatch& __state)

18:23:29.011 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager)
18:23:29.013 [Info] Writing prefixes
18:23:29.015 [Info] Writing postfixes
18:23:29.021 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomPrewarm.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

18:23:29.023 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
18:23:29.025 [Info] Writing postfixes
18:23:29.030 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_InitUserSettings::Prefix(BattleTech.UnityGameInstance __instance)
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

18:23:29.032 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
18:23:29.034 [Info] Writing prefixes
18:23:29.036 [Info] Writing postfixes
18:23:29.041 [Info] Patching void BattleTech.UnityGameInstance::OnModsInitComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_OnModsInitComplete::Prefix(BattleTech.UnityGameInstance __instance)

18:23:29.043 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnModsInitComplete()
18:23:29.045 [Info] Writing prefixes
18:23:29.051 [Info] Patching void BattleTech.Save.UserSettings::Save() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Save::Prefix(BattleTech.Save.UserSettings __instance)

18:23:29.053 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Save()
18:23:29.055 [Info] Writing prefixes
18:23:29.063 [Info] Patching void BattleTech.BTInput::LoadSavedBindings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.BTInput_LoadSavedBindings::Prefix(BattleTech.BTInput __instance)

18:23:29.065 [Info] Running ILHook manipulator on void BattleTech.BTInput::LoadSavedBindings()
18:23:29.067 [Info] Writing prefixes
18:23:29.077 [Info] Patching void BattleTech.Save.UserSettings::Load(Action loadComplete) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Load::Prefix(BattleTech.Save.UserSettings __instance, Action loadComplete)

18:23:29.080 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Load(Action loadComplete)
18:23:29.081 [Info] Writing prefixes
18:23:29.088 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
* static bool CustomPrewarm.Serialize.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

18:23:29.090 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
18:23:29.092 [Info] Writing prefixes
18:23:29.094 [Info] Writing postfixes
18:23:29.099 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
* static bool CustomPrewarm.Serialize.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.MechDef __instance)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

18:23:29.101 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
18:23:29.103 [Info] Writing prefixes
18:23:29.105 [Info] Writing postfixes
18:23:29.109 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static bool CustomPrewarm.Serialize.AmmunitionDef_FromJSON::Prefix(BattleTech.AmmunitionDef __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

18:23:29.112 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
18:23:29.113 [Info] Writing prefixes
18:23:29.115 [Info] Writing postfixes
18:23:29.120 [Info] Patching virtual void BattleTech.BackgroundDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BackgroundDef_FromJSON::Prefix(BattleTech.BackgroundDef __instance)

18:23:29.122 [Info] Running ILHook manipulator on virtual void BattleTech.BackgroundDef::FromJSON(string json)
18:23:29.124 [Info] Writing prefixes
18:23:29.128 [Info] Patching virtual void BattleTech.BaseDescriptionDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BaseDescriptionDef_FromJSON::Prefix(BattleTech.BaseDescriptionDef __instance)

18:23:29.130 [Info] Running ILHook manipulator on virtual void BattleTech.BaseDescriptionDef::FromJSON(string json)
18:23:29.132 [Info] Writing prefixes
18:23:29.136 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.ChassisDef_FromJSON::Prefix(BattleTech.ChassisDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

18:23:29.138 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
18:23:29.140 [Info] Writing prefixes
18:23:29.142 [Info] Writing postfixes
18:23:29.147 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
* static bool CustomPrewarm.Serialize.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

18:23:29.150 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
18:23:29.152 [Info] Writing prefixes
18:23:29.154 [Info] Writing postfixes
18:23:29.158 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)
* static bool CustomPrewarm.Serialize.MechDef_FromJSON::Prefix(BattleTech.MechDef __instance)

18:23:29.160 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
18:23:29.162 [Info] Writing prefixes
18:23:29.167 [Info] Patching virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.MovementCapabilitiesDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)

18:23:29.169 [Info] Running ILHook manipulator on virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json)
18:23:29.171 [Info] Writing prefixes
18:23:29.175 [Info] Patching virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.PathingCapabilitiesDef_FromJSON::Prefix(BattleTech.PathingCapabilitiesDef __instance)

18:23:29.177 [Info] Running ILHook manipulator on virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json)
18:23:29.179 [Info] Writing prefixes
18:23:29.183 [Info] Patching virtual void BattleTech.StarSystemDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.StarSystemDef_FromJSON::Prefix(BattleTech.StarSystemDef __instance)

18:23:29.185 [Info] Running ILHook manipulator on virtual void BattleTech.StarSystemDef::FromJSON(string json)
18:23:29.187 [Info] Writing prefixes
18:23:29.192 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.HeatSinkDef_FromJSON::Prefix(BattleTech.HeatSinkDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

18:23:29.194 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
18:23:29.196 [Info] Writing prefixes
18:23:29.197 [Info] Writing postfixes
18:23:29.202 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.JumpJetDef_FromJSON::Prefix(BattleTech.JumpJetDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

18:23:29.204 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
18:23:29.206 [Info] Writing prefixes
18:23:29.208 [Info] Writing postfixes
18:23:29.213 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.UpgradeDef_FromJSON::Prefix(BattleTech.UpgradeDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

18:23:29.215 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
18:23:29.217 [Info] Writing prefixes
18:23:29.219 [Info] Writing postfixes
18:23:29.224 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.VehicleChassisDef_FromJSON::Prefix(BattleTech.VehicleChassisDef __instance)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

18:23:29.226 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
18:23:29.228 [Info] Writing prefixes
18:23:29.230 [Info] Writing postfixes
18:23:29.235 [Info] Patching virtual void BattleTech.VehicleDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.VehicleDef_FromJSON::Prefix(BattleTech.VehicleDef __instance)

18:23:29.238 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::FromJSON(string json)
18:23:29.239 [Info] Writing prefixes
18:23:29.244 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

18:23:29.246 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
18:23:29.248 [Info] Writing prefixes
18:23:29.250 [Info] Writing postfixes
18:23:29.324 [Info] Patching void BattleTech.StackManager::Update() with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomAmmoCategoriesPrivate.StackManager_Update::Finalizer(BattleTech.StackManager __instance, Exception __exception)

18:23:29.327 [Info] Running ILHook manipulator on void BattleTech.StackManager::Update()
18:23:29.329 [Info] Writing finalizers
18:23:29.339 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Prefix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, Object& data, bool __result, BattleTech.BaseComponentRef& __state)
4 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result, BattleTech.BaseComponentRef& __state)

18:23:29.342 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
18:23:29.344 [Info] Writing prefixes
18:23:29.345 [Info] Writing postfixes
18:23:29.356 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.MechLabItemSlotElement_RefreshInfo::Prefix(BattleTech.UI.MechLabItemSlotElement __instance)

18:23:29.359 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshInfo()
18:23:29.361 [Info] Writing prefixes
18:23:29.366 [Info] Patching void BattleTech.UI.Tooltips.TooltipManager::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipManager_Awake::Prefix(BattleTech.UI.Tooltips.TooltipManager __instance, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.TooltipManager+TooltipObject, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___TooltipPool)

18:23:29.368 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipManager::Awake()
18:23:29.370 [Info] Writing prefixes
18:23:29.376 [Info] Patching BehaviorTreeResults BehaviorTree::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Prefix(BehaviorTree __instance)
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Postfix(BehaviorTree __instance, BehaviorTreeResults& __result)

18:23:29.378 [Info] Running ILHook manipulator on BehaviorTreeResults BehaviorTree::Update()
18:23:29.380 [Info] Writing prefixes
18:23:29.382 [Info] Writing postfixes
18:23:29.407 [Info] Patching virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

18:23:29.409 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick()
18:23:29.411 [Info] Writing postfixes
18:23:29.437 [Info] Patching virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

18:23:29.439 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick()
18:23:29.441 [Info] Writing postfixes
18:23:29.465 [Info] Patching virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

18:23:29.468 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick()
18:23:29.470 [Info] Writing postfixes
18:23:29.493 [Info] Patching virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

18:23:29.496 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick()
18:23:29.498 [Info] Writing postfixes
18:23:29.522 [Info] Patching virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

18:23:29.524 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick()
18:23:29.526 [Info] Writing postfixes
18:23:29.551 [Info] Patching virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

18:23:29.554 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick()
18:23:29.556 [Info] Writing prefixes
18:23:29.558 [Info] Writing postfixes
18:23:29.584 [Info] Patching virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

18:23:29.586 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick()
18:23:29.588 [Info] Writing prefixes
18:23:29.590 [Info] Writing postfixes
18:23:29.596 [Info] Patching static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

18:23:29.598 [Info] Running ILHook manipulator on static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg)
18:23:29.601 [Info] Writing prefixes
18:23:29.603 [Info] Writing postfixes
18:23:29.608 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Prefix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
2 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Postfix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, BattleTech.MoveType ___moveType, BattleTech.CombatGameState ___combat, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

18:23:29.610 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
18:23:29.612 [Info] Writing prefixes
18:23:29.615 [Info] Writing postfixes
18:23:29.908 [Info] Patching static void PanicSystem.Components.DamageHandler::ProcessBatchedTurnDamage(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.UnitCombatStatisticHelper::DamageHandler_ProcessBatchedTurnDamage_Prefix(BattleTech.AbstractActor actor, Boolean& __state)
1 postfixes:
* static void CustAmmoCategories.UnitCombatStatisticHelper::DamageHandler_ProcessBatchedTurnDamage_Postfix(BattleTech.AbstractActor actor, Boolean& __state)

18:23:29.910 [Info] Running ILHook manipulator on static void PanicSystem.Components.DamageHandler::ProcessBatchedTurnDamage(BattleTech.AbstractActor actor)
18:23:29.912 [Info] Writing prefixes
18:23:29.914 [Info] Writing postfixes
18:23:29.935 [Info] Patching static void PanicSystem.Components.AARIcons::AddEjectedMech(UnityEngine.RectTransform KillGridParent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.UnitCombatStatisticHelper::AARIcons_AddEjectedMech_Prefix()

18:23:29.938 [Info] Running ILHook manipulator on static void PanicSystem.Components.AARIcons::AddEjectedMech(UnityEngine.RectTransform KillGridParent)
18:23:29.939 [Info] Writing prefixes
18:23:29.946 [Info] Patching static void PanicSystem.Components.AARIcons::AddEjectedVehicle(UnityEngine.RectTransform KillGridParent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.UnitCombatStatisticHelper::AARIcons_AddEjectedVehicle_Prefix()

18:23:29.948 [Info] Running ILHook manipulator on static void PanicSystem.Components.AARIcons::AddEjectedVehicle(UnityEngine.RectTransform KillGridParent)
18:23:29.949 [Info] Writing prefixes
18:23:29.955 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Postfix(BattleTech.MechDef mechDef)

18:23:29.957 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:29.958 [Info] Writing prefixes
18:23:29.960 [Info] Writing postfixes
18:23:29.968 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Postfix(BattleTech.MechDef mechDef)

18:23:29.970 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:29.972 [Info] Writing prefixes
18:23:29.973 [Info] Writing postfixes
18:23:29.978 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Postfix(BattleTech.MechDef mechDef)

18:23:29.980 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:29.982 [Info] Writing prefixes
18:23:29.984 [Info] Writing postfixes
18:23:29.988 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Postfix(BattleTech.MechDef mechDef)

18:23:29.990 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
18:23:29.992 [Info] Writing prefixes
18:23:29.994 [Info] Writing postfixes
18:23:29.999 [Info] Patching void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Prefix(BattleTech.MechDef def)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Postfix(BattleTech.MechDef def)

18:23:30.001 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def)
18:23:30.003 [Info] Writing prefixes
18:23:30.004 [Info] Writing postfixes
18:23:30.010 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
* static void CustomActivatablePatches.InjurePilot_Check::Prefix(BattleTech.Pilot __instance, BattleTech.Pilot& __state)
3 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
* static void CustomActivatablePatches.InjurePilot_Check::Postfix(BattleTech.Pilot __instance, BattleTech.Pilot& __state)

18:23:30.012 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
18:23:30.014 [Info] Writing prefixes
18:23:30.016 [Info] Writing postfixes
18:23:30.021 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 3 prefixes, 5 postfixes, 2 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.MechComponent_DamageComponent_Stack::Prefix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
5 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent_Stack::Postfix(BattleTech.MechComponent __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:30.023 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:30.025 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
18:23:30.027 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:30.029 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:30.031 [Info] Writing prefixes
18:23:30.033 [Info] Writing postfixes
18:23:30.686 [Info] Patching virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.688 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.690 [Info] Writing prefixes
18:23:30.692 [Info] Writing postfixes
18:23:30.696 [Info] Patching virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.698 [Info] Running ILHook manipulator on virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.700 [Info] Writing prefixes
18:23:30.702 [Info] Writing postfixes
18:23:30.707 [Info] Patching virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.709 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.711 [Info] Writing prefixes
18:23:30.713 [Info] Writing postfixes
18:23:30.717 [Info] Patching virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.719 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.721 [Info] Writing prefixes
18:23:30.722 [Info] Writing postfixes
18:23:30.727 [Info] Patching virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.729 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.730 [Info] Writing prefixes
18:23:30.732 [Info] Writing postfixes
18:23:30.736 [Info] Patching virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.738 [Info] Running ILHook manipulator on virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.740 [Info] Writing prefixes
18:23:30.742 [Info] Writing postfixes
18:23:30.746 [Info] Patching virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.748 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
18:23:30.750 [Info] Writing prefixes
18:23:30.752 [Info] Writing postfixes
18:23:30.757 [Info] Patching virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.759 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.761 [Info] Writing prefixes
18:23:30.763 [Info] Writing postfixes
18:23:30.768 [Info] Patching virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.770 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.772 [Info] Writing prefixes
18:23:30.774 [Info] Writing postfixes
18:23:30.779 [Info] Patching virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.781 [Info] Running ILHook manipulator on virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.783 [Info] Writing prefixes
18:23:30.785 [Info] Writing postfixes
18:23:30.791 [Info] Patching virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.793 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.795 [Info] Writing prefixes
18:23:30.796 [Info] Writing postfixes
18:23:30.801 [Info] Patching virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.803 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.805 [Info] Writing prefixes
18:23:30.807 [Info] Writing postfixes
18:23:30.812 [Info] Patching virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.814 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.816 [Info] Writing prefixes
18:23:30.818 [Info] Writing postfixes
18:23:30.822 [Info] Patching virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.824 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.826 [Info] Writing prefixes
18:23:30.828 [Info] Writing postfixes
18:23:30.833 [Info] Patching virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.835 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.837 [Info] Writing prefixes
18:23:30.838 [Info] Writing postfixes
18:23:30.843 [Info] Patching virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.845 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.847 [Info] Writing prefixes
18:23:30.848 [Info] Writing postfixes
18:23:30.853 [Info] Patching virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.855 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
18:23:30.857 [Info] Writing prefixes
18:23:30.858 [Info] Writing postfixes
18:23:30.863 [Info] Patching virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.865 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.867 [Info] Writing prefixes
18:23:30.868 [Info] Writing postfixes
18:23:30.873 [Info] Patching virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.876 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.878 [Info] Writing prefixes
18:23:30.880 [Info] Writing postfixes
18:23:30.885 [Info] Patching virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.887 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.889 [Info] Writing prefixes
18:23:30.891 [Info] Writing postfixes
18:23:30.896 [Info] Patching virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.898 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.900 [Info] Writing prefixes
18:23:30.901 [Info] Writing postfixes
18:23:30.907 [Info] Patching virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.909 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.911 [Info] Writing prefixes
18:23:30.913 [Info] Writing postfixes
18:23:30.918 [Info] Patching virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.920 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
18:23:30.922 [Info] Writing prefixes
18:23:30.923 [Info] Writing postfixes
18:23:30.928 [Info] Patching virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.930 [Info] Running ILHook manipulator on virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.932 [Info] Writing prefixes
18:23:30.933 [Info] Writing postfixes
18:23:30.939 [Info] Patching virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.942 [Info] Running ILHook manipulator on virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.943 [Info] Writing prefixes
18:23:30.945 [Info] Writing postfixes
18:23:30.950 [Info] Patching virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.952 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.954 [Info] Writing prefixes
18:23:30.956 [Info] Writing postfixes
18:23:30.961 [Warn] io.mission.customunits: You should only patch implemented methods/constructors to avoid issues. Patch the declared method virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) instead of virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused).
18:23:30.963 [Info] Patching virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix_Unused(BattleTech.AbstractActor unit_unused, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix_Unused(BattleTech.AbstractActor unit_unused, Nullable`1& __state)

18:23:30.965 [Info] Running ILHook manipulator on virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.966 [Info] Writing prefixes
18:23:30.968 [Info] Writing postfixes
18:23:30.973 [Info] Patching virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.975 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.977 [Info] Writing prefixes
18:23:30.979 [Info] Writing postfixes
18:23:30.983 [Info] Patching virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.985 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.987 [Info] Writing prefixes
18:23:30.989 [Info] Writing postfixes
18:23:30.993 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:30.995 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:30.997 [Info] Writing prefixes
18:23:30.999 [Info] Writing postfixes
18:23:31.004 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

18:23:31.006 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:31.008 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:31.010 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
18:23:31.012 [Info] Writing prefixes
18:23:31.014 [Info] Writing postfixes
18:23:31.019 [Info] Patching virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:31.021 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
18:23:31.023 [Info] Writing prefixes
18:23:31.025 [Info] Writing postfixes
18:23:31.029 [Info] Patching virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferAvoidMeleeWhenOutTonned::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:31.031 [Info] Running ILHook manipulator on virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferAvoidMeleeWhenOutTonned::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
18:23:31.032 [Info] Writing prefixes
18:23:31.034 [Info] Writing postfixes
18:23:31.040 [Info] Patching virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferStationaryWithMeleeWeapon::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

18:23:31.042 [Info] Running ILHook manipulator on virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferStationaryWithMeleeWeapon::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
18:23:31.044 [Info] Writing prefixes
18:23:31.046 [Info] Writing postfixes
18:23:31.052 [Info] Patching float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Core::MechDefMovementStatistics_GetJumpCapacity(object __instance, BattleTech.MechDef& ___mechDef, Single& __result)

18:23:31.055 [Info] Running ILHook manipulator on float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity()
18:23:31.056 [Info] Writing postfixes
18:23:31.247 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static bool CustomUnits.CustomMech::InitGameRepStatic(BattleTech.Mech __instance, UnityEngine.Transform parentTransform)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

18:23:31.249 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
18:23:31.252 [Info] Writing prefixes
18:23:31.254 [Info] Writing postfixes
18:23:31.270 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 6 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)
* static bool CustomUnits.CustomMech::DamageLocation_Override(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __result)

18:23:31.272 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
18:23:31.274 [Info] Writing prefixes
18:23:31.286 [Info] Patching bool BattleTech.Pilot::get_IsIncapacitated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TrooperSquad::Pilot_IsIncapacitated_Patch(BattleTech.Pilot __instance, Boolean& __result)

18:23:31.289 [Info] Running ILHook manipulator on bool BattleTech.Pilot::get_IsIncapacitated()
18:23:31.290 [Info] Writing postfixes
18:23:31.295 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
5 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomDeploy.Core::PooledInstantiate_Fallback(BattleTech.Data.DataManager __instance, UnityEngine.GameObject& __result, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)

18:23:31.298 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
18:23:31.300 [Info] Writing prefixes
18:23:31.301 [Info] Writing postfixes
18:23:32.157 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::ShowStructureDamageThroughArmour(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:32.160 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor()
18:23:32.162 [Info] Writing postfixes
18:23:32.172 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
3 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::FixRearStructureDisplay(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.AttackDirection shownAttackDirection)

18:23:32.174 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
18:23:32.176 [Info] Writing prefixes
18:23:32.178 [Info] Writing postfixes
18:23:32.186 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::AddPaperDollSideLabel(BattleTech.UI.HUDMechArmorReadout __instance)

18:23:32.189 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
18:23:32.190 [Info] Writing prefixes
18:23:32.192 [Info] Writing postfixes
18:23:32.199 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
3 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void Sheepy.BattleTechMod.AttackImprovementMod.GameData::FixWeaponStats(BattleTech.WeaponDef __instance)

18:23:32.201 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
18:23:32.203 [Info] Writing prefixes
18:23:32.205 [Info] Writing postfixes
