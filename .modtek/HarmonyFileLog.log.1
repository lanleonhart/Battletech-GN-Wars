20:51:12.393 [Info] ### Harmony id=ModTekPreloader.Harmony12X, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ModTekPreloader.Harmony12X.ShimInjectorPatches::Register(ModTekPreloader.Harmony12X.DynamicShimInjector shimInjector), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\ModTekPreloader.dll
### At 2023-03-12 08.51.12
20:51:12.453 [Info] Patching static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadFrom_Prefix(String& assemblyFile)

20:51:12.457 [Info] Running ILHook manipulator on static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly)
20:51:12.459 [Info] Writing prefixes
20:51:12.468 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssembly_Prefix(String& assemblyRef)

20:51:12.469 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly)
20:51:12.469 [Info] Writing prefixes
20:51:12.471 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssemblyRaw_Prefix(Byte[]& rawAssembly)

20:51:12.472 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly)
20:51:12.472 [Info] Writing prefixes
20:51:12.476 [Info] Patching virtual string System.Reflection.Assembly::get_Location() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLocationPatch::Location(System.Reflection.Assembly __instance, String& __result)

20:51:12.476 [Info] Running ILHook manipulator on virtual string System.Reflection.Assembly::get_Location()
20:51:12.477 [Info] Writing prefixes
20:51:22.826 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.827 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()

20:51:22.827 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
20:51:22.828 [Info] Writing postfixes
20:51:22.931 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.931 [Info] Patching void ActivateAfterInit::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Patches.ActivateAfterInit_Start_Patch::Prefix(ActivateAfterInit __instance, ActivateAfterInit+ActivateAfter ___activateAfter, UnityEngine.GameObject[] ___activationSet)

20:51:22.932 [Info] Running ILHook manipulator on void ActivateAfterInit::Start()
20:51:22.932 [Info] Writing prefixes
20:51:22.934 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.934 [Info] Patching static string VersionInfo::GetReleaseVersion() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Patches.VersionInfo_GetReleaseVersion_Patch::Postfix(String& __result)

20:51:22.934 [Info] Running ILHook manipulator on static string VersionInfo::GetReleaseVersion()
20:51:22.935 [Info] Writing postfixes
20:51:22.937 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.938 [Info] Patching static void BattleTech.ModSupport.ModLoader::Init(Action callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_Init::Prefix(BattleTech.UnityGameInstance __instance, Action callback)

20:51:22.939 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::Init(Action callback)
20:51:22.939 [Info] Writing prefixes
20:51:22.951 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.952 [Info] Patching static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModLoader_AreModsEnabled::Postfix(Boolean& __result)

20:51:22.952 [Info] Running ILHook manipulator on static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled()
20:51:22.952 [Info] Writing postfixes
20:51:22.954 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.955 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadSystemModStatus::Prefix()

20:51:22.955 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus()
20:51:22.955 [Info] Writing prefixes
20:51:22.957 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.957 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadGameModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadGameModStatus::Prefix()

20:51:22.957 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadGameModStatus()
20:51:22.957 [Info] Writing prefixes
20:51:22.959 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.959 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_InitModResources::Prefix(BattleTech.UI.ModManagerScreen __instance)

20:51:22.960 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::Init()
20:51:22.960 [Info] Writing prefixes
20:51:22.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.964 [Info] Patching static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_GetCombinedModStatus::Postfix(System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[BattleTech.ModSupport.ModStatusItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:22.964 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus()
20:51:22.965 [Info] Writing postfixes
20:51:22.968 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.969 [Info] Patching static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_SaveModStatusToFile::Prefix(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)

20:51:22.969 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)
20:51:22.970 [Info] Writing prefixes
20:51:22.972 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.973 [Info] Patching bool BattleTech.UI.ModManagerScreen::UnsavedSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_UnsavedSettings::Prefix(BattleTech.UI.ModManagerScreen __instance, Boolean& __result)

20:51:22.973 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerScreen::UnsavedSettings()
20:51:22.973 [Info] Writing prefixes
20:51:22.978 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.979 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ReceiveButtonPress::Prefix(BattleTech.UI.ModManagerScreen __instance, string button)

20:51:22.979 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button)
20:51:22.980 [Info] Writing prefixes
20:51:22.994 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.995 [Info] Patching void BattleTech.UI.ModManagerScreen::ToggleModsEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ToggleModsEnabled::Prefix(BattleTech.UI.ModManagerScreen __instance, BattleTech.UI.HBSDOTweenToggle ___modsEnabledToggleBox)

20:51:22.995 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerScreen::ToggleModsEnabled()
20:51:22.995 [Info] Writing prefixes
20:51:22.997 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:22.997 [Info] Patching void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_ToggleItemEnabled::Prefix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.UI.HBSDOTweenToggle ___toggleBox, BattleTech.UI.ModManagerScreen ____screen)

20:51:22.998 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled()
20:51:22.998 [Info] Writing prefixes
20:51:23.000 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.002 [Info] Patching void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_SetData::Postfix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.ModSupport.ModStatusItem modStatusItem, BattleTech.UI.TMProWrapper.LocalizableText ___modNameText, BattleTech.UI.HBSDOTweenToggle ___toggleBox)

20:51:23.002 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem)
20:51:23.002 [Info] Writing postfixes
20:51:23.009 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.010 [Info] Patching bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_InitializeList::Prefix(BattleTech.UI.ModManagerInstalledModsPanel __instance, Boolean& __result, BattleTech.UI.ModManagerListView ___modsList)

20:51:23.010 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList()
20:51:23.010 [Info] Writing prefixes
20:51:23.012 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.013 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFilepath_Patch::Prefix(string assetBundleName, String& __result)

20:51:23.013 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName)
20:51:23.013 [Info] Writing prefixes
20:51:23.015 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.016 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFileURL_Patch::Prefix(string assetBundleName, String& __result)

20:51:23.016 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName)
20:51:23.016 [Info] Writing prefixes
20:51:23.018 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.019 [Info] Patching void BattleTech.BattleTechResourceLocator::RefreshTypedEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RefreshTypedEntries_Patch::Prefix()

20:51:23.019 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RefreshTypedEntries()
20:51:23.019 [Info] Writing prefixes
20:51:23.030 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.030 [Info] Patching void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_SetContentPackIndex_Patch::Prefix(BattleTech.Data.ContentPackIndex contentPackIndex)

20:51:23.030 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex)
20:51:23.030 [Info] Writing prefixes
20:51:23.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.033 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

20:51:23.034 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum)
20:51:23.034 [Info] Writing prefixes
20:51:23.035 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.036 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

20:51:23.036 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum)
20:51:23.036 [Info] Writing prefixes
20:51:23.038 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.038 [Info] Patching BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetAddendumByName_Patch::Prefix(string name, BattleTech.VersionManifestAddendum& __result)

20:51:23.038 [Info] Running ILHook manipulator on BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name)
20:51:23.039 [Info] Writing prefixes
20:51:23.040 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.041 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

20:51:23.041 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
20:51:23.041 [Info] Writing prefixes
20:51:23.044 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.044 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

20:51:23.045 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
20:51:23.045 [Info] Writing prefixes
20:51:23.047 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.048 [Info] Patching System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoresContainingEntry_Patch::Prefix(BattleTech.BattleTechResourceType resourceType, string id, System.Collections.Generic.List`1[[BattleTech.VersionManifestMemoryStore, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:23.048 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id)
20:51:23.048 [Info] Writing prefixes
20:51:23.051 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.051 [Info] Patching BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoreByName_Patch::Prefix(string name, BattleTech.VersionManifestMemoryStore& __result)

20:51:23.051 [Info] Running ILHook manipulator on BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name)
20:51:23.051 [Info] Writing prefixes
20:51:23.053 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.054 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntries_Patch::Prefix(BattleTech.VersionManifestEntry[]& __result)

20:51:23.054 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries()
20:51:23.054 [Info] Writing prefixes
20:51:23.056 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.057 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResource_Patch::Prefix(BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

20:51:23.058 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership)
20:51:23.058 [Info] Writing prefixes
20:51:23.062 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.062 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResourceFromAddendum_Patch::Prefix(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

20:51:23.063 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership)
20:51:23.063 [Info] Writing prefixes
20:51:23.065 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.066 [Info] Patching BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_EntryByID_Patch::Prefix(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry& __result)

20:51:23.066 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership)
20:51:23.066 [Info] Writing prefixes
20:51:23.068 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.069 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveEntry_Patch::Prefix(BattleTech.VersionManifestEntry entry)

20:51:23.069 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry)
20:51:23.069 [Info] Writing prefixes
20:51:23.086 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.087 [Info] Patching bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.ContentPackIndex_IsResourceOwned_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, string resourceId, Boolean& __result)

20:51:23.087 [Info] Running ILHook manipulator on bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId)
20:51:23.087 [Info] Writing prefixes
20:51:23.090 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.091 [Info] Patching void BattleTech.Data.ContentPackIndex::PatchMDD() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Prefix(Boolean& ___rebuildMDDOnLoadComplete, System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance, System.Diagnostics.Stopwatch __state)

20:51:23.091 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::PatchMDD()
20:51:23.097 [Info] Writing prefixes
20:51:23.098 [Info] Writing postfixes
20:51:23.102 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.102 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

20:51:23.102 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
20:51:23.102 [Info] Writing prefixes
20:51:23.102 [Info] Writing postfixes
20:51:23.104 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.105 [Info] Patching void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.DataManager_ProcessPrewarmRequests_Patch::Prefix(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)

20:51:23.105 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)
20:51:23.105 [Info] Writing prefixes
20:51:23.108 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.109 [Info] Patching BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Prefix(BattleTech.Data.LoadRequest __instance, BattleTech.Data.DataManager+FileLoadRequest& __result)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Postfix(BattleTech.Data.DataManager+FileLoadRequest& __result)

20:51:23.109 [Info] Running ILHook manipulator on BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest()
20:51:23.109 [Info] Writing prefixes
20:51:23.109 [Info] Writing postfixes
20:51:23.112 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
20:51:23.113 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_DB_PATH_Patch::Prefix(String& __result)

20:51:23.113 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH()
20:51:23.113 [Info] Writing prefixes
20:51:23.172 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
20:51:23.173 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_TMP_PATH_Patch::Prefix(String& __result)

20:51:23.173 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH()
20:51:23.173 [Info] Writing prefixes
20:51:23.175 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
20:51:23.176 [Info] Patching static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.SimGame_MDDExtensions_UpdateContract_Patch::Prefix(String& fileID)

20:51:23.176 [Info] Running ILHook manipulator on static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride)
20:51:23.176 [Info] Writing prefixes
20:51:23.180 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
20:51:23.182 [Info] Patching static void BattleTech.DebugBridge::ApplyCurrentSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.DebugBridge_ApplyCurrentSettings_Patch::Prefix()

20:51:23.183 [Info] Running ILHook manipulator on static void BattleTech.DebugBridge::ApplyCurrentSettings()
20:51:23.183 [Info] Writing prefixes
20:51:23.198 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
20:51:23.199 [Info] Patching static void HBS.Logging.Logger::CaptureUnityLogs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.Logger_CaptureUnityLogs_Patch::Prefix()

20:51:23.199 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::CaptureUnityLogs()
20:51:23.200 [Info] Writing prefixes
20:51:23.203 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
20:51:23.204 [Info] Patching bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_IsEnabledFor_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, HBS.Logging.LogLevel level, Boolean& __result)

20:51:23.204 [Info] Running ILHook manipulator on bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level)
20:51:23.205 [Info] Writing prefixes
20:51:23.218 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 11 ms
20:51:23.219 [Info] Patching void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, string ___name, HBS.Logging.LogLevel level, object message, Exception exception, HBS.Logging.IStackTrace location)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.220 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
20:51:23.220 [Info] Transpiling void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
20:51:23.240 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.257 [Info] Writing prefixes
20:51:23.260 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.263 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
2 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

20:51:23.264 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
20:51:23.264 [Info] Writing prefixes
20:51:23.264 [Info] Writing postfixes
20:51:23.266 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.267 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_Init_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

20:51:23.267 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::Init()
20:51:23.267 [Info] Writing postfixes
20:51:23.269 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.270 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::LateUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_LateUpdate_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

20:51:23.270 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::LateUpdate()
20:51:23.270 [Info] Writing postfixes
20:51:23.272 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.272 [Info] Patching static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_ShowUntil_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

20:51:23.272 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime)
20:51:23.273 [Info] Writing postfixes
20:51:23.277 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.277 [Info] Patching static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.Logger_HandleUnityLog_Patch::Postfix(string logString, string stackTrace, UnityEngine.LogType type)

20:51:23.278 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type)
20:51:23.278 [Info] Writing postfixes
20:51:23.280 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.280 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

20:51:23.280 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
20:51:23.280 [Info] Writing postfixes
20:51:23.285 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.286 [Info] Patching void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomVideos.Patches.BinkMediaPlayer_Play_Patch::Prefix(BattleTech.BinkMedia.BinkMediaPlayer __instance, string videoName)

20:51:23.286 [Info] Running ILHook manipulator on void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture)
20:51:23.286 [Info] Writing prefixes
20:51:23.295 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.296 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

20:51:23.296 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
20:51:23.296 [Info] Writing postfixes
20:51:23.298 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.299 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)

20:51:23.299 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
20:51:23.299 [Info] Writing postfixes
20:51:23.301 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.301 [Info] Patching SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.AmmoCategory_GetIcon::Postfix(BattleTech.AmmoCategoryValue __instance, SVGImporter.SVGAsset& __result)

20:51:23.302 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon()
20:51:23.302 [Info] Writing postfixes
20:51:23.304 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.305 [Info] Patching SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.WeaponCategoryValue_GetIcon::Postfix(BattleTech.WeaponCategoryValue __instance, SVGImporter.SVGAsset& __result)

20:51:23.305 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon()
20:51:23.306 [Info] Writing postfixes
20:51:23.309 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.309 [Info] Patching void LoadedAudioBank::LoadBank() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Prefix(string ___name)
1 postfixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Postfix(string ___name)

20:51:23.310 [Info] Running ILHook manipulator on void LoadedAudioBank::LoadBank()
20:51:23.310 [Info] Writing prefixes
20:51:23.310 [Info] Writing postfixes
20:51:23.315 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.316 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()

20:51:23.316 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
20:51:23.317 [Info] Writing postfixes
20:51:23.320 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.321 [Info] Patching virtual void BattleTech.UI.AudioSettingsModule::SaveSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioSettingsModule_SaveSettings::Postfix(BattleTech.UI.AudioSettingsModule __instance)

20:51:23.321 [Info] Running ILHook manipulator on virtual void BattleTech.UI.AudioSettingsModule::SaveSettings()
20:51:23.322 [Info] Writing postfixes
20:51:23.323 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.324 [Info] Patching void WwiseManager::LoadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_LoadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

20:51:23.324 [Info] Running ILHook manipulator on void WwiseManager::LoadCombatBanks()
20:51:23.324 [Info] Writing postfixes
20:51:23.326 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.327 [Info] Patching void WwiseManager::UnloadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_UnloadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

20:51:23.327 [Info] Running ILHook manipulator on void WwiseManager::UnloadCombatBanks()
20:51:23.327 [Info] Writing postfixes
20:51:23.330 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.330 [Info] Patching void LoadedAudioBank::UnloadBank() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_UnloadBank::Postfix(LoadedAudioBank __instance)

20:51:23.330 [Info] Running ILHook manipulator on void LoadedAudioBank::UnloadBank()
20:51:23.330 [Info] Writing postfixes
20:51:23.333 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 12 ms
20:51:23.333 [Info] Patching AKRESULT LoadedAudioBank::LoadBankExternal() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_LoadBankExternal::Prefix(LoadedAudioBank __instance, AKRESULT& __result, UInt32& ___id)

20:51:23.334 [Info] Running ILHook manipulator on AKRESULT LoadedAudioBank::LoadBankExternal()
20:51:23.334 [Info] Writing prefixes
20:51:23.338 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.339 [Info] Patching void BattleTech.GameTipList::.ctor(string filename, int historyLength) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.339 [Info] Running ILHook manipulator on void BattleTech.GameTipList::.ctor(string filename, int historyLength)
20:51:23.340 [Info] Transpiling void BattleTech.GameTipList::.ctor(string filename, int historyLength)
20:51:23.341 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.345 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.346 [Info] Patching static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_DEFAULT_SETTINGS_FILE_PATH_Patch::Prefix(String& __result)

20:51:23.346 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH()
20:51:23.346 [Info] Writing prefixes
20:51:23.347 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.348 [Info] Patching static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetCustomSettingsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

20:51:23.348 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension)
20:51:23.348 [Info] Writing prefixes
20:51:23.350 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.350 [Info] Patching static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetStreamingAssetsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

20:51:23.350 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension)
20:51:23.350 [Info] Writing prefixes
20:51:23.353 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.366 [Info] Patching virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::Prefix(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

20:51:23.366 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load()
20:51:23.366 [Info] Writing prefixes
20:51:23.369 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.370 [Info] Patching virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::PrefixBase(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

20:51:23.370 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load()
20:51:23.370 [Info] Writing prefixes
20:51:23.642 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.643 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

20:51:23.643 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
20:51:23.643 [Info] Writing prefixes
20:51:23.650 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.650 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)
1 postfixes:
* static void BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Post(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

20:51:23.650 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
20:51:23.652 [Info] Writing prefixes
20:51:23.652 [Info] Writing postfixes
20:51:23.654 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.655 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::BeginSalvageScreen() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::BeginSalvageScreen_Pre()

20:51:23.655 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::BeginSalvageScreen()
20:51:23.655 [Info] Writing prefixes
20:51:23.658 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.659 [Info] Patching void BattleTech.UI.MechLabPanel::PopulateInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::PopulateInventory_Pre(BattleTech.UI.MechLabPanel __instance)

20:51:23.659 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::PopulateInventory()
20:51:23.659 [Info] Writing prefixes
20:51:23.666 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.667 [Info] Patching void BattleTech.UI.MechLabPanel::ConfirmRevertMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::ConfirmRevertMech_Pre()

20:51:23.667 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ConfirmRevertMech()
20:51:23.667 [Info] Writing prefixes
20:51:23.669 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
20:51:23.670 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::ExitMechLab_Pre(BattleTech.UI.MechLabPanel __instance)

20:51:23.670 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
20:51:23.670 [Info] Writing prefixes
20:51:23.672 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.673 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::LateUpdate_Pre(UnityEngine.UI.ScrollRect __instance)

20:51:23.674 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
20:51:23.674 [Info] Writing prefixes
20:51:23.681 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.682 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::OnAddItem_Pre(BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

20:51:23.682 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:23.682 [Info] Writing prefixes
20:51:23.686 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.687 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::OnRemoveItem_Pre(BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

20:51:23.687 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:23.687 [Info] Writing prefixes
20:51:23.690 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.692 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::OnItemGrab_Pre(BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

20:51:23.692 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
20:51:23.692 [Info] Writing prefixes
20:51:23.694 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.694 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::ApplyFiltering_Pre(BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning)

20:51:23.695 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
20:51:23.695 [Info] Writing prefixes
20:51:23.699 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.700 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::MechCanEquipItem_Pre(BattleTech.UI.InventoryItemElement_NotListView item)

20:51:23.700 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly)
20:51:23.700 [Info] Writing prefixes
20:51:23.704 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.705 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::ApplySorting_Pre(BattleTech.UI.MechLabInventoryWidget __instance)

20:51:23.705 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
20:51:23.705 [Info] Writing prefixes
20:51:23.708 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.708 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.Extensions::__Pre(object __instance)

20:51:23.708 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy()
20:51:23.708 [Info] Writing prefixes
20:51:23.712 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.713 [Info] Patching static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DontStripComments::Prefix(string json, String& __result)

20:51:23.713 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json)
20:51:23.713 [Info] Writing prefixes
20:51:23.716 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 14 ms
20:51:23.717 [Info] Patching bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.NoSalvageSoftlock::HasAllPriority(BattleTech.UI.AAR_SalvageChosen __instance, Boolean& __result)

20:51:23.717 [Info] Running ILHook manipulator on bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority()
20:51:23.717 [Info] Writing prefixes
20:51:23.736 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
20:51:23.736 [Info] Patching HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.737 [Info] Running ILHook manipulator on HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
20:51:23.737 [Info] Transpiling HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
20:51:23.738 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.742 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
20:51:23.742 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

20:51:23.742 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
20:51:23.743 [Info] Writing postfixes
20:51:23.745 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 15 ms
20:51:23.746 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.ShopTabLagFix::AddItemToInventory(BattleTech.UI.MechLabInventoryWidget_ListView __instance, BattleTech.UI.InventoryDataObject_BASE ItemData)

20:51:23.746 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd)
20:51:23.746 [Info] Writing prefixes
20:51:23.765 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.766 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.766 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
20:51:23.766 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
20:51:23.767 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.769 [Info] Writing prefixes
20:51:23.770 [Info] Writing postfixes
20:51:23.771 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.772 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.772 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
20:51:23.774 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
20:51:23.775 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.776 [Info] Writing prefixes
20:51:23.777 [Info] Writing postfixes
20:51:23.780 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.780 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.782 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
20:51:23.782 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
20:51:23.783 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.784 [Info] Writing prefixes
20:51:23.784 [Info] Writing postfixes
20:51:23.786 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.787 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.787 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
20:51:23.787 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
20:51:23.788 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.789 [Info] Writing prefixes
20:51:23.789 [Info] Writing postfixes
20:51:23.790 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.791 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.791 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
20:51:23.791 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
20:51:23.792 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.793 [Info] Writing prefixes
20:51:23.793 [Info] Writing postfixes
20:51:23.794 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.795 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.795 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
20:51:23.795 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
20:51:23.796 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.797 [Info] Writing prefixes
20:51:23.797 [Info] Writing postfixes
20:51:23.799 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.799 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.799 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
20:51:23.800 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
20:51:23.800 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.802 [Info] Writing prefixes
20:51:23.802 [Info] Writing postfixes
20:51:23.803 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.804 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.804 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
20:51:23.804 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
20:51:23.805 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.806 [Info] Writing prefixes
20:51:23.807 [Info] Writing postfixes
20:51:23.808 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.809 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.809 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
20:51:23.809 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
20:51:23.810 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.811 [Info] Writing prefixes
20:51:23.812 [Info] Writing postfixes
20:51:23.812 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.813 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.813 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
20:51:23.814 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
20:51:23.814 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.815 [Info] Writing prefixes
20:51:23.816 [Info] Writing postfixes
20:51:23.817 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.818 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.818 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
20:51:23.818 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
20:51:23.818 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.820 [Info] Writing prefixes
20:51:23.820 [Info] Writing postfixes
20:51:23.822 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.823 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.823 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
20:51:23.823 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
20:51:23.824 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.825 [Info] Writing prefixes
20:51:23.825 [Info] Writing postfixes
20:51:23.827 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.827 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.827 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
20:51:23.828 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
20:51:23.828 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.829 [Info] Writing prefixes
20:51:23.830 [Info] Writing postfixes
20:51:23.831 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.831 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.831 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
20:51:23.831 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
20:51:23.832 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.833 [Info] Writing prefixes
20:51:23.833 [Info] Writing postfixes
20:51:23.834 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.835 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.835 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
20:51:23.835 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
20:51:23.836 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.837 [Info] Writing prefixes
20:51:23.837 [Info] Writing postfixes
20:51:23.839 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.839 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.839 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
20:51:23.840 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
20:51:23.840 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.841 [Info] Writing prefixes
20:51:23.842 [Info] Writing postfixes
20:51:23.844 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.844 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.844 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
20:51:23.845 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
20:51:23.845 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.846 [Info] Writing prefixes
20:51:23.846 [Info] Writing postfixes
20:51:23.848 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.848 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.848 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
20:51:23.849 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
20:51:23.849 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.850 [Info] Writing prefixes
20:51:23.850 [Info] Writing postfixes
20:51:23.852 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.852 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.853 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
20:51:23.853 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
20:51:23.853 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.872 [Info] Writing prefixes
20:51:23.872 [Info] Writing postfixes
20:51:23.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.874 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.874 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
20:51:23.874 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
20:51:23.875 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.876 [Info] Writing prefixes
20:51:23.876 [Info] Writing postfixes
20:51:23.878 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.878 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.879 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
20:51:23.879 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
20:51:23.880 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.882 [Info] Writing prefixes
20:51:23.882 [Info] Writing postfixes
20:51:23.884 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.884 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.884 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
20:51:23.886 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
20:51:23.886 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.888 [Info] Writing prefixes
20:51:23.888 [Info] Writing postfixes
20:51:23.889 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.890 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.890 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.890 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.891 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.892 [Info] Writing prefixes
20:51:23.892 [Info] Writing postfixes
20:51:23.893 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.894 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.894 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.894 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.895 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.896 [Info] Writing prefixes
20:51:23.896 [Info] Writing postfixes
20:51:23.898 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.898 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.899 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.899 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.899 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.900 [Info] Writing prefixes
20:51:23.900 [Info] Writing postfixes
20:51:23.903 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.903 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.904 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.904 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.904 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.906 [Info] Writing prefixes
20:51:23.906 [Info] Writing postfixes
20:51:23.908 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.908 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.908 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.909 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.909 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.910 [Info] Writing prefixes
20:51:23.911 [Info] Writing postfixes
20:51:23.912 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.912 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.912 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.913 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.913 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.915 [Info] Writing prefixes
20:51:23.915 [Info] Writing postfixes
20:51:23.917 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.917 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.918 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.918 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.919 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.920 [Info] Writing prefixes
20:51:23.920 [Info] Writing postfixes
20:51:23.923 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.923 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.923 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.923 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
20:51:23.923 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.925 [Info] Writing prefixes
20:51:23.926 [Info] Writing postfixes
20:51:23.927 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.928 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.928 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
20:51:23.928 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
20:51:23.928 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.930 [Info] Writing prefixes
20:51:23.930 [Info] Writing postfixes
20:51:23.932 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.933 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.933 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
20:51:23.933 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
20:51:23.933 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.935 [Info] Writing prefixes
20:51:23.935 [Info] Writing postfixes
20:51:23.937 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.937 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.937 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
20:51:23.938 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
20:51:23.938 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.939 [Info] Writing prefixes
20:51:23.940 [Info] Writing postfixes
20:51:23.941 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.942 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.942 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
20:51:23.942 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
20:51:23.942 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.944 [Info] Writing prefixes
20:51:23.944 [Info] Writing postfixes
20:51:23.946 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.947 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.947 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
20:51:23.947 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
20:51:23.948 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.949 [Info] Writing prefixes
20:51:23.950 [Info] Writing postfixes
20:51:23.952 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.953 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.953 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
20:51:23.953 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
20:51:23.954 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.955 [Info] Writing prefixes
20:51:23.955 [Info] Writing postfixes
20:51:23.957 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.957 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.958 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
20:51:23.958 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
20:51:23.958 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.960 [Info] Writing prefixes
20:51:23.960 [Info] Writing postfixes
20:51:23.961 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.962 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:23.962 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
20:51:23.962 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
20:51:23.962 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:23.964 [Info] Writing prefixes
20:51:23.964 [Info] Writing postfixes
20:51:23.966 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.967 [Info] Patching void BattleTech.EncounterLayerData::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::EncounterLayerData_Constructor(BattleTech.EncounterLayerData __instance)

20:51:23.967 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::.ctor()
20:51:23.967 [Info] Writing postfixes
20:51:23.970 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.972 [Info] Patching void BattleTech.LevelLoader::EnableLogging(bool enable) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.EnableLoggingDuringLoads::EnableLogging(Boolean& enable)

20:51:23.972 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::EnableLogging(bool enable)
20:51:23.972 [Info] Writing prefixes
20:51:23.975 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.975 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)

20:51:23.975 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
20:51:23.976 [Info] Writing prefixes
20:51:23.979 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:23.980 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

20:51:23.980 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
20:51:23.980 [Info] Writing prefixes
20:51:24.003 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:24.004 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

20:51:24.004 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
20:51:24.004 [Info] Writing prefixes
20:51:24.005 [Info] Writing postfixes
20:51:24.007 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:24.008 [Info] Patching void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::InitializeTaggedLance_Pre()

20:51:24.008 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance()
20:51:24.008 [Info] Writing prefixes
20:51:24.010 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:24.010 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

20:51:24.011 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
20:51:24.011 [Info] Writing prefixes
20:51:24.014 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
20:51:24.014 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

20:51:24.014 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
20:51:24.014 [Info] Writing prefixes
20:51:24.019 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.021 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.021 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
20:51:24.021 [Info] Transpiling bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
20:51:24.021 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.025 [Info] Writing prefixes
20:51:24.027 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.028 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.028 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
20:51:24.028 [Info] Transpiling void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
20:51:24.029 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.032 [Info] Writing prefixes
20:51:24.036 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.042 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:24.043 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:24.043 [Info] Writing prefixes
20:51:24.089 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.090 [Info] Patching void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::Init_Pre(Single& ___betweenRoomTransitionTime, Single& ___inRoomTransitionTime)

20:51:24.090 [Info] Running ILHook manipulator on void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim)
20:51:24.090 [Info] Writing prefixes
20:51:24.093 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.094 [Info] Patching System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::TransitionMech_Pre(Single& fadeDuration)

20:51:24.094 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit)
20:51:24.094 [Info] Writing prefixes
20:51:24.096 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.102 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:24.103 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:24.103 [Info] Writing prefixes
20:51:24.138 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.139 [Info] Patching virtual bool BattleTech.VersionManifestBase::Contains(string id, string type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.VersionManifestPatches::Contains_Pre(BattleTech.VersionManifestBase __instance, string id, string type, Boolean& __result)

20:51:24.139 [Info] Running ILHook manipulator on virtual bool BattleTech.VersionManifestBase::Contains(string id, string type)
20:51:24.139 [Info] Writing prefixes
20:51:24.143 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.143 [Info] Patching void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DisableSensitiveDataLogDump::OnInternetConnectivityResult(BattleTech.UnityGameInstance __instance, bool success)

20:51:24.144 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success)
20:51:24.144 [Info] Writing prefixes
20:51:24.177 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.178 [Info] Patching bool BattleTech.Contract::get_IsFlashpointContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

20:51:24.178 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointContract()
20:51:24.179 [Info] Writing postfixes
20:51:24.180 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.182 [Info] Patching bool BattleTech.Contract::get_IsFlashpointCampaignContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointCampaignContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

20:51:24.182 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointCampaignContract()
20:51:24.183 [Info] Writing postfixes
20:51:24.185 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.185 [Info] Patching bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.FlashpointDef_GetisHeavyMetalCampaign_Patch::Postfix(BattleTech.FlashpointDef __instance, Boolean& __result)

20:51:24.185 [Info] Running ILHook manipulator on bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign()
20:51:24.186 [Info] Writing postfixes
20:51:24.187 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.188 [Info] Patching void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGContractsWidget_ListContracts::Postfix(BattleTech.UI.SGContractsWidget __instance, System.Collections.Generic.List<BattleTech.UI.SGContractsListItem> ___listedContracts, System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)

20:51:24.188 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)
20:51:24.189 [Info] Writing postfixes
20:51:24.196 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.197 [Info] Patching BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_GetSystemFlashpoint::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.Flashpoint flashpoint, BattleTech.StarmapSystemRenderer& __result)

20:51:24.197 [Info] Running ILHook manipulator on BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint)
20:51:24.197 [Info] Writing postfixes
20:51:24.200 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.202 [Info] Patching void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_ShowFlashpointSystems::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState ___simState)

20:51:24.202 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems()
20:51:24.202 [Info] Writing postfixes
20:51:24.230 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.233 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_InitCompanyStats_Patch::Postfix(BattleTech.SimGameState __instance)

20:51:24.233 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
20:51:24.233 [Info] Writing postfixes
20:51:24.241 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.241 [Info] Patching BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Prefix(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType)
1 postfixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Postfix(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.MechComponentRef __result, BattleTech.SimGameState __instance)

20:51:24.242 [Info] Running ILHook manipulator on BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory)
20:51:24.242 [Info] Writing prefixes
20:51:24.242 [Info] Writing postfixes
20:51:24.247 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.249 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

20:51:24.249 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:24.249 [Info] Writing prefixes
20:51:24.281 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.282 [Info] Patching static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.JSONSerializationUtility_RehydrateObjectFromDictionary_Patch2::Prefix(object target, System.Collections.Generic.Dictionary<string, object> values)

20:51:24.282 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates)
20:51:24.282 [Info] Writing prefixes
20:51:24.288 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.289 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryDataObject_InventoryGear_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryDataObject_InventoryGear __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:24.289 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.289 [Info] Writing prefixes
20:51:24.290 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.292 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryDataObject_InventoryWeapon_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryDataObject_InventoryWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:24.292 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.292 [Info] Writing prefixes
20:51:24.294 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.294 [Info] Patching void BattleTech.UI.InventoryItemElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryItemElement_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryItemElement __instance, BattleTech.MechComponentRef ___componentRef)

20:51:24.294 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::RefreshItemColor()
20:51:24.295 [Info] Writing prefixes
20:51:24.296 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.297 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryItemElement_NotListView_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryItemElement_NotListView __instance, BattleTech.MechComponentRef ___componentRef)

20:51:24.297 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor()
20:51:24.297 [Info] Writing prefixes
20:51:24.299 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.300 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.ListElementController_InventoryGear_NotListView_RefreshItemColor::ChangeColor(BattleTech.UI.ListElementController_InventoryGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

20:51:24.300 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:24.300 [Info] Writing prefixes
20:51:24.302 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.302 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.ListElementController_InventoryWeapon_NotListViewn_RefreshItemColor::ChangeColor(BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

20:51:24.302 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:24.303 [Info] Writing prefixes
20:51:24.304 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.305 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.LanceMechEquipmentListItem_SetData::SetColor(BattleTech.ComponentDamageLevel damageLevel)

20:51:24.305 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor)
20:51:24.305 [Info] Writing postfixes
20:51:24.308 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.308 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.LanceMechEquipmentListItem_SetTooltipData::SetColor(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentDef MechDef, BattleTech.UI.UIColorRefTracker ___backgroundColor, BattleTech.UI.UIColorRefTracker ___itemTextColor)

20:51:24.309 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef)
20:51:24.309 [Info] Writing postfixes
20:51:24.312 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.313 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechComponentDef_GetUIColor::Postfix(BattleTech.MechComponentDef componentDef, BattleTech.UI.UIColor& __result)

20:51:24.313 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef)
20:51:24.313 [Info] Writing postfixes
20:51:24.316 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.316 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechComponentRef_GetUIColor::Postfix(BattleTech.MechComponentRef __instance, BattleTech.UI.UIColor& __result, BattleTech.MechComponentRef componentRef)

20:51:24.317 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef)
20:51:24.317 [Info] Writing postfixes
20:51:24.319 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.319 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryDataObject_SalvageGear_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryDataObject_SalvageGear __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:24.320 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.320 [Info] Writing prefixes
20:51:24.322 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.323 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryDataObject_SalvageWeapon_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryDataObject_SalvageWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:24.323 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.323 [Info] Writing prefixes
20:51:24.325 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.325 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.ListElementController_SalvageGear_NotListView_RefreshItemColor::ChangeColor(BattleTech.UI.ListElementController_SalvageGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

20:51:24.326 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:24.326 [Info] Writing prefixes
20:51:24.328 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.329 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.ListElementController_SalvageWeapon_NotListView_RefreshItemColor::ChangeColor(BattleTech.UI.ListElementController_SalvageWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

20:51:24.329 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:24.329 [Info] Writing prefixes
20:51:24.330 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.332 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.InInventoryDataObject_SalvageFullMech_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:24.332 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.332 [Info] Writing prefixes
20:51:24.334 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.334 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.ListElementController_SalvageFullMech_NotListView_RefreshItemColor::ChangeColor(BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

20:51:24.334 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:24.334 [Info] Writing prefixes
20:51:24.336 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.337 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.InInventoryDataObject_SalvageMechPart_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryDataObject_SalvageMechPart __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:24.337 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.337 [Info] Writing prefixes
20:51:24.339 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.339 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.ListElementController_SalvageMechPart_NotListView_RefreshItemColor::ChangeColor(BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

20:51:24.339 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:24.339 [Info] Writing prefixes
20:51:24.341 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.341 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.InventoryDataObject_ShopWeapon_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopWeapon __instance)

20:51:24.341 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.342 [Info] Writing prefixes
20:51:24.343 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
20:51:24.343 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.IInventoryDataObject_ShopGear_RefreshItemColor::ChangeColor(BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopGear __instance)

20:51:24.344 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
20:51:24.344 [Info] Writing prefixes
20:51:24.348 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
20:51:24.348 [Info] Patching bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_Get_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.348 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
20:51:24.349 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
20:51:24.349 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_Get_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.354 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
20:51:24.355 [Info] Patching bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_Set::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.355 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
20:51:24.355 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
20:51:24.356 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_Set::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.360 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
20:51:24.361 [Info] Patching bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_Invoke_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.361 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
20:51:24.361 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
20:51:24.362 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_Invoke_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.366 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
20:51:24.367 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.367 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
20:51:24.367 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
20:51:24.367 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.372 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
20:51:24.373 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.373 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
20:51:24.373 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
20:51:24.374 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.378 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
20:51:24.379 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::RequestResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.379 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
20:51:24.379 [Info] Transpiling void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
20:51:24.382 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.389 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 30 ms
20:51:24.390 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.390 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
20:51:24.390 [Info] Transpiling void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
20:51:24.392 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.398 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:24.399 [Info] PrefixWrapper being created for: BattletechPerformanceFix::BattletechPerformanceFix.MechlabFix::ApplySorting_Pre
20:51:24.405 [Info] PrefixWrapper created: HXI︳1︳::BattletechPerformanceFix.MechlabFix::ApplySorting_Pre
20:51:24.406 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix
20:51:24.407 [Info] PrefixWrapper created: HXI︳2︳::CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix
20:51:24.407 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.409 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::ApplySorting_Pre(BattleTech.UI.MechLabInventoryWidget __instance, Boolean& __runOriginal)
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(BattleTech.UI.MechLabInventoryWidget __instance, Boolean& __runOriginal)

20:51:24.409 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
20:51:24.410 [Info] Writing prefixes
20:51:24.414 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.415 [Info] Patching void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ListView_ApplySorting_Patch::Prefix(BattleTech.UI.MechLabInventoryWidget_ListView __instance)

20:51:24.415 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting()
20:51:24.415 [Info] Writing prefixes
20:51:24.418 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.420 [Info] Patching void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.Contract_AddMechComponentToSalvage::Prefix(BattleTech.MechComponentDef& def)

20:51:24.420 [Info] Running ILHook manipulator on void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade)
20:51:24.420 [Info] Writing prefixes
20:51:24.429 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.432 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

20:51:24.433 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
20:51:24.433 [Info] Writing prefixes
20:51:24.472 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.472 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::FixDefaults(BattleTech.SimGameState __instance)

20:51:24.473 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
20:51:24.473 [Info] Writing prefixes
20:51:24.477 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.478 [Info] Patching void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Database+DataManager_Clear_Patch::Prefix(bool defs)

20:51:24.478 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests)
20:51:24.479 [Info] Writing prefixes
20:51:24.486 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.487 [Info] Patching static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.JSONSerializationUtility_RehydrateObjectFromDictionary_Patch2::Prefix(object target, System.Collections.Generic.Dictionary<string, object> values)
1 postfixes:
* static void CustomComponents.JSONSerializationUtility_RehydrateObjectFromDictionary_Patch::Postfix(object target, System.Collections.Generic.Dictionary<string, object> values)

20:51:24.487 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates)
20:51:24.487 [Info] Writing prefixes
20:51:24.488 [Info] Writing postfixes
20:51:24.492 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 40 ms
20:51:24.493 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

20:51:24.493 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:24.493 [Info] Writing postfixes
20:51:24.498 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 41 ms
20:51:24.498 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RepairAll(bool forceRepairStructure, bool validate) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidget_RepairAll_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.499 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RepairAll(bool forceRepairStructure, bool validate)
20:51:24.499 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::RepairAll(bool forceRepairStructure, bool validate)
20:51:24.500 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidget_RepairAll_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.507 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 43 ms
20:51:24.507 [Info] Patching void BattleTech.UI.MechLabLocationWidget::StripDestroyedComponents() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidget_StripDestroyedComponents_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.507 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::StripDestroyedComponents()
20:51:24.508 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::StripDestroyedComponents()
20:51:24.508 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidget_StripDestroyedComponents_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.512 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 43 ms
20:51:24.512 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

20:51:24.512 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:24.513 [Info] Writing postfixes
20:51:24.519 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 44 ms
20:51:24.520 [Info] Patching void BattleTech.UI.MechLabLocationWidget::StripEquipment() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidget_StripEquipment_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.520 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::StripEquipment()
20:51:24.520 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::StripEquipment()
20:51:24.520 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidget_StripEquipment_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.525 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 46 ms
20:51:24.526 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_AddMechPart_Patch::Prefix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_AddMechPart_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.527 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
20:51:24.527 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
20:51:24.532 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_AddMechPart_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.536 [Info] Writing prefixes
20:51:24.540 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 47 ms
20:51:24.541 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_ReadyMech_Patch::Prefix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_ReadyMech_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.541 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
20:51:24.542 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
20:51:24.546 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_ReadyMech_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.553 [Info] Writing prefixes
20:51:24.557 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 47 ms
20:51:24.558 [Info] Patching void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_ML_InstallComponent_Patch::Postfix(BattleTech.WorkOrderEntry_InstallComponent order, BattleTech.SimGameState __instance)

20:51:24.559 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order)
20:51:24.559 [Info] Writing postfixes
20:51:24.567 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 47 ms
20:51:24.567 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.MechLabSlotItem_RefreshItemColor::ChangeColor(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.UIColorRefTracker ___backgroundColor, UnityEngine.GameObject ___fixedEquipmentOverlay, BattleTech.UI.IMechLabDropTarget ___dropParent, BattleTech.UI.UIColorRefTracker ___nameTextColor, BattleTech.UI.UIColorRefTracker ___iconColor, SVGImporter.SVGImage ___icon)

20:51:24.567 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor()
20:51:24.568 [Info] Writing prefixes
20:51:24.570 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.572 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidjet_OnRemove::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.572 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:24.572 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:24.573 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidjet_OnRemove::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.577 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.580 [Info] Patching void BattleTech.BaseComponentRef::RefreshComponentDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.BaseComponentRef_RefreshComponentDef::SetFixed(BattleTech.BaseComponentRef __instance)

20:51:24.580 [Info] Running ILHook manipulator on void BattleTech.BaseComponentRef::RefreshComponentDef()
20:51:24.580 [Info] Writing postfixes
20:51:24.592 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.594 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData)

20:51:24.594 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
20:51:24.594 [Info] Writing prefixes
20:51:24.600 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.600 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.MechLabLocationWidget_OnItemGrab_Patch_IDefaultReplace::Prefix(BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.MechComponentRef& __state)
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnItemGrab_Patch_IDefaultReplace::Postfix(BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.MechComponentRef __state, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.MechLabLocationWidget __instance)

20:51:24.600 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
20:51:24.600 [Info] Writing prefixes
20:51:24.600 [Info] Writing postfixes
20:51:24.603 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.604 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)

20:51:24.604 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
20:51:24.604 [Info] Writing postfixes
20:51:24.607 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.608 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

20:51:24.608 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
20:51:24.608 [Info] Writing postfixes
20:51:24.610 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.610 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::ApplyFiltering_Pre(BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning)
1 postfixes:
* static void CustomComponents.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

20:51:24.611 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
20:51:24.611 [Info] Writing prefixes
20:51:24.611 [Info] Writing postfixes
20:51:24.613 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.633 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)

20:51:24.633 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
20:51:24.634 [Info] Writing postfixes
20:51:24.638 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.639 [Info] Patching BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentRepairWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, bool isOnMech, BattleTech.WorkOrderEntry_RepairComponent& __result)

20:51:24.639 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech)
20:51:24.639 [Info] Writing postfixes
20:51:24.641 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.646 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
1 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)

20:51:24.646 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:24.647 [Info] Writing prefixes
20:51:24.647 [Info] Writing postfixes
20:51:24.663 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.664 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishMechBayPanel_LanceConfiguratorDataLoaded_Patch::FixDefaults(BattleTech.UI.SkirmishMechBayPanel __instance)

20:51:24.664 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest)
20:51:24.664 [Info] Writing prefixes
20:51:24.667 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.668 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)

20:51:24.668 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
20:51:24.668 [Info] Writing prefixes
20:51:24.673 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.673 [Info] Patching void BattleTech.MechDef::InsertFixedEquipmentIntoInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.Fixes.MechDef_InsertFixedEquipmentIntoInventory::FIX(BattleTech.MechDef __instance, BattleTech.MechComponentRef[]& ___inventory, BattleTech.Data.DataManager ___dataManager)

20:51:24.673 [Info] Running ILHook manipulator on void BattleTech.MechDef::InsertFixedEquipmentIntoInventory()
20:51:24.674 [Info] Writing prefixes
20:51:24.677 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
20:51:24.678 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)
* static void CustomComponents.Fixes.SimGameState_CreateComponentInstallWorkOrder::FixCost(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, string mechSimGameUID, BattleTech.WorkOrderEntry_InstallComponent __result)

20:51:24.678 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
20:51:24.678 [Info] Writing postfixes
20:51:24.682 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
20:51:24.684 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:24.684 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
20:51:24.684 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
20:51:24.687 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:24.714 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
20:51:24.714 [Info] Patching bool BattleTech.Data.SVGCache::Contains(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.Icons.SVGAssets_Contains::Contains(string id, Boolean& __result)

20:51:24.714 [Info] Running ILHook manipulator on bool BattleTech.Data.SVGCache::Contains(string id)
20:51:24.715 [Info] Writing prefixes
20:51:24.716 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
20:51:24.717 [Info] Patching SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.Icons.SVGCache_GetAsset::GetAsset(string id, SVGImporter.SVGAsset& __result)

20:51:24.717 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id)
20:51:24.717 [Info] Writing prefixes
20:51:24.737 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
20:51:24.738 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::SetData(BattleTech.UI.IMechLabDropTarget parentDropTarget, BattleTech.Data.DataManager dataManager, bool beginWithWeaponsFiltered, Action FilteringCB) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:24.738 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::SetData(BattleTech.UI.IMechLabDropTarget parentDropTarget, BattleTech.Data.DataManager dataManager, bool beginWithWeaponsFiltered, Action FilteringCB)
20:51:24.741 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
20:51:24.741 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabPanel_InitWidgets::PreInit(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabInventoryWidget ___inventoryWidget)
1 postfixes:
* static void CustomFilters.MechLabPanel_InitWidgets::Init(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabInventoryWidget ___inventoryWidget)

20:51:24.742 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
20:51:24.742 [Info] Writing prefixes
20:51:24.742 [Info] Writing postfixes
20:51:24.745 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:24.745 [Info] PrefixWrapper being created for: BattletechPerformanceFix::BattletechPerformanceFix.MechlabFix::ApplyFiltering_Pre
20:51:24.745 [Info] PrefixWrapper created: HXI︳3︳::BattletechPerformanceFix.MechlabFix::ApplyFiltering_Pre
20:51:24.746 [Info] PrefixWrapper being created for: CustomFilters::CustomFilters.Patches.MechLabInventoryWidget_ApplyFiltering::ApplyFiltering
20:51:24.746 [Info] PrefixWrapper created: HXI︳4︳::CustomFilters.Patches.MechLabInventoryWidget_ApplyFiltering::ApplyFiltering
20:51:24.746 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:24.764 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool BattletechPerformanceFix.MechlabFix::ApplyFiltering_Pre(BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning, Boolean& __runOriginal)
* static bool CustomFilters.Patches.MechLabInventoryWidget_ApplyFiltering::ApplyFiltering(BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory, Boolean& __runOriginal)
1 postfixes:
* static void CustomComponents.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

20:51:24.765 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
20:51:24.765 [Info] Writing prefixes
20:51:24.765 [Info] Writing postfixes
20:51:24.768 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:24.769 [Info] Patching System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> BattletechPerformanceFix.PatchMechlabLimitItems::FilterUsingHBSCode(System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomFilters.Patches.PatchMechlabLimitItems_FilterUsingHBSCode::ApplyFiltering(System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> items, System.Collections.Generic.List`1[[BattleTech.UI.ListElementController_BASE_NotListView, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:24.769 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> BattletechPerformanceFix.PatchMechlabLimitItems::FilterUsingHBSCode(System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> items)
20:51:24.769 [Info] Writing prefixes
20:51:24.773 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:24.774 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomFilters.Patches.MechLabInventoryWidget_OnFilterButtonClicked::OnFilterButtonClicked(BattleTech.UI.MechLabInventoryWidget __instance)

20:51:24.774 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button)
20:51:24.774 [Info] Writing prefixes
20:51:24.777 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:24.777 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomFilters.Patches.MechLabInventoryWidget_SetFilterWeapons::SetFilterWeapons(BattleTech.UI.MechLabInventoryWidget __instance)

20:51:24.778 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons()
20:51:24.778 [Info] Writing prefixes
20:51:24.780 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:24.780 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ResetFilters() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomFilters.Patches.MechLabInventoryWidget_ResetFilters::ResetFiltersPrefix(BattleTech.UI.MechLabInventoryWidget __instance)

20:51:24.780 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ResetFilters()
20:51:24.780 [Info] Writing prefixes
20:51:24.782 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:24.782 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomFilters.Patches.MechLabPanel_LoadMech::ApplyFilter()

20:51:24.782 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
20:51:24.782 [Info] Writing postfixes
20:51:25.280 [Info] ### Harmony id=io.mission.customlocalization, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomTranslation.Core::Init(string directory, string settingsJson), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomLocalization\CustomLocalization.dll
### At 2023-03-12 08.51.25
20:51:25.282 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)

20:51:25.283 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
20:51:25.283 [Info] Writing postfixes
20:51:25.286 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.Interpolator_Interpolate::Prefix(String& template, BattleTech.GameContext context)

20:51:25.286 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
20:51:25.286 [Info] Writing prefixes
20:51:25.290 [Info] Patching virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.CSVStringsProvider_LoadCultureFromReader::Postfix(BattleTech.CSVStringsProvider __instance)

20:51:25.290 [Info] Running ILHook manipulator on virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader)
20:51:25.290 [Info] Writing postfixes
20:51:25.297 [Info] Patching void System.IO.StreamReader::.ctor(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.StreamReader_Constructor::Prefix(System.IO.StreamReader __instance, String& path)

20:51:25.298 [Info] Running ILHook manipulator on void System.IO.StreamReader::.ctor(string path)
20:51:25.298 [Info] Writing prefixes
20:51:25.300 [Info] Patching void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.DataLoader_CallHandler::Prefix(String& path, System.Action<string, System.IO.Stream> handler)

20:51:25.300 [Info] Running ILHook manipulator on void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler)
20:51:25.300 [Info] Writing prefixes
20:51:25.305 [Info] Patching virtual void Localize.InterpolatedText::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.InterpolatedText_Append::Prefix(String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.InterpolatedText_Append::Postfix(Localize.InterpolatedText __instance)

20:51:25.305 [Info] Running ILHook manipulator on virtual void Localize.InterpolatedText::Append(string text, object[] args)
20:51:25.306 [Info] Writing prefixes
20:51:25.306 [Info] Writing postfixes
20:51:25.309 [Info] Patching virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ShipModuleUpgrade_FromJSON::Postfix(BattleTech.ShipModuleUpgrade __instance, string json)

20:51:25.309 [Info] Running ILHook manipulator on virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json)
20:51:25.310 [Info] Writing postfixes
20:51:25.313 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)

20:51:25.313 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
20:51:25.314 [Info] Writing prefixes
20:51:25.317 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void CustomTranslation.MechValidationRules_ValidateMechDef::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:25.317 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
20:51:25.318 [Info] Writing postfixes
20:51:25.321 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:25.321 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
20:51:25.321 [Info] Writing postfixes
20:51:25.350 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
1 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)

20:51:25.350 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
20:51:25.350 [Info] Writing prefixes
20:51:25.351 [Info] Writing postfixes
20:51:25.353 [Info] Patching void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Prefix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text& description)
1 postfixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Postfix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text description, BattleTech.UI.TMProWrapper.LocalizableText ___Text)

20:51:25.354 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description)
20:51:25.354 [Info] Writing prefixes
20:51:25.355 [Info] Writing postfixes
20:51:25.357 [Info] Patching TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.FontLocTable_ConvertFontForCulture::Prefix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)
1 postfixes:
* static void CustomTranslation.FontLocTable_ConvertFontForCulture::Postfix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)

20:51:25.358 [Info] Running ILHook manipulator on TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont)
20:51:25.358 [Info] Writing prefixes
20:51:25.358 [Info] Writing postfixes
20:51:25.360 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

20:51:25.362 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
20:51:25.362 [Info] Writing prefixes
20:51:25.365 [Info] Patching void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.FloatieMessage_Constructor::Prefix(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)

20:51:25.366 [Info] Running ILHook manipulator on void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)
20:51:25.366 [Info] Writing prefixes
20:51:25.368 [Info] Patching void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatieAnchor_AddFloatie::Prefix(BattleTech.UI.CombatHUDFloatieAnchor __instance, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)

20:51:25.369 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)
20:51:25.369 [Info] Writing prefixes
20:51:25.372 [Info] Patching void BattleTech.UnityGameInstance::Reset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.UnityGameInstance_Reset::Postfix(BattleTech.UnityGameInstance __instance)

20:51:25.372 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Reset()
20:51:25.372 [Info] Writing postfixes
20:51:25.376 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

20:51:25.377 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
20:51:25.377 [Info] Writing postfixes
20:51:25.379 [Info] Patching void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ModDefsDatabase_FinishedLoadingMods::Postfix(object __instance)

20:51:25.380 [Info] Running ILHook manipulator on void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries()
20:51:25.380 [Info] Writing postfixes
20:51:25.687 [Info] Patching void BattleTech.UI.LanguageSelect::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.LanguageSelect_Save::Postfix(BattleTech.UI.LanguageSelect __instance)

20:51:25.687 [Info] Running ILHook manipulator on void BattleTech.UI.LanguageSelect::Save()
20:51:25.687 [Info] Writing postfixes
20:51:25.690 [Info] Patching virtual void Localize.Text::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.Text_Append::Prefix(Localize.Text __instance, String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.Text_Append::Postfix(Localize.Text __instance)

20:51:25.690 [Info] Running ILHook manipulator on virtual void Localize.Text::Append(string text, object[] args)
20:51:25.690 [Info] Writing prefixes
20:51:25.690 [Info] Writing postfixes
20:51:25.693 [Info] Patching string BattleTech.DescriptionDef::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_UINameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

20:51:25.693 [Info] Running ILHook manipulator on string BattleTech.DescriptionDef::get_UIName()
20:51:25.693 [Info] Writing postfixes
20:51:25.694 [Info] Patching string BattleTech.BaseDescriptionDef::get_Name() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_NameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

20:51:25.695 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Name()
20:51:25.695 [Info] Writing postfixes
20:51:25.696 [Info] Patching string BattleTech.BaseDescriptionDef::get_Details() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_DetailsGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

20:51:25.696 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Details()
20:51:25.697 [Info] Writing postfixes
20:51:25.706 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.707 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

20:51:25.707 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
20:51:25.708 [Info] Writing postfixes
20:51:25.742 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.743 [Info] Patching virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_ReceiveButtonPress::Postfix(BattleTech.UI.SettingsMenu __instance, String& button, BattleTech.UI.TMProWrapper.LocalizableText& ___currentModuleTitle, BattleTech.UI.ISettingsModule& ____activeModule)

20:51:25.744 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button)
20:51:25.744 [Info] Writing postfixes
20:51:25.750 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.751 [Info] Patching virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.SettingsMenu __instance)

20:51:25.751 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy()
20:51:25.751 [Info] Writing postfixes
20:51:25.755 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.755 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)

20:51:25.756 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
20:51:25.756 [Info] Writing postfixes
20:51:25.788 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.789 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::ReplaceTitle(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

20:51:25.789 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
20:51:25.789 [Info] Writing postfixes
20:51:25.792 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.793 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::HandleExit()

20:51:25.793 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
20:51:25.794 [Info] Writing postfixes
20:51:25.795 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
20:51:25.796 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::HandleExit()

20:51:25.797 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
20:51:25.797 [Info] Writing postfixes
20:51:25.799 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:25.800 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.Contract_GenerateSalvage::GenerateSalvage
20:51:25.800 [Info] PrefixWrapper created: HXI︳5︳::CustomComponents.Contract_GenerateSalvage::GenerateSalvage
20:51:25.800 [Info] PrefixWrapper being created for: CustomSalvage::CustomSalvage.Contract_GenerateSalvage::GenerateSalvage
20:51:25.801 [Info] PrefixWrapper created: HXI︳6︳::CustomSalvage.Contract_GenerateSalvage::GenerateSalvage
20:51:25.801 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
20:51:25.802 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomSalvage.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage, Boolean& __runOriginal)
* static bool CustomComponents.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage, Boolean& __runOriginal)

20:51:25.802 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
20:51:25.802 [Info] Writing prefixes
20:51:25.816 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
20:51:25.817 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomSalvage.MechBayChassisInfoWidget_OnScrapClicked::OnReadyClicked(BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

20:51:25.817 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked()
20:51:25.817 [Info] Writing prefixes
20:51:25.822 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
20:51:25.822 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::OnReadyClicked(BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

20:51:25.822 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
20:51:25.823 [Info] Writing prefixes
20:51:25.827 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
20:51:25.828 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisInfoWidget_SetDescriptions::AddVariantsToDescriptions(BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, TMPro.TextMeshProUGUI ___mechDetails, BattleTech.UI.Tooltips.HBSTooltip ___chassisStorageTooltip, UnityEngine.GameObject ___readyBtnObj, UnityEngine.GameObject ___partsCountObj, BattleTech.UI.MechUnitElementWidget ___mechIcon, TMPro.TextMeshProUGUI ___partsCountText)

20:51:25.829 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions()
20:51:25.829 [Info] Writing postfixes
20:51:25.832 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
20:51:25.834 [Info] Patching void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisUnitElement_SetData::SetColor(BattleTech.UI.MechBayChassisUnitElement __instance, UnityEngine.UI.Image ___mechImage, TMPro.TextMeshProUGUI ___partsText, TMPro.TextMeshProUGUI ___partsLabelText, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)

20:51:25.834 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)
20:51:25.834 [Info] Writing postfixes
20:51:25.838 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 53 ms
20:51:25.840 [Info] Patching void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SGEventPanel_SetEvent::ModifyOptions(BattleTech.SimGameEventDef evt, BattleTech.UI.SGEventPanel __instance, TMPro.TextMeshProUGUI ___eventDescription, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___optionParent, System.Collections.Generic.List<BattleTech.UI.SGEventOption> ___optionsList)

20:51:25.840 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry)
20:51:25.840 [Info] Writing postfixes
20:51:25.874 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:25.874 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.SimGameState_AddMechPart_Patch::Prefix
20:51:25.875 [Info] PrefixWrapper created: HXI︳7︳::CustomComponents.SimGameState_AddMechPart_Patch::Prefix
20:51:25.875 [Info] PrefixWrapper being created for: CustomSalvage::CustomSalvage.SimGameState_AddMechPart::AddMechPart
20:51:25.875 [Info] PrefixWrapper created: HXI︳8︳::CustomSalvage.SimGameState_AddMechPart::AddMechPart
20:51:25.876 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.877 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool CustomSalvage.SimGameState_AddMechPart::AddMechPart(BattleTech.SimGameState __instance, string id, Boolean& __runOriginal)
* static void CustomComponents.SimGameState_AddMechPart_Patch::Prefix(BattleTech.SimGameState __instance, Boolean& __runOriginal)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_AddMechPart_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.877 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
20:51:25.877 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
20:51:25.878 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_AddMechPart_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.880 [Info] Writing prefixes
20:51:25.884 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.885 [Info] Patching System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomSalvage.SimGameState_GetAllInventoryMechDefs::GetAllChassis(bool showMechParts, System.Collections.Generic.List`1[[BattleTech.ChassisDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.SimGameState __instance)

20:51:25.885 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts)
20:51:25.885 [Info] Writing prefixes
20:51:25.891 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.891 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::FixDefaults(BattleTech.SimGameState __instance)
* static void CustomSalvage.SimGameState_RespondToDefsLoadComplete::FixDefaults(BattleTech.SimGameState __instance)

20:51:25.891 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
20:51:25.892 [Info] Writing prefixes
20:51:25.902 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.902 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::ReplaceTitle(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomShops.SG_Stores_MultiPurchasePopup_Refresh::ReplaceTitle(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

20:51:25.903 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
20:51:25.903 [Info] Writing postfixes
20:51:25.905 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.906 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::HandleExit()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnCancel::HandleExit()

20:51:25.906 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
20:51:25.907 [Info] Writing postfixes
20:51:25.908 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.909 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::HandleExit()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnConfirm::HandleExit()

20:51:25.909 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
20:51:25.909 [Info] Writing postfixes
20:51:25.910 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
20:51:25.916 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)

20:51:25.917 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
20:51:25.917 [Info] Writing prefixes
20:51:25.929 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 56 ms
20:51:25.930 [Info] Patching bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.930 [Info] Running ILHook manipulator on bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
20:51:25.930 [Info] Transpiling bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
20:51:25.932 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.936 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 57 ms
20:51:25.936 [Info] Patching void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.937 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
20:51:25.937 [Info] Transpiling void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
20:51:25.938 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.946 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 59 ms
20:51:25.946 [Info] Patching bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.946 [Info] Running ILHook manipulator on bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
20:51:25.947 [Info] Transpiling bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
20:51:25.948 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.953 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
20:51:25.954 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.954 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.954 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.954 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.959 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
20:51:25.959 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.960 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.960 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.960 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.966 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 63 ms
20:51:25.966 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.966 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.967 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.967 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.972 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:25.972 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:25.972 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.972 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
20:51:25.973 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:25.976 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:25.977 [Info] Patching void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_RefreshColorAreas::Prefix()

20:51:25.977 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas()
20:51:25.978 [Info] Writing prefixes
20:51:25.983 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:25.983 [Info] Patching void BattleTech.UI.SG_Shop_Screen::BeginShop() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_BeginShop::BeginShop(BattleTech.UI.SG_Shop_Screen __instance)

20:51:25.983 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::BeginShop()
20:51:25.984 [Info] Writing prefixes
20:51:25.985 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:25.989 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:25.989 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:25.989 [Info] Writing postfixes
20:51:26.011 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.012 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_Init::OnInit(BattleTech.SimGameState __instance)

20:51:26.012 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
20:51:26.012 [Info] Writing postfixes
20:51:26.015 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.016 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()

20:51:26.017 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
20:51:26.018 [Info] Writing postfixes
20:51:26.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.033 [Info] Patching void BattleTech.StarSystem::RefreshShops() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.StarSystem_RefreshShops::RefreshShops()

20:51:26.034 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshShops()
20:51:26.034 [Info] Writing prefixes
20:51:26.035 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.036 [Info] Patching void BattleTech.StarSystem::CompletedContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.StarSystem_CompletedContract::RefreshShops()

20:51:26.036 [Info] Running ILHook manipulator on void BattleTech.StarSystem::CompletedContract()
20:51:26.036 [Info] Writing postfixes
20:51:26.039 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.039 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

20:51:26.039 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
20:51:26.040 [Info] Writing postfixes
20:51:26.041 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.047 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
2 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)

20:51:26.047 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:26.047 [Info] Writing prefixes
20:51:26.048 [Info] Writing postfixes
20:51:26.067 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.068 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.SimGameState_SetCurrentSystem::UpdateSystem(BattleTech.StarSystem system)

20:51:26.068 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
20:51:26.073 [Info] Writing prefixes
20:51:26.079 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.080 [Info] Patching void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Dehydrate::OverrideSaveShops(Boolean& saveShops)

20:51:26.080 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops)
20:51:26.080 [Info] Writing prefixes
20:51:26.082 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.085 [Info] Patching void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Rehydrate::OverrideLoadShops(Boolean& loadShops)

20:51:26.085 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops)
20:51:26.085 [Info] Writing prefixes
20:51:26.129 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.131 [Info] Patching BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerate(BattleTech.ItemCollectionDef collection, int count, string parentGUID)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerated(BattleTech.ItemCollectionDef collection, BattleTech.ItemCollectionResult __result)

20:51:26.131 [Info] Running ILHook manipulator on BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID)
20:51:26.131 [Info] Writing prefixes
20:51:26.131 [Info] Writing postfixes
20:51:26.145 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.145 [Info] Patching void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_InsertItemCollectionEntry::OnInsert(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)

20:51:26.146 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)
20:51:26.146 [Info] Writing prefixes
20:51:26.148 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.148 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnComplete(BattleTech.ItemCollectionResult collectionResult)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnCompleted(BattleTech.ItemCollectionResult collectionResult)

20:51:26.149 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult)
20:51:26.149 [Info] Writing prefixes
20:51:26.149 [Info] Writing postfixes
20:51:26.152 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.153 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionDefRetrieved::OnComplete(BattleTech.ItemCollectionDef& def, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<BattleTech.ItemCollectionDef+Entry, string>>> ____pendingGenerateRequests)

20:51:26.153 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def)
20:51:26.153 [Info] Writing prefixes
20:51:26.157 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.159 [Info] Patching void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_ProcessQueuedReferenceCollections::OnComplete(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)

20:51:26.159 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)
20:51:26.159 [Info] Writing prefixes
20:51:26.165 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.166 [Info] Patching void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.Shop_OnItemsCollected::OnResultReveived(BattleTech.ItemCollectionResult result)

20:51:26.166 [Info] Running ILHook manipulator on void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result)
20:51:26.166 [Info] Writing prefixes
20:51:26.168 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.170 [Info] Patching virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.DEBUG_Patches.SG_Shop_Screen_ReceiveButtonPress::Prefix(string button)

20:51:26.170 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button)
20:51:26.170 [Info] Writing prefixes
20:51:26.189 [Info] ### Harmony id=ru.mission.customvoices, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomVoices.Core::Init(string directory, string settingsJson), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomVoices\CustomVoices.dll
### At 2023-03-12 08.51.26
20:51:26.190 [Info] Patching void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Briefing_SetStartButtonActive::Prefix(BattleTech.UI.Briefing __instance, bool isActive)

20:51:26.190 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive)
20:51:26.191 [Info] Writing prefixes
20:51:26.192 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

20:51:26.192 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
20:51:26.193 [Info] Writing prefixes
20:51:26.196 [Info] Patching virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWCustomizationPopup_LoadTextSelectorOptions::Prefix(SGBarracksMWCustomizationPopup __instance, BattleTech.UI.HorizontalScrollSelectorText& ___voiceSelector, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___voiceIdMap)

20:51:26.196 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions()
20:51:26.197 [Info] Writing prefixes
20:51:26.202 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

20:51:26.202 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
20:51:26.202 [Info] Writing postfixes
20:51:26.211 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWDetailPanel_CustomizePilot::Prefix(BattleTech.UI.SGBarracksMWDetailPanel __instance, BattleTech.Pilot ___curPilot, BattleTech.UI.SGBarracksWidget ___barracks, BattleTech.UI.SGBarracksDossierPanel ___dossier)

20:51:26.211 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
20:51:26.211 [Info] Writing prefixes
20:51:26.216 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.SGCharacterCreationNamePanel_Awake::Postfix(BattleTech.UI.SGCharacterCreationNamePanel __instance)

20:51:26.216 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::Awake()
20:51:26.216 [Info] Writing postfixes
20:51:26.219 [Info] Patching void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SetSwitchById::Postfix(WwiseManager __instance, uint switchGroup, uint switchId, AkGameObj sourceObject)

20:51:26.219 [Info] Running ILHook manipulator on void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject)
20:51:26.220 [Info] Writing postfixes
20:51:26.222 [Info] Patching void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Pilot_Init::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)

20:51:26.223 [Info] Running ILHook manipulator on void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)
20:51:26.223 [Info] Writing prefixes
20:51:26.226 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:26.227 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
20:51:26.227 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
20:51:26.228 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:26.230 [Info] Patching static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksDossierPanel_PlayVO::Prefix(string voice, Boolean& __result)

20:51:26.231 [Info] Running ILHook manipulator on static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice)
20:51:26.231 [Info] Writing prefixes
20:51:26.234 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SG_HiringHall_DetailPanel_PlayPilotSelectionVO::Prefix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

20:51:26.234 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
20:51:26.234 [Info] Writing prefixes
20:51:26.237 [Info] Patching static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_InterruptPilotVOForTeam::Postfix(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)

20:51:26.237 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)
20:51:26.237 [Info] Writing postfixes
20:51:26.240 [Info] Patching void BattleTech.PilotRepresentation::LoadSoundbanks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PilotRepresentation__LoadSoundbanks__Patch::Prefix(BattleTech.PilotRepresentation& __instance, Boolean& ___startedVOStatic)

20:51:26.240 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::LoadSoundbanks()
20:51:26.240 [Info] Writing prefixes
20:51:26.245 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

20:51:26.245 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
20:51:26.245 [Info] Writing postfixes
20:51:26.249 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()
* static void CustomVoices.AudioEventManager_LoadAudioSettings::Postfix()

20:51:26.250 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
20:51:26.250 [Info] Writing postfixes
20:51:26.252 [Info] Patching static void BattleTech.AudioEventManager::SaveAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_SaveAudioSettings::Postfix()

20:51:26.252 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::SaveAudioSettings()
20:51:26.252 [Info] Writing postfixes
20:51:26.254 [Info] Patching void WwiseManager::SuspendSoundEngine(bool processAudio) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SuspendSoundEngine::Postfix(WwiseManager __instance)

20:51:26.255 [Info] Running ILHook manipulator on void WwiseManager::SuspendSoundEngine(bool processAudio)
20:51:26.255 [Info] Writing postfixes
20:51:26.258 [Info] Patching uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_PostEventById::Postfix(WwiseManager __instance, uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie, System.Collections.Generic.Dictionary<string, uint> ___guidIdMap, uint __result)

20:51:26.258 [Info] Running ILHook manipulator on uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
20:51:26.258 [Info] Writing postfixes
20:51:26.260 [Info] Patching static AKRESULT AkSoundEngine::RenderAudio() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AkSoundEngine_RenderAudio::Postfix(AKRESULT __result)

20:51:26.262 [Info] Running ILHook manipulator on static AKRESULT AkSoundEngine::RenderAudio()
20:51:26.262 [Info] Writing postfixes
20:51:26.264 [Info] Patching void WwiseManager::WakeupSoundEngine() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_WakeupSoundEngine::Postfix()

20:51:26.264 [Info] Running ILHook manipulator on void WwiseManager::WakeupSoundEngine()
20:51:26.265 [Info] Writing postfixes
20:51:26.267 [Info] Patching void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioSettingsModule_ApplyUpdatedSlider::Postfix(BattleTech.UI.AudioSettingsModule __instance, string val, float ___currentVolumeMaster, float ___currentVolumeMusic, float ___currentVolumeVoice, float ___currentVolumeSFX, float ___currentVolumeAmbience, float ___currentVolumeCinematic)

20:51:26.267 [Info] Running ILHook manipulator on void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val)
20:51:26.268 [Info] Writing postfixes
20:51:26.271 [Info] Patching static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.AudioEventManager_SetMusicState::Prefix(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic, Boolean& __result)

20:51:26.271 [Info] Running ILHook manipulator on static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic)
20:51:26.272 [Info] Writing prefixes
20:51:26.275 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PlayPilotVOPatch::Prefix(BattleTech.PilotRepresentation __instance, Boolean& ___startedVOStatic, AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)

20:51:26.275 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
20:51:26.276 [Info] Writing prefixes
20:51:26.388 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.388 [Info] Patching void BattleTech.UI.HeraldryNameWidget::OnNameInputEndEdit(string str) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FellOffACargoShip.HeraldryNameWidget_OnNameInputEndEdit_Patch::Postfix(BattleTech.UI.HeraldryNameWidget __instance)

20:51:26.388 [Info] Running ILHook manipulator on void BattleTech.UI.HeraldryNameWidget::OnNameInputEndEdit(string str)
20:51:26.389 [Info] Writing postfixes
20:51:26.391 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.391 [Info] Patching void BattleTech.UI.HeraldryNameWidget::SetData(string currentName, string crestId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void FellOffACargoShip.HeraldryNameWidget_SetData_Patch::Prefix(BattleTech.UI.HeraldryNameWidget __instance)

20:51:26.391 [Info] Running ILHook manipulator on void BattleTech.UI.HeraldryNameWidget::SetData(string currentName, string crestId)
20:51:26.392 [Info] Writing prefixes
20:51:26.393 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.394 [Info] Patching virtual bool BattleTech.UI.GenericPopup::HandleEnterKeypress() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool FellOffACargoShip.GenericPopup_HandleEnterKeypress_Patch::Prefix(BattleTech.UI.GenericPopup __instance)

20:51:26.394 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.GenericPopup::HandleEnterKeypress()
20:51:26.395 [Info] Writing prefixes
20:51:26.397 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.397 [Info] Patching virtual bool BattleTech.UI.HeraldryCreatorPanel::HandleEnterKeypress() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool FellOffACargoShip.HeraldryCreatorPanel_HandleEnterKeypress_Patch::Prefix(BattleTech.UI.HeraldryCreatorPanel __instance)

20:51:26.397 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.HeraldryCreatorPanel::HandleEnterKeypress()
20:51:26.397 [Info] Writing prefixes
20:51:26.404 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.404 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

20:51:26.405 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
20:51:26.405 [Info] Writing prefixes
20:51:26.407 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.409 [Info] Patching bool BattleTech.SimGameState::DismissPilot(string pilotID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderBackgrounds.Mod+SimGameState_DismissPilot_Patch::Prefix(string pilotID, BattleTech.SimGameState __instance)

20:51:26.409 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::DismissPilot(string pilotID)
20:51:26.409 [Info] Writing prefixes
20:51:26.424 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.432 [Info] Patching void BattleTech.SimGameState::InitializeDataFromDefs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SimGameState_InitializeDataFromDefs_Patch::Prefix(BattleTech.SimGameState __instance)

20:51:26.432 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitializeDataFromDefs()
20:51:26.432 [Info] Writing prefixes
20:51:26.469 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.470 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
1 postfixes:
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

20:51:26.470 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
20:51:26.470 [Info] Writing prefixes
20:51:26.471 [Info] Writing postfixes
20:51:26.472 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.473 [Info] Patching void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Prefix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState& ___simState)
1 postfixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Postfix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState ___simState)

20:51:26.473 [Info] Running ILHook manipulator on void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets()
20:51:26.473 [Info] Writing prefixes
20:51:26.473 [Info] Writing postfixes
20:51:26.478 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.479 [Info] Patching void BattleTech.StarmapBorders::OnWillRenderObject() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapBorders_OnWillRenderObject::Prefix(BattleTech.StarmapBorders __instance)

20:51:26.479 [Info] Running ILHook manipulator on void BattleTech.StarmapBorders::OnWillRenderObject()
20:51:26.479 [Info] Writing prefixes
20:51:26.482 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
20:51:26.483 [Info] Patching void BattleTech.StarmapRenderer::RefreshSystems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_RefreshSystems::Prefix(BattleTech.StarmapRenderer __instance)
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_RefreshSystems::Postfix(BattleTech.StarmapRenderer __instance)

20:51:26.483 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::RefreshSystems()
20:51:26.484 [Info] Writing prefixes
20:51:26.484 [Info] Writing postfixes
20:51:26.488 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 65 ms
20:51:26.489 [Info] Patching static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_NormalizeToMapSpace_Patch::Prefix(BattleTech.StarmapRenderer __instance, UnityEngine.Vector2 normalizedPos, UnityEngine.Vector3& __result)

20:51:26.489 [Info] Running ILHook manipulator on static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos)
20:51:26.490 [Info] Writing prefixes
20:51:26.493 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 66 ms
20:51:26.494 [Info] Patching void BattleTech.StarmapRenderer::Update() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch::Postfix(BattleTech.StarmapRenderer __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:26.498 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::Update()
20:51:26.498 [Info] Transpiling void BattleTech.StarmapRenderer::Update()
20:51:26.504 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:26.550 [Info] Writing postfixes
20:51:26.558 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 66 ms
20:51:26.559 [Info] Patching void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapRenderer_PlaceLogo_Patch::Postfix(BattleTech.StarmapRenderer __instance, BattleTech.FactionValue faction, UnityEngine.GameObject logo)

20:51:26.559 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo)
20:51:26.560 [Info] Writing postfixes
20:51:26.564 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 66 ms
20:51:26.565 [Info] Patching void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGSystemViewPopulator_UpdateRoutedSystem_Patch::Prefix(BattleTech.UI.SGNavigationActiveFactionWidget __instance, System.Collections.Generic.List<string> activeFactions, string OwnerFaction, System.Collections.Generic.List<BattleTech.UI.HBSButton> ___FactionButtons, System.Collections.Generic.List<UnityEngine.UI.Image> ___FactionIcons, BattleTech.SimGameState ___simState)

20:51:26.565 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction)
20:51:26.565 [Info] Writing prefixes
20:51:26.568 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 66 ms
20:51:26.569 [Info] Patching void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapSystemRenderer_SetBlackMarket_Patch::Prefix(BattleTech.StarmapSystemRenderer __instance, Boolean& state)

20:51:26.569 [Info] Running ILHook manipulator on void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state)
20:51:26.570 [Info] Writing prefixes
20:51:26.572 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:26.572 [Info] PrefixWrapper being created for: CommanderBackgrounds::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
20:51:26.573 [Info] PrefixWrapper created: HXI︳9︳::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
20:51:26.573 [Info] PrefixWrapper being created for: InnerSphereMap::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
20:51:26.574 [Info] PrefixWrapper created: HXI︳10︳::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
20:51:26.574 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.575 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)

20:51:26.575 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
20:51:26.576 [Info] Writing prefixes
20:51:26.634 [Info] ### Harmony id=us.frostraptor.IRBTModUtils, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void IRBTModUtils.Mod::Init(string modDirectory, string settingsJSON), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\IRBTModUtils\IRBTModUtils.dll
### At 2023-03-12 08.51.26
20:51:26.636 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:26.636 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
20:51:26.637 [Info] Writing postfixes
20:51:26.639 [Info] Patching virtual float BattleTech.Mech::get_MaxBackwardDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxBackwardDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:26.639 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxBackwardDistance()
20:51:26.639 [Info] Writing postfixes
20:51:26.640 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:26.640 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
20:51:26.642 [Info] Writing postfixes
20:51:26.643 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

20:51:26.644 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
20:51:26.644 [Info] Writing postfixes
20:51:26.646 [Info] Patching void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.AAR_ObjectiveListItem__Init::Postfix(BattleTech.UI.AAR_ObjectiveListItem __instance, BattleTech.MissionObjectiveResult missionObjectiveResult)

20:51:26.646 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract)
20:51:26.647 [Info] Writing postfixes
20:51:26.652 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)

20:51:26.653 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
20:51:26.653 [Info] Writing postfixes
20:51:26.664 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()

20:51:26.664 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
20:51:26.664 [Info] Writing prefixes
20:51:26.672 [Info] Patching void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_SubscribeToMessages::Postfix(BattleTech.UI.CombatHUD __instance, bool shouldAdd)

20:51:26.673 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd)
20:51:26.673 [Info] Writing postfixes
20:51:26.679 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

20:51:26.680 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:26.680 [Info] Writing prefixes
20:51:26.680 [Info] Writing postfixes
20:51:26.687 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()

20:51:26.687 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
20:51:26.687 [Info] Writing prefixes
20:51:26.748 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.750 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

20:51:26.750 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:26.751 [Info] Writing postfixes
20:51:26.756 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.757 [Info] Patching bool BattleTech.AbstractActor::get_HasBreachingShotAbility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_HasBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

20:51:26.757 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_HasBreachingShotAbility()
20:51:26.758 [Info] Writing postfixes
20:51:26.760 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.760 [Info] Patching bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_IsUsingBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

20:51:26.761 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons)
20:51:26.761 [Info] Writing postfixes
20:51:26.762 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.763 [Info] Patching virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_AddToTeam::Postfix(BattleTech.AbstractActor __instance)

20:51:26.763 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team)
20:51:26.763 [Info] Writing postfixes
20:51:26.766 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.767 [Info] Patching bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AttackSequence_IsBreachingShot::Postfix(BattleTech.AttackDirector+AttackSequence __instance, Boolean& __result)

20:51:26.767 [Info] Running ILHook manipulator on bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot()
20:51:26.767 [Info] Writing postfixes
20:51:26.770 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.772 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

20:51:26.773 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:26.773 [Info] Writing postfixes
20:51:26.794 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.794 [Info] Patching void BattleTech.UI.MechDetails::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechDetails_SetDescriptions::Postfix(BattleTech.UI.MechDetails __instance)

20:51:26.795 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetDescriptions()
20:51:26.795 [Info] Writing postfixes
20:51:26.797 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.797 [Info] Patching void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechLabStockInfoPopup_StockMechDefLoaded::Postfix(BattleTech.UI.MechLabStockInfoPopup __instance, BattleTech.MechDef def, BattleTech.UI.TMProWrapper.LocalizableText ___descriptionText)

20:51:26.798 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def)
20:51:26.798 [Info] Writing postfixes
20:51:26.800 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.802 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)

20:51:26.802 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
20:51:26.803 [Info] Writing postfixes
20:51:26.819 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.820 [Info] Patching void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksServicePanel_SetPilot::Postfix(BattleTech.UI.SGBarracksServicePanel __instance, BattleTech.Pilot p)

20:51:26.820 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p)
20:51:26.820 [Info] Writing postfixes
20:51:26.825 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.832 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
3 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:26.832 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:26.832 [Info] Writing prefixes
20:51:26.832 [Info] Writing postfixes
20:51:26.851 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.852 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

20:51:26.853 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
20:51:26.853 [Info] Writing postfixes
20:51:26.866 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.868 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.SimGameState_InitCompanyStats_Patch::Postfix(BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

20:51:26.868 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
20:51:26.869 [Info] Writing postfixes
20:51:26.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.876 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)

20:51:26.876 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
20:51:26.877 [Info] Writing prefixes
20:51:26.900 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.902 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

20:51:26.902 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
20:51:26.902 [Info] Writing postfixes
20:51:26.910 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.910 [Info] Patching SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_GetPilotRoninIcon::Postfix(BattleTech.SimGameState __instance, BattleTech.Pilot p, SVGImporter.SVGAsset& __result)

20:51:26.910 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p)
20:51:26.910 [Info] Writing postfixes
20:51:26.913 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.915 [Info] Patching void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_SetupRoninTooltip::Postfix(BattleTech.SimGameState __instance, BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)

20:51:26.915 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)
20:51:26.915 [Info] Writing postfixes
20:51:26.919 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.920 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)

20:51:26.920 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
20:51:26.920 [Info] Writing postfixes
20:51:26.962 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.963 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

20:51:26.963 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
20:51:26.964 [Info] Writing postfixes
20:51:26.970 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.972 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechLabMechInfoWidget_CalculateTonnage_Patch::Postfix(BattleTech.UI.MechLabPanel ___mechLab, Single& ___currentTonnage, TMPro.TextMeshProUGUI ___totalTonnage, BattleTech.UI.UIColorRefTracker ___totalTonnageColor, TMPro.TextMeshProUGUI ___remainingTonnage, BattleTech.UI.UIColorRefTracker ___remainingTonnageColor)

20:51:26.972 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage()
20:51:26.972 [Info] Writing postfixes
20:51:26.976 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
20:51:26.977 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:26.977 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:26.978 [Info] Writing postfixes
20:51:26.982 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 70 ms
20:51:26.982 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:26.982 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
20:51:26.983 [Info] Transpiling static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
20:51:26.983 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:26.994 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 71 ms
20:51:26.994 [Info] Patching virtual void BattleTech.Mech::CancelCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:26.995 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::CancelCreatedEffects()
20:51:26.995 [Info] Transpiling virtual void BattleTech.Mech::CancelCreatedEffects()
20:51:27.032 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.036 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 71 ms
20:51:27.037 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Single& __result)

20:51:27.037 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
20:51:27.037 [Info] Writing prefixes
20:51:27.044 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 72 ms
20:51:27.045 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

20:51:27.045 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
20:51:27.045 [Info] Writing postfixes
20:51:27.050 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 73 ms
20:51:27.050 [Info] Patching virtual void BattleTech.Mech::RestartCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.051 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::RestartCreatedEffects()
20:51:27.051 [Info] Transpiling virtual void BattleTech.Mech::RestartCreatedEffects()
20:51:27.051 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.060 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 75 ms
20:51:27.062 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool CustomSalvage.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage, Boolean& __runOriginal)
* static bool CustomComponents.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage, Boolean& __runOriginal)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.062 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
20:51:27.062 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
20:51:27.063 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.083 [Info] Writing prefixes
20:51:27.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 75 ms
20:51:27.095 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Engines.Patches.MechLabMechInfoWidget_GetTotalHardpoints_Patch::Postfix(BattleTech.UI.MechLabMechInfoWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.MechLabHardpointElement[] ___hardpoints)

20:51:27.095 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints()
20:51:27.095 [Info] Writing postfixes
20:51:27.099 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 75 ms
20:51:27.100 [Info] Patching int BattleTech.Mech::CalcJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.Engines.Patches.Mech_CalcJumpHeat_Patch::Prefix(BattleTech.Mech __instance, float distJumped, Int32& __result)

20:51:27.101 [Info] Running ILHook manipulator on int BattleTech.Mech::CalcJumpHeat(float distJumped)
20:51:27.101 [Info] Writing prefixes
20:51:27.106 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 75 ms
20:51:27.107 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

20:51:27.108 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
20:51:27.108 [Info] Writing prefixes
20:51:27.109 [Info] Writing postfixes
20:51:27.113 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 75 ms
20:51:27.114 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(BattleTech.Mech __instance, Single& __result)

20:51:27.114 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
20:51:27.114 [Info] Writing prefixes
20:51:27.124 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 76 ms
20:51:27.125 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

20:51:27.126 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
20:51:27.126 [Info] Writing prefixes
20:51:27.127 [Info] Writing postfixes
20:51:27.130 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 76 ms
20:51:27.132 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:27.132 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
20:51:27.132 [Info] Writing postfixes
20:51:27.141 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 76 ms
20:51:27.142 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)

20:51:27.142 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
20:51:27.142 [Info] Writing prefixes
20:51:27.148 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 76 ms
20:51:27.150 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)

20:51:27.150 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.150 [Info] Writing prefixes
20:51:27.157 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 76 ms
20:51:27.158 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(BattleTech.MechComponent __instance, Int32& __result)

20:51:27.158 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
20:51:27.159 [Info] Writing prefixes
20:51:27.163 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 77 ms
20:51:27.164 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.164 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:27.164 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:27.167 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.186 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 77 ms
20:51:27.187 [Info] Patching virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.MechComponent_ApplyPassiveEffectToTarget_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.EffectData& effect)

20:51:27.187 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID)
20:51:27.187 [Info] Writing prefixes
20:51:27.190 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 77 ms
20:51:27.190 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)

20:51:27.190 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
20:51:27.192 [Info] Writing postfixes
20:51:27.199 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:27.200 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix
20:51:27.200 [Info] PrefixWrapper created: HXI︳11︳::MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix
20:51:27.201 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix
20:51:27.201 [Info] PrefixWrapper created: HXI︳12︳::MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix
20:51:27.204 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 82 ms
20:51:27.205 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
1 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.205 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.206 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.206 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.213 [Info] Writing prefixes
20:51:27.214 [Info] Writing postfixes
20:51:27.263 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:27.263 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix
20:51:27.264 [Info] PrefixWrapper created: HXI︳13︳::MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix
20:51:27.264 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.CriticalEffects.Patches.MechComponent_inventorySize_Patch::Prefix
20:51:27.265 [Info] PrefixWrapper created: HXI︳14︳::MechEngineer.Features.CriticalEffects.Patches.MechComponent_inventorySize_Patch::Prefix
20:51:27.265 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 85 ms
20:51:27.266 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(BattleTech.MechComponent __instance, Int32& __result, Boolean& __runOriginal)
* static bool MechEngineer.Features.CriticalEffects.Patches.MechComponent_inventorySize_Patch::Prefix(BattleTech.MechComponent __instance, Int32& __result, Boolean& __runOriginal)

20:51:27.267 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
20:51:27.267 [Info] Writing prefixes
20:51:27.270 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.272 [Info] Patching void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.273 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
20:51:27.273 [Info] Transpiling void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
20:51:27.276 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.305 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.306 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(String& description)

20:51:27.306 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
20:51:27.306 [Info] Writing prefixes
20:51:27.310 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.312 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

20:51:27.312 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
20:51:27.313 [Info] Writing prefixes
20:51:27.314 [Info] Writing postfixes
20:51:27.317 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.318 [Info] Patching float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.AccuracyEffects.Patches.ToHit_GetSelfArmMountedModifier_Patch::Prefix(BattleTech.Weapon weapon, Single& __result)

20:51:27.318 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon)
20:51:27.318 [Info] Writing prefixes
20:51:27.324 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.325 [Info] Patching virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.ListElementController_BASE_NotListView_SetComponentTooltipData_Patch::Postfix(BattleTech.UI.ListElementController_BASE_NotListView __instance)

20:51:27.325 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef)
20:51:27.325 [Info] Writing postfixes
20:51:27.328 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.329 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)

20:51:27.329 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
20:51:27.329 [Info] Writing postfixes
20:51:27.333 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.334 [Info] Patching BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_CreateMechComponentItem_Patch::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.MechComponentRef componentRef, BattleTech.UI.MechLabItemSlotElement __result)

20:51:27.334 [Info] Running ILHook manipulator on BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem)
20:51:27.335 [Info] Writing postfixes
20:51:27.338 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.339 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:27.339 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
20:51:27.340 [Info] Writing postfixes
20:51:27.343 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.344 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_EquipmentSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Equipment __instance, object data)

20:51:27.344 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data)
20:51:27.344 [Info] Writing postfixes
20:51:27.348 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.349 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)

20:51:27.349 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
20:51:27.350 [Info] Writing postfixes
20:51:27.365 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.365 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerEnter_Patch::Prefix(BattleTech.UI.MechLabItemSlotElement __instance)

20:51:27.365 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
20:51:27.366 [Info] Writing prefixes
20:51:27.367 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.368 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerExit_Patch::Prefix(BattleTech.UI.MechLabItemSlotElement __instance)

20:51:27.368 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
20:51:27.368 [Info] Writing prefixes
20:51:27.369 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.370 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)

20:51:27.370 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
20:51:27.370 [Info] Writing postfixes
20:51:27.372 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 86 ms
20:51:27.374 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:27.374 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
20:51:27.374 [Info] Writing postfixes
20:51:27.381 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 88 ms
20:51:27.382 [Info] Patching void BattleTech.MechShutdownSequence::CheckForHeatDamage() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Prefix(BattleTech.MechShutdownSequence __instance)
1 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.382 [Info] Running ILHook manipulator on void BattleTech.MechShutdownSequence::CheckForHeatDamage()
20:51:27.382 [Info] Transpiling void BattleTech.MechShutdownSequence::CheckForHeatDamage()
20:51:27.383 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.386 [Info] Writing prefixes
20:51:27.386 [Info] Writing postfixes
20:51:27.388 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 88 ms
20:51:27.389 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(BattleTech.Mech __instance)

20:51:27.389 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
20:51:27.389 [Info] Writing prefixes
20:51:27.395 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 88 ms
20:51:27.396 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

20:51:27.397 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
20:51:27.397 [Info] Writing prefixes
20:51:27.398 [Info] Writing postfixes
20:51:27.401 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 88 ms
20:51:27.402 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)

20:51:27.402 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
20:51:27.402 [Info] Writing postfixes
20:51:27.409 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 89 ms
20:51:27.410 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.410 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:27.410 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:27.410 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.412 [Info] Writing postfixes
20:51:27.414 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 89 ms
20:51:27.415 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnDrop_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData)

20:51:27.415 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData)
20:51:27.415 [Info] Writing prefixes
20:51:27.418 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 91 ms
20:51:27.419 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.419 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:27.419 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:27.420 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.428 [Info] Writing postfixes
20:51:27.432 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 91 ms
20:51:27.433 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_ShowHighlightFrame_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef& cRef)

20:51:27.433 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
20:51:27.433 [Info] Writing prefixes
20:51:27.436 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 91 ms
20:51:27.437 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabPanel_InitWidgets::PreInit(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabInventoryWidget ___inventoryWidget)
2 postfixes:
* static void CustomFilters.MechLabPanel_InitWidgets::Init(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabInventoryWidget ___inventoryWidget)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:27.437 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
20:51:27.437 [Info] Writing prefixes
20:51:27.437 [Info] Writing postfixes
20:51:27.440 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 91 ms
20:51:27.441 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomFilters.Patches.MechLabPanel_LoadMech::ApplyFilter()
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:27.441 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
20:51:27.441 [Info] Writing postfixes
20:51:27.443 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 91 ms
20:51:27.444 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_RefreshDropHighlights_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

20:51:27.444 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item)
20:51:27.445 [Info] Writing prefixes
20:51:27.453 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 92 ms
20:51:27.454 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Prefix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.455 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
20:51:27.455 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
20:51:27.456 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.459 [Info] Writing prefixes
20:51:27.463 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 94 ms
20:51:27.463 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Prefix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.464 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
20:51:27.464 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
20:51:27.464 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.520 [Info] Writing prefixes
20:51:27.526 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 94 ms
20:51:27.528 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void CustomTranslation.MechValidationRules_ValidateMechDef::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:27.528 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
20:51:27.529 [Info] Writing postfixes
20:51:27.539 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 95 ms
20:51:27.540 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.540 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.540 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.542 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 95 ms
20:51:27.549 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
2 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.550 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.550 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:27.551 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.555 [Info] Writing prefixes
20:51:27.556 [Info] Writing postfixes
20:51:27.560 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 96 ms
20:51:27.560 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(BattleTech.Mech __instance, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

20:51:27.562 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
20:51:27.562 [Info] Writing prefixes
20:51:27.566 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 96 ms
20:51:27.567 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)

20:51:27.567 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
20:51:27.567 [Info] Writing prefixes
20:51:27.579 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.580 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.580 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
20:51:27.580 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
20:51:27.582 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.600 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.602 [Info] Patching float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxArmor_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:27.602 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location)
20:51:27.602 [Info] Writing postfixes
20:51:27.607 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.607 [Info] Patching float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxStructure_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:27.608 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location)
20:51:27.608 [Info] Writing postfixes
20:51:27.611 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.612 [Info] Patching float BattleTech.Mech::get_ArmorMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_get_ArmorMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:27.612 [Info] Running ILHook manipulator on float BattleTech.Mech::get_ArmorMultiplier()
20:51:27.613 [Info] Writing postfixes
20:51:27.616 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.616 [Info] Patching float BattleTech.Mech::get_StructureMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_get_StructureMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:27.617 [Info] Running ILHook manipulator on float BattleTech.Mech::get_StructureMultiplier()
20:51:27.617 [Info] Writing postfixes
20:51:27.619 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.622 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(BattleTech.Mech __instance)

20:51:27.623 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
20:51:27.623 [Info] Writing prefixes
20:51:27.642 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.642 [Info] Patching BattleTech.MechDef BattleTech.Mech::ToMechDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ToMechDef_Patch::Postfix(BattleTech.Mech __instance, BattleTech.MechDef __result)

20:51:27.642 [Info] Running ILHook manipulator on BattleTech.MechDef BattleTech.Mech::ToMechDef()
20:51:27.643 [Info] Writing postfixes
20:51:27.652 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.653 [Info] Patching void BattleTech.ChassisDef::RefreshHardpointData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.ChassisDef_RefreshHardpointData_Patch::Postfix(BattleTech.ChassisDef __instance)

20:51:27.653 [Info] Running ILHook manipulator on void BattleTech.ChassisDef::RefreshHardpointData()
20:51:27.654 [Info] Writing postfixes
20:51:27.658 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.659 [Info] Patching void BattleTech.ChassisDef::refreshLocationReferences() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.ChassisDef_refreshLocationReferences_Patch::Prefix(BattleTech.ChassisDef __instance)

20:51:27.659 [Info] Running ILHook manipulator on void BattleTech.ChassisDef::refreshLocationReferences()
20:51:27.659 [Info] Writing prefixes
20:51:27.663 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 97 ms
20:51:27.664 [Info] Patching static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Prefix(BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Postfix(BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:27.664 [Info] Running ILHook manipulator on static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location)
20:51:27.664 [Info] Writing prefixes
20:51:27.665 [Info] Writing postfixes
20:51:27.669 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 98 ms
20:51:27.670 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(BattleTech.BaseComponentRef componentRef, String& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)

20:51:27.670 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
20:51:27.670 [Info] Writing prefixes
20:51:27.671 [Info] Writing postfixes
20:51:27.672 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:27.673 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
20:51:27.673 [Info] PrefixWrapper created: HXI︳15︳::CustomComponents.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
20:51:27.674 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.HardpointFix.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
20:51:27.674 [Info] PrefixWrapper created: HXI︳16︳::MechEngineer.Features.HardpointFix.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
20:51:27.674 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.675 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.HardpointFix.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType, Boolean& __runOriginal)
* static bool CustomComponents.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData, Boolean& __runOriginal)

20:51:27.675 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
20:51:27.676 [Info] Writing prefixes
20:51:27.679 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.680 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(BattleTech.MechRepresentationSimGame __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

20:51:27.680 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
20:51:27.680 [Info] Writing prefixes
20:51:27.680 [Info] Writing postfixes
20:51:27.687 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.689 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

20:51:27.690 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
20:51:27.690 [Info] Writing prefixes
20:51:27.690 [Info] Writing postfixes
20:51:27.710 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.711 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

20:51:27.711 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
20:51:27.711 [Info] Writing postfixes
20:51:27.712 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.713 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

20:51:27.713 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
20:51:27.714 [Info] Writing postfixes
20:51:27.716 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.716 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

20:51:27.717 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
20:51:27.717 [Info] Writing postfixes
20:51:27.718 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.719 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

20:51:27.719 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
20:51:27.719 [Info] Writing postfixes
20:51:27.720 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.720 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)

20:51:27.722 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
20:51:27.722 [Info] Writing postfixes
20:51:27.729 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.730 [Info] Patching void BattleTech.UI.MechBayPanel::CloseMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_CloseMechBay_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

20:51:27.730 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::CloseMechBay()
20:51:27.730 [Info] Writing postfixes
20:51:27.732 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.733 [Info] Patching void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_SelectMech_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

20:51:27.733 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload)
20:51:27.734 [Info] Writing postfixes
20:51:27.737 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.738 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::ExitMechLab_Pre(BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:27.738 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
20:51:27.738 [Info] Writing prefixes
20:51:27.738 [Info] Writing postfixes
20:51:27.740 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 99 ms
20:51:27.740 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomFilters.Patches.MechLabPanel_LoadMech::ApplyFilter()
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:27.742 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
20:51:27.742 [Info] Writing postfixes
20:51:27.749 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 100 ms
20:51:27.750 [Info] Patching virtual void BattleTech.Turret::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(BattleTech.Turret __instance)

20:51:27.751 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
20:51:27.751 [Info] Writing prefixes
20:51:27.802 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 101 ms
20:51:27.803 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.803 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
20:51:27.804 [Info] Transpiling virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
20:51:27.805 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.812 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.814 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.814 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
20:51:27.814 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
20:51:27.816 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.826 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.828 [Info] Patching virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideGhostVFX.Patches.GameRepresentation_PlayVFXAt_Patch::Prefix(string vfxName)

20:51:27.828 [Info] Running ILHook manipulator on virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration)
20:51:27.828 [Info] Writing prefixes
20:51:27.844 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.845 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)

20:51:27.845 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
20:51:27.845 [Info] Writing postfixes
20:51:27.856 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.858 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.Engines.Patches.MechLabMechInfoWidget_GetTotalHardpoints_Patch::Postfix(BattleTech.UI.MechLabMechInfoWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.MechLabHardpointElement[] ___hardpoints)
* static void MechEngineer.Features.OmniSlots.Patches.MechBayMechInfoWidget_GetTotalHardpoints_Patch::Postfix(BattleTech.UI.MechLabMechInfoWidget __instance, BattleTech.UI.MechLabPanel& ___mechLab, BattleTech.UI.MechLabHardpointElement[]& ___hardpoints)

20:51:27.858 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints()
20:51:27.858 [Info] Writing postfixes
20:51:27.862 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.862 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OmniSlots.Patches.MechBayMechInfoWidget_SetHardpoints_Patch::Postfix(BattleTech.MechDef ___selectedMech, TMPro.TextMeshProUGUI ___ballisticHardpointText, TMPro.TextMeshProUGUI ___energyHardpointText, TMPro.TextMeshProUGUI ___missileHardpointText, TMPro.TextMeshProUGUI ___smallHardpointText)

20:51:27.863 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints()
20:51:27.863 [Info] Writing postfixes
20:51:27.867 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.867 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_RefreshHardpointData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationDef& ___chassisLocationDef, Int32& ___currentBallisticCount, Int32& ___currentEnergyCount, Int32& ___currentMissileCount, Int32& ___currentSmallCount, Int32& ___totalBallisticHardpoints, Int32& ___totalEnergyHardpoints, Int32& ___totalMissileHardpoints, Int32& ___totalSmallHardpoints, BattleTech.UI.MechLabHardpointElement[]& ___hardpoints, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)

20:51:27.868 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData()
20:51:27.868 [Info] Writing postfixes
20:51:27.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
20:51:27.874 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_ShowHighlightFrame_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef& cRef)
1 postfixes:
* static void MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_ShowHighlightFrame_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded, BattleTech.LocationDef& ___chassisLocationDef)

20:51:27.874 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
20:51:27.875 [Info] Writing prefixes
20:51:27.875 [Info] Writing postfixes
20:51:27.880 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 104 ms
20:51:27.881 [Info] Patching bool BattleTech.UI.MechLabLocationWidget::ValidateAddSimple(BattleTech.MechComponentDef newComponentDef) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_ValidateAddSimple_Patch::Postfix(BattleTech.LocationLoadoutDef& ___loadout, BattleTech.UI.MechLabPanel& ___mechLab, BattleTech.MechComponentDef newComponentDef, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_ValidateAddSimple_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.881 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabLocationWidget::ValidateAddSimple(BattleTech.MechComponentDef newComponentDef)
20:51:27.881 [Info] Transpiling bool BattleTech.UI.MechLabLocationWidget::ValidateAddSimple(BattleTech.MechComponentDef newComponentDef)
20:51:27.882 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_ValidateAddSimple_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.885 [Info] Writing postfixes
20:51:27.889 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 106 ms
20:51:27.890 [Info] Patching bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentDef newComponentDef) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_ValidateAdd_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.891 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentDef newComponentDef)
20:51:27.891 [Info] Transpiling bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentDef newComponentDef)
20:51:27.892 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OmniSlots.Patches.MechLabLocationWidget_ValidateAdd_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.908 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.910 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OmniSlots.Patches.MechValidationRules_ValidateMechInventorySlots_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:27.911 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
20:51:27.911 [Info] Transpiling static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
20:51:27.914 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.OmniSlots.Patches.MechValidationRules_ValidateMechInventorySlots_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:27.944 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.945 [Info] Patching void BattleTech.UI.SG_Shop_ItemSelectedPanel::FillInHardPoints(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OmniSlots.Patches.SG_Shop_ItemSelectedPanel_FillInHardPoints_Patch::Postfix(BattleTech.MechDef mechDef, BattleTech.UI.MechLabHardpointElement ___BallisticHardPointElement, BattleTech.UI.MechLabHardpointElement ___EnergyHardPointElement, BattleTech.UI.MechLabHardpointElement ___MissileHardPointElement, BattleTech.UI.MechLabHardpointElement ___SmallHardPointElement)

20:51:27.945 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_ItemSelectedPanel::FillInHardPoints(BattleTech.MechDef mechDef)
20:51:27.945 [Info] Writing postfixes
20:51:27.952 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.953 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechBayMechInfoWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

20:51:27.954 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::Awake()
20:51:27.954 [Info] Writing postfixes
20:51:27.957 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.958 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)

20:51:27.958 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
20:51:27.959 [Info] Writing postfixes
20:51:27.962 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.962 [Info] Patching void BattleTech.UI.MechLabStatBlockWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechLabStatBlockWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

20:51:27.963 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStatBlockWidget::Awake()
20:51:27.963 [Info] Writing postfixes
20:51:27.965 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.965 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMeleeStat_Patch::Prefix(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)

20:51:27.965 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
20:51:27.966 [Info] Writing prefixes
20:51:27.968 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 107 ms
20:51:27.968 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMovementStat_Patch::Prefix(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)

20:51:27.969 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
20:51:27.969 [Info] Writing prefixes
20:51:27.970 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.972 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateDurabilityStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:27.972 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:27.972 [Info] Writing prefixes
20:51:27.977 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.978 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:27.978 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:27.978 [Info] Writing prefixes
20:51:27.981 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.982 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:27.982 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:27.982 [Info] Writing prefixes
20:51:27.987 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.988 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:27.988 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:27.988 [Info] Writing prefixes
20:51:27.990 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.992 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMovementStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:27.992 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:27.992 [Info] Writing prefixes
20:51:27.995 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.995 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:27.995 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:27.996 [Info] Writing prefixes
20:51:27.998 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:27.999 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)

20:51:27.999 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
20:51:27.999 [Info] Writing postfixes
20:51:28.002 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.003 [Info] Patching void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetDurabilityData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:28.003 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def)
20:51:28.004 [Info] Writing postfixes
20:51:28.007 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.008 [Info] Patching void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetFirepowerData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:28.008 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def)
20:51:28.008 [Info] Writing postfixes
20:51:28.012 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.013 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:28.013 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
20:51:28.013 [Info] Writing postfixes
20:51:28.017 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.018 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:28.018 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
20:51:28.019 [Info] Writing postfixes
20:51:28.022 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.023 [Info] Patching void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMovementData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:28.024 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def)
20:51:28.024 [Info] Writing postfixes
20:51:28.028 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.029 [Info] Patching void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetRangeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:28.030 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def)
20:51:28.030 [Info] Writing postfixes
20:51:28.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.034 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)

20:51:28.034 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
20:51:28.034 [Info] Writing postfixes
20:51:28.038 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.039 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Stats_SetData_Patch::Postfix(object data, BattleTech.UI.TMProWrapper.LocalizableText ___Title)

20:51:28.039 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data)
20:51:28.040 [Info] Writing postfixes
20:51:28.406 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.407 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

20:51:28.407 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
20:51:28.407 [Info] Writing prefixes
20:51:28.409 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.409 [Info] Patching void BehaviorTree::InitRootNode() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.BehaviourTreeInitRootNodePatch::Postfix(BehaviorTree __instance, BattleTech.AbstractActor ___unit, BehaviorTreeIDEnum ___behaviorTreeIDEnum)

20:51:28.409 [Info] Running ILHook manipulator on void BehaviorTree::InitRootNode()
20:51:28.410 [Info] Writing postfixes
20:51:28.413 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.416 [Info] Patching void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateCompleteLanceConfigurationPrepPatch::Prefix(BattleTech.SimGameState __instance)

20:51:28.416 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request)
20:51:28.416 [Info] Writing prefixes
20:51:28.438 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.439 [Info] Patching static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideSelectLanceDefFromListPatch::Prefix(Int32& ___MAX_DIFF_DIVERGENCE)

20:51:28.439 [Info] Running ILHook manipulator on static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence)
20:51:28.439 [Info] Writing prefixes
20:51:28.443 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.443 [Info] Patching virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.DialogResultPatch::Prefix(BattleTech.Designed.DialogResult __instance, BattleTech.Framework.DialogueRef ___dialogueRef)

20:51:28.444 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName)
20:51:28.444 [Info] Writing prefixes
20:51:28.447 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.448 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)

20:51:28.448 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
20:51:28.449 [Info] Writing prefixes
20:51:28.456 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.457 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

20:51:28.457 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
20:51:28.457 [Info] Writing prefixes
20:51:28.458 [Info] Writing postfixes
20:51:28.462 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.462 [Info] Patching void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractOverrideGenerateUnitsPatch::Prefix(BattleTech.Framework.ContractOverride __instance)

20:51:28.462 [Info] Running ILHook manipulator on void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags)
20:51:28.463 [Info] Writing prefixes
20:51:28.466 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.467 [Info] Patching virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ChunkOverrideCopyPatch::Prefix(BattleTech.Framework.ChunkOverride __instance, BattleTech.Framework.ChunkOverride& __result)

20:51:28.467 [Info] Running ILHook manipulator on virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy()
20:51:28.468 [Info] Writing prefixes
20:51:28.470 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.472 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)

20:51:28.473 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
20:51:28.473 [Info] Writing prefixes
20:51:28.481 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.482 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)

20:51:28.482 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
20:51:28.482 [Info] Writing prefixes
20:51:28.483 [Info] Writing postfixes
20:51:28.486 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.487 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)

20:51:28.488 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
20:51:28.488 [Info] Writing prefixes
20:51:28.492 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.492 [Info] Patching void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterChunkGameLogicApplyContractOverridePatch::Prefix(BattleTech.EncounterChunkGameLogic __instance, BattleTech.Framework.ChunkOverride chunkOverride)

20:51:28.493 [Info] Running ILHook manipulator on void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary)
20:51:28.493 [Info] Writing prefixes
20:51:28.495 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.496 [Info] Patching void BattleTech.EncounterLayerData::OverridePlots() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.EncounterLayerDataOverridePlotsPatch::Postfix(BattleTech.EncounterLayerData __instance)

20:51:28.496 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::OverridePlots()
20:51:28.496 [Info] Writing postfixes
20:51:28.498 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.498 [Info] Patching void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Prefix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)
1 postfixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Postfix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)

20:51:28.499 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status)
20:51:28.499 [Info] Writing prefixes
20:51:28.499 [Info] Writing postfixes
20:51:28.501 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.502 [Info] Patching void ItemRegistry::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ItemRegistryPatch::Postfix(ItemRegistry __instance, System.Collections.Generic.Dictionary<TaggedObjectType, System.Collections.Generic.List<ITaggedItem>> ___itemsByType)

20:51:28.502 [Info] Running ILHook manipulator on void ItemRegistry::.ctor()
20:51:28.502 [Info] Writing postfixes
20:51:28.506 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.507 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)

20:51:28.507 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
20:51:28.507 [Info] Writing prefixes
20:51:28.513 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.513 [Info] Patching BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataExporterPatch::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, MissionControl.DataManager dataManager)

20:51:28.513 [Info] Running ILHook manipulator on BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager)
20:51:28.514 [Info] Writing prefixes
20:51:28.519 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.519 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

20:51:28.520 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
20:51:28.520 [Info] Writing postfixes
20:51:28.527 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.530 [Info] Patching void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateFilterActiveMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.WeightedList`1[[BattleTech.Data.MapAndEncounters, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)

20:51:28.530 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)
20:51:28.532 [Info] Writing postfixes
20:51:28.546 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.547 [Info] Patching bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidContractsPatch::Postfix(BattleTech.SimGameState __instance, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)

20:51:28.547 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)
20:51:28.549 [Info] Writing postfixes
20:51:28.555 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.555 [Info] Patching bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system)

20:51:28.556 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps)
20:51:28.556 [Info] Writing postfixes
20:51:28.561 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.562 [Info] Patching System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.TeamDelayEnemySpottedVOPatch::Prefix(BattleTech.Team __instance, BattleTech.AbstractActor actor, System.Collections.IEnumerator& __result)

20:51:28.562 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor)
20:51:28.562 [Info] Writing prefixes
20:51:28.565 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.566 [Info] Patching static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.BehaviourNodeLogAIPatch::Prefix(BehaviorNode __instance, string info)

20:51:28.566 [Info] Running ILHook manipulator on static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName)
20:51:28.566 [Info] Writing prefixes
20:51:28.569 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.569 [Info] Patching BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataGetCellAtPatch::Prefix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell& __result, BattleTech.Point index, BattleTech.MapTerrainDataCell[,] ___mapTerrainDataCells)

20:51:28.570 [Info] Running ILHook manipulator on BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index)
20:51:28.570 [Info] Writing prefixes
20:51:28.572 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.573 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.UnitSpawnPointGameLogicLoadDropPodPrefabsPatch::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)

20:51:28.573 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)
20:51:28.573 [Info] Writing prefixes
20:51:28.576 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.577 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LanceConfiguratorPanelContinueConfirmClickedPatch::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance)

20:51:28.577 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked()
20:51:28.577 [Info] Writing postfixes
20:51:28.586 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.586 [Info] Patching void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDRetreatEscMenuOnRetreatConfirmedPatch::Prefix(BattleTech.UI.CombatHUDRetreatEscMenu __instance)

20:51:28.587 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed()
20:51:28.587 [Info] Writing prefixes
20:51:28.590 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.591 [Info] Patching UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.EmotePortraitLoadPortraitPatch::Postfix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)

20:51:28.591 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits)
20:51:28.591 [Info] Writing postfixes
20:51:28.594 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.595 [Info] Patching void BattleTech.EncounterLayerParent::FirstTimeInitialization() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentFirstTimeInitializationPatch::Prefix(BattleTech.EncounterLayerParent __instance)

20:51:28.595 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::FirstTimeInitialization()
20:51:28.595 [Info] Writing prefixes
20:51:28.597 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.597 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)

20:51:28.598 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
20:51:28.598 [Info] Writing prefixes
20:51:28.603 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.604 [Info] Patching void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.CombatHUDMissionEndShowFailurePatch::Prefix(BattleTech.UI.CombatHUDMissionEnd __instance, Boolean& storyMission)

20:51:28.605 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission)
20:51:28.605 [Info] Writing prefixes
20:51:28.610 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.613 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)

20:51:28.614 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
20:51:28.614 [Info] Writing prefixes
20:51:28.615 [Info] Writing postfixes
20:51:28.628 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.629 [Info] Patching virtual BattleTech.LanceDef BattleTech.LanceDef::Copy() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Prefix(BattleTech.LanceDef __instance)
1 postfixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Postfix(BattleTech.LanceDef __instance, BattleTech.LanceDef __result)

20:51:28.629 [Info] Running ILHook manipulator on virtual BattleTech.LanceDef BattleTech.LanceDef::Copy()
20:51:28.629 [Info] Writing prefixes
20:51:28.630 [Info] Writing postfixes
20:51:28.633 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.633 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)

20:51:28.634 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
20:51:28.634 [Info] Writing prefixes
20:51:28.638 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.638 [Info] Patching void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.TurnDirectorOnFirstContactPatch::Postfix(BattleTech.TurnDirector __instance)

20:51:28.639 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message)
20:51:28.639 [Info] Writing postfixes
20:51:28.641 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.641 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
2 postfixes:
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)

20:51:28.641 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
20:51:28.642 [Info] Writing prefixes
20:51:28.642 [Info] Writing postfixes
20:51:28.643 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.644 [Info] Patching void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorCheckEnteredCellsForRegionsPatch::Prefix(BattleTech.AbstractActor __instance)

20:51:28.644 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList)
20:51:28.645 [Info] Writing prefixes
20:51:28.648 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.650 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)

20:51:28.650 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
20:51:28.650 [Info] Writing prefixes
20:51:28.656 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.656 [Info] Patching virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SmartTriggerResponseEvalutePatch::Prefix(BattleTech.Framework.SmartTriggerResponse __instance)

20:51:28.657 [Info] Running ILHook manipulator on virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message)
20:51:28.657 [Info] Writing prefixes
20:51:28.660 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.661 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)

20:51:28.662 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
20:51:28.662 [Info] Writing prefixes
20:51:28.713 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.713 [Info] Patching static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LevelLoaderLoadScenePatch::Prefix(BattleTech.LevelLoader __instance, string scene)

20:51:28.714 [Info] Running ILHook manipulator on static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene)
20:51:28.714 [Info] Writing prefixes
20:51:28.716 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.717 [Info] Patching static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LoadingCurtainHidePatch::Prefix(BattleTech.UI.LoadingCurtain __instance)

20:51:28.717 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader)
20:51:28.717 [Info] Writing prefixes
20:51:28.719 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.719 [Info] Patching BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMapPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Data.MapAndEncounters& __result)

20:51:28.720 [Info] Running ILHook manipulator on BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap()
20:51:28.720 [Info] Writing prefixes
20:51:28.722 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.722 [Info] Patching BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMoodPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Rendering.Mood.BattleMood& __result)

20:51:28.722 [Info] Running ILHook manipulator on BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood()
20:51:28.722 [Info] Writing prefixes
20:51:28.724 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 108 ms
20:51:28.725 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)

20:51:28.725 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
20:51:28.725 [Info] Writing prefixes
20:51:28.729 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.730 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LaunchMap() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SkirmishSettingsBetaLaunchMapPatch::Postfix()

20:51:28.730 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LaunchMap()
20:51:28.730 [Info] Writing postfixes
20:51:28.738 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.739 [Info] Patching UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.AssetBundleManagerGetAssetFromBundlePatch::Postfix(BattleTech.Assetbundles.AssetBundleManager __instance, string assetName, string bundleName, UnityEngine.GameObject& __result)

20:51:28.739 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName)
20:51:28.739 [Info] Writing postfixes
20:51:28.743 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.743 [Info] Patching void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.GameInstanceLaunchContractFromSavePatch::Postfix(BattleTech.GameInstance __instance, BattleTech.CombatGameState combat)

20:51:28.743 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat)
20:51:28.744 [Info] Writing postfixes
20:51:28.746 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.747 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)

20:51:28.747 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
20:51:28.747 [Info] Writing prefixes
20:51:28.797 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.798 [Info] Patching int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SGContractsWidget_GetContractComparePriority_Patch::Prefix(BattleTech.UI.SGContractsWidget __instance, Int32& __result, BattleTech.Contract contract)

20:51:28.798 [Info] Running ILHook manipulator on int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract)
20:51:28.798 [Info] Writing prefixes
20:51:28.800 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.802 [Info] Patching void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_OnTargetSystemFound::Prefix(BattleTech.SimGameState __instance)

20:51:28.802 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result)
20:51:28.802 [Info] Writing prefixes
20:51:28.806 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.810 [Info] Patching BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Prefix(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
1 postfixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Postfix(BattleTech.FactionDef employer)

20:51:28.810 [Info] Running ILHook manipulator on BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
20:51:28.811 [Info] Writing prefixes
20:51:28.811 [Info] Writing postfixes
20:51:28.825 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.826 [Info] Patching void BattleTech.StarSystem::RefreshBreadcrumbs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_RefreshBreadcrumbs::Prefix(BattleTech.StarSystem __instance)

20:51:28.826 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshBreadcrumbs()
20:51:28.826 [Info] Writing prefixes
20:51:28.829 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.830 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)

20:51:28.830 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
20:51:28.831 [Info] Writing prefixes
20:51:28.833 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.834 [Info] Patching void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Contract_FinalizeSalvage_Patch::Postfix(BattleTech.Contract __instance, System.Collections.Generic.List<BattleTech.SalvageDef> ___finalPotentialSalvage)

20:51:28.835 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems)
20:51:28.835 [Info] Writing postfixes
20:51:28.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.842 [Info] Patching void BattleTech.UI.SG_Shop_Screen::OnCompleted() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SG_Shop_Screen_OnCompleted_Patch::Postfix()

20:51:28.843 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::OnCompleted()
20:51:28.843 [Info] Writing postfixes
20:51:28.846 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.847 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.SimGameState_InitCompanyStats_Patch::Postfix(BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

20:51:28.847 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
20:51:28.847 [Info] Writing postfixes
20:51:28.851 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.857 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
4 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:28.858 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:28.858 [Info] Writing prefixes
20:51:28.858 [Info] Writing postfixes
20:51:28.877 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.877 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_DeductQuarterlyFunds_Patch::Prefix(BattleTech.SimGameState __instance, int quarterPassed)
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

20:51:28.878 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
20:51:28.878 [Info] Writing prefixes
20:51:28.878 [Info] Writing postfixes
20:51:28.880 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.880 [Info] Patching void BattleTech.UI.SGDebugEventWidget::Submit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGDebugEventWidget_Submit_Patch::Postfix(BattleTech.UI.SGDebugEventWidget __instance, BattleTech.UI.SGDebugEventWidget+DebugType ___curType, BattleTech.SimGameState ___Sim)

20:51:28.880 [Info] Running ILHook manipulator on void BattleTech.UI.SGDebugEventWidget::Submit()
20:51:28.880 [Info] Writing postfixes
20:51:28.889 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.890 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CompleteAllContractObjectives_Patch::Postfix()

20:51:28.890 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives()
20:51:28.890 [Info] Writing postfixes
20:51:28.892 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.893 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillTarget_Patch::Postfix()

20:51:28.893 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget()
20:51:28.893 [Info] Writing postfixes
20:51:28.896 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.897 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillAllEnemies_Patch::Postfix()

20:51:28.897 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies()
20:51:28.897 [Info] Writing postfixes
20:51:28.902 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.903 [Info] Patching void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_SetGodMode_Patch::Postfix()

20:51:28.903 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team)
20:51:28.904 [Info] Writing postfixes
20:51:28.907 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.908 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_DamageTarget_Patch::Postfix()

20:51:28.908 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget()
20:51:28.908 [Info] Writing postfixes
20:51:28.914 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.915 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CritTarget_Patch::Postfix()

20:51:28.915 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget()
20:51:28.915 [Info] Writing postfixes
20:51:28.918 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.919 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_ApplyInstability_Patch::Postfix()

20:51:28.919 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability()
20:51:28.919 [Info] Writing postfixes
20:51:28.922 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.923 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUDDEBUG_KnockdownTarget_Patch::Postfix()

20:51:28.923 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget()
20:51:28.923 [Info] Writing postfixes
20:51:28.926 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.926 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_OverheatTarget_Patch::Postfix()

20:51:28.927 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
20:51:28.927 [Info] Writing postfixes
20:51:28.929 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.929 [Info] Patching void BattleTech.StarSystem::ResetContracts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.StarSystem_ResetContracts_Patch::Postfix(BattleTech.StarSystem __instance)

20:51:28.930 [Info] Running ILHook manipulator on void BattleTech.StarSystem::ResetContracts()
20:51:28.930 [Info] Writing postfixes
20:51:28.931 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.932 [Info] Patching void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_PrepareBreadcrumb_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract& contract)

20:51:28.932 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract)
20:51:28.933 [Info] Writing postfixes
20:51:28.938 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.939 [Info] Patching BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_AddPredefinedContract_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract __result)

20:51:28.940 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData)
20:51:28.940 [Info] Writing postfixes
20:51:28.947 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.948 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGSystemViewPopulator_UpdateRoutedSystem_Patch::Postfix(BattleTech.UI.SGSystemViewPopulator __instance, BattleTech.StarSystem ___starSystem, BattleTech.SimGameState ___simState)

20:51:28.949 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem()
20:51:28.949 [Info] Writing postfixes
20:51:28.960 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.960 [Info] Patching void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Starmap_PopulateMap_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.SimGameState simGame)

20:51:28.960 [Info] Running ILHook manipulator on void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame)
20:51:28.961 [Info] Writing postfixes
20:51:28.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.964 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)

20:51:28.965 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:28.965 [Info] Writing postfixes
20:51:28.972 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.973 [Info] Patching void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Prefix(BattleTech.StarSystem __instance, Action onContractsFetched)
1 postfixes:
* static void PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Postfix(BattleTech.StarSystem __instance)

20:51:28.973 [Info] Running ILHook manipulator on void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched)
20:51:28.973 [Info] Writing prefixes
20:51:28.974 [Info] Writing postfixes
20:51:28.976 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.977 [Info] Patching BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_CreateTravelContract_Patch::Prefix(BattleTech.FactionValue& employer, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& neutralToAll, BattleTech.FactionValue& hostileToAll)

20:51:28.977 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty)
20:51:28.977 [Info] Writing prefixes
20:51:28.983 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.983 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
* static void PersistentMapClient.SimGameState_PrepContract_Patch::Prefix(BattleTech.SimGameState __instance, BattleTech.FactionValue& employer, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& NeutralToAll, BattleTech.FactionValue& HostileToAll, BattleTech.StarSystem& system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

20:51:28.983 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
20:51:28.983 [Info] Writing prefixes
20:51:28.984 [Info] Writing postfixes
20:51:28.986 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.987 [Info] Patching void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_CreateBreakContractWarning_Patch::Prefix(BattleTech.SimGameState __instance, Action continueAction, Action cancelAction)

20:51:28.987 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction)
20:51:28.987 [Info] Writing prefixes
20:51:28.990 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:28.992 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

20:51:28.992 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
20:51:28.992 [Info] Writing postfixes
20:51:28.999 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:29.000 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

20:51:29.000 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
20:51:29.001 [Info] Writing postfixes
20:51:29.013 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:29.064 [Info] Patching virtual void BattleTech.IntroCinematicLauncher::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SkipIntro.Patches.IntroCinematicLauncher_Init_Patch::Postfix()

20:51:29.064 [Info] Running ILHook manipulator on virtual void BattleTech.IntroCinematicLauncher::Init()
20:51:29.064 [Info] Writing postfixes
20:51:29.069 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:29.070 [Info] Patching void SplashLauncher::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SkipIntro.Patches.SplashLauncher_Update_Patch::Prefix(SplashLauncher __instance)

20:51:29.070 [Info] Running ILHook manipulator on void SplashLauncher::Update()
20:51:29.070 [Info] Writing prefixes
20:51:29.082 [Info] ### Harmony id=ru.kmission.travelinfotooltips, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void TravelInfoTooltips.Core::Init(string directory, string settingsJson), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomVoices\TravelInfoTooltips.dll
### At 2023-03-12 08.51.29
20:51:29.084 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::SetupTooltips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TravelInfoTooltips.SGSystemViewPopulator_SetupTooltips::Postfix(BattleTech.UI.SGSystemViewPopulator __instance)

20:51:29.084 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::SetupTooltips()
20:51:29.084 [Info] Writing postfixes
20:51:29.108 [Info] ### Harmony id=io.mission.customammocategories.private, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomAmmoCategoriesPrivate.Core::Init(), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategoriesPrivate.dll
### At 2023-03-12 08.51.29
20:51:29.297 [Info] ### Harmony id=Sheepy.BattleTechMod.AttackImprovementMod, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Sheepy.BattleTechMod.BattleModModule::Patch(System.Reflection.MethodBase patched, HarmonyLib.HarmonyMethod prefix, HarmonyLib.HarmonyMethod postfix, HarmonyLib.HarmonyMethod transpiler), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\AttackImprovementMod.dll
### At 2023-03-12 08.51.29
20:51:29.297 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

20:51:29.298 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
20:51:29.298 [Info] Writing postfixes
20:51:29.301 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomShops.Patches.SimGameState_Init::OnInit(BattleTech.SimGameState __instance)
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()

20:51:29.301 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
20:51:29.302 [Info] Writing postfixes
20:51:29.305 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
2 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)

20:51:29.306 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:29.306 [Info] Writing prefixes
20:51:29.306 [Info] Writing postfixes
20:51:29.315 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)

20:51:29.316 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
20:51:29.316 [Info] Writing prefixes
20:51:29.316 [Info] Writing postfixes
20:51:29.318 [Info] ### Harmony id=io.mission.modrepuation, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CACMain.Core::Init(string directory, string settingsJson), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategories.dll
### At 2023-03-12 08.51.29
20:51:29.325 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

20:51:29.374 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
20:51:29.374 [Info] Writing postfixes
20:51:29.379 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)

20:51:29.379 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
20:51:29.379 [Info] Writing prefixes
20:51:29.391 [Info] Patching virtual void BallisticEffect::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.BallisticEffectOnCompleteMultifirePatch::Prefix(Int32& ___hitIndex, BallisticEffect __instance)

20:51:29.391 [Info] Running ILHook manipulator on virtual void BallisticEffect::OnComplete()
20:51:29.391 [Info] Writing prefixes
20:51:29.395 [Info] Patching virtual void LaserEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.LaserEffectOnCompleteMultifirePatch::Postfix(Int32& ___hitIndex, LaserEffect __instance)

20:51:29.395 [Info] Running ILHook manipulator on virtual void LaserEffect::OnComplete()
20:51:29.395 [Info] Writing postfixes
20:51:29.400 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CleverGirlAIDamagePrediction.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.AbstractActor __instance)

20:51:29.400 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase)
20:51:29.400 [Info] Writing postfixes
20:51:29.404 [Info] Patching static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrderForTarget::Prefix(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary)

20:51:29.405 [Info] Running ILHook manipulator on static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order)
20:51:29.405 [Info] Writing prefixes
20:51:29.426 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)

20:51:29.427 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
20:51:29.428 [Info] Writing postfixes
20:51:29.439 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerDown::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

20:51:29.440 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
20:51:29.440 [Info] Writing prefixes
20:51:29.444 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerUp::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

20:51:29.444 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
20:51:29.444 [Info] Writing prefixes
20:51:29.448 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

20:51:29.449 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted()
20:51:29.449 [Info] Writing prefixes
20:51:29.452 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshNonHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

20:51:29.452 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted()
20:51:29.452 [Info] Writing prefixes
20:51:29.463 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

20:51:29.463 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
20:51:29.463 [Info] Writing prefixes
20:51:29.464 [Info] Writing postfixes
20:51:29.468 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

20:51:29.468 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
20:51:29.469 [Info] Writing prefixes
20:51:29.486 [Info] Patching float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_GetAdjustedDamage::Postfix(BattleTech.AbstractActor __instance, float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging, Single& __result)

20:51:29.487 [Info] Running ILHook manipulator on float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging)
20:51:29.488 [Info] Writing postfixes
20:51:29.499 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

20:51:29.499 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
20:51:29.500 [Info] Writing prefixes
20:51:29.514 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

20:51:29.514 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
20:51:29.514 [Info] Writing prefixes
20:51:29.515 [Info] Writing postfixes
20:51:29.520 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

20:51:29.520 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
20:51:29.520 [Info] Writing prefixes
20:51:29.526 [Info] Patching BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_GetPriorityDesignMask::Postfix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell cell, BattleTech.DesignMaskDef& __result)

20:51:29.526 [Info] Running ILHook manipulator on BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell)
20:51:29.527 [Info] Writing postfixes
20:51:29.529 [Info] Patching AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetAudioSurfaceType::Postfix(BattleTech.MapTerrainDataCell __instance, AudioSwitch_surface_type& __result)

20:51:29.530 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType()
20:51:29.530 [Info] Writing postfixes
20:51:29.532 [Info] Patching string BattleTech.MapTerrainDataCell::GetVFXNameModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetVFXNameModifier::Postfix(BattleTech.MapTerrainDataCell __instance, String& __result)

20:51:29.532 [Info] Running ILHook manipulator on string BattleTech.MapTerrainDataCell::GetVFXNameModifier()
20:51:29.532 [Info] Writing postfixes
20:51:29.534 [Info] Patching void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_LoadData::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)

20:51:29.535 [Info] Running ILHook manipulator on void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)
20:51:29.535 [Info] Writing postfixes
20:51:29.541 [Info] Patching virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_Load::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.541 [Info] Running ILHook manipulator on virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
20:51:29.541 [Info] Transpiling virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
20:51:29.543 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.545 [Info] Writing postfixes
20:51:29.549 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

20:51:29.549 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
20:51:29.550 [Info] Writing postfixes
20:51:29.556 [Info] Patching void BattleTech.Rendering.Trees.TreeContainer::GatherTrees() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TreeContainer_GatherTrees::Postfix(BattleTech.Rendering.Trees.TreeContainer __instance)

20:51:29.556 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.TreeContainer::GatherTrees()
20:51:29.556 [Info] Writing postfixes
20:51:29.566 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionVFX::Postfix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

20:51:29.566 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX()
20:51:29.566 [Info] Writing postfixes
20:51:29.570 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionAudio::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

20:51:29.570 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio()
20:51:29.570 [Info] Writing prefixes
20:51:29.575 [Info] Patching static BattleTech.Rendering.FootstepManager BattleTech.Rendering.FootstepManager::get_Instance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.FootstepManager_Instance::Prefix(BattleTech.Rendering.FootstepManager& __result)

20:51:29.576 [Info] Running ILHook manipulator on static BattleTech.Rendering.FootstepManager BattleTech.Rendering.FootstepManager::get_Instance()
20:51:29.576 [Info] Writing prefixes
20:51:29.578 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

20:51:29.579 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
20:51:29.579 [Info] Writing postfixes
20:51:29.584 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
2 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

20:51:29.585 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
20:51:29.585 [Info] Writing prefixes
20:51:29.585 [Info] Writing postfixes
20:51:29.588 [Info] Patching void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Postfix(BattleTech.MapMetaDataExporter __instance, UnityEngine.Terrain terrain, bool force)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.589 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
20:51:29.590 [Info] Transpiling void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
20:51:29.590 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.591 [Info] Writing postfixes
20:51:29.596 [Info] Patching BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfo::Prefix(BattleTech.AttackDirector+AttackSequence __instance, BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, Boolean& indirectFire, float dodgedDamage, BattleTech.WeaponHitInfo& __result)

20:51:29.596 [Info] Running ILHook manipulator on BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage)
20:51:29.596 [Info] Writing prefixes
20:51:29.603 [Info] Patching float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.ToHit_GetEvasivePipsModifier::Prefix(BattleTech.ToHit __instance, int evasivePips, BattleTech.Weapon weapon, Single& __result)

20:51:29.603 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon)
20:51:29.603 [Info] Writing prefixes
20:51:29.607 [Info] Patching static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.607 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
20:51:29.607 [Info] Transpiling static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
20:51:29.608 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.610 [Info] Patching static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.610 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
20:51:29.610 [Info] Transpiling static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
20:51:29.611 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.616 [Info] Patching static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.616 [Info] Running ILHook manipulator on static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
20:51:29.617 [Info] Transpiling static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
20:51:29.617 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.619 [Info] Patching BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.619 [Info] Running ILHook manipulator on BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
20:51:29.620 [Info] Transpiling BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
20:51:29.620 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.622 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.623 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
20:51:29.623 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
20:51:29.624 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.628 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.628 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
20:51:29.628 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
20:51:29.629 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.630 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.630 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
20:51:29.632 [Info] Transpiling float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
20:51:29.633 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.638 [Info] Patching static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.638 [Info] Running ILHook manipulator on static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
20:51:29.638 [Info] Transpiling static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
20:51:29.639 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.643 [Info] Patching static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Postfix(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.644 [Info] Running ILHook manipulator on static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
20:51:29.644 [Info] Transpiling static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
20:51:29.644 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.645 [Info] Writing postfixes
20:51:29.648 [Info] Patching static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.649 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
20:51:29.649 [Info] Transpiling static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
20:51:29.652 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.658 [Info] Patching static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.658 [Info] Running ILHook manipulator on static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
20:51:29.658 [Info] Transpiling static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
20:51:29.660 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.666 [Info] Patching virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.666 [Info] Running ILHook manipulator on virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
20:51:29.667 [Info] Transpiling virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
20:51:29.670 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.677 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.677 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:29.677 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:29.678 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.683 [Info] Patching float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.683 [Info] Running ILHook manipulator on float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
20:51:29.683 [Info] Transpiling float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
20:51:29.684 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.744 [Info] Patching float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.744 [Info] Running ILHook manipulator on float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
20:51:29.745 [Info] Transpiling float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
20:51:29.745 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.752 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.752 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:29.752 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:29.754 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.755 [Info] Writing postfixes
20:51:29.761 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.761 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
20:51:29.762 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
20:51:29.763 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.772 [Info] Patching void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.773 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
20:51:29.773 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
20:51:29.775 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.779 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.780 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
20:51:29.780 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
20:51:29.780 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.781 [Info] Writing postfixes
20:51:29.784 [Info] Patching bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Postfix(LOFCache __instance, BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.785 [Info] Running ILHook manipulator on bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
20:51:29.785 [Info] Transpiling bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
20:51:29.786 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.787 [Info] Writing postfixes
20:51:29.789 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Prefix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Postfix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)

20:51:29.790 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
20:51:29.790 [Info] Writing prefixes
20:51:29.790 [Info] Writing postfixes
20:51:29.796 [Info] Patching static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Prefix(BattleTech.Weapon w)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Postfix()

20:51:29.797 [Info] Running ILHook manipulator on static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
20:51:29.797 [Info] Writing prefixes
20:51:29.797 [Info] Writing postfixes
20:51:29.807 [Info] Patching static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DamageOrderUtility_ApplyDamageToAllLocations::Prefix(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)

20:51:29.807 [Info] Running ILHook manipulator on static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)
20:51:29.808 [Info] Writing prefixes
20:51:29.814 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:29.815 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
20:51:29.815 [Info] Writing postfixes
20:51:29.820 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackSequenceFire::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message, System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> ___sortedWeapons, int[][] ___numberOfShots, BattleTech.WeaponHitInfo?[][] ___weaponHitInfo)

20:51:29.822 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message)
20:51:29.822 [Info] Writing prefixes
20:51:29.832 [Info] Patching float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponHitInfo_ConsolidateInstability::Postfix(BattleTech.WeaponHitInfo& __instance, string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier, Single& __result)

20:51:29.832 [Info] Running ILHook manipulator on float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier)
20:51:29.832 [Info] Writing postfixes
20:51:29.836 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

20:51:29.837 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
20:51:29.837 [Info] Writing prefixes
20:51:29.849 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechLabPanel_MechCanUseAmmo::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.AmmunitionBoxDef ammoBoxDef, Boolean& __result)

20:51:29.849 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
20:51:29.850 [Info] Writing postfixes
20:51:29.853 [Info] Patching void BattleTech.AttackDirector+AttackSequence::Cleanup() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_Cleanup::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

20:51:29.853 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::Cleanup()
20:51:29.853 [Info] Writing postfixes
20:51:29.857 [Info] Patching void BattleTech.CombatGameState::RebuildAllLists() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_RebuildAllLists::Postfix(BattleTech.CombatGameState __instance)

20:51:29.858 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::RebuildAllLists()
20:51:29.858 [Info] Writing postfixes
20:51:29.861 [Info] Patching void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Weapon_SetAmmoBoxes::Prefix(BattleTech.Weapon __instance, System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)

20:51:29.861 [Info] Running ILHook manipulator on void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)
20:51:29.861 [Info] Writing prefixes
20:51:29.865 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MechValidationRules_ValidateMechHasAppropriateAmmo::Prefix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)

20:51:29.865 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
20:51:29.866 [Info] Writing prefixes
20:51:29.872 [Info] Patching void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRepresentation_PlayWeaponEffect::Prefix(BattleTech.WeaponRepresentation __instance, BattleTech.WeaponHitInfo hitInfo)

20:51:29.872 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo)
20:51:29.872 [Info] Writing prefixes
20:51:29.875 [Info] Patching void BattleTech.WeaponRepresentation::ResetWeaponEffect() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponRepresentation_ResetWeaponEffect::Postfix(BattleTech.WeaponRepresentation __instance)

20:51:29.875 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::ResetWeaponEffect()
20:51:29.875 [Info] Writing postfixes
20:51:29.877 [Info] Patching static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_ShutdownCombatState::Postfix(BattleTech.CombatGameState __instance)

20:51:29.878 [Info] Running ILHook manipulator on static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI)
20:51:29.878 [Info] Writing postfixes
20:51:29.881 [Info] Patching virtual void MissileEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)

20:51:29.881 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
20:51:29.881 [Info] Writing prefixes
20:51:29.885 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Prefix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo weaponHitInfo)

20:51:29.885 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo)
20:51:29.886 [Info] Writing prefixes
20:51:29.889 [Info] Patching BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_CreateAttackSequence::Postfix(BattleTech.AttackDirector __instance, int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack, BattleTech.AttackDirector+AttackSequence& __result)

20:51:29.889 [Info] Running ILHook manipulator on BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack)
20:51:29.890 [Info] Writing postfixes
20:51:29.894 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

20:51:29.894 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
20:51:29.894 [Info] Writing postfixes
20:51:29.899 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

20:51:29.899 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
20:51:29.899 [Info] Writing postfixes
20:51:29.907 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:29.907 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:29.907 [Info] Writing postfixes
20:51:29.911 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

20:51:29.912 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
20:51:29.912 [Info] Writing postfixes
20:51:29.917 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.PilotableActorRepresentation_ReturnToNeutralFacing::Prefix(BattleTech.PilotableActorRepresentation __instance, bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

20:51:29.918 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
20:51:29.918 [Info] Writing prefixes
20:51:29.920 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)

20:51:29.920 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
20:51:29.921 [Info] Writing prefixes
20:51:29.924 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.924 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
20:51:29.924 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
20:51:29.926 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.929 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.930 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
20:51:29.930 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
20:51:29.931 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.934 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

20:51:29.935 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
20:51:29.935 [Info] Writing prefixes
20:51:29.941 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

20:51:29.941 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
20:51:29.942 [Info] Writing prefixes
20:51:29.948 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)

20:51:29.948 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable)
20:51:29.948 [Info] Writing prefixes
20:51:29.949 [Info] Writing postfixes
20:51:29.952 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatSelectionHandler_TrySelectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, bool manualSelection)

20:51:29.953 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection)
20:51:29.953 [Info] Writing prefixes
20:51:29.965 [Info] Patching void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUD_OnAttackEnd::Postfix(BattleTech.UI.CombatHUD __instance, MessageCenterMessage message)

20:51:29.965 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message)
20:51:29.965 [Info] Writing postfixes
20:51:29.969 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnitTerrainAttack::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly, bool __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:29.969 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
20:51:29.969 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
20:51:29.970 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:29.970 [Info] Writing prefixes
20:51:29.973 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_ShowLineToTarget::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)

20:51:29.974 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)
20:51:29.974 [Info] Writing prefixes
20:51:29.978 [Info] Patching bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.FiringPreviewManager_HasLOS::Postfix(BattleTech.FiringPreviewManager __instance, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies, Boolean& __result)

20:51:29.979 [Info] Running ILHook manipulator on bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies)
20:51:29.979 [Info] Writing postfixes
20:51:29.984 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

20:51:29.984 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
20:51:29.985 [Info] Writing postfixes
20:51:29.987 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)

20:51:29.987 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:29.987 [Info] Writing prefixes
20:51:29.988 [Info] Writing postfixes
20:51:29.995 [Info] Patching virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.SelectionStateCommandTargetSinglePoint_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateCommandTargetSinglePoint __instance, UnityEngine.Vector3 worldPos)

20:51:29.995 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos)
20:51:29.996 [Info] Writing postfixes
20:51:29.999 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDActionButton_ActivateCommandAbility::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string teamGUID, UnityEngine.Vector3 targetPosition)

20:51:30.000 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition)
20:51:30.001 [Info] Writing postfixes
20:51:30.005 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:30.005 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
20:51:30.005 [Info] Writing postfixes
20:51:30.012 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:30.012 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
20:51:30.012 [Info] Writing postfixes
20:51:30.016 [Info] Patching static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.016 [Info] Running ILHook manipulator on static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
20:51:30.016 [Info] Transpiling static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
20:51:30.016 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.021 [Info] Patching void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_CalcAlphaStrikesRem_Patch::Prefix(BattleTech.AbstractActor __instance)

20:51:30.022 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining()
20:51:30.022 [Info] Writing prefixes
20:51:30.029 [Info] Patching void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.030 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
20:51:30.030 [Info] Transpiling void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
20:51:30.032 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.035 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.035 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
20:51:30.035 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
20:51:30.036 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.039 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.040 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
20:51:30.040 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
20:51:30.040 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.044 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.044 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
20:51:30.044 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
20:51:30.045 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.048 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.048 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:30.049 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:30.050 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.054 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.054 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:30.055 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:30.055 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.056 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.059 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.060 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
20:51:30.060 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
20:51:30.060 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.062 [Info] Patching void BattleTech.Weapon::EnableWeapon() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.063 [Info] Running ILHook manipulator on void BattleTech.Weapon::EnableWeapon()
20:51:30.063 [Info] Transpiling void BattleTech.Weapon::EnableWeapon()
20:51:30.063 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.064 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.065 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
20:51:30.065 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
20:51:30.065 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.067 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

20:51:30.067 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
20:51:30.068 [Info] Writing prefixes
20:51:30.068 [Info] Writing postfixes
20:51:30.070 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init0::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, Localize.Text title, bool isPrimary, bool useOnPointer)

20:51:30.070 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer)
20:51:30.070 [Info] Writing postfixes
20:51:30.073 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init1::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)

20:51:30.073 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)
20:51:30.073 [Info] Writing postfixes
20:51:30.128 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

20:51:30.128 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
20:51:30.128 [Info] Writing postfixes
20:51:30.130 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerExit::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

20:51:30.130 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
20:51:30.130 [Info] Writing postfixes
20:51:30.132 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)

20:51:30.133 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
20:51:30.133 [Info] Writing postfixes
20:51:30.134 [Info] Patching void BattleTech.VehicleDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

20:51:30.135 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
20:51:30.135 [Info] Writing postfixes
20:51:30.136 [Info] Patching void BattleTech.TurretDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurretDef_Refresh::Postfix(BattleTech.TurretDef __instance)

20:51:30.136 [Info] Running ILHook manipulator on void BattleTech.TurretDef::Refresh()
20:51:30.137 [Info] Writing postfixes
20:51:30.139 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_SetAllWeaponsArc_Debug::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& weapons, Int32[]& ___MultWeaponShaderVectorInts, Int32[]& ___MultWeaponShaderStrengthInts, Int32& ___MultiWeaponNumberInt)

20:51:30.139 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons)
20:51:30.139 [Info] Writing prefixes
20:51:30.145 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::OnAddToStack() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionStateMove_OnAddToStack_Debug::Prefix(BattleTech.UI.SelectionStateMove __instance)

20:51:30.146 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::OnAddToStack()
20:51:30.146 [Info] Writing prefixes
20:51:30.150 [Info] Patching void BattleTech.CameraControl::UpdatePlayerControl() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Prefix(Boolean& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.151 [Info] Running ILHook manipulator on void BattleTech.CameraControl::UpdatePlayerControl()
20:51:30.151 [Info] Transpiling void BattleTech.CameraControl::UpdatePlayerControl()
20:51:30.157 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.158 [Info] Writing prefixes
20:51:30.170 [Info] Patching void BattleTech.UI.CombatSelectionHandler::ProcessInput() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.170 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::ProcessInput()
20:51:30.170 [Info] Transpiling void BattleTech.UI.CombatSelectionHandler::ProcessInput()
20:51:30.176 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.182 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

20:51:30.182 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
20:51:30.182 [Info] Writing postfixes
20:51:30.187 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
3 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

20:51:30.188 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
20:51:30.188 [Info] Writing prefixes
20:51:30.188 [Info] Writing postfixes
20:51:30.192 [Info] Patching void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_SortSelectedWeapons::Postfix(BattleTech.AttackDirector+AttackSequence __instance, System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___sortedWeapons)

20:51:30.193 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons()
20:51:30.193 [Info] Writing postfixes
20:51:30.199 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)

20:51:30.199 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
20:51:30.199 [Info] Writing postfixes
20:51:30.209 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)

20:51:30.210 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList()
20:51:30.210 [Info] Writing prefixes
20:51:30.211 [Info] Writing postfixes
20:51:30.255 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.256 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:30.256 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:30.257 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.257 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.258 [Info] Writing postfixes
20:51:30.264 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

20:51:30.265 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
20:51:30.265 [Info] Writing postfixes
20:51:30.271 [Info] Patching virtual void BattleTech.UI.UIModule::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.UIModule_OnAddedToHierarchy::Postfix(BattleTech.UI.UIModule __instance)

20:51:30.271 [Info] Running ILHook manipulator on virtual void BattleTech.UI.UIModule::OnAddedToHierarchy()
20:51:30.271 [Info] Writing postfixes
20:51:30.274 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

20:51:30.274 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
20:51:30.275 [Info] Writing postfixes
20:51:30.280 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

20:51:30.280 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
20:51:30.280 [Info] Writing prefixes
20:51:30.283 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

20:51:30.284 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
20:51:30.284 [Info] Writing prefixes
20:51:30.288 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

20:51:30.288 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
20:51:30.289 [Info] Writing prefixes
20:51:30.289 [Info] Writing postfixes
20:51:30.294 [Info] Patching uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WwiseManager_PostEventByName::Prefix(WwiseManager __instance, string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)

20:51:30.294 [Info] Running ILHook manipulator on uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
20:51:30.294 [Info] Writing prefixes
20:51:30.298 [Info] Patching float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AttackSequence_GetRandomNumberCycle::Prefix(BattleTech.AttackDirector+AttackSequence __instance, int groupIndex, int weaponIndex, Int32[][]& ___randomCacheValuesUsed, Single[][][]& ___randomCache)

20:51:30.299 [Info] Running ILHook manipulator on float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex)
20:51:30.299 [Info] Writing prefixes
20:51:30.304 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)

20:51:30.304 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:30.305 [Info] Writing prefixes
20:51:30.305 [Info] Writing postfixes
20:51:30.312 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatString::Prefix(BattleTech.SimGameState __instance, string id, string type, bool damaged)

20:51:30.313 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged)
20:51:30.313 [Info] Writing prefixes
20:51:30.316 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatType::Prefix(BattleTech.SimGameState __instance, string id, Type type, bool damaged)

20:51:30.316 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged)
20:51:30.316 [Info] Writing prefixes
20:51:30.319 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Prefix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, string text, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Postfix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, String& __state)

20:51:30.319 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
20:51:30.319 [Info] Writing prefixes
20:51:30.320 [Info] Writing postfixes
20:51:30.323 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)

20:51:30.323 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
20:51:30.324 [Info] Writing prefixes
20:51:30.324 [Info] Writing postfixes
20:51:30.326 [Info] Patching System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Shop_GetAllInventoryShopItems::Postfix(BattleTech.Shop __instance, System.Collections.Generic.List`1[[BattleTech.ShopDefItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:30.326 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems()
20:51:30.326 [Info] Writing postfixes
20:51:30.332 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SG_Shop_Screen_AddShopInventory::Prefix(BattleTech.UI.SG_Shop_Screen __instance, BattleTech.Shop shop, bool ___isInBuyingState, BattleTech.Data.DataManager ___dm)
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

20:51:30.332 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
20:51:30.332 [Info] Writing prefixes
20:51:30.334 [Info] Writing postfixes
20:51:30.337 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
1 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)

20:51:30.337 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
20:51:30.341 [Info] Writing prefixes
20:51:30.341 [Info] Writing postfixes
20:51:30.346 [Info] Patching virtual void BattleTech.AmmunitionBox::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AmmunitionBox_InitStats::Postfix(BattleTech.AmmunitionBox __instance)

20:51:30.346 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::InitStats()
20:51:30.347 [Info] Writing postfixes
20:51:30.349 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)
* static void CustAmmoCategories.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance)

20:51:30.349 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
20:51:30.350 [Info] Writing prefixes
20:51:30.352 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

20:51:30.352 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
20:51:30.352 [Info] Writing prefixes
20:51:30.356 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceMechEquipmentList_SetLoadout::Prefix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.MechDef& ___activeMech, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___allComponents, BattleTech.Data.DataManager ___dataManager, BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location, BattleTech.UI.UIColor& __state)

20:51:30.357 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
20:51:30.357 [Info] Writing prefixes
20:51:30.360 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)
* static void CustAmmoCategories.SharedVisibilityCache_RebuildCache::Postfix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.TMProWrapper.LocalizableText& ___nameText)

20:51:30.360 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
20:51:30.361 [Info] Writing postfixes
20:51:30.369 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
5 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:30.369 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:30.370 [Info] Writing prefixes
20:51:30.370 [Info] Writing postfixes
20:51:30.389 [Info] Patching BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_AddHistoryEvent::Postfix(BattleTech.StatCollection __instance, string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)

20:51:30.390 [Info] Running ILHook manipulator on BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)
20:51:30.390 [Info] Writing postfixes
20:51:30.393 [Info] Patching bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_RemoveHistoryEvent::Postfix(BattleTech.StatCollection __instance, BattleTech.Statistic stat, int eventUID, bool skipLogging)

20:51:30.393 [Info] Running ILHook manipulator on bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging)
20:51:30.394 [Info] Writing postfixes
20:51:30.396 [Info] Patching void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
1 postfixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)

20:51:30.396 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
20:51:30.397 [Info] Writing prefixes
20:51:30.397 [Info] Writing postfixes
20:51:30.399 [Info] Patching BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAttackDirection::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.AttackDirection& __result)

20:51:30.400 [Info] Running ILHook manipulator on BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target)
20:51:30.400 [Info] Writing postfixes
20:51:30.401 [Info] Patching virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SelectionStateFire_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

20:51:30.402 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot()
20:51:30.402 [Info] Writing postfixes
20:51:30.405 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)
* static void CustAmmoCategories.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

20:51:30.406 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
20:51:30.406 [Info] Writing postfixes
20:51:30.409 [Info] Patching void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Briefing_InitializeContractComplete::Prefix(BattleTech.UI.Briefing __instance, MessageCenterMessage message)

20:51:30.409 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message)
20:51:30.409 [Info] Writing prefixes
20:51:30.412 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

20:51:30.413 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
20:51:30.414 [Info] Writing postfixes
20:51:30.415 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_InitData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)

20:51:30.416 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)
20:51:30.416 [Info] Writing postfixes
20:51:30.419 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)

20:51:30.419 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
20:51:30.420 [Info] Writing postfixes
20:51:30.426 [Info] Patching virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_EjectPilot::Postfix(BattleTech.AbstractActor __instance)

20:51:30.426 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent)
20:51:30.427 [Info] Writing postfixes
20:51:30.429 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

20:51:30.429 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
20:51:30.429 [Info] Writing postfixes
20:51:30.434 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledMech::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

20:51:30.434 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech()
20:51:30.435 [Info] Writing prefixes
20:51:30.437 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledVehicle::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

20:51:30.437 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle()
20:51:30.437 [Info] Writing prefixes
20:51:30.500 [Info] Patching static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Prefix(BattleTech.SimGameResultAction action, object additionalObject)
1 postfixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Postfix(BattleTech.SimGameResultAction action, object additionalObject)

20:51:30.500 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject)
20:51:30.501 [Info] Writing prefixes
20:51:30.502 [Info] Writing postfixes
20:51:30.543 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.SimGameState_SetCurrentSystem::UpdateSystem(BattleTech.StarSystem system)
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

20:51:30.543 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
20:51:30.544 [Info] Writing prefixes
20:51:30.544 [Info] Writing postfixes
20:51:30.547 [Info] Patching bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameEventTracker_CheckRoll::Postfix(BattleTech.SimGameEventTracker __instance, bool incrementOnFailure, float randomRoll, Boolean& __result)

20:51:30.547 [Info] Running ILHook manipulator on bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll)
20:51:30.547 [Info] Writing postfixes
20:51:30.550 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.SimGameState_InitCompanyStats_Patch::Postfix(BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)

20:51:30.550 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
20:51:30.550 [Info] Writing postfixes
20:51:30.556 [Info] Patching void BattleTech.SGTravelManager::HandleNextTravelStep() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.556 [Info] Running ILHook manipulator on void BattleTech.SGTravelManager::HandleNextTravelStep()
20:51:30.556 [Info] Transpiling void BattleTech.SGTravelManager::HandleNextTravelStep()
20:51:30.557 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.562 [Info] Patching void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.562 [Info] Running ILHook manipulator on void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
20:51:30.563 [Info] Transpiling void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
20:51:30.564 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.569 [Info] Patching virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_Init::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.UI.CombatHUD HUD)

20:51:30.569 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD)
20:51:30.570 [Info] Writing postfixes
20:51:30.573 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

20:51:30.574 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
20:51:30.574 [Info] Writing postfixes
20:51:30.578 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
3 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

20:51:30.578 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:30.579 [Info] Writing prefixes
20:51:30.579 [Info] Writing postfixes
20:51:30.587 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)
* static void CustAmmoCategories.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance, BattleTech.Data.LoadRequest batch)

20:51:30.587 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
20:51:30.587 [Info] Writing postfixes
20:51:30.589 [Info] Patching void BattleTech.Data.SVGCache::Clear() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SVGCache_Clear::Prefix(BattleTech.Data.SVGCache __instance)

20:51:30.594 [Info] Running ILHook manipulator on void BattleTech.Data.SVGCache::Clear()
20:51:30.594 [Info] Writing prefixes
20:51:30.598 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)

20:51:30.598 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
20:51:30.599 [Info] Writing postfixes
20:51:30.604 [Info] Patching void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_SetCompanyCrest::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState ___simState)

20:51:30.604 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId)
20:51:30.605 [Info] Writing postfixes
20:51:30.606 [Info] Patching void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_Init::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState simGame)

20:51:30.607 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame)
20:51:30.607 [Info] Writing postfixes
20:51:30.609 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

20:51:30.609 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
20:51:30.609 [Info] Writing postfixes
20:51:30.613 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

20:51:30.613 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
20:51:30.614 [Info] Writing postfixes
20:51:30.618 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

20:51:30.618 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
20:51:30.618 [Info] Writing postfixes
20:51:30.621 [Info] Patching UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.EncounterLayerData_GetEncounterBoundaryTexture::Postfix(BattleTech.EncounterLayerData __instance, UnityEngine.Texture2D& __result)

20:51:30.621 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture()
20:51:30.622 [Info] Writing postfixes
20:51:30.627 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

20:51:30.627 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
20:51:30.628 [Info] Writing postfixes
20:51:30.633 [Info] Patching bool BattleTech.Weapon::get_CanFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_CanFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

20:51:30.634 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_CanFire()
20:51:30.634 [Info] Writing postfixes
20:51:30.637 [Info] Patching void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DefendXUnitsObjective_Tick::Prefix(BattleTech.Designed.DefendXUnitsObjective __instance, MessageCenterMessage message)

20:51:30.637 [Info] Running ILHook manipulator on void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message)
20:51:30.637 [Info] Writing prefixes
20:51:30.640 [Info] Patching void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.TimerObjective_AdvanceTimer::Prefix(BattleTech.Designed.TimerObjective __instance, MessageCenterMessage message)

20:51:30.641 [Info] Running ILHook manipulator on void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message)
20:51:30.641 [Info] Writing prefixes
20:51:30.644 [Info] Patching void BattleTech.TurnDirector::FinishBeginRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.TurnDirector_FinishBeginRound::Postfix(BattleTech.TurnDirector __instance)

20:51:30.644 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::FinishBeginRound()
20:51:30.644 [Info] Writing postfixes
20:51:30.647 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

20:51:30.648 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
20:51:30.648 [Info] Writing postfixes
20:51:30.654 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CombatHUDWeaponSlot_UpdateTooltipStrings::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target)

20:51:30.654 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target)
20:51:30.654 [Info] Writing prefixes
20:51:30.657 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)

20:51:30.657 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:30.657 [Info] Writing prefixes
20:51:30.658 [Info] Writing postfixes
20:51:30.661 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)

20:51:30.661 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
20:51:30.661 [Info] Writing prefixes
20:51:30.661 [Info] Writing postfixes
20:51:30.664 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

20:51:30.664 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
20:51:30.665 [Info] Writing prefixes
20:51:30.673 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:30.673 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:30.673 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:30.674 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:30.675 [Info] Writing postfixes
20:51:30.678 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:30.678 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:30.678 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:30.679 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:30.686 [Info] Writing postfixes
20:51:30.690 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidjet_OnRemove::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:30.690 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:30.690 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:30.690 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidjet_OnRemove::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:30.693 [Info] Writing postfixes
20:51:30.695 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)

20:51:30.695 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
20:51:30.695 [Info] Writing prefixes
20:51:30.698 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.JammingRealizer::Postfix(BattleTech.Weapon __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.699 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
20:51:30.699 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
20:51:30.699 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.699 [Info] Writing postfixes
20:51:30.701 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:30.702 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:30.703 [Info] Writing prefixes
20:51:30.703 [Info] Writing postfixes
20:51:30.707 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Prefix(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Postfix(BattleTech.Weapon __instance, BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)

20:51:30.708 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
20:51:30.708 [Info] Writing prefixes
20:51:30.709 [Info] Writing postfixes
20:51:30.712 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Vehicle::Postfix(BattleTech.Weapon __instance, BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)

20:51:30.712 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)
20:51:30.712 [Info] Writing postfixes
20:51:30.714 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Turret::Postfix(BattleTech.Weapon __instance, BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)

20:51:30.715 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)
20:51:30.715 [Info] Writing postfixes
20:51:30.717 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

20:51:30.717 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
20:51:30.718 [Info] Writing postfixes
20:51:30.719 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_DisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon value)

20:51:30.719 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value)
20:51:30.720 [Info] Writing postfixes
20:51:30.722 [Info] Patching void BattleTech.AbstractActor::InitAbilities(bool ModifyStats) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_InitAbilities::Postfix(BattleTech.AbstractActor __instance)

20:51:30.723 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbilities(bool ModifyStats)
20:51:30.723 [Info] Writing postfixes
20:51:30.728 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

20:51:30.728 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
20:51:30.729 [Info] Writing prefixes
20:51:30.729 [Info] Writing postfixes
20:51:30.779 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayPreFire::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

20:51:30.780 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
20:51:30.780 [Info] Writing prefixes
20:51:30.780 [Info] Writing postfixes
20:51:30.783 [Info] Patching virtual void WeaponEffect::PlayImpact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpact::Prefix(WeaponEffect __instance)

20:51:30.783 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpact()
20:51:30.783 [Info] Writing prefixes
20:51:30.787 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

20:51:30.787 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
20:51:30.788 [Info] Writing prefixes
20:51:30.790 [Info] Patching virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Prefix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Postfix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)

20:51:30.791 [Info] Running ILHook manipulator on virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage)
20:51:30.791 [Info] Writing prefixes
20:51:30.791 [Info] Writing postfixes
20:51:30.793 [Info] Patching virtual void MissileEffect::PlayProjectile() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Prefix(MissileEffect __instance)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Postfix(MissileEffect __instance, int ___hitIndex)

20:51:30.794 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
20:51:30.794 [Info] Writing prefixes
20:51:30.794 [Info] Writing postfixes
20:51:30.797 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)

20:51:30.797 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
20:51:30.797 [Info] Writing prefixes
20:51:30.801 [Info] Patching void MissileEffect::GenerateMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateMissilePath::Prefix(MissileEffect __instance)

20:51:30.801 [Info] Running ILHook manipulator on void MissileEffect::GenerateMissilePath()
20:51:30.801 [Info] Writing prefixes
20:51:30.805 [Info] Patching void MissileEffect::GenerateIndirectMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateIndirectMissilePath::Prefix(MissileEffect __instance)

20:51:30.805 [Info] Running ILHook manipulator on void MissileEffect::GenerateIndirectMissilePath()
20:51:30.806 [Info] Writing prefixes
20:51:30.810 [Info] Patching virtual void MissileEffect::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_Update::Postfix(MissileEffect __instance)

20:51:30.810 [Info] Running ILHook manipulator on virtual void MissileEffect::Update()
20:51:30.810 [Info] Writing postfixes
20:51:30.815 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfoAMS::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

20:51:30.815 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo()
20:51:30.815 [Info] Writing postfixes
20:51:30.818 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:30.818 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:30.819 [Info] Writing prefixes
20:51:30.819 [Info] Writing postfixes
20:51:30.822 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Postfix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo?[][] allHitInfo)

20:51:30.824 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo)
20:51:30.824 [Info] Writing postfixes
20:51:30.827 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

20:51:30.827 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
20:51:30.828 [Info] Writing prefixes
20:51:30.828 [Info] Writing postfixes
20:51:30.837 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

20:51:30.837 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
20:51:30.837 [Info] Writing prefixes
20:51:30.844 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)

20:51:30.844 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
20:51:30.844 [Info] Writing prefixes
20:51:30.847 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)

20:51:30.847 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
20:51:30.848 [Info] Writing postfixes
20:51:30.851 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.ClusteredShotRandomCacheEnabler::Prefix(BattleTech.AttackDirector+AttackSequence __instance)

20:51:30.852 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
20:51:30.852 [Info] Writing prefixes
20:51:30.856 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

20:51:30.856 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:30.857 [Info] Writing postfixes
20:51:30.860 [Info] Patching static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AmmoCategoryEnumeration_GetAmmoCategoryByName::Postfix(string name, BattleTech.AmmoCategoryValue& __result)

20:51:30.860 [Info] Running ILHook manipulator on static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name)
20:51:30.860 [Info] Writing postfixes
20:51:30.862 [Info] Patching virtual bool BattleTech.Mech::get_CanSprint() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_CanSprint::Postfix(BattleTech.Mech __instance, Boolean& __result)

20:51:30.862 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_CanSprint()
20:51:30.862 [Info] Writing postfixes
20:51:30.864 [Info] Patching void BattleTech.UI.CombatHUD::HandleMissionComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUD_HandleMissionComplete::Prefix(BattleTech.UI.CombatHUD __instance)

20:51:30.864 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::HandleMissionComplete()
20:51:30.864 [Info] Writing prefixes
20:51:30.866 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)

20:51:30.866 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
20:51:30.866 [Info] Writing postfixes
20:51:30.868 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)

20:51:30.868 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
20:51:30.868 [Info] Writing prefixes
20:51:30.872 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
* static void CustAmmoCategoriesPatches.WeaponRepresentation_InitAMS::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

20:51:30.872 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
20:51:30.872 [Info] Writing postfixes
20:51:30.876 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

20:51:30.876 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
20:51:30.876 [Info] Writing prefixes
20:51:30.879 [Info] Patching int BattleTech.Mech::get_AdjustedHeatsinkCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_HeatSinkCapacity::Postfix(BattleTech.Mech __instance, Int32& __result)

20:51:30.880 [Info] Running ILHook manipulator on int BattleTech.Mech::get_AdjustedHeatsinkCapacity()
20:51:30.880 [Info] Writing postfixes
20:51:30.882 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

20:51:30.882 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
20:51:30.883 [Info] Writing prefixes
20:51:30.886 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_OnNewRound::Postfix(BattleTech.Mech __instance, int round)

20:51:30.887 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round)
20:51:30.887 [Info] Writing postfixes
20:51:30.889 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)

20:51:30.889 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
20:51:30.889 [Info] Writing prefixes
20:51:30.890 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)

20:51:30.890 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
20:51:30.892 [Info] Writing prefixes
20:51:30.893 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)

20:51:30.894 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
20:51:30.894 [Info] Writing prefixes
20:51:30.896 [Info] Patching void BattleTech.Mech::AddSprintHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddSprintHeat::Prefix(BattleTech.Mech __instance)

20:51:30.896 [Info] Running ILHook manipulator on void BattleTech.Mech::AddSprintHeat()
20:51:30.896 [Info] Writing prefixes
20:51:30.898 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)

20:51:30.898 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
20:51:30.898 [Info] Writing prefixes
20:51:30.900 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)

20:51:30.900 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
20:51:30.900 [Info] Writing prefixes
20:51:30.902 [Info] Patching void BattleTech.Mech::AddEnvironmentHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEnvironmentHeat::Prefix(BattleTech.Mech __instance)

20:51:30.902 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEnvironmentHeat()
20:51:30.902 [Info] Writing prefixes
20:51:30.904 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:30.904 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
20:51:30.904 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
20:51:30.905 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:30.907 [Info] Patching BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.Mech_GetHeatSequence::Prefix(BattleTech.Mech __instance, int rootSequenceGUID, Boolean& performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)

20:51:30.907 [Info] Running ILHook manipulator on BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)
20:51:30.907 [Info] Writing prefixes
20:51:30.909 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)

20:51:30.909 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
20:51:30.909 [Info] Writing postfixes
20:51:30.913 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForVisibility::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

20:51:30.913 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility()
20:51:30.913 [Info] Writing postfixes
20:51:30.914 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForTarget::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

20:51:30.915 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget()
20:51:30.915 [Info] Writing postfixes
20:51:30.917 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:30.917 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
20:51:30.917 [Info] Writing postfixes
20:51:30.921 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
3 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:30.921 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:30.922 [Info] Writing prefixes
20:51:30.922 [Info] Writing postfixes
20:51:30.927 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactWD::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

20:51:30.927 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
20:51:30.927 [Info] Writing prefixes
20:51:30.927 [Info] Writing postfixes
20:51:30.936 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSticky() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:30.936 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSticky()
20:51:30.936 [Info] Writing prefixes
20:51:30.936 [Info] Writing postfixes
20:51:30.939 [Info] Patching virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Init::Prefix(BattleTech.AbstractActor __instance)

20:51:30.939 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells)
20:51:30.939 [Info] Writing prefixes
20:51:30.942 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)

20:51:30.943 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
20:51:30.943 [Info] Writing prefixes
20:51:30.945 [Info] Patching virtual void BattleTech.Turret::InitStats() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(BattleTech.Turret __instance)
* static void CustAmmoCategoriesPatches.Turret_InitStats::Prefix(BattleTech.Turret __instance)

20:51:30.945 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
20:51:30.946 [Info] Writing prefixes
20:51:30.951 [Info] Patching void BattleTech.AbstractActor::ReapplyDesignMasks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_ReapplyDesignMasks::Prefix(BattleTech.AbstractActor __instance)

20:51:30.951 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ReapplyDesignMasks()
20:51:30.951 [Info] Writing prefixes
20:51:30.954 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

20:51:30.954 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
20:51:30.954 [Info] Writing prefixes
20:51:30.955 [Info] Writing postfixes
20:51:30.958 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

20:51:30.958 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos)
20:51:30.959 [Info] Writing prefixes
20:51:30.960 [Info] Writing postfixes
20:51:30.963 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

20:51:30.963 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
20:51:30.963 [Info] Writing prefixes
20:51:30.964 [Info] Writing postfixes
20:51:30.966 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

20:51:30.966 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
20:51:30.966 [Info] Writing prefixes
20:51:30.967 [Info] Writing postfixes
20:51:30.968 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

20:51:30.969 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
20:51:30.969 [Info] Writing prefixes
20:51:30.969 [Info] Writing postfixes
20:51:30.972 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

20:51:30.972 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
20:51:30.972 [Info] Writing prefixes
20:51:30.972 [Info] Writing postfixes
20:51:30.975 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

20:51:30.976 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
20:51:30.976 [Info] Writing prefixes
20:51:30.976 [Info] Writing postfixes
20:51:31.028 [Info] Patching void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID)
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Postfix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef mask, int stackItemUID)

20:51:31.028 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID)
20:51:31.029 [Info] Writing prefixes
20:51:31.029 [Info] Writing postfixes
20:51:31.032 [Info] Patching virtual void BattleTech.DesignMaskDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.DesignMaskDef_fromJSON::Prefix(BattleTech.VehicleChassisDef __instance, String& json)

20:51:31.032 [Info] Running ILHook manipulator on virtual void BattleTech.DesignMaskDef::FromJSON(string json)
20:51:31.032 [Info] Writing prefixes
20:51:31.035 [Info] Patching void BattleTech.TurnDirector::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_Update::Prefix(BattleTech.TurnDirector __instance, bool ___needsToEndRound)

20:51:31.035 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::Update()
20:51:31.035 [Info] Writing prefixes
20:51:31.039 [Info] Patching bool BattleTech.TurnDirector::CanAdvanceTurns() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.TurnDirector_CanAdvanceTurns::Postfix(BattleTech.TurnDirector __instance, Boolean& __result)

20:51:31.039 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::CanAdvanceTurns()
20:51:31.040 [Info] Writing postfixes
20:51:31.043 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

20:51:31.043 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
20:51:31.043 [Info] Writing postfixes
20:51:31.060 [Info] Patching void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ElementManager_RefreshCommandBufferInt::Prefix(BattleTech.Rendering.UI.ElementManager __instance, UnityEngine.Rendering.CommandBuffer& ____uiCommandBuffer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIBleep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___bleepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UISweep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.BTUIDecal, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepDecalContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UICreep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___creepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIMovementDot, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___dotContainer, UnityEngine.Matrix4x4[]& ___normalTrs, UnityEngine.Matrix4x4[]& ___forestTrs, UnityEngine.Matrix4x4[]& ___waterTrs, UnityEngine.Matrix4x4[]& ___roughTrs, UnityEngine.Matrix4x4[]& ___roadTrs, UnityEngine.Matrix4x4[]& ___specialTrs, UnityEngine.Matrix4x4[]& ___dangerousTrs, Int32& ___log100Count)

20:51:31.060 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt()
20:51:31.060 [Info] Writing prefixes
20:51:31.075 [Info] Patching void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_FireShells::Postfix(MissileEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, bool isIndirect)

20:51:31.075 [Info] Running ILHook manipulator on void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect)
20:51:31.075 [Info] Writing postfixes
20:51:31.080 [Info] Patching void WeaponEffect::PublishWeaponCompleteMessage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Postfix(WeaponEffect __instance)

20:51:31.080 [Info] Running ILHook manipulator on void WeaponEffect::PublishWeaponCompleteMessage()
20:51:31.080 [Info] Writing prefixes
20:51:31.081 [Info] Writing postfixes
20:51:31.082 [Info] Patching void MissileLauncherEffect::SetupMissiles() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileLauncherEffect_SetupMissiles::Postfix(MissileLauncherEffect __instance, bool ___isIndirect)

20:51:31.083 [Info] Running ILHook manipulator on void MissileLauncherEffect::SetupMissiles()
20:51:31.083 [Info] Writing postfixes
20:51:31.087 [Info] Patching virtual void MissileLauncherEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_Update::Prefix(MissileLauncherEffect __instance)

20:51:31.087 [Info] Running ILHook manipulator on virtual void MissileLauncherEffect::Update()
20:51:31.087 [Info] Writing prefixes
20:51:31.090 [Info] Patching virtual void WeaponEffect::InitProjectile() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_InitProjectile::Postfix(WeaponEffect __instance)

20:51:31.090 [Info] Running ILHook manipulator on virtual void WeaponEffect::InitProjectile()
20:51:31.090 [Info] Writing postfixes
20:51:31.095 [Info] Patching void MissileLauncherEffect::ClearMissiles() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_ClearMissiles::Prefix(MissileLauncherEffect __instance)

20:51:31.095 [Info] Running ILHook manipulator on void MissileLauncherEffect::ClearMissiles()
20:51:31.095 [Info] Writing prefixes
20:51:31.098 [Info] Patching virtual void MissileEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_OnComplete::Postfix(MissileEffect __instance)

20:51:31.098 [Info] Running ILHook manipulator on virtual void MissileEffect::OnComplete()
20:51:31.098 [Info] Writing postfixes
20:51:31.100 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategoriesPatches.MissileEffect_DestroyFlimsyObjects::Prefix(MissileEffect __instance, int ___hitIndex)

20:51:31.100 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
20:51:31.101 [Info] Writing prefixes
20:51:31.103 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)
* static void CustAmmoCategoriesPatches.MissileEffect_PlayImpact::Postfix(MissileEffect __instance, int ___hitIndex)

20:51:31.103 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
20:51:31.104 [Info] Writing postfixes
20:51:31.107 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)
* static bool CustAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName, int ___hitIndex, AkGameObj ___projectileAudioObject, UnityEngine.Vector3 ___endPos, UnityEngine.Vector3 ___preFireEndPos, bool ___isSRM)

20:51:31.108 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
20:51:31.108 [Info] Writing prefixes
20:51:31.112 [Info] Patching void MissileLauncherEffect::FireNextMissile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_FireNextMissile::Prefix(MissileLauncherEffect __instance, int ___hitIndex, Int32& ___emitterIndex, AkGameObj ___parentAudioObject)

20:51:31.112 [Info] Running ILHook manipulator on void MissileLauncherEffect::FireNextMissile()
20:51:31.112 [Info] Writing prefixes
20:51:31.113 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

20:51:31.113 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
20:51:31.114 [Info] Writing postfixes
20:51:31.115 [Info] Patching void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_CompleteOrders::Prefix(BattleTech.ActorMovementSequence __instance, System.Collections.Generic.List`1[[BattleTech.WayPoint, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& waypoints, UnityEngine.Vector3& finalHeading, bool sprinting, BattleTech.ICombatant& meleeTarget)

20:51:31.116 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget)
20:51:31.116 [Info] Writing prefixes
20:51:31.122 [Info] Patching void BattleTech.ActorMovementSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Update::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:31.122 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Update()
20:51:31.122 [Info] Writing postfixes
20:51:31.128 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:31.128 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
20:51:31.128 [Info] Writing postfixes
20:51:31.185 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

20:51:31.186 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
20:51:31.186 [Info] Writing postfixes
20:51:31.189 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

20:51:31.190 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
20:51:31.190 [Info] Writing prefixes
20:51:31.193 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

20:51:31.193 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
20:51:31.193 [Info] Writing postfixes
20:51:31.196 [Info] Patching virtual void BattleTech.MechJumpSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechJumpSequence_CompleteOrders::Postfix(BattleTech.MechJumpSequence __instance)

20:51:31.197 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::CompleteOrders()
20:51:31.197 [Info] Writing postfixes
20:51:31.199 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

20:51:31.200 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
20:51:31.200 [Info] Writing postfixes
20:51:31.202 [Info] Patching void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.SGEventPanel_Init::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameState sim)

20:51:31.202 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim)
20:51:31.202 [Info] Writing prefixes
20:51:31.206 [Info] Patching void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_OnOptionSelected::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameEventOption option)

20:51:31.206 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option)
20:51:31.207 [Info] Writing prefixes
20:51:31.211 [Info] Patching void BattleTech.UI.SGEventPanel::Dismiss() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_Dismiss::Prefix(BattleTech.UI.SGEventPanel __instance)

20:51:31.211 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Dismiss()
20:51:31.211 [Info] Writing prefixes
20:51:31.214 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:31.214 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
20:51:31.214 [Info] Writing postfixes
20:51:31.220 [Info] Patching virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDInfoSidePanel_Update::Prefix(BattleTech.UI.CombatHUDInfoSidePanel __instance, Boolean& ___shownForSingleFrame)

20:51:31.220 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update()
20:51:31.220 [Info] Writing prefixes
20:51:31.226 [Info] Patching void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_OnActorHovered::Postfix(BattleTech.UI.CombatHUD __instance)

20:51:31.227 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message)
20:51:31.227 [Info] Writing postfixes
20:51:31.229 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedHeatInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

20:51:31.229 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo()
20:51:31.230 [Info] Writing postfixes
20:51:31.232 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedStabilityInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

20:51:31.232 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo()
20:51:31.232 [Info] Writing postfixes
20:51:31.240 [Info] Patching void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MoveStatusPreview_DisplayPreviewStatus::Prefix(BattleTech.UI.MoveStatusPreview __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)

20:51:31.240 [Info] Running ILHook manipulator on void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)
20:51:31.240 [Info] Writing prefixes
20:51:31.249 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:31.249 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target)
20:51:31.250 [Info] Writing postfixes
20:51:31.254 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

20:51:31.254 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
20:51:31.254 [Info] Writing postfixes
20:51:31.260 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

20:51:31.260 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
20:51:31.260 [Info] Writing postfixes
20:51:31.262 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

20:51:31.262 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
20:51:31.262 [Info] Writing postfixes
20:51:31.265 [Info] Patching virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_DependenciesLoaded::Prefix(BattleTech.WeaponDef __instance, uint loadWeight, Boolean& __result, BattleTech.Data.DataManager ___dataManager)

20:51:31.265 [Info] Running ILHook manipulator on virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight)
20:51:31.265 [Info] Writing prefixes
20:51:31.268 [Info] Patching virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_GatherDependencies::Prefix(BattleTech.WeaponDef __instance, BattleTech.Data.DataManager& ___dataManager, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:31.269 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:31.269 [Info] Writing prefixes
20:51:31.272 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

20:51:31.273 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
20:51:31.273 [Info] Writing prefixes
20:51:31.273 [Info] Writing postfixes
20:51:31.275 [Info] Patching int BattleTech.Weapon::get_CurrentAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_CurrentAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

20:51:31.275 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_CurrentAmmo()
20:51:31.275 [Info] Writing prefixes
20:51:31.277 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:31.278 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:31.278 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
20:51:31.278 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:31.279 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:31.279 [Info] Writing postfixes
20:51:31.283 [Info] Patching bool BattleTech.AbstractActor::get_IsTargetMarked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_IsTargetMarked::Prefix(BattleTech.AbstractActor __instance, Boolean& __result)

20:51:31.283 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_IsTargetMarked()
20:51:31.284 [Info] Writing prefixes
20:51:31.285 [Info] Patching Localize.Text BattleTech.MechComponent::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_UIName::Postfix(BattleTech.MechComponent __instance, Localize.Text& __result)

20:51:31.285 [Info] Running ILHook manipulator on Localize.Text BattleTech.MechComponent::get_UIName()
20:51:31.286 [Info] Writing postfixes
20:51:31.288 [Info] Patching float BattleTech.Weapon::get_DamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_DamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.288 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_DamagePerShot()
20:51:31.288 [Info] Writing postfixes
20:51:31.290 [Info] Patching void BattleTech.Weapon::ResetWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ResetWeapon::Postfix(BattleTech.Weapon __instance)

20:51:31.292 [Info] Running ILHook manipulator on void BattleTech.Weapon::ResetWeapon()
20:51:31.292 [Info] Writing postfixes
20:51:31.294 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)

20:51:31.295 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
20:51:31.295 [Info] Writing postfixes
20:51:31.297 [Info] Patching int BattleTech.Weapon::get_InternalAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_InternalAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

20:51:31.297 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_InternalAmmo()
20:51:31.297 [Info] Writing prefixes
20:51:31.299 [Info] Patching float BattleTech.Weapon::get_StructureDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_StructureDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.299 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_StructureDamagePerShot()
20:51:31.299 [Info] Writing postfixes
20:51:31.301 [Info] Patching float BattleTech.Weapon::get_HeatDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.301 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatDamagePerShot()
20:51:31.301 [Info] Writing postfixes
20:51:31.302 [Info] Patching int BattleTech.Weapon::get_ShotsWhenFired() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShotsWhenFired::Postfix(BattleTech.Weapon __instance, Int32& __result)

20:51:31.302 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ShotsWhenFired()
20:51:31.302 [Info] Writing postfixes
20:51:31.306 [Info] Patching int BattleTech.Weapon::get_ProjectilesPerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ProjectilesPerShot::Postfix(BattleTech.Weapon __instance, Int32& __result)

20:51:31.306 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ProjectilesPerShot()
20:51:31.306 [Info] Writing postfixes
20:51:31.308 [Info] Patching float BattleTech.Weapon::get_ClusteringModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ClusteringModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.308 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ClusteringModifier()
20:51:31.309 [Info] Writing postfixes
20:51:31.310 [Info] Patching float BattleTech.Weapon::get_CriticalChanceMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_CriticalChanceMultiplier::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.310 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_CriticalChanceMultiplier()
20:51:31.310 [Info] Writing postfixes
20:51:31.311 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

20:51:31.311 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
20:51:31.311 [Info] Writing postfixes
20:51:31.313 [Info] Patching float BattleTech.Weapon::get_AccuracyModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AccuracyModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.313 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_AccuracyModifier()
20:51:31.314 [Info] Writing postfixes
20:51:31.315 [Info] Patching float BattleTech.Weapon::get_MinRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MinRange::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.315 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MinRange()
20:51:31.315 [Info] Writing postfixes
20:51:31.316 [Info] Patching float BattleTech.Weapon::get_MaxRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MaxRange::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.317 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MaxRange()
20:51:31.317 [Info] Writing postfixes
20:51:31.318 [Info] Patching float BattleTech.Weapon::get_ShortRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShortRange::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.318 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ShortRange()
20:51:31.319 [Info] Writing postfixes
20:51:31.320 [Info] Patching float BattleTech.Weapon::get_MediumRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MediumRange::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.320 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MediumRange()
20:51:31.320 [Info] Writing postfixes
20:51:31.322 [Info] Patching float BattleTech.Weapon::get_LongRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_LongRange::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.322 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_LongRange()
20:51:31.323 [Info] Writing postfixes
20:51:31.324 [Info] Patching float BattleTech.Weapon::get_HeatGenerated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatGenerated::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.324 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatGenerated()
20:51:31.325 [Info] Writing postfixes
20:51:31.326 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)
* static void CustAmmoCategoriesPatches.Weapon_RefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

20:51:31.327 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
20:51:31.327 [Info] Writing postfixes
20:51:31.328 [Info] Patching bool BattleTech.Weapon::get_IndirectFireCapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_IndirectFireCapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

20:51:31.328 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IndirectFireCapable()
20:51:31.329 [Info] Writing postfixes
20:51:31.330 [Info] Patching bool BattleTech.Weapon::get_AOECapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AOECapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

20:51:31.330 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_AOECapable()
20:51:31.330 [Info] Writing postfixes
20:51:31.332 [Info] Patching float BattleTech.Weapon::Instability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_Instability::Postfix(BattleTech.Weapon __instance, Single& __result)

20:51:31.332 [Info] Running ILHook manipulator on float BattleTech.Weapon::Instability()
20:51:31.332 [Info] Writing postfixes
20:51:31.333 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

20:51:31.334 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
20:51:31.334 [Info] Writing prefixes
20:51:31.334 [Info] Writing postfixes
20:51:31.337 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategories+Weapon_DecrementAmmo::Prefix(BattleTech.Weapon __instance, int stackItemUID, Int32& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:31.337 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
20:51:31.339 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
20:51:31.339 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:31.342 [Info] Writing prefixes
20:51:31.346 [Info] Patching virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:31.346 [Info] Running ILHook manipulator on virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
20:51:31.346 [Info] Transpiling virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
20:51:31.347 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:31.353 [Info] Patching virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:31.354 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
20:51:31.354 [Info] Transpiling virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
20:51:31.355 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:31.362 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.DynamicTreesHelper::OnInsert(object __instance, UnityEngine.Matrix4x4& trs, UnityEngine.Vector3& pos, UnityEngine.Quaternion rot, UnityEngine.Vector3& scale)

20:51:31.362 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale)
20:51:31.362 [Info] Writing postfixes
20:51:31.367 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupFullArray()

20:51:31.367 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray()
20:51:31.367 [Info] Writing prefixes
20:51:31.371 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupComputeBuffer()

20:51:31.372 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer()
20:51:31.372 [Info] Writing prefixes
20:51:31.374 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateCombinedMesh()

20:51:31.374 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh()
20:51:31.374 [Info] Writing prefixes
20:51:31.383 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateMesh()

20:51:31.383 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh()
20:51:31.383 [Info] Writing prefixes
20:51:31.387 [Info] Patching virtual BehaviorTreeResults BraceNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.BraceNode_Tick::Prefix(LeafBehaviorNode __instance, String& ___name, BehaviorTree& ___tree, BattleTech.AbstractActor ___unit, BehaviorNodeState& ___currentState, BehaviorTreeResults& __result)

20:51:31.387 [Info] Running ILHook manipulator on virtual BehaviorTreeResults BraceNode::Tick()
20:51:31.388 [Info] Writing prefixes
20:51:31.529 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:31.530 [Info] Patching BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AITeam_GetUnitThatCanReachECM::Prefix(AITeam __instance, System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits, BattleTech.AbstractActor& __result)

20:51:31.530 [Info] Running ILHook manipulator on BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits)
20:51:31.530 [Info] Writing prefixes
20:51:31.534 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 109 ms
20:51:31.534 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

20:51:31.535 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
20:51:31.535 [Info] Writing prefixes
20:51:31.535 [Info] Writing postfixes
20:51:31.537 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.537 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix
20:51:31.538 [Info] PrefixWrapper created: HXI︳17︳::CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix
20:51:31.538 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix
20:51:31.538 [Info] PrefixWrapper created: HXI︳18︳::CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix
20:51:31.538 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 111 ms
20:51:31.539 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state, Boolean& __runOriginal)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json, Boolean& __runOriginal)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

20:51:31.539 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
20:51:31.541 [Info] Writing prefixes
20:51:31.541 [Info] Writing postfixes
20:51:31.542 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 111 ms
20:51:31.542 [Info] Patching void BattleTech.TurnDirector::BeginNewPhase(int newPhase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.TurnDirector_BeginNewPhase::Postfix(BattleTech.TurnDirector __instance, int newPhase)

20:51:31.543 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewPhase(int newPhase)
20:51:31.543 [Info] Writing postfixes
20:51:31.546 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 111 ms
20:51:31.548 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)

20:51:31.548 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
20:51:31.548 [Info] Writing prefixes
20:51:31.552 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.552 [Info] PrefixWrapper being created for: CustomAmmoCategories::WeaponRealizer.JammingEnabler::Prefix
20:51:31.553 [Info] PrefixWrapper created: HXI︳19︳::WeaponRealizer.JammingEnabler::Prefix
20:51:31.553 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
20:51:31.553 [Info] PrefixWrapper created: HXI︳20︳::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
20:51:31.553 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.unJammingEnabler::Prefix
20:51:31.554 [Info] PrefixWrapper created: HXI︳21︳::CustAmmoCategories.unJammingEnabler::Prefix
20:51:31.554 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
20:51:31.554 [Info] PrefixWrapper created: HXI︳22︳::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
20:51:31.554 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.555 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)

20:51:31.555 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
20:51:31.556 [Info] Writing prefixes
20:51:31.559 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.560 [Info] Patching BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_DesiredAuraProjectionState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState& __result, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD)

20:51:31.560 [Info] Running ILHook manipulator on BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState()
20:51:31.560 [Info] Writing prefixes
20:51:31.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.563 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshAuraRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState auraProjectionState, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange)

20:51:31.564 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState)
20:51:31.564 [Info] Writing prefixes
20:51:31.566 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.567 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool showActiveProbe, BattleTech.AbstractActor& ___owner, Single& ___currentAPRange)

20:51:31.567 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe)
20:51:31.567 [Info] Writing prefixes
20:51:31.569 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.570 [Info] Patching bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform, Boolean& __result)

20:51:31.570 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState()
20:51:31.570 [Info] Writing prefixes
20:51:31.573 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.573 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeColor::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool isBright, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD, Boolean& ___currentAPIsBright)

20:51:31.573 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright)
20:51:31.574 [Info] Writing prefixes
20:51:31.575 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.576 [Info] Patching void BattleTech.UI.CombatAuraReticle::UpdatePosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.CombatAuraReticle_UpdatePosition::Postfix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform)

20:51:31.576 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::UpdatePosition()
20:51:31.576 [Info] Writing postfixes
20:51:31.578 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.579 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomActivatablePatches.CombatHUD_Update_HideReticlesHotKey::Postfix(BattleTech.UI.CombatHUD __instance)

20:51:31.579 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
20:51:31.579 [Info] Writing postfixes
20:51:31.582 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
20:51:31.583 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

20:51:31.583 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
20:51:31.583 [Info] Writing postfixes
20:51:31.584 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.585 [Info] PrefixWrapper being created for: CustomVoices::CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix
20:51:31.585 [Info] PrefixWrapper created: HXI︳23︳::CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix
20:51:31.585 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.CombatHUDActionButton_ExecuteClick::Prefix
20:51:31.585 [Info] PrefixWrapper created: HXI︳24︳::CustomActivatablePatches.CombatHUDActionButton_ExecuteClick::Prefix
20:51:31.585 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.586 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance, Boolean& __runOriginal)
* static bool CustomActivatablePatches.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance, Boolean& __runOriginal)

20:51:31.586 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
20:51:31.586 [Info] Writing prefixes
20:51:31.587 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.588 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:31.588 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
20:51:31.589 [Info] Writing postfixes
20:51:31.592 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.592 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatablePatches.SelectionState_CanDeselect::Postfix(BattleTech.UI.SelectionState __instance, Boolean& __result)

20:51:31.592 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
20:51:31.592 [Info] Writing prefixes
20:51:31.593 [Info] Writing postfixes
20:51:31.594 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.594 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

20:51:31.595 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
20:51:31.595 [Info] Writing postfixes
20:51:31.597 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.598 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

20:51:31.598 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
20:51:31.599 [Info] Writing prefixes
20:51:31.599 [Info] Writing postfixes
20:51:31.603 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.603 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Single& __result)
1 postfixes:
* static void CustomActivatablePatches.Mech_GetHeatSinkDissipation::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:31.603 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
20:51:31.603 [Info] Writing prefixes
20:51:31.604 [Info] Writing postfixes
20:51:31.606 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.606 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)
1 postfixes:
* static void CustomActivatablePatches.Mech_ApplyHeatSinks::Postfix(BattleTech.Mech __instance, int stackID)

20:51:31.606 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
20:51:31.607 [Info] Writing prefixes
20:51:31.607 [Info] Writing postfixes
20:51:31.609 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.609 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

20:51:31.610 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
20:51:31.610 [Info] Writing postfixes
20:51:31.613 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.614 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)

20:51:31.615 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:31.615 [Info] Writing postfixes
20:51:31.618 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.619 [Info] Patching virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStandInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

20:51:31.619 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState)
20:51:31.619 [Info] Writing prefixes
20:51:31.621 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.621 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

20:51:31.621 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
20:51:31.622 [Info] Writing prefixes
20:51:31.622 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.623 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

20:51:31.623 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
20:51:31.623 [Info] Writing prefixes
20:51:31.626 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.626 [Info] Patching void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_GenerateFallSequence::Prefix(BattleTech.Mech __instance, int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)

20:51:31.626 [Info] Running ILHook manipulator on void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)
20:51:31.627 [Info] Writing prefixes
20:51:31.629 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.629 [Info] Patching virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_RestartCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

20:51:31.629 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh)
20:51:31.630 [Info] Writing prefixes
20:51:31.633 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.634 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

20:51:31.634 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
20:51:31.635 [Info] Writing prefixes
20:51:31.642 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 115 ms
20:51:31.643 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Postfix::Postfix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

20:51:31.643 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
20:51:31.643 [Info] Writing prefixes
20:51:31.644 [Info] Writing postfixes
20:51:31.649 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.650 [Info] Patching void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:31.650 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
20:51:31.651 [Info] Transpiling void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
20:51:31.651 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:31.657 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.658 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatHUDStatusPanel_PreviewDesignMasks::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, System.Collections.Generic.List<BattleTech.WayPoint> waypoints)

20:51:31.660 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints)
20:51:31.660 [Info] Writing prefixes
20:51:31.667 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.668 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMoveBase_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

20:51:31.668 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos)
20:51:31.668 [Info] Writing prefixes
20:51:31.672 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.672 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
1 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

20:51:31.673 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
20:51:31.673 [Info] Writing prefixes
20:51:31.674 [Info] Writing postfixes
20:51:31.677 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.678 [Info] Patching void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatMovementReticle_UpdateReticle::Prefix(BattleTech.UI.CombatMovementReticle __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked)

20:51:31.678 [Info] Running ILHook manipulator on void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI)
20:51:31.679 [Info] Writing prefixes
20:51:31.687 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.688 [Info] Patching void BattleTech.AuraCache::ResetForFullRebuild() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ResetForFullRebuild_Disable::Prefix(BattleTech.AuraCache __instance)

20:51:31.688 [Info] Running ILHook manipulator on void BattleTech.AuraCache::ResetForFullRebuild()
20:51:31.688 [Info] Writing prefixes
20:51:31.691 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.691 [Info] Patching bool BattleTech.AuraCache::HasAlreadyChecked(string guid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_HasAlreadyChecked_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

20:51:31.691 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::HasAlreadyChecked(string guid)
20:51:31.691 [Info] Writing prefixes
20:51:31.693 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.693 [Info] Patching void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraAdded::Prefix(BattleTech.AbstractActor __instance)

20:51:31.693 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message)
20:51:31.694 [Info] Writing prefixes
20:51:31.697 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.698 [Info] Patching void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraRemoved::Prefix(BattleTech.AbstractActor __instance)

20:51:31.698 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message)
20:51:31.698 [Info] Writing prefixes
20:51:31.702 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.702 [Info] Patching static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAllAuras_Disable::Prefix()

20:51:31.702 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate)
20:51:31.703 [Info] Writing prefixes
20:51:31.706 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.706 [Info] Patching static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAurasToActor_Disable::Prefix()

20:51:31.706 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
20:51:31.707 [Info] Writing prefixes
20:51:31.709 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.710 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()

20:51:31.710 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
20:51:31.710 [Info] Writing prefixes
20:51:31.713 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.713 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Ability_Disable::Prefix()

20:51:31.714 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
20:51:31.714 [Info] Writing prefixes
20:51:31.717 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.718 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()

20:51:31.718 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
20:51:31.719 [Info] Writing prefixes
20:51:31.723 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.723 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

20:51:31.724 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
20:51:31.724 [Info] Writing prefixes
20:51:31.727 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.727 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Ability_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

20:51:31.728 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
20:51:31.728 [Info] Writing prefixes
20:51:31.729 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.730 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

20:51:31.730 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
20:51:31.730 [Info] Writing prefixes
20:51:31.732 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.732 [Info] Patching bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AddEffectIfNotPresent_Disable::Prefix()

20:51:31.732 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource)
20:51:31.732 [Info] Writing prefixes
20:51:31.734 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.734 [Info] Patching bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RemoveEffectIfPresent_Disable::Prefix()

20:51:31.735 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource)
20:51:31.735 [Info] Writing prefixes
20:51:31.737 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.737 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAuraFrom_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

20:51:31.737 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor)
20:51:31.738 [Info] Writing prefixes
20:51:31.739 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.739 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAnyAura() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAnyAura_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

20:51:31.740 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAnyAura()
20:51:31.740 [Info] Writing prefixes
20:51:31.742 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.742 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:31.743 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
20:51:31.743 [Info] Writing prefixes
20:51:31.746 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.746 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasFromActorAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:31.746 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
20:51:31.747 [Info] Writing prefixes
20:51:31.749 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.750 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffectingOthers_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:31.750 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
20:51:31.750 [Info] Writing prefixes
20:51:31.804 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.805 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffecting_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:31.805 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
20:51:31.805 [Info] Writing prefixes
20:51:31.808 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.809 [Info] Patching int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyGhostSpottedCount_Disable::Prefix(BattleTech.AuraCache __instance, Int32& __result)

20:51:31.809 [Info] Running ILHook manipulator on int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
20:51:31.810 [Info] Writing prefixes
20:51:31.812 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.813 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraA_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:31.813 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared)
20:51:31.813 [Info] Writing prefixes
20:51:31.815 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.815 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:31.816 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
20:51:31.816 [Info] Writing prefixes
20:51:31.818 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.818 [Info] Patching static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RefreshECMStates_Disable::Prefix(BattleTech.AuraCache __instance)

20:51:31.818 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource)
20:51:31.819 [Info] Writing prefixes
20:51:31.820 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.822 [Info] Patching BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_GetBestECMState_Disable::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor& __result)

20:51:31.823 [Info] Running ILHook manipulator on BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors)
20:51:31.823 [Info] Writing prefixes
20:51:31.828 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.829 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)

20:51:31.829 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
20:51:31.829 [Info] Writing postfixes
20:51:31.834 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.835 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_RefreshDisplayedEquipment::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDEquipmentSlot> ___EquipmentSlots, BattleTech.AbstractActor ___displayedActor)

20:51:31.836 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment()
20:51:31.836 [Info] Writing postfixes
20:51:31.839 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.840 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)
1 postfixes:
* static void CustomActivatableEquipment.TurnDirector_BeginNewRound::Postfix(BattleTech.TurnDirector __instance)

20:51:31.840 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
20:51:31.840 [Info] Writing prefixes
20:51:31.840 [Info] Writing postfixes
20:51:31.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 116 ms
20:51:31.842 [Info] Patching virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDSidePanelHoverElement_OnPointerClick::Postfix(BattleTech.UI.CombatHUDSidePanelHoverElement __instance)

20:51:31.842 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
20:51:31.842 [Info] Writing postfixes
20:51:31.844 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.844 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)

20:51:31.844 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
20:51:31.846 [Info] Writing postfixes
20:51:31.846 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.846 [Info] Patching bool BattleTech.UI.CombatHUDActionButton::TryActivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_IsActive::Postfix(BattleTech.UI.CombatHUDActionButton __instance, Boolean& __result)

20:51:31.848 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDActionButton::TryActivate()
20:51:31.848 [Info] Writing postfixes
20:51:31.850 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.850 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_ProcessPressedButtons::Prefix(BattleTech.UI.CombatSelectionHandler __instance)

20:51:31.850 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons()
20:51:31.850 [Info] Writing prefixes
20:51:31.852 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.853 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

20:51:31.853 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
20:51:31.853 [Info] Writing postfixes
20:51:31.856 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.856 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_ResetDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

20:51:31.856 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons()
20:51:31.857 [Info] Writing postfixes
20:51:31.858 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.859 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

20:51:31.859 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
20:51:31.860 [Info] Writing prefixes
20:51:31.860 [Info] Writing postfixes
20:51:31.863 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.863 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

20:51:31.864 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
20:51:31.864 [Info] Writing postfixes
20:51:31.865 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.866 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatTargetingReticle_Create::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)

20:51:31.866 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)
20:51:31.867 [Info] Writing postfixes
20:51:31.871 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.871 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

20:51:31.872 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
20:51:31.872 [Info] Writing prefixes
20:51:31.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.873 [Info] Patching void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_ProcessAddedMark::Postfix(BattleTech.AbstractActor __instance)

20:51:31.874 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect)
20:51:31.874 [Info] Writing postfixes
20:51:31.876 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.876 [Info] Patching void BattleTech.AbstractActor::set_DistMovedThisRound(float value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_DistMovedThisRound_set::Postfix(BattleTech.AbstractActor __instance, float value)

20:51:31.876 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::set_DistMovedThisRound(float value)
20:51:31.876 [Info] Writing postfixes
20:51:31.879 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.879 [Info] Patching virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_OnEffectEnd::Postfix(BattleTech.AbstractActor __instance)

20:51:31.879 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect)
20:51:31.879 [Info] Writing postfixes
20:51:31.882 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.883 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)
1 postfixes:
* static void CustomActivatableEquipment.CombatAuraReticle_Init_Aura::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant, System.Collections.Generic.List`1[[BattleTech.UI.CombatAuraReticle, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AuraReticles, BattleTech.UI.CombatHUD ___HUD)

20:51:31.883 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
20:51:31.883 [Info] Writing prefixes
20:51:31.883 [Info] Writing postfixes
20:51:31.890 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.890 [Info] Patching void BattleTech.AbstractActor::EvaluateStealthState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.AbstractActor_EvaluateStealthState::Prefix(BattleTech.AbstractActor __instance)

20:51:31.890 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::EvaluateStealthState()
20:51:31.892 [Info] Writing prefixes
20:51:31.896 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.896 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:31.897 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
20:51:31.898 [Info] Writing postfixes
20:51:31.902 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.903 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)

20:51:31.903 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
20:51:31.903 [Info] Writing postfixes
20:51:31.905 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 117 ms
20:51:31.906 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)

20:51:31.906 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
20:51:31.906 [Info] Writing postfixes
20:51:31.910 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.910 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix
20:51:31.910 [Info] PrefixWrapper created: HXI︳25︳::CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix
20:51:31.910 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatableEquipment.AuraCache_UpdateAurasComponents::Prefix
20:51:31.912 [Info] PrefixWrapper created: HXI︳26︳::CustomActivatableEquipment.AuraCache_UpdateAurasComponents::Prefix
20:51:31.912 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 118 ms
20:51:31.912 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.AuraCache_UpdateAurasComponents::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate, Boolean& __runOriginal)

20:51:31.913 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
20:51:31.913 [Info] Writing prefixes
20:51:31.915 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 118 ms
20:51:31.915 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_ShouldAffectThisActor::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

20:51:31.916 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
20:51:31.916 [Info] Writing prefixes
20:51:31.916 [Info] Writing postfixes
20:51:31.919 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.919 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix
20:51:31.919 [Info] PrefixWrapper created: HXI︳27︳::CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix
20:51:31.920 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatableEquipment.AuraCache_UpdateAura::Prefix
20:51:31.920 [Info] PrefixWrapper created: HXI︳28︳::CustomActivatableEquipment.AuraCache_UpdateAura::Prefix
20:51:31.920 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 120 ms
20:51:31.921 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.AuraCache_UpdateAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck, Boolean& __runOriginal)

20:51:31.921 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
20:51:31.921 [Info] Writing prefixes
20:51:31.924 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.924 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix
20:51:31.925 [Info] PrefixWrapper created: HXI︳29︳::CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix
20:51:31.925 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatableEquipment.AuraCache_PreviewAura::Prefix
20:51:31.925 [Info] PrefixWrapper created: HXI︳30︳::CustomActivatableEquipment.AuraCache_PreviewAura::Prefix
20:51:31.925 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
20:51:31.926 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, Boolean& __runOriginal)
* static bool CustomActivatableEquipment.AuraCache_PreviewAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, Boolean& __runOriginal)

20:51:31.926 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
20:51:31.927 [Info] Writing prefixes
20:51:31.929 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
20:51:31.930 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_AuraConditionsPassed::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

20:51:31.930 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
20:51:31.930 [Info] Writing prefixes
20:51:31.930 [Info] Writing postfixes
20:51:31.932 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
20:51:31.932 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:31.932 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
20:51:31.934 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
20:51:31.935 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:31.935 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
20:51:31.935 [Info] Writing postfixes
20:51:31.939 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
20:51:31.939 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)

20:51:31.939 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
20:51:31.940 [Info] Writing postfixes
20:51:31.942 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
20:51:31.942 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(String& description)
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponSlot_AddToolTipDetail::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, string description, int modifier)

20:51:31.942 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
20:51:31.942 [Info] Writing prefixes
20:51:31.943 [Info] Writing postfixes
20:51:31.944 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:31.944 [Info] PrefixWrapper being created for: IRBTModUtils::us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix
20:51:31.945 [Info] PrefixWrapper created: HXI︳31︳::us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix
20:51:31.945 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix
20:51:31.945 [Info] PrefixWrapper created: HXI︳32︳::CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix
20:51:31.945 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix
20:51:31.946 [Info] PrefixWrapper created: HXI︳33︳::CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix
20:51:31.946 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.947 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix(Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance, Boolean& __runOriginal)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance, Boolean& __runOriginal)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

20:51:31.947 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
20:51:31.948 [Info] Writing prefixes
20:51:31.948 [Info] Writing postfixes
20:51:31.952 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.952 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

20:51:31.953 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
20:51:31.953 [Info] Writing postfixes
20:51:31.957 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.960 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_SetState::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

20:51:31.961 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
20:51:31.961 [Info] Writing postfixes
20:51:31.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.964 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)
* static void CustomActivatableEquipment.Turret_InitGameRep::Postfix(BattleTech.Turret __instance)

20:51:31.964 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
20:51:31.964 [Info] Writing postfixes
20:51:31.968 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.968 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

20:51:31.968 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
20:51:31.969 [Info] Writing postfixes
20:51:31.971 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.972 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

20:51:31.972 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
20:51:31.973 [Info] Writing postfixes
20:51:31.977 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.978 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
3 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:31.978 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:31.979 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:31.979 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:31.982 [Info] Writing prefixes
20:51:31.983 [Info] Writing postfixes
20:51:31.987 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.987 [Info] Patching virtual void BattleTech.MechComponent::InitPassiveSelfEffects() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Prefix(BattleTech.MechComponent __instance)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Postfix(BattleTech.MechComponent __instance)

20:51:31.987 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitPassiveSelfEffects()
20:51:31.988 [Info] Writing prefixes
20:51:31.988 [Info] Writing postfixes
20:51:31.991 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.991 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)

20:51:31.991 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
20:51:31.992 [Info] Writing postfixes
20:51:31.993 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.993 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)
* static void CustomActivatableEquipment.StatisticEffect_initStatisiticEffect::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)

20:51:31.994 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
20:51:31.994 [Info] Writing postfixes
20:51:31.996 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:31.996 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_GetTargetStatCollections::Postfix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:31.996 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
20:51:31.996 [Info] Writing postfixes
20:51:31.999 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.000 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)

20:51:32.000 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
20:51:32.000 [Info] Writing prefixes
20:51:32.009 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.010 [Info] Patching void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_InitAbstractActor::Prefix(BattleTech.AbstractActor __instance)

20:51:32.010 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat)
20:51:32.010 [Info] Writing prefixes
20:51:32.016 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.017 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance)

20:51:32.017 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
20:51:32.017 [Info] Writing prefixes
20:51:32.018 [Info] Writing postfixes
20:51:32.019 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.020 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance)

20:51:32.020 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
20:51:32.020 [Info] Writing prefixes
20:51:32.020 [Info] Writing postfixes
20:51:32.021 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.022 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance)

20:51:32.022 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
20:51:32.022 [Info] Writing prefixes
20:51:32.023 [Info] Writing postfixes
20:51:32.024 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.025 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance)

20:51:32.025 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
20:51:32.025 [Info] Writing prefixes
20:51:32.026 [Info] Writing postfixes
20:51:32.027 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.028 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance)

20:51:32.028 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
20:51:32.028 [Info] Writing prefixes
20:51:32.029 [Info] Writing postfixes
20:51:32.030 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.030 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.StatCollection_ModifyStatistic::Prefix(BattleTech.StatCollection __instance, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant)
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

20:51:32.031 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
20:51:32.031 [Info] Writing prefixes
20:51:32.031 [Info] Writing postfixes
20:51:32.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 123 ms
20:51:32.034 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)
* static void CustomActivatableEquipment.MechComponent_InitStats::Postfix(BattleTech.MechComponent __instance)

20:51:32.034 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
20:51:32.034 [Info] Writing postfixes
20:51:32.036 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:32.036 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix
20:51:32.037 [Info] PrefixWrapper created: HXI︳34︳::CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix
20:51:32.037 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Prefix
20:51:32.037 [Info] PrefixWrapper created: HXI︳35︳::CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Prefix
20:51:32.037 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 125 ms
20:51:32.038 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh, Boolean& __runOriginal)
* static bool CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state, Boolean& __runOriginal)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Postfix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)

20:51:32.038 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
20:51:32.039 [Info] Writing prefixes
20:51:32.039 [Info] Writing postfixes
20:51:32.041 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:32.041 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ComponentExplosions.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix
20:51:32.042 [Info] PrefixWrapper created: HXI︳36︳::MechEngineer.Features.ComponentExplosions.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix
20:51:32.042 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix
20:51:32.042 [Info] PrefixWrapper created: HXI︳37︳::CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix
20:51:32.042 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.043 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo, Boolean& __runOriginal)
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(BattleTech.Mech __instance, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo, Boolean& __runOriginal)

20:51:32.043 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
20:51:32.051 [Info] Writing prefixes
20:51:32.053 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.055 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
4 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

20:51:32.055 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:32.055 [Info] Writing prefixes
20:51:32.056 [Info] Writing postfixes
20:51:32.110 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.112 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:32.112 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:32.113 [Info] Writing postfixes
20:51:32.116 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.117 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:32.117 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:32.117 [Info] Writing postfixes
20:51:32.120 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.120 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:32.120 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:32.121 [Info] Writing postfixes
20:51:32.123 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.124 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:32.124 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:32.124 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:32.125 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:32.126 [Info] Writing postfixes
20:51:32.129 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.130 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
* static void CustomActivatableEquipment.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:32.130 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:32.130 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
20:51:32.130 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:32.139 [Info] Writing postfixes
20:51:32.142 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.144 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidjet_OnRemove::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:32.144 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:32.144 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:32.145 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.MechLabLocationWidjet_OnRemove::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:32.146 [Info] Writing postfixes
20:51:32.148 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.149 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::ClearData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_ClearData::Postfix(BattleTech.UI.MechLabItemSlotElement __instance)

20:51:32.149 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::ClearData()
20:51:32.149 [Info] Writing postfixes
20:51:32.154 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.155 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)

20:51:32.155 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
20:51:32.155 [Info] Writing postfixes
20:51:32.158 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.158 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentListItem_SetComponentRef::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)

20:51:32.159 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)
20:51:32.159 [Info] Writing postfixes
20:51:32.161 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.163 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:32.163 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:32.163 [Info] Writing prefixes
20:51:32.164 [Info] Writing postfixes
20:51:32.176 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.183 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
6 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)

20:51:32.184 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:32.184 [Info] Writing prefixes
20:51:32.185 [Info] Writing postfixes
20:51:32.204 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.204 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatableEquipment.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

20:51:32.205 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
20:51:32.205 [Info] Writing postfixes
20:51:32.207 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.207 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)

20:51:32.208 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
20:51:32.208 [Info] Writing prefixes
20:51:32.211 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.212 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:32.212 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:32.213 [Info] Writing prefixes
20:51:32.214 [Info] Writing postfixes
20:51:32.218 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.218 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

20:51:32.219 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
20:51:32.219 [Info] Writing prefixes
20:51:32.219 [Info] Writing postfixes
20:51:32.222 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.222 [Info] Patching void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddAbsoluteInstability_Patch::Postfix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

20:51:32.222 [Info] Running ILHook manipulator on void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
20:51:32.223 [Info] Writing postfixes
20:51:32.226 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.226 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

20:51:32.227 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
20:51:32.227 [Info] Writing postfixes
20:51:32.229 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.230 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:32.230 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:32.231 [Info] Writing prefixes
20:51:32.231 [Info] Writing postfixes
20:51:32.233 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.234 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:32.234 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:32.235 [Info] Writing prefixes
20:51:32.235 [Info] Writing postfixes
20:51:32.238 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.239 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:32.239 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:32.239 [Info] Writing prefixes
20:51:32.240 [Info] Writing postfixes
20:51:32.243 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:32.244 [Info] Patching virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AreAnyHostilesInWeaponRangeNode_Tick::Prefix(BehaviorNode __instance, BehaviorTreeResults& __result, BehaviorTree& ___tree, BattleTech.AbstractActor& ___unit)

20:51:32.244 [Info] Running ILHook manipulator on virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick()
20:51:32.244 [Info] Writing prefixes
20:51:32.256 [Info] ### Harmony id=io.kmission.custompilotdecorator, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPilotDecorator.Core::Init(string directory, string settingsJson), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomPilotDecorator\CustomPilotDecorator.dll
### At 2023-03-12 08.51.32
20:51:32.257 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

20:51:32.258 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
20:51:32.258 [Info] Writing postfixes
20:51:32.262 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:32.262 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:32.262 [Info] Writing postfixes
20:51:32.268 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Prefix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon)
2 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon, BattleTech.UI.TMProWrapper.LocalizableText& ___callsign)

20:51:32.271 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
20:51:32.271 [Info] Writing prefixes
20:51:32.272 [Info] Writing postfixes
20:51:32.280 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:32.280 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
20:51:32.280 [Info] Writing postfixes
20:51:32.285 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:32.285 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
20:51:32.286 [Info] Writing postfixes
20:51:32.288 [Info] Patching void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechPilotPortraits_Init::Postfix(BattleTech.UI.LanceMechPilotPortraits __instance, BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)

20:51:32.288 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)
20:51:32.289 [Info] Writing postfixes
20:51:32.291 [Info] Patching void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_Init::Postfix(BattleTech.UI.LanceMechSlot __instance, BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)

20:51:32.291 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)
20:51:32.291 [Info] Writing postfixes
20:51:32.295 [Info] Patching void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechSlot __instance, bool isRandom)

20:51:32.296 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom)
20:51:32.297 [Info] Writing postfixes
20:51:32.298 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_Init::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)

20:51:32.299 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)
20:51:32.299 [Info] Writing postfixes
20:51:32.303 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, bool isRandom)

20:51:32.303 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom)
20:51:32.303 [Info] Writing postfixes
20:51:32.306 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.ListElementController_SalvageFullMech_NotListView_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:32.306 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
20:51:32.307 [Info] Writing postfixes
20:51:32.311 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

20:51:32.311 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
20:51:32.311 [Info] Writing postfixes
20:51:32.314 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif2::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)

20:51:32.314 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)
20:51:32.315 [Info] Writing postfixes
20:51:32.317 [Info] Patching void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechUnitElementWidget_SetIcon::Postfix(BattleTech.UI.MechUnitElementWidget __instance, string icon)

20:51:32.317 [Info] Running ILHook manipulator on void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon)
20:51:32.317 [Info] Writing postfixes
20:51:32.319 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.TooltipPrefab_Chassis_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, object data)

20:51:32.319 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
20:51:32.319 [Info] Writing postfixes
20:51:32.324 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

20:51:32.324 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
20:51:32.324 [Info] Writing postfixes
20:51:32.329 [Info] Patching void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitPreviewPanel_SetData::Postfix(BattleTech.UI.PortraitPreviewPanel __instance, BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)

20:51:32.329 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)
20:51:32.329 [Info] Writing postfixes
20:51:32.336 [Info] Patching void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitRenderPanel_Render::Postfix(BattleTech.UI.PortraitRenderPanel __instance, BattleTech.Portraits.PortraitSettings portraitSettings)

20:51:32.337 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings)
20:51:32.337 [Info] Writing postfixes
20:51:32.340 [Info] Patching void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGCharacterCreationWidget_UpdateSummary::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance)

20:51:32.340 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary()
20:51:32.340 [Info] Writing postfixes
20:51:32.343 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGBarracksDossierPanel_SetPilot_Gif::Postfix(BattleTech.UI.SGBarracksDossierPanel __instance, BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)

20:51:32.343 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)
20:51:32.394 [Info] Writing postfixes
20:51:32.407 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SG_HiringHall_DetailPanel_DisplayPilot::Postfix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

20:51:32.407 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p)
20:51:32.407 [Info] Writing postfixes
20:51:32.409 [Info] Patching void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.CombatHUDPortrait_ResetDisplayedActor::Postfix(BattleTech.UI.CombatHUDPortrait __instance)

20:51:32.409 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor()
20:51:32.410 [Info] Writing postfixes
20:51:32.413 [Info] Patching UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.SpriteLoadRequest_SpriteFromDisk::Prefix(BattleTech.Data.DataManager+SpriteLoadRequest __instance, string assetPath, UnityEngine.Sprite& __result)

20:51:32.414 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath)
20:51:32.414 [Info] Writing prefixes
20:51:32.417 [Info] Patching void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.TextureManager_ProcessCompletedRequest::Prefix(BattleTech.Data.TextureManager __instance, BattleTech.Data.TextureManager+TextureLoadRequest completed)

20:51:32.417 [Info] Running ILHook manipulator on void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed)
20:51:32.418 [Info] Writing prefixes
20:51:32.460 [Info] ### Harmony id=io.mission.customunits, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnits.Core::Init(string directory, string settingsJson), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomUnits.dll
### At 2023-03-12 08.51.32
20:51:32.462 [Info] ### Harmony id=io.mission.customdeploy, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomDeploy.Core::Init(string directory, bool debugLog), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomDeploy.dll
### At 2023-03-12 08.51.32
20:51:32.463 [Info] Patching void BattleTech.FollowActorCameraSequence::CheckForFinished() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.FollowActorCameraSequence_CheckForFinished::Prefix(BattleTech.FollowActorCameraSequence __instance)

20:51:32.463 [Info] Running ILHook manipulator on void BattleTech.FollowActorCameraSequence::CheckForFinished()
20:51:32.464 [Info] Writing prefixes
20:51:32.466 [Info] Patching System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_DangerousLocationCellsList::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, System.Collections.Generic.List`1[[BattleTech.MapTerrainDataCell, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:32.466 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList()
20:51:32.467 [Info] Writing prefixes
20:51:32.470 [Info] Patching float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_GetEvaluationAtPositionOrientation::Prefix(BattleTech.InfluenceMapEvaluator __instance, UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode, Single& __result)

20:51:32.470 [Info] Running ILHook manipulator on float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
20:51:32.470 [Info] Writing prefixes
20:51:32.475 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_GetStringFromObjectDispatch::Prefix(String& __result, object obj, string expr)

20:51:32.476 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr)
20:51:32.476 [Info] Writing prefixes
20:51:32.480 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_LookupStringFromObjectAndMaybeDispatch::Prefix(String& __result, object obj, string expr, Boolean& dispatchLocalize)

20:51:32.480 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize)
20:51:32.480 [Info] Writing prefixes
20:51:32.483 [Info] Patching void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.HeapSnapshotCollector_CollectStaticFields::Prefix(UnityHeapCrawler.HeapSnapshotCollector __instance)

20:51:32.483 [Info] Running ILHook manipulator on void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields()
20:51:32.483 [Info] Writing prefixes
20:51:32.489 [Info] Patching static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AssemblyUtil_FindMethods::Prefix(System.Reflection.MethodInfo[]& __result, System.Reflection.Assembly assembly, string methodName, string typeName)

20:51:32.489 [Info] Running ILHook manipulator on static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName)
20:51:32.489 [Info] Writing prefixes
20:51:32.494 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_unit::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.SpawnableUnit spawnableUnit)

20:51:32.495 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit)
20:51:32.495 [Info] Writing postfixes
20:51:32.497 [Info] Patching void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.LanceConfiguration_AddUnits::Prefix(BattleTech.LanceConfiguration __instance, System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)

20:51:32.498 [Info] Running ILHook manipulator on void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)
20:51:32.498 [Info] Writing prefixes
20:51:32.502 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_logic::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.UnitSpawnPointGameLogic logic)

20:51:32.502 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic)
20:51:32.502 [Info] Writing postfixes
20:51:32.504 [Info] Patching static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AkTriggerBase_GetAllDerivedTypes::Prefix(System.Collections.Generic.Dictionary`2[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:32.504 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes()
20:51:32.505 [Info] Writing prefixes
20:51:32.507 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:32.508 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:32.508 [Info] Writing prefixes
20:51:32.510 [Info] Patching bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.LoadRequest_TryCreateAndAddLoadRequest::Postfix(BattleTech.Data.LoadRequest __instance, BattleTech.BattleTechResourceType resourceType, string resourceId, bool __result)

20:51:32.510 [Info] Running ILHook manipulator on bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership)
20:51:32.510 [Info] Writing postfixes
20:51:32.513 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomDeploy.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

20:51:32.514 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
20:51:32.514 [Info] Writing postfixes
20:51:32.516 [Info] Patching string BattleTech.StarSystem::GetLastPilotAddedToHiringName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.StarSystem_GetLastPilotAddedToHiringName::Prefix(BattleTech.StarSystem __instance, String& __result)

20:51:32.517 [Info] Running ILHook manipulator on string BattleTech.StarSystem::GetLastPilotAddedToHiringName()
20:51:32.517 [Info] Writing prefixes
20:51:32.518 [Info] Patching bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.SimGameState_AddPilotToHiringHall::Prefix(BattleTech.SimGameState __instance, string pilotDefID, string starSystemID, Boolean& __result)

20:51:32.519 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID)
20:51:32.520 [Info] Writing prefixes
20:51:32.522 [Info] Patching void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.StarSystem_AddAvailablePilot::Prefix(BattleTech.StarSystem __instance, BattleTech.PilotDef def, bool isRonin)

20:51:32.523 [Info] Running ILHook manipulator on void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin)
20:51:32.523 [Info] Writing prefixes
20:51:32.525 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

20:51:32.525 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
20:51:32.525 [Info] Writing prefixes
20:51:32.528 [Info] Patching void BattleTech.Data.DataManager::UpdateRequests() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.DataManager_UpdateRequests::Prefix(BattleTech.Data.DataManager __instance)

20:51:32.528 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::UpdateRequests()
20:51:32.528 [Info] Writing prefixes
20:51:32.532 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)

20:51:32.532 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:32.532 [Info] Writing prefixes
20:51:32.535 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.CombatHUDHeatDisplay_UpdateOverheatWarnings::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, Boolean& overHeated, Boolean& shutDown)

20:51:32.535 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown)
20:51:32.535 [Info] Writing prefixes
20:51:32.537 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

20:51:32.537 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
20:51:32.538 [Info] Writing postfixes
20:51:32.540 [Info] Patching static void Utilities::BuildExtensionMethodCacheForType(Type type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Utilities_BuildExtensionMethodCacheForType::Prefix(Type type)

20:51:32.540 [Info] Running ILHook manipulator on static void Utilities::BuildExtensionMethodCacheForType(Type type)
20:51:32.540 [Info] Writing prefixes
20:51:32.546 [Info] Patching System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Briefing_BuildSimGameResults::Prefix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride, System.Collections.Generic.List`1[[BattleTech.ResultDescriptionEntry, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:32.546 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride)
20:51:32.546 [Info] Writing prefixes
20:51:32.562 [Info] Patching static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr) with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomUnits.PatchingDebug::GetOriginalMethod_Finalizer(Exception __exception, HarmonyLib.HarmonyMethod attr)

20:51:32.563 [Info] Running ILHook manipulator on static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr)
20:51:32.563 [Info] Writing finalizers
20:51:32.576 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.MechBayMechStorageWidget_SetSorting_Patch::Prefix(BattleTech.UI.MechBayMechStorageWidget __instance)

20:51:32.576 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
20:51:32.576 [Info] Writing prefixes
20:51:32.579 [Info] Patching void BattleTech.SimGameState::_OnDefsLoadComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Postfix(BattleTech.SimGameState __instance)

20:51:32.579 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnDefsLoadComplete()
20:51:32.579 [Info] Writing prefixes
20:51:32.579 [Info] Writing postfixes
20:51:32.583 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
2 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

20:51:32.583 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
20:51:32.583 [Info] Writing prefixes
20:51:32.583 [Info] Writing postfixes
20:51:32.588 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.SimGameState_ReadyMech_Patch::Prefix(BattleTech.SimGameState __instance)
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Postfix(int baySlot, string id, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_ReadyMech_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:32.588 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
20:51:32.588 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
20:51:32.588 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.SimGameState_ReadyMech_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:32.593 [Info] Writing prefixes
20:51:32.593 [Info] Writing postfixes
20:51:32.596 [Info] Patching void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_RemoveMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, BattleTech.SimGameState __instance)

20:51:32.596 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active)
20:51:32.597 [Info] Writing postfixes
20:51:32.600 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

20:51:32.600 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
20:51:32.600 [Info] Writing postfixes
20:51:32.603 [Info] Patching bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapInativeMech_Patch::Postfix(string id, bool pay, BattleTech.SimGameState __instance)

20:51:32.603 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay)
20:51:32.603 [Info] Writing postfixes
20:51:32.606 [Info] Patching void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_StripMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

20:51:32.606 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def)
20:51:32.606 [Info] Writing postfixes
20:51:32.608 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

20:51:32.608 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
20:51:32.608 [Info] Writing postfixes
20:51:32.610 [Info] Patching void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

20:51:32.610 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
20:51:32.610 [Info] Writing prefixes
20:51:32.611 [Info] Patching void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_Cancel_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

20:51:32.612 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
20:51:32.612 [Info] Writing prefixes
20:51:32.615 [Info] Patching void BattleTech.UI.MechBayPanel::OnMechLabClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechBayPanel_OnMechLabClosed_Patch::Prefix(BattleTech.UI.MechBayPanel __instance)

20:51:32.615 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnMechLabClosed()
20:51:32.615 [Info] Writing prefixes
20:51:32.618 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

20:51:32.618 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder()
20:51:32.618 [Info] Writing prefixes
20:51:32.618 [Info] Writing postfixes
20:51:32.619 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

20:51:32.620 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech()
20:51:32.620 [Info] Writing prefixes
20:51:32.620 [Info] Writing postfixes
20:51:32.622 [Info] Patching void BattleTech.UI.MechPlacementPopup::OnConfirmClicked() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

20:51:32.622 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::OnConfirmClicked()
20:51:32.622 [Info] Writing prefixes
20:51:32.623 [Info] Writing postfixes
20:51:32.625 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

20:51:32.625 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
20:51:32.626 [Info] Writing postfixes
20:51:32.627 [Info] Patching void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechRepresentationSimGame_Init_Patch::Postfix(BattleTech.MechRepresentationSimGame __instance)

20:51:32.627 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef)
20:51:32.627 [Info] Writing postfixes
20:51:32.630 [Info] Patching void BattleTech.MouseRotation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechSpin.Patches.MouseRotation_Update::Prefix(BattleTech.MouseRotation __instance)

20:51:32.630 [Info] Running ILHook manipulator on void BattleTech.MouseRotation::Update()
20:51:32.630 [Info] Writing prefixes
20:51:32.634 [Info] Patching void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.TurretRepresentationInitPatch::Postfix(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented, BattleTech.TurretRepresentation __instance)

20:51:32.634 [Info] Running ILHook manipulator on void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented)
20:51:32.634 [Info] Writing postfixes
20:51:32.636 [Info] Patching void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.GameRepresentationInitPatch::Postfix(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented, BattleTech.VehicleRepresentation __instance)

20:51:32.637 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented)
20:51:32.637 [Info] Writing postfixes
20:51:32.640 [Info] Patching virtual void WeaponEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechResizer.WeaponEffectPlayProjectilePatch::Prefix(WeaponEffect __instance)

20:51:32.640 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayProjectile()
20:51:32.640 [Info] Writing prefixes
20:51:32.644 [Info] Patching void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LoadRequest_CompleteLoadTracker::Postfix(BattleTech.Data.LoadRequest __instance, object tracker, bool loadSuccess)

20:51:32.644 [Info] Running ILHook manipulator on void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess)
20:51:32.644 [Info] Writing postfixes
20:51:32.647 [Info] Patching void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AttackDirector_PerformAttack::Prefix(BattleTech.AttackDirector __instance, BattleTech.AttackDirector+AttackSequence sequence)

20:51:32.647 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence)
20:51:32.648 [Info] Writing prefixes
20:51:32.650 [Info] Patching virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_OnAudioEvent::Prefix(BattleTech.VehicleRepresentation __instance, string audioEvent)

20:51:32.651 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent)
20:51:32.651 [Info] Writing prefixes
20:51:32.653 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStartAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStartAudio::Prefix(BattleTech.VehicleRepresentation __instance)

20:51:32.653 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStartAudio()
20:51:32.653 [Info] Writing prefixes
20:51:32.656 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStopAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStopAudio::Prefix(BattleTech.VehicleRepresentation __instance)

20:51:32.656 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStopAudio()
20:51:32.656 [Info] Writing prefixes
20:51:32.659 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)
* static void CustomUnits.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

20:51:32.659 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
20:51:32.659 [Info] Writing postfixes
20:51:32.664 [Info] Patching UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_GetAttachTransform::Prefix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, UnityEngine.Transform& __result)

20:51:32.665 [Info] Running ILHook manipulator on UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location)
20:51:32.665 [Info] Writing prefixes
20:51:32.667 [Info] Patching virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_IsTargetPositionInFiringArc::Prefix(BattleTech.Vehicle __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

20:51:32.667 [Info] Running ILHook manipulator on virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
20:51:32.667 [Info] Writing prefixes
20:51:32.670 [Info] Patching virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_IsTargetPositionInFiringArc::Prefix(BattleTech.Mech __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

20:51:32.670 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
20:51:32.670 [Info] Writing prefixes
20:51:32.673 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

20:51:32.673 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
20:51:32.673 [Info] Writing postfixes
20:51:32.675 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:32.676 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:32.676 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:32.732 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:32.740 [Info] Writing postfixes
20:51:32.745 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SimGameState_StartContract::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

20:51:32.746 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
20:51:32.746 [Info] Writing postfixes
20:51:32.749 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet& requiredTags, HBS.Collections.TagSet& excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)

20:51:32.749 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
20:51:32.749 [Info] Writing prefixes
20:51:32.753 [Info] Patching void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector__SendTurnActorActivateMessage::Postfix(BattleTech.TurnDirector __instance, int turnActorIndex)

20:51:32.753 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex)
20:51:32.753 [Info] Writing postfixes
20:51:32.757 [Info] Patching UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDInWorldScalingActorInfo_GetWorldPos::Postfix(BattleTech.UI.CombatHUDInWorldScalingActorInfo __instance, UnityEngine.Vector3& __result)

20:51:32.757 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos()
20:51:32.757 [Info] Writing postfixes
20:51:32.761 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

20:51:32.761 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
20:51:32.761 [Info] Writing postfixes
20:51:32.763 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix(Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance, Boolean& __runOriginal)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance, Boolean& __runOriginal)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

20:51:32.763 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
20:51:32.764 [Info] Writing prefixes
20:51:32.764 [Info] Writing postfixes
20:51:32.770 [Info] Patching void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceContractDetailsWidget_PopulateContract::Postfix(BattleTech.UI.LanceContractDetailsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

20:51:32.770 [Info] Running ILHook manipulator on void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract)
20:51:32.770 [Info] Writing postfixes
20:51:32.780 [Info] Patching void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SGContractsWidget_PopulateContract::Postfix(BattleTech.UI.SGContractsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

20:51:32.780 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated)
20:51:32.780 [Info] Writing postfixes
20:51:32.797 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

20:51:32.797 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
20:51:32.797 [Info] Writing postfixes
20:51:32.800 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerEnter::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, UnityEngine.EventSystems.PointerEventData data)

20:51:32.800 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data)
20:51:32.801 [Info] Writing prefixes
20:51:32.803 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

20:51:32.803 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
20:51:32.804 [Info] Writing postfixes
20:51:32.808 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_Init::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD HUD)

20:51:32.809 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD)
20:51:32.809 [Info] Writing postfixes
20:51:32.813 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

20:51:32.814 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay()
20:51:32.814 [Info] Writing prefixes
20:51:32.814 [Info] Writing postfixes
20:51:32.819 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.AttackDirection& ___shownAttackDirection, BattleTech.Mech ___displayedMech, BattleTech.Vehicle ___displayedVehicle)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.Mech ___displayedMech, BattleTech.AttackDirection& ___shownAttackDirection)

20:51:32.819 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value)
20:51:32.819 [Info] Writing prefixes
20:51:32.821 [Info] Writing postfixes
20:51:32.823 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_ShowMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

20:51:32.824 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay()
20:51:32.824 [Info] Writing prefixes
20:51:32.826 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShowVehicleDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

20:51:32.826 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay()
20:51:32.826 [Info] Writing postfixes
20:51:32.828 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_ShowMechDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

20:51:32.828 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay()
20:51:32.829 [Info] Writing postfixes
20:51:32.832 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showVehicleDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

20:51:32.832 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay()
20:51:32.832 [Info] Writing postfixes
20:51:32.834 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showBuildingDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

20:51:32.834 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay()
20:51:32.835 [Info] Writing postfixes
20:51:32.837 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showTurretDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

20:51:32.837 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay()
20:51:32.837 [Info] Writing postfixes
20:51:32.839 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDTargetingComputer_UpdateStructureAndArmor::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)

20:51:32.839 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor()
20:51:32.840 [Info] Writing prefixes
20:51:32.842 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_RefreshHoverInfoSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:32.843 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo()
20:51:32.843 [Info] Writing prefixes
20:51:32.849 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.Mech value)

20:51:32.850 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value)
20:51:32.850 [Info] Writing prefixes
20:51:32.852 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)

20:51:32.852 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
20:51:32.852 [Info] Writing prefixes
20:51:32.857 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechDefSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.MechDef value)

20:51:32.858 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value)
20:51:32.858 [Info] Writing prefixes
20:51:32.859 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedChassisDef::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ChassisDef value)

20:51:32.860 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value)
20:51:32.860 [Info] Writing prefixes
20:51:32.861 [Info] Patching void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDVehicleArmorReadout_Init::Postfix(BattleTech.UI.HUDVehicleArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)

20:51:32.862 [Info] Running ILHook manipulator on void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)
20:51:32.862 [Info] Writing postfixes
20:51:32.864 [Info] Patching void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.GameRepresentation_SetHighlightAlpha::Prefix(BattleTech.GameRepresentation __instance, float alpha)

20:51:32.864 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha)
20:51:32.864 [Info] Writing prefixes
20:51:32.866 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

20:51:32.866 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
20:51:32.866 [Info] Writing postfixes
20:51:32.868 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabPanel_InitWidgets::PreInit(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabInventoryWidget ___inventoryWidget)
3 postfixes:
* static void CustomFilters.MechLabPanel_InitWidgets::Init(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabInventoryWidget ___inventoryWidget)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:32.869 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
20:51:32.869 [Info] Writing prefixes
20:51:32.869 [Info] Writing postfixes
20:51:32.872 [Info] Patching void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)
1 postfixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)

20:51:32.872 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request)
20:51:32.872 [Info] Writing prefixes
20:51:32.873 [Info] Writing postfixes
20:51:32.874 [Info] Patching void BattleTech.UI.MechLabPanel::ConfirmRevertMech() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.MechlabFix::ConfirmRevertMech_Pre()
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Prefix(BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:32.874 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ConfirmRevertMech()
20:51:32.875 [Info] Writing prefixes
20:51:32.875 [Info] Writing postfixes
20:51:32.876 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.MechlabFix::ExitMechLab_Pre(BattleTech.UI.MechLabPanel __instance)
2 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_ExitMechLab::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:32.877 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
20:51:32.877 [Info] Writing prefixes
20:51:32.877 [Info] Writing postfixes
20:51:32.878 [Info] Patching void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryWeapon_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance)

20:51:32.879 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor()
20:51:32.879 [Info] Writing postfixes
20:51:32.880 [Info] Patching void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryGear_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryGear_NotListView __instance)

20:51:32.881 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor()
20:51:32.881 [Info] Writing postfixes
20:51:32.882 [Info] Patching void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechLabPanel_ShowDropErrorMessage::Postfix(BattleTech.UI.MechLabPanel __instance, Localize.Text msg)

20:51:32.882 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg)
20:51:32.883 [Info] Writing postfixes
20:51:32.885 [Info] Patching int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_GetBayRowFromSlot::Prefix(BattleTech.UI.MechBayPanel __instance, Int32& slot)

20:51:32.885 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot)
20:51:32.885 [Info] Writing prefixes
20:51:32.888 [Info] Patching void BattleTech.UI.MechBayPanel::ViewMechStorage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewMechStorage::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, BattleTech.SimGameState ___sim)

20:51:32.888 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewMechStorage()
20:51:32.888 [Info] Writing postfixes
20:51:32.890 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_Init::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.SimGameState sim)
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

20:51:32.890 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
20:51:32.891 [Info] Writing prefixes
20:51:32.891 [Info] Writing postfixes
20:51:32.893 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

20:51:32.893 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
20:51:32.893 [Info] Writing prefixes
20:51:32.896 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, Boolean& locked, Single& minTonnage, Single& maxTonnage)

20:51:32.897 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage)
20:51:32.897 [Info] Writing prefixes
20:51:32.900 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
1 postfixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Postfix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)

20:51:32.900 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
20:51:32.901 [Info] Writing prefixes
20:51:32.901 [Info] Writing postfixes
20:51:32.903 [Info] Patching void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_SaveLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration config, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

20:51:32.904 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config)
20:51:32.904 [Info] Writing prefixes
20:51:32.906 [Info] Patching virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceLoadoutSlot_OnAddItem::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, bool __result, BattleTech.UI.LanceConfiguratorPanel ___LC)

20:51:32.906 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
20:51:32.906 [Info] Writing prefixes
20:51:32.910 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

20:51:32.910 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
20:51:32.910 [Info] Writing prefixes
20:51:32.910 [Info] Writing postfixes
20:51:32.913 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

20:51:32.914 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
20:51:32.914 [Info] Writing prefixes
20:51:32.914 [Info] Writing postfixes
20:51:32.921 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_MoveMultiplier::Prefix(BattleTech.Mech __instance, Single& __result)
2 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MoveMultiplier::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:32.921 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
20:51:32.922 [Info] Writing prefixes
20:51:32.922 [Info] Writing postfixes
20:51:32.924 [Info] Patching void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LogMechKillInflicted::Prefix(BattleTech.Pilot __instance, int stackID, string sourceID)

20:51:32.924 [Info] Running ILHook manipulator on void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID)
20:51:32.925 [Info] Writing prefixes
20:51:32.927 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
4 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

20:51:32.927 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
20:51:32.927 [Info] Writing prefixes
20:51:32.927 [Info] Writing postfixes
20:51:32.931 [Info] Patching void BattleTech.Rendering.MechMeshMerge::GenerateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_GenerateCache::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

20:51:32.931 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::GenerateCache()
20:51:32.931 [Info] Writing prefixes
20:51:32.939 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnDestroy::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

20:51:32.939 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnDestroy()
20:51:32.940 [Info] Writing prefixes
20:51:32.945 [Info] Patching void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_BuildCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

20:51:32.945 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh()
20:51:32.945 [Info] Writing prefixes
20:51:32.955 [Info] Patching void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_RefreshCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

20:51:32.955 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged)
20:51:32.955 [Info] Writing prefixes
20:51:32.958 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnEnable::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

20:51:32.958 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnEnable()
20:51:32.958 [Info] Writing prefixes
20:51:32.962 [Info] Patching virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_ContractInitialize::Postfix(BattleTech.UnitSpawnPointGameLogic __instance)

20:51:32.963 [Info] Running ILHook manipulator on virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize()
20:51:32.963 [Info] Writing postfixes
20:51:32.966 [Info] Patching static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorFactory_CreateMech::Prefix(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

20:51:32.966 [Info] Running ILHook manipulator on static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
20:51:32.966 [Info] Writing prefixes
20:51:32.968 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

20:51:32.968 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
20:51:32.969 [Info] Writing prefixes
20:51:32.972 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

20:51:32.972 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
20:51:32.972 [Info] Writing postfixes
20:51:32.974 [Info] Patching static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorFactory_CreateVehicle::Postfix(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Vehicle& __result)

20:51:32.974 [Info] Running ILHook manipulator on static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
20:51:32.974 [Info] Writing postfixes
20:51:32.976 [Info] Patching void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDestructibleObject_Collapse::Prefix(MechDestructibleObject __instance, UnityEngine.Vector3 forceDirection, float forceMagnitude, UnityEngine.Rigidbody[]& ___destroyedRigidbodies)

20:51:32.976 [Info] Running ILHook manipulator on void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude)
20:51:32.976 [Info] Writing prefixes
20:51:32.979 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_TryShow::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance, BattleTech.MechRepresentationSimGame mechRep)

20:51:32.979 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep)
20:51:32.979 [Info] Writing prefixes
20:51:32.981 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_OnValueChanged::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance)

20:51:32.981 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged()
20:51:32.981 [Info] Writing prefixes
20:51:32.983 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshPaintSelector() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechLabPanel_RefreshPaintSelector::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechPaintPatternSelectorWidget ___paintSelector)

20:51:32.983 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshPaintSelector()
20:51:32.983 [Info] Writing prefixes
20:51:32.985 [Info] Patching UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_childrenRenderers::Prefix(BattleTech.Rendering.MechMeshMerge __instance, Boolean& __state, UnityEngine.SkinnedMeshRenderer[]& ____childrenRenderers, UnityEngine.GameObject& ___visibleObject, UnityEngine.SkinnedMeshRenderer[]& __result)

20:51:32.985 [Info] Running ILHook manipulator on UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers()
20:51:32.985 [Info] Writing prefixes
20:51:32.986 [Info] Patching void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Renderer_sharedMaterial_set::Prefix(UnityEngine.Renderer __instance, UnityEngine.Material value)

20:51:32.986 [Info] Running ILHook manipulator on void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value)
20:51:32.988 [Info] Writing prefixes
20:51:32.989 [Info] Patching void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyArmorStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)
1 postfixes:
* static void CustomUnits.Mech_ApplyArmorStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)

20:51:32.989 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
20:51:32.989 [Info] Writing prefixes
20:51:32.990 [Info] Writing postfixes
20:51:32.992 [Info] Patching void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_SetNeedsInjury::Prefix(BattleTech.Pilot __instance, BattleTech.InjuryReason reason)

20:51:32.992 [Info] Running ILHook manipulator on void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason)
20:51:32.992 [Info] Writing prefixes
20:51:32.994 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)

20:51:32.994 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location)
20:51:32.994 [Info] Writing prefixes
20:51:32.995 [Info] Writing postfixes
20:51:32.997 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)

20:51:32.997 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location)
20:51:32.997 [Info] Writing prefixes
20:51:32.998 [Info] Writing postfixes
20:51:32.999 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.ArmorLocation value)
1 postfixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.ArmorLocation value)

20:51:33.000 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value)
20:51:33.000 [Info] Writing prefixes
20:51:33.000 [Info] Writing postfixes
20:51:33.002 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Prefix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

20:51:33.002 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
20:51:33.002 [Info] Writing prefixes
20:51:33.003 [Info] Writing postfixes
20:51:33.063 [Info] Patching static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetLongArmorLocation::Postfix(BattleTech.ArmorLocation location, Localize.Text& __result)

20:51:33.063 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location)
20:51:33.064 [Info] Writing postfixes
20:51:33.068 [Info] Patching static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetAbbreviatedChassisLocation::Postfix(BattleTech.ChassisLocations location, Localize.Text& __result)

20:51:33.068 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location)
20:51:33.069 [Info] Writing postfixes
20:51:33.073 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, bool ___usedForCalledShots)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance)

20:51:33.074 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data)
20:51:33.074 [Info] Writing prefixes
20:51:33.075 [Info] Writing postfixes
20:51:33.082 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:33.082 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
20:51:33.082 [Info] Writing prefixes
20:51:33.082 [Info] Writing postfixes
20:51:33.092 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:33.093 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
20:51:33.093 [Info] Writing postfixes
20:51:33.102 [Info] Patching void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Prefix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)
1 postfixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Postfix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)

20:51:33.103 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat)
20:51:33.103 [Info] Writing prefixes
20:51:33.104 [Info] Writing postfixes
20:51:33.116 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_NukeStructureLocation::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomUnits.Mech_NukeStructureLocation::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

20:51:33.116 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
20:51:33.117 [Info] Writing prefixes
20:51:33.117 [Info] Writing postfixes
20:51:33.122 [Info] Patching static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechStructureRules_GetDependentLocation::Postfix(BattleTech.ChassisLocations location, BattleTech.ChassisLocations& __result)

20:51:33.122 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location)
20:51:33.122 [Info] Writing postfixes
20:51:33.125 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

20:51:33.126 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
20:51:33.126 [Info] Writing postfixes
20:51:33.129 [Info] Patching bool BattleTech.Mech::get_IsLegged() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsLegged::Postfix(BattleTech.Mech __instance, Boolean& __result)

20:51:33.130 [Info] Running ILHook manipulator on bool BattleTech.Mech::get_IsLegged()
20:51:33.130 [Info] Writing postfixes
20:51:33.133 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)

20:51:33.133 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
20:51:33.133 [Info] Writing postfixes
20:51:33.137 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
3 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

20:51:33.137 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:33.138 [Info] Writing prefixes
20:51:33.138 [Info] Writing postfixes
20:51:33.147 [Info] Patching bool BattleTech.MechDef::get_IsDestroyed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsDestroyed::Postfix(BattleTech.MechDef __instance, Boolean& __result)

20:51:33.147 [Info] Running ILHook manipulator on bool BattleTech.MechDef::get_IsDestroyed()
20:51:33.147 [Info] Writing postfixes
20:51:33.149 [Info] Patching void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyLegStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

20:51:33.149 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
20:51:33.149 [Info] Writing prefixes
20:51:33.151 [Info] Patching void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

20:51:33.152 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
20:51:33.152 [Info] Writing prefixes
20:51:33.153 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo, Boolean& __runOriginal)
* static bool CustomUnits.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(BattleTech.Mech __instance, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo, Boolean& __runOriginal)

20:51:33.154 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
20:51:33.154 [Info] Writing prefixes
20:51:33.156 [Info] Patching void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplySideTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

20:51:33.156 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
20:51:33.156 [Info] Writing prefixes
20:51:33.158 [Info] Patching void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyCenterTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

20:51:33.158 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
20:51:33.159 [Info] Writing prefixes
20:51:33.162 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:33.163 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:33.163 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:33.163 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:33.171 [Info] Writing prefixes
20:51:33.171 [Info] Writing postfixes
20:51:33.176 [Info] Patching virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Prefix(BattleTech.Mech __instance, BattleTech.AttackDirection attackDirection, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Postfix()

20:51:33.176 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection)
20:51:33.176 [Info] Writing prefixes
20:51:33.177 [Info] Writing postfixes
20:51:33.179 [Info] Patching void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Prefix(BattleTech.UI.CombatDebugHUD __instance)
1 postfixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Postfix()

20:51:33.179 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics()
20:51:33.179 [Info] Writing prefixes
20:51:33.180 [Info] Writing postfixes
20:51:33.181 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
1 postfixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

20:51:33.182 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
20:51:33.182 [Info] Writing prefixes
20:51:33.183 [Info] Writing postfixes
20:51:33.185 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)

20:51:33.186 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)
20:51:33.186 [Info] Writing prefixes
20:51:33.186 [Info] Writing postfixes
20:51:33.189 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetAdjacentHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)

20:51:33.189 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)
20:51:33.190 [Info] Writing prefixes
20:51:33.190 [Info] Writing postfixes
20:51:33.194 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)

20:51:33.195 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
20:51:33.195 [Info] Writing prefixes
20:51:33.195 [Info] Writing postfixes
20:51:33.200 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeIn::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

20:51:33.201 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length)
20:51:33.201 [Info] Writing prefixes
20:51:33.202 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeOut::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

20:51:33.202 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length)
20:51:33.203 [Info] Writing prefixes
20:51:33.204 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_OnUnitSpawnComplete::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

20:51:33.204 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
20:51:33.205 [Info] Writing prefixes
20:51:33.205 [Info] Writing postfixes
20:51:33.207 [Info] Patching System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_GetRealMissionObjectiveResults::Postfix(BattleTech.Contract __instance, BattleTech.TeamController teamController, System.Collections.Generic.List`1[[BattleTech.MissionObjectiveResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:33.207 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController)
20:51:33.208 [Info] Writing postfixes
20:51:33.213 [Info] Patching bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HostilityMatrix_IsFriendly::Prefix(BattleTech.HostilityMatrix __instance, BattleTech.Team teamOne, BattleTech.Team teamTwo, Boolean& __result)

20:51:33.214 [Info] Running ILHook manipulator on bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo)
20:51:33.214 [Info] Writing prefixes
20:51:33.216 [Info] Patching virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateJump_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

20:51:33.217 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos)
20:51:33.217 [Info] Writing prefixes
20:51:33.219 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

20:51:33.220 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
20:51:33.220 [Info] Writing prefixes
20:51:33.222 [Info] Patching void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, MessageCenterMessage message, String& ____teamId, BattleTech.Team& ____team)

20:51:33.222 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message)
20:51:33.223 [Info] Writing postfixes
20:51:33.225 [Info] Patching virtual void BattleTech.Mech::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_HandleDeath::Postfix(BattleTech.Mech __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

20:51:33.225 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::HandleDeath(string attackerGUID)
20:51:33.225 [Info] Writing postfixes
20:51:33.228 [Info] Patching virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_HandleDeath::Postfix(BattleTech.Vehicle __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

20:51:33.228 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID)
20:51:33.228 [Info] Writing postfixes
20:51:33.230 [Info] Patching virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.OccupyRegionObjective_UpdateCounts::Postfix(BattleTech.Designed.OccupyRegionObjective __instance)

20:51:33.230 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts()
20:51:33.232 [Info] Writing postfixes
20:51:33.235 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ObjectiveGameLogic_ActivateObjectiveConvoy::Prefix(BattleTech.Framework.ObjectiveGameLogic __instance)
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

20:51:33.235 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
20:51:33.236 [Info] Writing prefixes
20:51:33.236 [Info] Writing postfixes
20:51:33.238 [Info] Patching float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetTerrainModifiedCost::Postfix(BattleTech.PathNodeGrid __instance, BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable, BattleTech.AbstractActor ___owningActor, BattleTech.CombatGameState ___combat, Single& __result)

20:51:33.238 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable)
20:51:33.238 [Info] Writing postfixes
20:51:33.241 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

20:51:33.242 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
20:51:33.242 [Info] Writing postfixes
20:51:33.247 [Info] Patching virtual void BattleTech.MechJumpSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_OnAdded::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:33.247 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnAdded()
20:51:33.247 [Info] Writing postfixes
20:51:33.256 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
1 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

20:51:33.256 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
20:51:33.256 [Info] Writing prefixes
20:51:33.257 [Info] Writing postfixes
20:51:33.260 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardDelta::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 delta)

20:51:33.260 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta)
20:51:33.260 [Info] Writing postfixes
20:51:33.264 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)

20:51:33.264 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
20:51:33.265 [Info] Writing prefixes
20:51:33.270 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
3 postfixes:
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:33.270 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
20:51:33.270 [Info] Writing prefixes
20:51:33.270 [Info] Writing postfixes
20:51:33.274 [Info] Patching void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechJumpSequence_Constructor::Prefix(BattleTech.MechJumpSequence __instance, UnityEngine.Vector3& finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)

20:51:33.275 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)
20:51:33.275 [Info] Writing prefixes
20:51:33.278 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

20:51:33.278 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
20:51:33.279 [Info] Writing prefixes
20:51:33.280 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

20:51:33.281 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
20:51:33.281 [Info] Writing prefixes
20:51:33.283 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

20:51:33.283 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
20:51:33.283 [Info] Writing prefixes
20:51:33.287 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

20:51:33.287 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
20:51:33.288 [Info] Writing prefixes
20:51:33.290 [Info] Patching void BattleTech.ActorMovementSequence::set_DamageParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_DamageParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

20:51:33.290 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_DamageParam(float value)
20:51:33.290 [Info] Writing prefixes
20:51:33.293 [Info] Patching void BattleTech.MechJumpSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_UpdateSquad::Postfix(BattleTech.MechJumpSequence __instance, bool ___HasStarted, float ___t)

20:51:33.293 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Update()
20:51:33.293 [Info] Writing postfixes
20:51:33.297 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(BattleTech.Mech __instance, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_JumpDistance::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:33.297 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
20:51:33.297 [Info] Writing prefixes
20:51:33.298 [Info] Writing postfixes
20:51:33.300 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechJumpSequence_CompleteJump::Prefix(BattleTech.MechJumpSequence __instance, Boolean& __state)
3 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomUnits.MechJumpSequence_CompleteJump::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __state)

20:51:33.300 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
20:51:33.300 [Info] Writing prefixes
20:51:33.300 [Info] Writing postfixes
20:51:33.302 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_RefreshSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, bool forceUpdate, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

20:51:33.302 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
20:51:33.303 [Info] Writing prefixes
20:51:33.303 [Info] Writing postfixes
20:51:33.307 [Info] Patching virtual void BattleTech.MechRepresentation::LateUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:33.307 [Info] Running ILHook manipulator on virtual void BattleTech.MechRepresentation::LateUpdate()
20:51:33.307 [Info] Transpiling virtual void BattleTech.MechRepresentation::LateUpdate()
20:51:33.309 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:33.315 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_OnAdded::Prefix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType& ___moveType)

20:51:33.316 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnAdded()
20:51:33.316 [Info] Writing prefixes
20:51:33.325 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadDamageState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentationSimGame_LoadDamageState::Prefix(BattleTech.MechRepresentationSimGame __instance)

20:51:33.325 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadDamageState()
20:51:33.325 [Info] Writing prefixes
20:51:33.327 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

20:51:33.328 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
20:51:33.328 [Info] Writing postfixes
20:51:33.330 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)
* static void CustomUnits.Mech_WorkingJumpjets::Postfix(BattleTech.Mech __instance, Int32& __result)

20:51:33.330 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
20:51:33.330 [Info] Writing postfixes
20:51:33.333 [Info] Patching System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateJump_GetAllDFATargets::Postfix(BattleTech.UI.SelectionStateJump __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:33.333 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets()
20:51:33.334 [Info] Writing postfixes
20:51:33.339 [Info] Patching virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanDFATargetFromPosition::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, Boolean& __result)

20:51:33.340 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position)
20:51:33.340 [Info] Writing postfixes
20:51:33.343 [Info] Patching virtual int BattleTech.AbstractActor::get_GuardLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GuardLevel::Postfix(BattleTech.Mech __instance, Int32& __result)

20:51:33.343 [Info] Running ILHook manipulator on virtual int BattleTech.AbstractActor::get_GuardLevel()
20:51:33.344 [Info] Writing postfixes
20:51:33.347 [Info] Patching bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanEngageTarget::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, String& debugMsg, Boolean& __result)

20:51:33.347 [Info] Running ILHook manipulator on bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg)
20:51:33.347 [Info] Writing postfixes
20:51:33.350 [Info] Patching void BattleTech.MechDisplacementSequence::ApplyDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDisplacementSequence_ApplyDamage::Prefix(BattleTech.MechDisplacementSequence __instance)

20:51:33.350 [Info] Running ILHook manipulator on void BattleTech.MechDisplacementSequence::ApplyDamage()
20:51:33.352 [Info] Writing prefixes
20:51:33.359 [Info] Patching void BattleTech.Rendering.UI.UICreep::RefreshCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_RefreshCache::Prefix(BattleTech.Rendering.UI.UICreep __instance, UnityEngine.Bounds& ___creepBounds)

20:51:33.360 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.UICreep::RefreshCache()
20:51:33.360 [Info] Writing prefixes
20:51:33.367 [Info] Patching void BattleTech.MechRepresentation::SetLoadAnimation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetLoadAnimation::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.367 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetLoadAnimation()
20:51:33.367 [Info] Writing prefixes
20:51:33.370 [Info] Patching void BattleTech.MechRepresentation::UpdateHeatSetting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateHeatSetting::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.371 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateHeatSetting()
20:51:33.371 [Info] Writing prefixes
20:51:33.373 [Info] Patching void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateLegDamageAnimFlags::Prefix(BattleTech.MechRepresentation __instance, BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)

20:51:33.373 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)
20:51:33.373 [Info] Writing prefixes
20:51:33.439 [Info] Patching void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerMeleeTransition::Prefix(BattleTech.MechRepresentation __instance, bool meleeIn)

20:51:33.439 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn)
20:51:33.440 [Info] Writing prefixes
20:51:33.442 [Info] Patching void BattleTech.MechRepresentation::ClearLoadState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ClearLoadState::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.442 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ClearLoadState()
20:51:33.443 [Info] Writing prefixes
20:51:33.444 [Info] Patching void BattleTech.MechRepresentation::PlayComponentCritVFX(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayComponentCritVFX::Prefix(BattleTech.MechRepresentation __instance, int location)

20:51:33.445 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayComponentCritVFX(int location)
20:51:33.445 [Info] Writing prefixes
20:51:33.448 [Info] Patching void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayDeathFloatie::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod)

20:51:33.449 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod)
20:51:33.449 [Info] Writing prefixes
20:51:33.452 [Info] Patching void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetMeleeIdleState::Prefix(BattleTech.MechRepresentation __instance, bool isMelee)

20:51:33.452 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee)
20:51:33.452 [Info] Writing prefixes
20:51:33.455 [Info] Patching void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleRandomIdles::Prefix(BattleTech.MechRepresentation __instance, bool shouldIdle)

20:51:33.455 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle)
20:51:33.456 [Info] Writing prefixes
20:51:33.459 [Info] Patching void BattleTech.MechRepresentation::SetIdleAnimState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetIdleAnimState::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.459 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetIdleAnimState()
20:51:33.459 [Info] Writing prefixes
20:51:33.463 [Info] Patching void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayImpactAnimSimple::Prefix(BattleTech.MechRepresentation __instance, BattleTech.AttackDirection attackDirection, float totalDamage)

20:51:33.463 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage)
20:51:33.463 [Info] Writing prefixes
20:51:33.468 [Info] Patching void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetUnsteadyAnim::Prefix(BattleTech.MechRepresentation __instance, bool isUnsteady)

20:51:33.469 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady)
20:51:33.469 [Info] Writing prefixes
20:51:33.471 [Info] Patching void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ForceKnockdown::Prefix(BattleTech.MechRepresentation __instance, UnityEngine.Vector2 attackDirection)

20:51:33.471 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection)
20:51:33.471 [Info] Writing prefixes
20:51:33.474 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.475 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetAudio()
20:51:33.475 [Info] Writing prefixes
20:51:33.477 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.477 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetAudio()
20:51:33.478 [Info] Writing prefixes
20:51:33.480 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.480 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetEffect()
20:51:33.480 [Info] Writing prefixes
20:51:33.483 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.484 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetEffect()
20:51:33.484 [Info] Writing prefixes
20:51:33.486 [Info] Patching void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleHeadlights::Prefix(BattleTech.MechRepresentation __instance, bool headlightsActive)

20:51:33.486 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive)
20:51:33.486 [Info] Writing prefixes
20:51:33.488 [Info] Patching void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_HandleDeathOnLoad::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod, int location)

20:51:33.488 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location)
20:51:33.489 [Info] Writing prefixes
20:51:33.491 [Info] Patching void BattleTech.MechRepresentation::PlayAlliesReportDeathVO() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayAlliesReportDeathVO::Prefix(BattleTech.MechRepresentation __instance)

20:51:33.492 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayAlliesReportDeathVO()
20:51:33.492 [Info] Writing prefixes
20:51:33.495 [Info] Patching void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerFootFall::Prefix(BattleTech.MechRepresentation __instance, int leftFoot)

20:51:33.495 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot)
20:51:33.496 [Info] Writing prefixes
20:51:33.505 [Info] Patching void BattleTech.ActorMovementSequence::PlayMeleeAnim() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Prefix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee, BattleTech.ICombatant ___meleeTarget)

20:51:33.505 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::PlayMeleeAnim()
20:51:33.505 [Info] Writing prefixes
20:51:33.506 [Info] Writing postfixes
20:51:33.511 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateCache::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

20:51:33.511 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateCache()
20:51:33.511 [Info] Writing prefixes
20:51:33.515 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateProperties() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateProperties::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

20:51:33.515 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateProperties()
20:51:33.535 [Info] Writing prefixes
20:51:33.540 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_AddProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)

20:51:33.540 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)
20:51:33.541 [Info] Writing prefixes
20:51:33.543 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_RemoveProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)

20:51:33.543 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)
20:51:33.544 [Info] Writing prefixes
20:51:33.545 [Info] Patching virtual void BattleTech.VehicleRepresentation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_Update::Prefix(BattleTech.VehicleRepresentation __instance)

20:51:33.546 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::Update()
20:51:33.546 [Info] Writing prefixes
20:51:33.548 [Info] Patching virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:33.548 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
20:51:33.549 [Info] Transpiling virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
20:51:33.549 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:33.551 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:33.551 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
20:51:33.551 [Info] Transpiling void BattleTech.MechDef::Refresh()
20:51:33.551 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:33.552 [Info] Writing postfixes
20:51:33.553 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:33.553 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
20:51:33.554 [Info] Transpiling void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
20:51:33.554 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:33.556 [Info] Patching virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_GatherDependencies::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:33.556 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:33.556 [Info] Writing prefixes
20:51:33.560 [Info] Patching void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_RequestInventoryPrefabs::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:33.560 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:33.560 [Info] Writing prefixes
20:51:33.564 [Info] Patching virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_GatherDependencies::Postfix(BattleTech.VehicleChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:33.565 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:33.565 [Info] Writing postfixes
20:51:33.569 [Info] Patching virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_DependenciesLoaded::Postfix(BattleTech.VehicleChassisDef __instance, uint loadWeight, Boolean& __result)

20:51:33.569 [Info] Running ILHook manipulator on virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight)
20:51:33.570 [Info] Writing postfixes
20:51:33.572 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:33.572 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:33.572 [Info] Writing postfixes
20:51:33.576 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:33.576 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:33.576 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:33.577 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:33.578 [Info] Writing postfixes
20:51:33.580 [Info] Patching virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight)
1 postfixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Postfix(BattleTech.MechDef __instance, uint loadWeight, Boolean& __result)

20:51:33.581 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight)
20:51:33.581 [Info] Writing prefixes
20:51:33.581 [Info] Writing postfixes
20:51:33.583 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_BeginRequestResources::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

20:51:33.584 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
20:51:33.584 [Info] Writing prefixes
20:51:33.585 [Info] Writing postfixes
20:51:33.590 [Info] Patching virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ChassisDef_DependenciesLoaded::Prefix(BattleTech.ChassisDef __instance, uint loadWeight, Boolean& __result, BattleTech.MechComponentRef[]& ___fixedEquipment)

20:51:33.590 [Info] Running ILHook manipulator on virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight)
20:51:33.591 [Info] Writing prefixes
20:51:33.593 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

20:51:33.593 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
20:51:33.594 [Info] Writing postfixes
20:51:33.595 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUD_OnActorSelected::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

20:51:33.595 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
20:51:33.596 [Info] Writing postfixes
20:51:33.597 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)

20:51:33.597 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
20:51:33.598 [Info] Writing prefixes
20:51:33.601 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

20:51:33.601 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
20:51:33.601 [Info] Writing prefixes
20:51:33.602 [Info] Writing postfixes
20:51:33.605 [Info] Patching void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbstractActor_OnPlayerVisibilityChanged::Prefix(BattleTech.AbstractActor __instance, BattleTech.VisibilityLevel& newLevel)

20:51:33.605 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
20:51:33.605 [Info] Writing prefixes
20:51:33.608 [Info] Patching void BattleTech.PathingManager::removeDeadPaths() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingManager_removeDeadPaths::Prefix(BattleTech.PathingManager __instance)

20:51:33.608 [Info] Running ILHook manipulator on void BattleTech.PathingManager::removeDeadPaths()
20:51:33.608 [Info] Writing prefixes
20:51:33.611 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)

20:51:33.611 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
20:51:33.611 [Info] Writing prefixes
20:51:33.616 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)
* static void CustomUnits.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

20:51:33.616 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
20:51:33.616 [Info] Writing postfixes
20:51:33.618 [Info] Patching void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SharedVisibilityCache_RebuildCache::Prefix(BattleTech.SharedVisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

20:51:33.618 [Info] Running ILHook manipulator on void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
20:51:33.618 [Info] Writing prefixes
20:51:33.622 [Info] Patching void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_RebuildCache::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

20:51:33.622 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
20:51:33.622 [Info] Writing prefixes
20:51:33.624 [Info] Patching void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_UpdateCacheReciprocal::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

20:51:33.625 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
20:51:33.625 [Info] Writing prefixes
20:51:33.630 [Info] Patching BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_getSharedValue::Prefix(BattleTech.VisibilityCache __instance, BattleTech.ICombatant target, BattleTech.VisibilityLevelAndAttribution& __result)

20:51:33.630 [Info] Running ILHook manipulator on BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target)
20:51:33.632 [Info] Writing prefixes
20:51:33.642 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyContact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyContact::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

20:51:33.643 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyContact()
20:51:33.643 [Info] Writing prefixes
20:51:33.644 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyVisibility::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

20:51:33.644 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility()
20:51:33.644 [Info] Writing prefixes
20:51:33.646 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMech::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech __result)

20:51:33.647 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
20:51:33.647 [Info] Writing postfixes
20:51:33.649 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_ShowWeaponsUpTo::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

20:51:33.649 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
20:51:33.649 [Info] Writing prefixes
20:51:33.650 [Info] Writing postfixes
20:51:33.654 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)

20:51:33.654 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
20:51:33.655 [Info] Writing prefixes
20:51:33.660 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_InitStats::Postfix(BattleTech.Mech __instance)

20:51:33.660 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
20:51:33.661 [Info] Writing prefixes
20:51:33.661 [Info] Writing postfixes
20:51:33.672 [Info] Patching void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_OnUnitSpawn::Prefix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_OnUnitSpawn::Postfix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

20:51:33.672 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message)
20:51:33.673 [Info] Writing prefixes
20:51:33.673 [Info] Writing postfixes
20:51:33.675 [Info] Patching void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_AddViewer::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_AddViewer::Postfix(FogOfWar.FogOfWarSystem __instance, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

20:51:33.675 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit)
20:51:33.676 [Info] Writing prefixes
20:51:33.676 [Info] Writing postfixes
20:51:33.679 [Info] Patching void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatSelectionHandler_DeselectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

20:51:33.679 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor)
20:51:33.679 [Info] Writing prefixes
20:51:33.681 [Info] Patching void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_WipeToValue::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.FogOfWarState& fowState)

20:51:33.682 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState)
20:51:33.682 [Info] Writing prefixes
20:51:33.684 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

20:51:33.684 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
20:51:33.684 [Info] Writing prefixes
20:51:33.685 [Info] Writing postfixes
20:51:33.687 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants0::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:33.687 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid)
20:51:33.687 [Info] Writing postfixes
20:51:33.691 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants1::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:33.691 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags)
20:51:33.691 [Info] Writing postfixes
20:51:33.694 [Info] Patching void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_DEBUG_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation& aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)

20:51:33.694 [Info] Running ILHook manipulator on void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)
20:51:33.694 [Info] Writing prefixes
20:51:33.700 [Info] Patching BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AITeam_getInvocationForCurrentUnit::Prefix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)
1 postfixes:
* static void CustomUnits.AITeam_getInvocationForCurrentUnit::Postfix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)

20:51:33.700 [Info] Running ILHook manipulator on BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit()
20:51:33.701 [Info] Writing prefixes
20:51:33.701 [Info] Writing postfixes
20:51:33.712 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActorInfo_UpdateItemVisibility::Prefix(BattleTech.UI.CombatHUDActorInfo __instance)

20:51:33.713 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility()
20:51:33.713 [Info] Writing prefixes
20:51:33.718 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PlayerLanceSpawnerGameLogic_OnEnterActive::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

20:51:33.718 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive()
20:51:33.718 [Info] Writing prefixes
20:51:33.720 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_UpdateSplineAnim::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 ___Forward, float ___t)

20:51:33.720 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
20:51:33.720 [Info] Writing prefixes
20:51:33.720 [Info] Writing postfixes
20:51:33.724 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_TurnParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

20:51:33.724 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
20:51:33.724 [Info] Writing prefixes
20:51:33.726 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_ForwardParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

20:51:33.726 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
20:51:33.726 [Info] Writing prefixes
20:51:33.728 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_IsMovingParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

20:51:33.728 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
20:51:33.729 [Info] Writing prefixes
20:51:33.730 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_BeginMovementParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

20:51:33.730 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
20:51:33.731 [Info] Writing prefixes
20:51:33.732 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init_fakeTurret::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

20:51:33.733 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
20:51:33.733 [Info] Writing prefixes
20:51:33.733 [Info] Writing postfixes
20:51:33.736 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_DisplayedTurret_set::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.Turret value)

20:51:33.736 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value)
20:51:33.736 [Info] Writing prefixes
20:51:33.738 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_UpdateTurretStructureAndArmor::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance)

20:51:33.738 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor()
20:51:33.738 [Info] Writing prefixes
20:51:33.740 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_OnActorTakeDamage::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, MessageCenterMessage message)

20:51:33.742 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message)
20:51:33.742 [Info] Writing prefixes
20:51:33.744 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_Init::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.UI.CombatHUD HUD)

20:51:33.744 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD)
20:51:33.744 [Info] Writing prefixes
20:51:33.746 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)

20:51:33.746 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
20:51:33.746 [Info] Writing postfixes
20:51:33.808 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_RefreshActorInfo::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:33.809 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
20:51:33.809 [Info] Writing prefixes
20:51:33.809 [Info] Writing postfixes
20:51:33.813 [Info] Patching float BattleTech.Mech::get_WalkSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_WalkSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:33.814 [Info] Running ILHook manipulator on float BattleTech.Mech::get_WalkSpeed()
20:51:33.814 [Info] Writing postfixes
20:51:33.815 [Info] Patching float BattleTech.Mech::get_RunSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_RunSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:33.816 [Info] Running ILHook manipulator on float BattleTech.Mech::get_RunSpeed()
20:51:33.816 [Info] Writing postfixes
20:51:33.817 [Info] Patching BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_propertyBlock::Prefix(BattleTech.GameRepresentation __instance, BattleTech.Rendering.PropertyBlockManager& __result)

20:51:33.817 [Info] Running ILHook manipulator on BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock()
20:51:33.818 [Info] Writing prefixes
20:51:33.819 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargetable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.820 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargetable()
20:51:33.820 [Info] Writing prefixes
20:51:33.821 [Info] Patching void BattleTech.GameRepresentation::set_IsTargetable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

20:51:33.822 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargetable(bool value)
20:51:33.822 [Info] Writing prefixes
20:51:33.823 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargeted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.823 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargeted()
20:51:33.823 [Info] Writing prefixes
20:51:33.825 [Info] Patching void BattleTech.GameRepresentation::set_IsTargeted(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

20:51:33.825 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargeted(bool value)
20:51:33.825 [Info] Writing prefixes
20:51:33.827 [Info] Patching bool BattleTech.GameRepresentation::get_IsAvailable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.827 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsAvailable()
20:51:33.827 [Info] Writing prefixes
20:51:33.829 [Info] Patching void BattleTech.GameRepresentation::set_IsAvailable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

20:51:33.829 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsAvailable(bool value)
20:51:33.829 [Info] Writing prefixes
20:51:33.830 [Info] Patching bool BattleTech.GameRepresentation::get_IsSelected() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.832 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsSelected()
20:51:33.832 [Info] Writing prefixes
20:51:33.834 [Info] Patching void BattleTech.GameRepresentation::set_IsSelected(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

20:51:33.834 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsSelected(bool value)
20:51:33.834 [Info] Writing prefixes
20:51:33.836 [Info] Patching bool BattleTech.GameRepresentation::get_IsHovered() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.836 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsHovered()
20:51:33.837 [Info] Writing prefixes
20:51:33.838 [Info] Patching void BattleTech.GameRepresentation::set_IsHovered(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

20:51:33.838 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsHovered(bool value)
20:51:33.839 [Info] Writing prefixes
20:51:33.840 [Info] Patching bool BattleTech.GameRepresentation::get_IsDead() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.841 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsDead()
20:51:33.841 [Info] Writing prefixes
20:51:33.842 [Info] Patching void BattleTech.GameRepresentation::set_IsDead(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

20:51:33.842 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsDead(bool value)
20:51:33.842 [Info] Writing prefixes
20:51:33.844 [Info] Patching bool BattleTech.GameRepresentation::get_VisibleToPlayer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_VisibleToPlayer::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

20:51:33.844 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_VisibleToPlayer()
20:51:33.845 [Info] Writing prefixes
20:51:33.846 [Info] Patching void BattleTech.GameRepresentation::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_Awake::Prefix(BattleTech.GameRepresentation __instance)

20:51:33.847 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::Awake()
20:51:33.847 [Info] Writing prefixes
20:51:33.849 [Info] Patching void BattleTech.GameRepresentation::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_OnDestroy::Prefix(BattleTech.GameRepresentation __instance)

20:51:33.849 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::OnDestroy()
20:51:33.849 [Info] Writing prefixes
20:51:33.852 [Info] Patching void BattleTech.GameRepresentation::InitHighlighting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_InitHighlighting::Prefix(BattleTech.GameRepresentation __instance)

20:51:33.852 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::InitHighlighting()
20:51:33.853 [Info] Writing prefixes
20:51:33.855 [Info] Patching void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_SetHighlightColor::Prefix(BattleTech.GameRepresentation __instance, BattleTech.CombatGameState combat, BattleTech.Team team)

20:51:33.855 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team)
20:51:33.855 [Info] Writing prefixes
20:51:33.858 [Info] Patching void BattleTech.GameRepresentation::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeIn::Prefix(BattleTech.GameRepresentation __instance, float length)

20:51:33.858 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeIn(float length)
20:51:33.858 [Info] Writing prefixes
20:51:33.860 [Info] Patching void BattleTech.GameRepresentation::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeOut::Prefix(BattleTech.GameRepresentation __instance, float length)

20:51:33.860 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeOut(float length)
20:51:33.861 [Info] Writing prefixes
20:51:33.862 [Info] Patching void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopManualPersistentVFX::Prefix(BattleTech.GameRepresentation __instance, string vfxName)

20:51:33.862 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName)
20:51:33.862 [Info] Writing prefixes
20:51:33.865 [Info] Patching void BattleTech.GameRepresentation::PauseAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_PauseAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

20:51:33.866 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::PauseAllPersistentVFX()
20:51:33.866 [Info] Writing prefixes
20:51:33.869 [Info] Patching void BattleTech.GameRepresentation::ResumeAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_ResumeAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

20:51:33.869 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::ResumeAllPersistentVFX()
20:51:33.869 [Info] Writing prefixes
20:51:33.872 [Info] Patching void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopAllPersistentVFXAttachedToLocation::Prefix(BattleTech.GameRepresentation __instance, int location)

20:51:33.872 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location)
20:51:33.873 [Info] Writing prefixes
20:51:33.876 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

20:51:33.876 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
20:51:33.876 [Info] Writing prefixes
20:51:33.876 [Info] Writing postfixes
20:51:33.878 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(BattleTech.BaseComponentRef componentRef, String& __result)
2 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)
* static void CustomUnits.MechHardpointRules_GetComponentPrefabName::Postfix(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames, String& __result)

20:51:33.878 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
20:51:33.879 [Info] Writing prefixes
20:51:33.879 [Info] Writing postfixes
20:51:33.881 [Info] Patching void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_RequestInventoryPrefabs::Prefix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)
1 postfixes:
* static void CustomUnits.MechDef_RequestInventoryPrefabs::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)

20:51:33.881 [Info] Running ILHook manipulator on void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight)
20:51:33.882 [Info] Writing prefixes
20:51:33.882 [Info] Writing postfixes
20:51:33.883 [Info] Patching bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_InventoryPrefabsLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight, BattleTech.MechComponentRef[] ___inventory, Boolean& __result)

20:51:33.884 [Info] Running ILHook manipulator on bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight)
20:51:33.884 [Info] Writing prefixes
20:51:33.887 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:33.887 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:33.887 [Info] Writing prefixes
20:51:33.889 [Info] Writing postfixes
20:51:33.892 [Info] Patching virtual void WeaponEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeaponEffect_UpdatePrefire::Prefix(WeaponEffect __instance, Single& ___preFireRate, BattleTech.CombatGameState ___Combat, Single& ___t)

20:51:33.892 [Info] Running ILHook manipulator on virtual void WeaponEffect::Update()
20:51:33.892 [Info] Writing prefixes
20:51:33.895 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
* static bool CustomUnits.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

20:51:33.895 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
20:51:33.895 [Info] Writing prefixes
20:51:33.896 [Info] Writing postfixes
20:51:33.899 [Info] Patching virtual void WeaponEffect::PlayMuzzleFlash() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.WeaponEffect_PlayMuzzleFlash::Postfix(WeaponEffect __instance)

20:51:33.899 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayMuzzleFlash()
20:51:33.899 [Info] Writing postfixes
20:51:33.903 [Info] Patching virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ComponentRepresentation_Init::Prefix(BattleTech.ComponentRepresentation __instance, BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)

20:51:33.904 [Info] Running ILHook manipulator on virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)
20:51:33.904 [Info] Writing prefixes
20:51:33.906 [Info] Patching virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_InitGameRep::Prefix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName, BattleTech.CombatGameState ___combat)
1 postfixes:
* static void CustomUnits.Weapon_InitGameRep::Postfix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)

20:51:33.906 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)
20:51:33.906 [Info] Writing prefixes
20:51:33.907 [Info] Writing postfixes
20:51:33.913 [Info] Patching bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DataManager_Exists::Prefix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, String& id)
1 postfixes:
* static void CustomUnits.DataManager_Exists::Postfix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, string id, Boolean& __result)

20:51:33.913 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id)
20:51:33.914 [Info] Writing prefixes
20:51:33.914 [Info] Writing postfixes
20:51:33.938 [Info] Patching void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_RequestResource::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& id)

20:51:33.939 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id)
20:51:33.939 [Info] Writing prefixes
20:51:33.940 [Info] Patching bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_Contains::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& resourceId)

20:51:33.942 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId)
20:51:33.942 [Info] Writing prefixes
20:51:33.943 [Info] Patching void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DataManager_PoolGameObject::Prefix(BattleTech.Data.DataManager __instance, String& id, UnityEngine.GameObject gameObj)

20:51:33.944 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj)
20:51:33.944 [Info] Writing prefixes
20:51:33.946 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)

20:51:33.946 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
20:51:33.947 [Info] Writing prefixes
20:51:33.949 [Info] Patching virtual void BattleTech.EncounterLayerParent::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.EncounterLayerParent_Update::Postfix(BattleTech.EncounterLayerParent __instance)

20:51:33.949 [Info] Running ILHook manipulator on virtual void BattleTech.EncounterLayerParent::Awake()
20:51:33.949 [Info] Writing postfixes
20:51:33.953 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:33.953 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
20:51:33.953 [Info] Writing prefixes
20:51:33.966 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
2 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void CustomUnits.EncounterLayerParent_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

20:51:33.966 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
20:51:33.967 [Info] Writing prefixes
20:51:33.967 [Info] Writing postfixes
20:51:33.971 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
5 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

20:51:33.971 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:33.971 [Info] Writing prefixes
20:51:33.972 [Info] Writing postfixes
20:51:33.980 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:33.980 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:33.980 [Info] Writing prefixes
20:51:33.980 [Info] Writing postfixes
20:51:33.996 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
7 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:33.996 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:33.996 [Info] Writing prefixes
20:51:33.997 [Info] Writing postfixes
20:51:34.015 [Info] Patching void BattleTech.SimGameState::FillContractLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_FillContractLance::Prefix(BattleTech.SimGameState __instance)

20:51:34.015 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FillContractLance()
20:51:34.015 [Info] Writing prefixes
20:51:34.019 [Info] Patching void BattleTech.SimGameState::OnLanceConfiguratorAccept() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_OnLanceConfiguratorAccept::Prefix(BattleTech.SimGameState __instance)

20:51:34.019 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnLanceConfiguratorAccept()
20:51:34.019 [Info] Writing prefixes
20:51:34.021 [Info] Patching BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GetLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration& __result, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

20:51:34.021 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance()
20:51:34.022 [Info] Writing prefixes
20:51:34.024 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.025 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
20:51:34.025 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
20:51:34.143 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.144 [Info] Writing prefixes
20:51:34.144 [Info] Writing postfixes
20:51:34.147 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults, Int32& ___numUnits, Int32& ___numOpponentUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState, BattleTech.Data.DataManager& ___dm)

20:51:34.148 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract)
20:51:34.148 [Info] Writing prefixes
20:51:34.148 [Info] Writing postfixes
20:51:34.152 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract)

20:51:34.152 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
20:51:34.152 [Info] Writing prefixes
20:51:34.154 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowMyResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults)

20:51:34.154 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults()
20:51:34.155 [Info] Writing prefixes
20:51:34.157 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLanceTonnage::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText)

20:51:34.157 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage()
20:51:34.157 [Info] Writing prefixes
20:51:34.161 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLance::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText, BattleTech.UI.LanceHeaderWidget& ___headerWidget)

20:51:34.161 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance()
20:51:34.161 [Info] Writing prefixes
20:51:34.165 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static bool CustomUnits.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

20:51:34.165 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
20:51:34.166 [Info] Writing prefixes
20:51:34.170 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
* static bool CustomUnits.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.171 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
20:51:34.171 [Info] Transpiling void BattleTech.SimGameState::ResolveCompleteContract()
20:51:34.172 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.174 [Info] Writing prefixes
20:51:34.175 [Info] Writing postfixes
20:51:34.188 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowOpponentResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults)

20:51:34.188 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults()
20:51:34.188 [Info] Writing prefixes
20:51:34.190 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)

20:51:34.190 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config)
20:51:34.190 [Info] Writing prefixes
20:51:34.192 [Info] Writing postfixes
20:51:34.195 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

20:51:34.196 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
20:51:34.196 [Info] Writing prefixes
20:51:34.196 [Info] Writing postfixes
20:51:34.199 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

20:51:34.199 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
20:51:34.200 [Info] Writing prefixes
20:51:34.203 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

20:51:34.203 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
20:51:34.203 [Info] Writing prefixes
20:51:34.205 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits)

20:51:34.205 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
20:51:34.206 [Info] Writing prefixes
20:51:34.211 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustomUnits.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

20:51:34.211 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
20:51:34.212 [Info] Writing postfixes
20:51:34.214 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:34.215 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
20:51:34.215 [Info] Writing prefixes
20:51:34.215 [Info] Writing postfixes
20:51:34.220 [Info] Patching void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUD_updateHUDElements::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

20:51:34.220 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor)
20:51:34.220 [Info] Writing postfixes
20:51:34.223 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorSelected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:34.224 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message)
20:51:34.224 [Info] Writing postfixes
20:51:34.227 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorDeselected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:34.227 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID)
20:51:34.227 [Info] Writing postfixes
20:51:34.229 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayInvoked::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:34.230 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message)
20:51:34.230 [Info] Writing postfixes
20:51:34.233 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayDismissed::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:34.233 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message)
20:51:34.233 [Info] Writing postfixes
20:51:34.236 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

20:51:34.236 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
20:51:34.236 [Info] Writing postfixes
20:51:34.243 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

20:51:34.243 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
20:51:34.244 [Info] Writing postfixes
20:51:34.246 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Enabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

20:51:34.247 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter()
20:51:34.247 [Info] Writing postfixes
20:51:34.248 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Selected_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

20:51:34.248 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter()
20:51:34.249 [Info] Writing postfixes
20:51:34.250 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Highlighted_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

20:51:34.250 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter()
20:51:34.250 [Info] Writing postfixes
20:51:34.251 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Disabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

20:51:34.252 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter()
20:51:34.252 [Info] Writing postfixes
20:51:34.254 [Info] Patching static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ShortcutExtensions_DOScale::Prefix(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)

20:51:34.254 [Info] Running ILHook manipulator on static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)
20:51:34.255 [Info] Writing prefixes
20:51:34.259 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD)

20:51:34.260 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
20:51:34.260 [Info] Writing prefixes
20:51:34.262 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

20:51:34.262 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
20:51:34.262 [Info] Writing postfixes
20:51:34.264 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerExit::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

20:51:34.265 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
20:51:34.265 [Info] Writing postfixes
20:51:34.267 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)

20:51:34.267 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
20:51:34.268 [Info] Writing prefixes
20:51:34.268 [Info] Writing postfixes
20:51:34.272 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_InitAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:34.272 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
20:51:34.272 [Info] Writing prefixes
20:51:34.272 [Info] Writing postfixes
20:51:34.275 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshActionHotKeys::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

20:51:34.276 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys()
20:51:34.276 [Info] Writing prefixes
20:51:34.277 [Info] Patching bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionState_ProcessDoneWithMechButton::Prefix(BattleTech.UI.SelectionState __instance, string button, Boolean& __result)

20:51:34.278 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button)
20:51:34.278 [Info] Writing prefixes
20:51:34.282 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)

20:51:34.282 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
20:51:34.282 [Info] Writing prefixes
20:51:34.283 [Info] Writing postfixes
20:51:34.289 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomUnits.CombatHUDActionButton_ExecuteClickAbilities::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

20:51:34.290 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
20:51:34.290 [Info] Writing prefixes
20:51:34.293 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:34.294 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
20:51:34.294 [Info] Writing prefixes
20:51:34.294 [Info] Writing postfixes
20:51:34.297 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

20:51:34.297 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
20:51:34.297 [Info] Writing prefixes
20:51:34.298 [Info] Writing postfixes
20:51:34.300 [Info] Patching System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeightedFactor_CollectMasksForCellAndPathNode::Prefix(BattleTech.WeightedFactor __instance, BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:34.300 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode)
20:51:34.301 [Info] Writing prefixes
20:51:34.303 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_OnLanceConfiguratorClosed::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance)

20:51:34.303 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed()
20:51:34.304 [Info] Writing prefixes
20:51:34.306 [Info] Patching void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Prefix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Postfix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

20:51:34.307 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
20:51:34.307 [Info] Writing prefixes
20:51:34.307 [Info] Writing postfixes
20:51:34.312 [Info] Patching void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_InitDistanceClamp::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Transform xform)

20:51:34.313 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform)
20:51:34.313 [Info] Writing postfixes
20:51:34.321 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
2 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
* static void CustomUnits.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

20:51:34.321 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
20:51:34.327 [Info] Writing prefixes
20:51:34.327 [Info] Writing postfixes
20:51:34.330 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

20:51:34.330 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
20:51:34.332 [Info] Writing prefixes
20:51:34.332 [Info] Writing postfixes
20:51:34.334 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMove_UpdateMousePosUI::Postfix(BattleTech.UI.SelectionStateMove __instance)

20:51:34.334 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate()
20:51:34.334 [Info] Writing postfixes
20:51:34.336 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxWalkDistance::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:34.336 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
20:51:34.337 [Info] Writing postfixes
20:51:34.338 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxSprintDistance::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:34.338 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
20:51:34.338 [Info] Writing postfixes
20:51:34.339 [Info] Patching virtual float BattleTech.Vehicle::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxWalkDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

20:51:34.340 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxWalkDistance()
20:51:34.340 [Info] Writing postfixes
20:51:34.341 [Info] Patching virtual float BattleTech.Vehicle::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxSprintDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

20:51:34.341 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxSprintDistance()
20:51:34.341 [Info] Writing postfixes
20:51:34.343 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)
* static void CustomUnits.JumpPathing_JumpPathing::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

20:51:34.343 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
20:51:34.343 [Info] Writing postfixes
20:51:34.346 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:34.346 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
20:51:34.347 [Info] Writing postfixes
20:51:34.350 [Info] Patching virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_InitNaval::Prefix(BattleTech.Mech __instance, UnityEngine.Vector3& position, float facing, bool checkEncounterCells)

20:51:34.350 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
20:51:34.351 [Info] Writing prefixes
20:51:34.357 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)

20:51:34.357 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
20:51:34.357 [Info] Writing prefixes
20:51:34.359 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
4 postfixes:
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMovePartial::Postfix(BattleTech.ActorMovementSequence __instance)

20:51:34.359 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
20:51:34.360 [Info] Writing prefixes
20:51:34.360 [Info] Writing postfixes
20:51:34.363 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
* static void CustomUnits.Pathing_ResetPathGridIfTouchingPartial::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor actor)

20:51:34.363 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
20:51:34.363 [Info] Writing prefixes
20:51:34.365 [Info] Patching void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Pathing_UpdateCurrentPath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

20:51:34.366 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI)
20:51:34.366 [Info] Writing postfixes
20:51:34.368 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
1 postfixes:
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

20:51:34.369 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
20:51:34.369 [Info] Writing prefixes
20:51:34.369 [Info] Writing postfixes
20:51:34.370 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickPosPartial::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

20:51:34.372 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
20:51:34.372 [Info] Writing prefixes
20:51:34.372 [Info] Writing postfixes
20:51:34.374 [Info] Patching void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_LockToRotateInPlace::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

20:51:34.374 [Info] Running ILHook manipulator on void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI)
20:51:34.375 [Info] Writing prefixes
20:51:34.376 [Info] Patching virtual void BattleTech.UI.SelectionState::OnAddToStack() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_OnAddToStack::Postfix(BattleTech.UI.SelectionState __instance)

20:51:34.376 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionState::OnAddToStack()
20:51:34.376 [Info] Writing postfixes
20:51:34.378 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_CanBackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, Boolean& __result)

20:51:34.378 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut()
20:51:34.379 [Info] Writing postfixes
20:51:34.380 [Info] Patching void BattleTech.JumpPathing::UpdateCurrentPath() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Prefix(BattleTech.JumpPathing __instance, Single& __state)
1 postfixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Postfix(BattleTech.JumpPathing __instance, Single& __state)

20:51:34.380 [Info] Running ILHook manipulator on void BattleTech.JumpPathing::UpdateCurrentPath()
20:51:34.381 [Info] Writing prefixes
20:51:34.381 [Info] Writing postfixes
20:51:34.382 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::BackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_BackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance)

20:51:34.382 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::BackOut()
20:51:34.382 [Info] Writing postfixes
20:51:34.385 [Info] Patching AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_CurrentSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, AudioSwitch_surface_type& __result)

20:51:34.385 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType()
20:51:34.385 [Info] Writing prefixes
20:51:34.387 [Info] Patching bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_BlipDisplayed::Prefix(BattleTech.PilotableActorRepresentation __instance, Boolean& __result)

20:51:34.387 [Info] Running ILHook manipulator on bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed()
20:51:34.387 [Info] Writing prefixes
20:51:34.389 [Info] Patching void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_Init::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)

20:51:34.389 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)
20:51:34.389 [Info] Writing prefixes
20:51:34.393 [Info] Patching void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_InitPaintScheme::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.HeraldryDef heraldryDef, string teamGUID)

20:51:34.393 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID)
20:51:34.393 [Info] Writing prefixes
20:51:34.398 [Info] Patching void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newVisibility, bool showUI)

20:51:34.398 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI)
20:51:34.398 [Info] Writing prefixes
20:51:34.400 [Info] Patching void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_ClearForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)

20:51:34.401 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)
20:51:34.401 [Info] Writing prefixes
20:51:34.403 [Info] Patching void BattleTech.PilotableActorRepresentation::PlayEjectFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_PlayEjectFX::Prefix(BattleTech.PilotableActorRepresentation __instance)

20:51:34.404 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::PlayEjectFX()
20:51:34.404 [Info] Writing prefixes
20:51:34.406 [Info] Patching void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetBlipPositionRotation::Prefix(BattleTech.PilotableActorRepresentation __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

20:51:34.406 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
20:51:34.406 [Info] Writing prefixes
20:51:34.408 [Info] Patching virtual void BattleTech.PilotDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_FromJSON::Postfix(BattleTech.PilotDef __instance)

20:51:34.408 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::FromJSON(string json)
20:51:34.408 [Info] Writing postfixes
20:51:34.410 [Info] Patching void BattleTech.PilotDef::PostDeserialzation() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_PostDeserialzation::Postfix(BattleTech.PilotDef __instance)

20:51:34.410 [Info] Running ILHook manipulator on void BattleTech.PilotDef::PostDeserialzation()
20:51:34.410 [Info] Writing postfixes
20:51:34.412 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)
* static void CustomUnits.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

20:51:34.412 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
20:51:34.412 [Info] Writing postfixes
20:51:34.416 [Info] Patching void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Postfix(BattleTech.SimGameState __instance)

20:51:34.416 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs()
20:51:34.416 [Info] Writing prefixes
20:51:34.416 [Info] Writing postfixes
20:51:34.427 [Info] Patching void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_OnCareerModeCharacterCreationComplete::Prefix(BattleTech.SimGameState __instance, BattleTech.Pilot& p)

20:51:34.427 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p)
20:51:34.428 [Info] Writing prefixes
20:51:34.430 [Info] Patching System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotGenerator_GeneratePilots::Postfix(BattleTech.PilotGenerator __instance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:34.430 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList)
20:51:34.430 [Info] Writing postfixes
20:51:34.433 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

20:51:34.434 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
20:51:34.434 [Info] Writing prefixes
20:51:34.436 [Info] Patching virtual bool BattleTech.AbstractActor::get_IsShutDown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_IsShutDown::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

20:51:34.436 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::get_IsShutDown()
20:51:34.436 [Info] Writing postfixes
20:51:34.438 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByTypeShutdown::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

20:51:34.438 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
20:51:34.439 [Info] Writing prefixes
20:51:34.439 [Info] Writing postfixes
20:51:34.442 [Info] Patching void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ToggleAbilityState::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

20:51:34.442 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState()
20:51:34.442 [Info] Writing prefixes
20:51:34.443 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ActivateAbility::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

20:51:34.443 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility()
20:51:34.444 [Info] Writing prefixes
20:51:34.447 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomUnits.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

20:51:34.449 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
20:51:34.449 [Info] Writing postfixes
20:51:34.450 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:34.450 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:34.450 [Info] Writing postfixes
20:51:34.454 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)
* static void CustomUnits.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

20:51:34.454 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
20:51:34.454 [Info] Writing postfixes
20:51:34.457 [Info] Patching static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetTerrainCost::Prefix(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType, Single& __result)

20:51:34.457 [Info] Running ILHook manipulator on static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType)
20:51:34.458 [Info] Writing prefixes
20:51:34.463 [Info] Patching BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetPathNode::Prefix(BattleTech.PathNodeGrid __instance, int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors, BattleTech.PathNode& __result, BattleTech.PathNode[,]& ___pathNodes, BattleTech.MapTerrainDataCell& ___gpnCell, BattleTech.CombatGameState& ___combat, BattleTech.AbstractActor& ___owningActor)

20:51:34.464 [Info] Running ILHook manipulator on BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors)
20:51:34.464 [Info] Writing prefixes
20:51:34.467 [Info] Patching void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LethalInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

20:51:34.467 [Info] Running ILHook manipulator on void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
20:51:34.468 [Info] Writing prefixes
20:51:34.470 [Info] Patching void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_MaxInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

20:51:34.470 [Info] Running ILHook manipulator on void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
20:51:34.471 [Info] Writing prefixes
20:51:34.473 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

20:51:34.473 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
20:51:34.473 [Info] Writing prefixes
20:51:34.474 [Info] Writing postfixes
20:51:34.477 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)
* static void CustomUnits.MessageCenter_PublishMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

20:51:34.478 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
20:51:34.478 [Info] Writing prefixes
20:51:34.480 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel, Boolean& __runOriginal)
4 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:34.480 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:34.482 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:34.482 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:34.486 [Info] Writing prefixes
20:51:34.487 [Info] Writing postfixes
20:51:34.491 [Info] Patching void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_KillPilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

20:51:34.491 [Info] Running ILHook manipulator on void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
20:51:34.492 [Info] Writing prefixes
20:51:34.493 [Info] Patching float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetCurrentStructureSquad::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, Single& __result)

20:51:34.494 [Info] Running ILHook manipulator on float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location)
20:51:34.494 [Info] Writing postfixes
20:51:34.496 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomUnits.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

20:51:34.496 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
20:51:34.496 [Info] Writing postfixes
20:51:34.499 [Info] Patching virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_NullWidgets::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

20:51:34.499 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets()
20:51:34.499 [Info] Writing prefixes
20:51:34.503 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::RemoveMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_RemoveMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

20:51:34.503 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::RemoveMech()
20:51:34.503 [Info] Writing prefixes
20:51:34.508 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SGRoomController_MechBay_LoadMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force, BattleTech.MechDef& ___loadedMechDef)

20:51:34.508 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force)
20:51:34.508 [Info] Writing prefixes
20:51:34.512 [Info] Patching void BattleTech.UI.MechBayPanel::ViewBays() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)

20:51:34.512 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewBays()
20:51:34.512 [Info] Writing postfixes
20:51:34.516 [Info] Patching void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechPlacementPopup_SetData::Prefix(BattleTech.UI.MechPlacementPopup __instance, BattleTech.UI.MechBayRowGroupWidget ___rowGroupWidget, BattleTech.SimGameState sim)

20:51:34.516 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech)
20:51:34.517 [Info] Writing prefixes
20:51:34.522 [Info] Patching void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayRowGroupWidget_SetData::Prefix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim, BattleTech.UI.MechBayRowWidget[]& ___bays)
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_SetData::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)

20:51:34.522 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)
20:51:34.523 [Info] Writing prefixes
20:51:34.523 [Info] Writing postfixes
20:51:34.534 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_strings::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& startingMechs)

20:51:34.534 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs)
20:51:34.534 [Info] Writing prefixes
20:51:34.540 [Info] Patching void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Prefix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
1 postfixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Postfix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)

20:51:34.541 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
20:51:34.541 [Info] Writing prefixes
20:51:34.541 [Info] Writing postfixes
20:51:34.548 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_MechDefs::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& startingMechs)

20:51:34.549 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs)
20:51:34.549 [Info] Writing prefixes
20:51:34.552 [Info] Patching int BattleTech.SimGameState::GetFirstFreeMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SimGameState_GetFirstFreeMechBay::Postfix(BattleTech.SimGameState __instance, Int32& __result)

20:51:34.553 [Info] Running ILHook manipulator on int BattleTech.SimGameState::GetFirstFreeMechBay()
20:51:34.553 [Info] Writing postfixes
20:51:34.556 [Info] Patching int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_GetFirstFreeBaySlot::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, Int32& __result)

20:51:34.556 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot()
20:51:34.556 [Info] Writing postfixes
20:51:34.560 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static bool CustomUnits.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.StatCollection ___companyStats, BattleTech.UI.SimGameInterruptManager ___interruptQueue)
2 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

20:51:34.562 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
20:51:34.562 [Info] Writing prefixes
20:51:34.563 [Info] Writing postfixes
20:51:34.569 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(BattleTech.MechRepresentationSimGame __instance)
* static bool CustomUnits.MechRepresentationSimGame_LoadWeapons::Prefix(BattleTech.MechRepresentationSimGame __instance, BattleTech.Data.DataManager ___dataManager)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

20:51:34.569 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
20:51:34.569 [Info] Writing prefixes
20:51:34.570 [Info] Writing postfixes
20:51:34.575 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::OnReadyClicked(BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)
* static bool CustomUnits.MechBayChassisInfoWidget_OnReadyClicked::Prefix(BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement)

20:51:34.575 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
20:51:34.575 [Info] Writing prefixes
20:51:34.579 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)
* static void CustomUnits.MechBayPanel_::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisInfoWidget ___chassisInfoWidget)

20:51:34.580 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
20:51:34.580 [Info] Writing postfixes
20:51:34.585 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

20:51:34.585 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
20:51:34.586 [Info] Writing prefixes
20:51:34.587 [Info] Writing postfixes
20:51:34.593 [Info] Patching virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Get::Prefix(object __instance, String& id)

20:51:34.593 [Info] Running ILHook manipulator on virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id)
20:51:34.593 [Info] Writing prefixes
20:51:34.669 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Exists::Prefix(object __instance, String& id)

20:51:34.669 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id)
20:51:34.669 [Info] Writing prefixes
20:51:34.673 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_TryGet::Prefix(object __instance, String& id)

20:51:34.673 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t)
20:51:34.673 [Info] Writing prefixes
20:51:34.678 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

20:51:34.678 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
20:51:34.678 [Info] Writing prefixes
20:51:34.679 [Info] Writing postfixes
20:51:34.681 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

20:51:34.681 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
20:51:34.681 [Info] Writing prefixes
20:51:34.682 [Info] Writing postfixes
20:51:34.685 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.685 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:34.685 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:34.686 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.687 [Info] Writing prefixes
20:51:34.688 [Info] Writing postfixes
20:51:34.693 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.693 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:34.693 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:34.694 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.694 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.696 [Info] Writing postfixes
20:51:34.704 [Info] Patching void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_SetOccupiedDesignMask::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& approvedMasks)

20:51:34.704 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks)
20:51:34.704 [Info] Writing prefixes
20:51:34.708 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_OnPositionUpdate::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, Boolean& updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
1 postfixes:
* static void CustomUnits.AbstractActor_OnPositionUpdate::Postfix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging, BattleTech.DesignMaskDef& ___opuDesignMask)

20:51:34.708 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
20:51:34.709 [Info] Writing prefixes
20:51:34.709 [Info] Writing postfixes
20:51:34.712 [Info] Patching float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_DamagePerShotFromPosition::Prefix(BattleTech.Weapon __instance, BattleTech.DesignMaskDef& designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)

20:51:34.713 [Info] Running ILHook manipulator on float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)
20:51:34.713 [Info] Writing prefixes
20:51:34.716 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_FindBlockerBetween::Postfix(BattleTech.PathNodeGrid __instance, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

20:51:34.716 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
20:51:34.717 [Info] Writing postfixes
20:51:34.725 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_FindBlockerReciprocal::Prefix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

20:51:34.726 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
20:51:34.726 [Info] Writing prefixes
20:51:34.729 [Info] Patching virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleRepresentation_GetDestructibleObject::Postfix(BattleTech.VehicleRepresentation __instance, MechDestructibleObject& __result)

20:51:34.729 [Info] Running ILHook manipulator on virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location)
20:51:34.729 [Info] Writing postfixes
20:51:34.733 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

20:51:34.733 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:34.733 [Info] Writing postfixes
20:51:34.738 [Info] Patching float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameState_GetTargetTerrainModifier::Postfix(BattleTech.ToHit __instance, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee, Single& __result)

20:51:34.738 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee)
20:51:34.739 [Info] Writing postfixes
20:51:34.741 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)
* static bool CustomUnits.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

20:51:34.741 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
20:51:34.742 [Info] Writing prefixes
20:51:34.744 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnCollisionEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collision other)

20:51:34.744 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other)
20:51:34.744 [Info] Writing prefixes
20:51:34.746 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnParticleCollision::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.GameObject other)

20:51:34.747 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other)
20:51:34.747 [Info] Writing prefixes
20:51:34.749 [Info] Patching virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_Init::Postfix(BattleTech.Vehicle __instance, UnityEngine.Vector3 position, float facing, bool checkEncounterCells)

20:51:34.749 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
20:51:34.749 [Info] Writing postfixes
20:51:34.754 [Info] Patching static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingUtil_DoesMovementLineCollide::Prefix(BattleTech.AbstractActor thisActor, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& actors)
1 postfixes:
* static void CustomUnits.PathingUtil_DoesMovementLineCollide::Postfix(BattleTech.AbstractActor thisActor, BattleTech.AbstractActor& collision, Boolean& __result)

20:51:34.754 [Info] Running ILHook manipulator on static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier)
20:51:34.754 [Info] Writing prefixes
20:51:34.755 [Info] Writing postfixes
20:51:34.757 [Info] Patching static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNode_HasCollisionAt::Prefix(BattleTech.AbstractActor unit, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allActors)
1 postfixes:
* static void CustomUnits.PathNode_HasCollisionAt::Postfix(BattleTech.AbstractActor unit, Boolean& __result)

20:51:34.758 [Info] Running ILHook manipulator on static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor)
20:51:34.758 [Info] Writing prefixes
20:51:34.758 [Info] Writing postfixes
20:51:34.760 [Info] Patching float BattleTech.PathNodeGrid::GetGradeModifier(float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetGradeModifier::Postfix(BattleTech.PathNodeGrid __instance, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

20:51:34.760 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetGradeModifier(float grade)
20:51:34.760 [Info] Writing postfixes
20:51:34.763 [Info] Patching float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSteepnessMultiplier::Postfix(BattleTech.PathNodeGrid __instance, float steepness, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

20:51:34.763 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade)
20:51:34.764 [Info] Writing postfixes
20:51:34.765 [Info] Patching bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_WillFireAtTarget::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, Boolean& __result)

20:51:34.766 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target)
20:51:34.766 [Info] Writing postfixes
20:51:34.768 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.768 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
20:51:34.768 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
20:51:34.769 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.769 [Info] Writing postfixes
20:51:34.771 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

20:51:34.771 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
20:51:34.771 [Info] Writing prefixes
20:51:34.773 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)

20:51:34.774 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
20:51:34.774 [Info] Writing postfixes
20:51:34.779 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForMelee::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

20:51:34.780 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
20:51:34.780 [Info] Writing postfixes
20:51:34.783 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForDFA::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

20:51:34.783 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
20:51:34.783 [Info] Writing postfixes
20:51:34.786 [Info] Patching bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDWeaponSlot_contemplatingMelee::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, Boolean& __result)

20:51:34.786 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target)
20:51:34.787 [Info] Writing postfixes
20:51:34.788 [Info] Patching float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_GetToHitFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack, Single& __result)

20:51:34.789 [Info] Running ILHook manipulator on float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack)
20:51:34.789 [Info] Writing postfixes
20:51:34.791 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)
* static void CustomUnits.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

20:51:34.792 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
20:51:34.792 [Info] Writing postfixes
20:51:34.795 [Info] Patching void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_AddInstability::Prefix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

20:51:34.796 [Info] Running ILHook manipulator on void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
20:51:34.796 [Info] Writing prefixes
20:51:34.800 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)
* static void CustomUnits.MechDef_RefreshChassis::Postfix(BattleTech.MechDef __instance)

20:51:34.800 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
20:51:34.800 [Info] Writing postfixes
20:51:34.803 [Info] Patching virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetActorInfoFromVisLevel::Postfix(BattleTech.Mech __instance, BattleTech.VisibilityLevel visLevel, Localize.Text& __result)

20:51:34.804 [Info] Running ILHook manipulator on virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel)
20:51:34.804 [Info] Writing postfixes
20:51:34.808 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetHeatData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:34.808 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
20:51:34.809 [Info] Writing prefixes
20:51:34.809 [Info] Writing postfixes
20:51:34.814 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnits.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.LanceStatGraphic& ___MeleeBar, BattleTech.UI.LanceStatGraphic& ___HeatEffBar)

20:51:34.815 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
20:51:34.815 [Info] Writing postfixes
20:51:34.819 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)
* static void CustomUnits.SG_Shop_FullMechDetailPanel_FillInFullMech::Postfix(BattleTech.UI.SG_Shop_FullMechDetailPanel __instance, BattleTech.MechDef theMech, BattleTech.UI.LanceStat& ___Stat4, BattleTech.UI.LanceStat& ___Stat6)

20:51:34.819 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
20:51:34.820 [Info] Writing postfixes
20:51:34.823 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:34.823 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
20:51:34.824 [Info] Writing postfixes
20:51:34.827 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

20:51:34.827 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
20:51:34.828 [Info] Writing postfixes
20:51:34.830 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetMeleeData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

20:51:34.832 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
20:51:34.832 [Info] Writing prefixes
20:51:34.832 [Info] Writing postfixes
20:51:34.835 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ChassisLocations location, Single& __result)

20:51:34.835 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location)
20:51:34.836 [Info] Writing postfixes
20:51:34.838 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location, Single& __result)

20:51:34.838 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location)
20:51:34.838 [Info] Writing postfixes
20:51:34.840 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ArmorLocation location, Single& __result)

20:51:34.840 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location)
20:51:34.840 [Info] Writing postfixes
20:51:34.842 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location, Single& __result)

20:51:34.842 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location)
20:51:34.842 [Info] Writing postfixes
20:51:34.843 [Info] Patching virtual bool BattleTech.Mech::get_IsAnyStructureExposed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsAnyStructureExposed::Postfix(BattleTech.Mech __instance, Boolean& __result)

20:51:34.844 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsAnyStructureExposed()
20:51:34.844 [Info] Writing postfixes
20:51:34.846 [Info] Patching virtual float BattleTech.Mech::get_SummaryStructureCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_SummaryStructureCurrent::Postfix(BattleTech.Mech __instance, Single& __result)

20:51:34.847 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_SummaryStructureCurrent()
20:51:34.847 [Info] Writing postfixes
20:51:34.849 [Info] Patching float BattleTech.MechDef::get_MechDefCurrentStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefCurrentStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

20:51:34.849 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefCurrentStructure()
20:51:34.849 [Info] Writing postfixes
20:51:34.851 [Info] Patching float BattleTech.MechDef::get_MechDefMaxStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefMaxStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

20:51:34.851 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefMaxStructure()
20:51:34.851 [Info] Writing postfixes
20:51:34.853 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_ResetArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:34.854 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars()
20:51:34.854 [Info] Writing prefixes
20:51:34.860 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_UpdateArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:34.860 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars()
20:51:34.860 [Info] Writing prefixes
20:51:34.865 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)
* static void CustomUnits.MechDetails_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList, BattleTech.MechDef ___activeMech)

20:51:34.865 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
20:51:34.865 [Info] Writing postfixes
20:51:34.868 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnMechLabClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

20:51:34.868 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked()
20:51:34.869 [Info] Writing prefixes
20:51:34.871 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

20:51:34.871 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked()
20:51:34.872 [Info] Writing prefixes
20:51:34.874 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

20:51:34.874 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
20:51:34.874 [Info] Writing prefixes
20:51:34.876 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnRepairClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

20:51:34.876 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked()
20:51:34.876 [Info] Writing prefixes
20:51:34.878 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnScrapClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

20:51:34.879 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked()
20:51:34.879 [Info] Writing prefixes
20:51:34.882 [Info] Patching static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDHeatDisplay_GetProjectedHeat::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, BattleTech.Mech mech, BattleTech.UI.CombatHUD hud, Int32& __result)

20:51:34.883 [Info] Running ILHook manipulator on static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud)
20:51:34.883 [Info] Writing postfixes
20:51:34.887 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

20:51:34.887 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel()
20:51:34.887 [Info] Writing prefixes
20:51:34.889 [Info] Patching virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDStabilityDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

20:51:34.889 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel()
20:51:34.890 [Info] Writing prefixes
20:51:34.891 [Info] Patching int BattleTech.Mech::get__heat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech__heat_get::Postfix(BattleTech.Mech __instance, Int32& __result)

20:51:34.892 [Info] Running ILHook manipulator on int BattleTech.Mech::get__heat()
20:51:34.892 [Info] Writing postfixes
20:51:34.893 [Info] Patching void BattleTech.Mech::set__heat(int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech__heat_set::Prefix(BattleTech.Mech __instance, Int32& value)

20:51:34.893 [Info] Running ILHook manipulator on void BattleTech.Mech::set__heat(int value)
20:51:34.893 [Info] Writing prefixes
20:51:34.895 [Info] Patching int BattleTech.Mech::get_TempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_TempHeat_get::Postfix(BattleTech.Mech __instance, Int32& __result, Int32& ____tempHeat)

20:51:34.895 [Info] Running ILHook manipulator on int BattleTech.Mech::get_TempHeat()
20:51:34.895 [Info] Writing postfixes
20:51:34.897 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddEngineDamageHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

20:51:34.897 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
20:51:34.898 [Info] Writing prefixes
20:51:34.898 [Info] Writing postfixes
20:51:34.900 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)

20:51:34.900 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
20:51:34.900 [Info] Writing prefixes
20:51:34.900 [Info] Writing postfixes
20:51:34.902 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddJumpHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

20:51:34.902 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
20:51:34.902 [Info] Writing prefixes
20:51:34.902 [Info] Writing postfixes
20:51:34.905 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWalkHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

20:51:34.905 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
20:51:34.905 [Info] Writing prefixes
20:51:34.906 [Info] Writing postfixes
20:51:34.908 [Info] Patching void BattleTech.Mech::AddTempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_AddSprintHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

20:51:34.908 [Info] Running ILHook manipulator on void BattleTech.Mech::AddTempHeat()
20:51:34.908 [Info] Writing postfixes
20:51:34.909 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWeaponHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

20:51:34.910 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
20:51:34.910 [Info] Writing prefixes
20:51:34.910 [Info] Writing postfixes
20:51:34.914 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 2 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
3 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.914 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:34.914 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:34.915 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.917 [Info] Writing prefixes
20:51:34.917 [Info] Writing postfixes
20:51:34.925 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:34.925 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:34.925 [Info] Writing prefixes
20:51:34.925 [Info] Writing postfixes
20:51:34.930 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static void CustomUnits.MechStatisticsRules_CalculateTonnage::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:34.930 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:34.930 [Info] Writing postfixes
20:51:34.933 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateCBillValue::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:34.933 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:34.933 [Info] Writing prefixes
20:51:34.934 [Info] Writing postfixes
20:51:34.936 [Info] Patching bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_CreateMeleeOrders::Prefix(BattleTech.UI.SelectionStateMove __instance)

20:51:34.936 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders()
20:51:34.936 [Info] Writing prefixes
20:51:34.938 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

20:51:34.939 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:34.939 [Info] Writing prefixes
20:51:34.942 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayMechInfoWidget_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.LanceStat[] ___mechStats, BattleTech.MechDef ___selectedMech)

20:51:34.942 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetStats()
20:51:34.942 [Info] Writing postfixes
20:51:34.946 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void CustomUnits.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.TMProWrapper.LocalizableText ___headLabel, BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftLegLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightLegLabel, BattleTech.MechDef ___activeMech)

20:51:34.946 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
20:51:34.946 [Info] Writing postfixes
20:51:34.950 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:34.950 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
20:51:34.950 [Info] Writing prefixes
20:51:34.950 [Info] Writing postfixes
20:51:34.959 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.959 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
20:51:34.960 [Info] Transpiling void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
20:51:34.967 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.976 [Info] Patching static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_AlignVehicleToGround::Prefix(UnityEngine.Transform vehicleTransform, float deltaTime)

20:51:34.977 [Info] Running ILHook manipulator on static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime)
20:51:34.977 [Info] Writing prefixes
20:51:34.980 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.MechDef_GatherDependencies_fake::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:34.982 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:34.982 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:34.982 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:34.983 [Info] Writing postfixes
20:51:34.985 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.ChassisDef_GatherDependencies_fake::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

20:51:34.986 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
20:51:34.986 [Info] Writing postfixes
20:51:34.989 [Info] Patching virtual void BattleTech.VehicleDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_RefreshChassis::Postfix(BattleTech.VehicleDef __instance)

20:51:34.989 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::RefreshChassis()
20:51:34.989 [Info] Writing postfixes
20:51:34.992 [Info] Patching bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsLocationDestroyed::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisLocations loc, Boolean& __result)

20:51:34.992 [Info] Running ILHook manipulator on bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc)
20:51:34.994 [Info] Writing postfixes
20:51:34.995 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechStructureSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

20:51:34.995 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef)
20:51:34.995 [Info] Writing postfixes
20:51:34.998 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static bool CustomSalvage.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage, Boolean& __runOriginal)
* static bool CustomComponents.Contract_GenerateSalvage::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage, Boolean& __runOriginal)
1 postfixes:
* static void CustomUnits.Contract_GenerateSalvage::Postfix(System.Collections.Generic.List<BattleTech.UnitResult> lostUnits)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:34.998 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
20:51:34.998 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
20:51:34.999 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:35.018 [Info] Writing prefixes
20:51:35.018 [Info] Writing postfixes
20:51:35.030 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)
* static void CustomUnits.MechValidationRules_ValidateMechCanBeFielded::Postfix(BattleTech.SimGameState sim, BattleTech.MechDef mechDef, Boolean& __result)

20:51:35.030 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
20:51:35.030 [Info] Writing postfixes
20:51:35.031 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechPosessesWeaponsSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

20:51:35.032 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef)
20:51:35.032 [Info] Writing postfixes
20:51:35.033 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)

20:51:35.033 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
20:51:35.034 [Info] Writing prefixes
20:51:35.035 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
2 postfixes:
* static void CustomUnits.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

20:51:35.035 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
20:51:35.035 [Info] Writing prefixes
20:51:35.036 [Info] Writing postfixes
20:51:35.037 [Info] Patching void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_OnActorTakeDamage::Prefix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenterMessage message)

20:51:35.037 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message)
20:51:35.038 [Info] Writing prefixes
20:51:35.040 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
1 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

20:51:35.040 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
20:51:35.041 [Info] Writing prefixes
20:51:35.041 [Info] Writing postfixes
20:51:35.043 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:35.044 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
20:51:35.044 [Info] Writing prefixes
20:51:35.044 [Info] Writing postfixes
20:51:35.048 [Info] Patching void BattleTech.VehicleDef::Refresh() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_Refresh::Prefix(BattleTech.VehicleDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

20:51:35.048 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
20:51:35.049 [Info] Writing prefixes
20:51:35.049 [Info] Writing postfixes
20:51:35.050 [Info] Patching void BattleTech.VehicleChassisDef::Refresh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleChassisDef_Refresh::Prefix(BattleTech.VehicleChassisDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)

20:51:35.050 [Info] Running ILHook manipulator on void BattleTech.VehicleChassisDef::Refresh()
20:51:35.050 [Info] Writing prefixes
20:51:35.053 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_refreshMechInfo::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUDStatusPanel ___StatusPanel, BattleTech.AbstractActor ___displayedActor)
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

20:51:35.053 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
20:51:35.054 [Info] Writing prefixes
20:51:35.054 [Info] Writing postfixes
20:51:35.056 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.SkirmishSettings_Beta_FinalizeLances::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LancePreviewPanel ___playerLancePreview, BattleTech.UI.UIManager ___uiManager)

20:51:35.056 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
20:51:35.056 [Info] Writing prefixes
20:51:35.056 [Info] Writing postfixes
20:51:35.058 [Info] Patching virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SkirmishSettings_Beta_OnAddedToHierarchy::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance)

20:51:35.059 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy()
20:51:35.059 [Info] Writing prefixes
20:51:35.062 [Info] Patching void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatMeter_RefreshHeatInfo::Prefix(BattleTech.UI.CombatHUDHeatMeter __instance, float ___underlyingHeatTarget, float ___underlyingHeatDisplayed, float ___underlyingPredictionTarget, float ___underlyingPredictionDisplayed)

20:51:35.062 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo()
20:51:35.062 [Info] Writing prefixes
20:51:35.065 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMoveBase_CreateMoveOrders::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, bool isJump, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:35.065 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
20:51:35.065 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
20:51:35.066 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:35.066 [Info] Writing prefixes
20:51:35.070 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, bool consideringJump, bool useCOILPathingPreview, BattleTech.AbstractActor ___displayedActor, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

20:51:35.070 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
20:51:35.070 [Info] Writing prefixes
20:51:35.070 [Info] Writing postfixes
20:51:35.074 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardWaypoint::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType ___moveType)

20:51:35.074 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest)
20:51:35.074 [Info] Writing postfixes
20:51:35.076 [Info] Patching void BattleTech.ActorTwistSequence::update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_update::Prefix(BattleTech.ActorTwistSequence __instance, Object& __state)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_update::Postfix(BattleTech.ActorTwistSequence __instance, float ___t, Object& __state, BattleTech.PilotableActorRepresentation ___actorRep)

20:51:35.076 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::update()
20:51:35.076 [Info] Writing prefixes
20:51:35.077 [Info] Writing postfixes
20:51:35.257 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:35.258 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomComponents.CombatHUD_InitTags::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
6 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_Init_Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

20:51:35.258 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
20:51:35.259 [Info] Writing prefixes
20:51:35.259 [Info] Writing postfixes
20:51:35.265 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:35.266 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_OnCombatGameDestroyed_Postfix()

20:51:35.266 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
20:51:35.266 [Info] Writing prefixes
20:51:35.266 [Info] Writing postfixes
20:51:35.268 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:35.269 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Init_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.ActiveChatListView ____activeChatList)

20:51:35.269 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Init()
20:51:35.269 [Info] Writing postfixes
20:51:35.273 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:35.273 [Info] Patching void BattleTech.UI.CombatChatModule::CombatInit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_CombatInit_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField, UnityEngine.GameObject ____activeChatWindow, BattleTech.UI.ActiveChatListView ____activeChatList, BattleTech.UI.PassiveChatListView ____passiveChatList)

20:51:35.274 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::CombatInit()
20:51:35.274 [Info] Writing postfixes
20:51:35.277 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 126 ms
20:51:35.277 [Info] Patching void BattleTech.UI.CombatChatModule::Active_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Active_OnEnter_Postfix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField)

20:51:35.277 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::Active_OnEnter()
20:51:35.278 [Info] Writing postfixes
20:51:35.279 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:35.279 [Info] PrefixWrapper being created for: CustomLocalization::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
20:51:35.280 [Info] PrefixWrapper created: HXI︳38︳::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
20:51:35.280 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
20:51:35.280 [Info] PrefixWrapper created: HXI︳39︳::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
20:51:35.280 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.280 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, BattleTech.CombatGameState ___combat, Boolean& __runOriginal)

20:51:35.282 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
20:51:35.282 [Info] Writing prefixes
20:51:35.284 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.284 [Info] Patching void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatLog::MessageCenter_RemoveSubscriber_Prefix(MessageCenter __instance, MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber, System.Collections.Generic.Dictionary<MessageCenterMessageType, System.Collections.Generic.List<MessageSubscription>> ___messageTable)

20:51:35.285 [Info] Running ILHook manipulator on void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber)
20:51:35.285 [Info] Writing prefixes
20:51:35.288 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.288 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:35.290 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
20:51:35.295 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.295 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:35.296 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
20:51:35.299 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.299 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:35.300 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
20:51:35.301 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.301 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:35.301 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
20:51:35.302 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.303 [Info] Patching void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

20:51:35.303 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState)
20:51:35.306 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.307 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix(Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance, Boolean& __runOriginal)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance, Boolean& __runOriginal)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void IRTweaks.Patches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

20:51:35.307 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
20:51:35.308 [Info] Writing prefixes
20:51:35.308 [Info] Writing postfixes
20:51:35.313 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.313 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)
* static void IRTweaks.Modules.UI.TgtComputerTonnage+CombatHUDActorDetailsDisplay_RefreshInfo_Patch::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

20:51:35.314 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
20:51:35.314 [Info] Writing postfixes
20:51:35.315 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.316 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatLog+CombatChatModule_Update::Prefix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.ActiveChatListView ____activeChatList)

20:51:35.316 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Update()
20:51:35.316 [Info] Writing prefixes
20:51:35.320 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.320 [Info] Patching virtual void BattleTech.UI.SimGameOptionsMenu::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.SimGameOptionsMenu_Update::Postfix(BattleTech.UI.SimGameOptionsMenu __instance, BattleTech.UI.HBSDOTweenButton ___saveGame, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___saveTooltip, BattleTech.UI.HBSDOTweenButton ___restartMission, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___restartTooltip)

20:51:35.321 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameOptionsMenu::Update()
20:51:35.321 [Info] Writing postfixes
20:51:35.323 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.324 [Info] Patching void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.SimGameOptionsMenu_QuitPopup::Prefix(BattleTech.UI.SimGameOptionsMenu __instance, Action quitAction)

20:51:35.324 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction)
20:51:35.324 [Info] Writing prefixes
20:51:35.327 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.327 [Info] Patching void BattleTech.CombatGameState::TriggerAutoSaving() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatGameState_TriggerAutoSaving::Prefix(BattleTech.CombatGameState __instance)

20:51:35.328 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::TriggerAutoSaving()
20:51:35.328 [Info] Writing prefixes
20:51:35.330 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.330 [Info] Patching void BattleTech.UI.MechLabPanel::ToggleLayout() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_ToggleLayout::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabDismountWidget ___dismountWidget, BattleTech.UI.HBSDOTweenButton ___btn_mechViewerButton)

20:51:35.330 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ToggleLayout()
20:51:35.330 [Info] Writing postfixes
20:51:35.334 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.335 [Info] Patching void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_SetData_1::Postfix(BattleTech.UI.MechLabPanel __instance)

20:51:35.336 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB)
20:51:35.336 [Info] Writing postfixes
20:51:35.340 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.342 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

20:51:35.342 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
20:51:35.342 [Info] Writing prefixes
20:51:35.353 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.353 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.MechLabPanel_OnStripEquipment_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, bool ___batchActionInProgress, BattleTech.UI.MechLabItemSlotElement ___dragItem)

20:51:35.354 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripEquipment()
20:51:35.354 [Info] Writing prefixes
20:51:35.357 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 128 ms
20:51:35.358 [Info] Patching bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabLocationWidget_ValidateAdd::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef newComponent, BattleTech.UI.MechLabPanel ___mechLab)

20:51:35.358 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent)
20:51:35.358 [Info] Writing postfixes
20:51:35.360 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
20:51:35.360 [Info] PrefixWrapper created: HXI︳40︳::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
20:51:35.361 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.361 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MechEngineer.Features.HardpointFix.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType, BattleTech.UI.MechLabPanel ___mechLab, Localize.Text ____dropErrorMessage, Boolean& __runOriginal)
* static bool CustomComponents.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData, Boolean& __runOriginal)

20:51:35.362 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
20:51:35.362 [Info] Writing prefixes
20:51:35.365 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.366 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)
1 postfixes:
* static void IRTweaks.Modules.UI.SkirmishSettings_Beta_OnLoadComplete::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.TMProWrapper.HBS_Dropdown ___lanceBudgetDropdown)

20:51:35.366 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
20:51:35.366 [Info] Writing prefixes
20:51:35.367 [Info] Writing postfixes
20:51:35.369 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.371 [Info] Patching void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGContractsWidget_Init::Postfix(BattleTech.UI.SGContractsWidget __instance, UnityEngine.GameObject ___ContractList)

20:51:35.371 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted)
20:51:35.371 [Info] Writing postfixes
20:51:35.377 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.378 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_ResetFlyoutsToPrefab::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.TMProWrapper.LocalizableText ___text, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, int ___flyoutButtonCount)

20:51:35.378 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
20:51:35.378 [Info] Writing postfixes
20:51:35.380 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.381 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_SetStateAccordingToSimDropship::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipType shipType, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

20:51:35.381 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
20:51:35.382 [Info] Writing postfixes
20:51:35.385 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.386 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnPointerEnter::Postfix(BattleTech.UI.SGNavigationButton __instance, UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

20:51:35.386 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
20:51:35.386 [Info] Writing postfixes
20:51:35.388 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.389 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnClick::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.SGNavigationList ___buttonParent, BattleTech.UI.TMProWrapper.LocalizableText ___text)

20:51:35.389 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
20:51:35.389 [Info] Writing postfixes
20:51:35.390 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.391 [Info] Patching void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationWidgetLeft_Init::Postfix(BattleTech.UI.SGNavigationWidgetLeft __instance, BattleTech.UI.SGShipMap ___shipMap, BattleTech.UI.SGNavigationList ___locationList)

20:51:35.391 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager)
20:51:35.391 [Info] Writing postfixes
20:51:35.394 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.395 [Info] Patching void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_FlyoutClicked::Prefix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipMenuType buttonID, BattleTech.UI.TMProWrapper.LocalizableText ___text, BattleTech.UI.SGNavigationList ___buttonParent)

20:51:35.395 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID)
20:51:35.395 [Info] Writing prefixes
20:51:35.397 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.397 [Info] Patching void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.SimGameState simState)

20:51:35.398 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState)
20:51:35.398 [Info] Writing postfixes
20:51:35.400 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.401 [Info] Patching void BattleTech.UI.SGNavigationList::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_Start::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.UI.HBSRadioSet ___radioSet, BattleTech.UI.SGNavigationButton ___argoButton)

20:51:35.401 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::Start()
20:51:35.401 [Info] Writing postfixes
20:51:35.406 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.407 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)

20:51:35.408 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
20:51:35.408 [Info] Writing postfixes
20:51:35.414 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.415 [Info] Patching void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_FromPilotDef::Postfix(BattleTech.Pilot __instance)

20:51:35.415 [Info] Running ILHook manipulator on void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def)
20:51:35.415 [Info] Writing postfixes
20:51:35.417 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.418 [Info] Patching void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_AddXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, int value)

20:51:35.418 [Info] Running ILHook manipulator on void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value)
20:51:35.418 [Info] Writing postfixes
20:51:35.420 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.420 [Info] Patching bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, uint value)

20:51:35.420 [Info] Running ILHook manipulator on bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value)
20:51:35.422 [Info] Writing prefixes
20:51:35.422 [Info] Writing postfixes
20:51:35.424 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.424 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksMWDetailPanel_OnPilotReset::Postfix(BattleTech.UI.SGBarracksMWDetailPanel __instance)

20:51:35.424 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset()
20:51:35.425 [Info] Writing postfixes
20:51:35.426 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.426 [Info] Patching virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksWidget_ReceiveButtonPress::Postfix(BattleTech.UI.SGBarracksWidget __instance, string button)

20:51:35.426 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button)
20:51:35.427 [Info] Writing postfixes
20:51:35.428 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.429 [Info] Patching void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SGBarracksAdvancementPanel_OnValueClick_Patch::Prefix(BattleTech.UI.SGBarracksAdvancementPanel __instance, string type, int value)

20:51:35.429 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value)
20:51:35.429 [Info] Writing prefixes
20:51:35.431 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.431 [Info] Patching virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGRoomController_Barracks_Close_Patch::Postfix(BattleTech.UI.SGRoomController_Barracks __instance)

20:51:35.432 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader)
20:51:35.432 [Info] Writing postfixes
20:51:35.433 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.434 [Info] Patching void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Prefix(BattleTech.SimGameState __instance, int val)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Postfix(BattleTech.SimGameState __instance, int val)

20:51:35.434 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained)
20:51:35.434 [Info] Writing prefixes
20:51:35.434 [Info] Writing postfixes
20:51:35.436 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.437 [Info] Patching static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGS_SetSimGameStat::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)

20:51:35.437 [Info] Running ILHook manipulator on static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)
20:51:35.437 [Info] Writing postfixes
20:51:35.440 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.446 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
8 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)

20:51:35.446 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:35.447 [Info] Writing prefixes
20:51:35.447 [Info] Writing postfixes
20:51:35.463 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.466 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:35.466 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:35.467 [Info] Writing prefixes
20:51:35.467 [Info] Writing postfixes
20:51:35.478 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.478 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
1 postfixes:
* static void IRTweaks.Modules.Misc.SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Postfix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

20:51:35.478 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
20:51:35.479 [Info] Writing prefixes
20:51:35.479 [Info] Writing postfixes
20:51:35.480 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.481 [Info] Patching bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddAllyFaction::Postfix(BattleTech.SimGameState __instance)

20:51:35.481 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement)
20:51:35.481 [Info] Writing postfixes
20:51:35.482 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.483 [Info] Patching void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_RemoveAllyFaction::Postfix(BattleTech.SimGameState __instance, BattleTech.FactionValue faction)

20:51:35.483 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction)
20:51:35.488 [Info] Writing postfixes
20:51:35.491 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.492 [Info] Patching BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetStatsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, BattleTech.StatCollection& __result)

20:51:35.492 [Info] Running ILHook manipulator on BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope)
20:51:35.492 [Info] Writing postfixes
20:51:35.495 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 129 ms
20:51:35.495 [Info] Patching HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetTagsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, HBS.Collections.TagSet& __result)

20:51:35.495 [Info] Running ILHook manipulator on HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope)
20:51:35.496 [Info] Writing postfixes
20:51:35.500 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.500 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:35.501 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
20:51:35.501 [Info] Transpiling void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
20:51:35.501 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:35.507 [Info] Writing prefixes
20:51:35.507 [Info] Writing postfixes
20:51:35.509 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.510 [Info] Patching void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.MechDef_constructor::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)

20:51:35.510 [Info] Running ILHook manipulator on void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)
20:51:35.510 [Info] Writing postfixes
20:51:35.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.515 [Info] Patching static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_ApplySimGameEventResult::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)

20:51:35.515 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)
20:51:35.515 [Info] Writing postfixes
20:51:35.522 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.522 [Info] Patching void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficulty_RefreshCareerScoreMultiplier::Prefix(BattleTech.SimGameDifficulty __instance, System.Collections.Generic.Dictionary<string, BattleTech.SimGameDifficulty+DifficultySetting> ___difficultyDict, System.Collections.Generic.Dictionary<string, int> ___difficultyIndices, Single& ___curCareerModifier)

20:51:35.522 [Info] Running ILHook manipulator on void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier()
20:51:35.522 [Info] Writing prefixes
20:51:35.525 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.526 [Info] Patching float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_CalculateRawScoreMod::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, Single& __result)

20:51:35.526 [Info] Running ILHook manipulator on float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod()
20:51:35.526 [Info] Writing postfixes
20:51:35.529 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.535 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
9 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:35.536 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:35.536 [Info] Writing prefixes
20:51:35.536 [Info] Writing postfixes
20:51:35.552 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.553 [Info] Patching void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.UnityGameInstance_CalcGameHash::Prefix()

20:51:35.553 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm)
20:51:35.553 [Info] Writing prefixes
20:51:35.556 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.556 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
1 postfixes:
* static void IRTweaks.Modules.Misc.UnitSpawnPointGameLogic_initializeActor::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

20:51:35.556 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
20:51:35.557 [Info] Writing prefixes
20:51:35.557 [Info] Writing postfixes
20:51:35.559 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
20:51:35.560 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

20:51:35.560 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:35.560 [Info] Writing postfixes
20:51:35.564 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.566 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:35.566 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
20:51:35.568 [Info] Transpiling void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
20:51:35.572 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:35.584 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.584 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Prefix(BattleTech.UI.MainMenu __instance)
3 postfixes:
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

20:51:35.585 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
20:51:35.585 [Info] Writing prefixes
20:51:35.585 [Info] Writing postfixes
20:51:35.586 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.587 [Info] Patching void BattleTech.SimGameState::ShowLowFundsWarning() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameState_ShowLowFundsWarning::Prefix()

20:51:35.587 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ShowLowFundsWarning()
20:51:35.587 [Info] Writing prefixes
20:51:35.589 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.589 [Info] Patching bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.LineOfSight_FindSecondaryImpactTarget::Postfix(BattleTech.LineOfSight __instance, UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3& impactPoint, Boolean& __result)

20:51:35.590 [Info] Running ILHook manipulator on bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint)
20:51:35.590 [Info] Writing postfixes
20:51:35.594 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.595 [Info] Patching void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_UpdateDifficultyScoreBar_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)

20:51:35.595 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar()
20:51:35.595 [Info] Writing prefixes
20:51:35.597 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.597 [Info] Patching void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.PreGameCareerModeSettingsTotalScoreDescAndBar_RefreshInfo_Patch::Prefix(BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar __instance, float newMod)

20:51:35.597 [Info] Running ILHook manipulator on void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod)
20:51:35.597 [Info] Writing prefixes
20:51:35.599 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.600 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

20:51:35.600 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
20:51:35.600 [Info] Writing postfixes
20:51:35.607 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.608 [Info] Patching void BattleTech.SimGameState::Destroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__Destroy_Patch::Postfix(BattleTech.SimGameState __instance)

20:51:35.608 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Destroy()
20:51:35.608 [Info] Writing postfixes
20:51:35.610 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.684 [Info] Patching virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, string ___ironManModeId, string ___autoEquipMechsId, string ___mechPartsReqId, string ___skipPrologueId, string ___randomMechId, string ___argoUpgradeCostId, BattleTech.UI.SGDSToggle ___ironManModeToggle, BattleTech.UI.SGDSDropdown ___mechPartsReqDropdown, UnityEngine.GameObject ___disabledOverlay, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___activeDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___activeToggles, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___cachedDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___cachedToggles, BattleTech.UI.SGDSToggle ___togglePrefab, BattleTech.UI.SGDSDropdown ___dropdownPrefab)

20:51:35.684 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings()
20:51:35.684 [Info] Writing prefixes
20:51:35.684 [Info] Writing postfixes
20:51:35.693 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.695 [Info] Patching void BattleTech.SimGameState::AddRandomStartingMechs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameState_AddRandomStartingMechs::Prefix(BattleTech.SimGameState __instance)

20:51:35.695 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddRandomStartingMechs()
20:51:35.695 [Info] Writing prefixes
20:51:35.701 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.702 [Info] Patching void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameConstantOverride_ApplyOverride::Postfix(BattleTech.SimGameConstantOverride __instance, string constantType, string constantName)

20:51:35.702 [Info] Running ILHook manipulator on void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName)
20:51:35.702 [Info] Writing postfixes
20:51:35.705 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 132 ms
20:51:35.706 [Info] Patching virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.RandomStartByDifficulty_SGDifficultySettingObject_CurCareerModifier::Prefix(BattleTech.UI.SGDifficultySettingObject __instance, Single& __result, int ___curIdx)

20:51:35.706 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier()
20:51:35.707 [Info] Writing prefixes
20:51:35.710 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.711 [Info] Patching byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:35.712 [Info] Running ILHook manipulator on byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
20:51:35.712 [Info] Transpiling byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
20:51:35.712 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:35.721 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.722 [Info] Patching void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ObstructionGameLogic_ExplodeBuildingIfNeeded::Prefix(BattleTech.ObstructionGameLogic __instance)

20:51:35.722 [Info] Running ILHook manipulator on void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded()
20:51:35.722 [Info] Writing prefixes
20:51:35.728 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.728 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)

20:51:35.728 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
20:51:35.729 [Info] Writing postfixes
20:51:35.731 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.732 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)

20:51:35.732 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
20:51:35.732 [Info] Writing postfixes
20:51:35.736 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.737 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced_OnFire::Postfix(CustomUnits.CustomMech __instance)

20:51:35.737 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
20:51:35.738 [Info] Writing postfixes
20:51:35.740 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.741 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced_OnFire::Postfix(BattleTech.Mech __instance)

20:51:35.741 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
20:51:35.741 [Info] Writing postfixes
20:51:35.744 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.744 [Info] Patching void BattleTech.Weapon::ProcessOnFiredFloatieEffects() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_ProcessOnFiredFloatieEffects_Patch::Postfix(BattleTech.Weapon __instance, BattleTech.CombatGameState ___combat)

20:51:35.744 [Info] Running ILHook manipulator on void BattleTech.Weapon::ProcessOnFiredFloatieEffects()
20:51:35.744 [Info] Writing postfixes
20:51:35.747 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 133 ms
20:51:35.749 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void IRTweaks.Modules.Combat.AttackDirectorAttackSequence_OnAttackSequenceResolveDamage::Postfix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)

20:51:35.749 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
20:51:35.749 [Info] Writing prefixes
20:51:35.749 [Info] Writing postfixes
20:51:35.760 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:35.761 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
20:51:35.761 [Info] PrefixWrapper created: HXI︳41︳::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
20:51:35.761 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.JammingEnabler::Prefix
20:51:35.762 [Info] PrefixWrapper created: HXI︳42︳::CustAmmoCategories.JammingEnabler::Prefix
20:51:35.762 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
20:51:35.763 [Info] PrefixWrapper created: HXI︳43︳::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
20:51:35.763 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AttackDirector_OnAttackComplete::Prefix
20:51:35.763 [Info] PrefixWrapper created: HXI︳44︳::CustomUnits.AttackDirector_OnAttackComplete::Prefix
20:51:35.763 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
20:51:35.765 [Info] PrefixWrapper created: HXI︳45︳::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
20:51:35.765 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.767 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 5 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state, Boolean& __runOriginal)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

20:51:35.767 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
20:51:35.767 [Info] Writing prefixes
20:51:35.768 [Info] Writing postfixes
20:51:35.774 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.776 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

20:51:35.776 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:35.776 [Info] Writing postfixes
20:51:35.781 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.781 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.HUDMechArmorReadout_SetHoveredAmor::Postfix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ArmorLocation location, BattleTech.Mech ___displayedMech)

20:51:35.781 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location)
20:51:35.782 [Info] Writing postfixes
20:51:35.783 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.784 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_AL::Postfix(BattleTech.UI.SelectionStateFire __instance, BattleTech.ArmorLocation location)

20:51:35.784 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location)
20:51:35.784 [Info] Writing postfixes
20:51:35.786 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.786 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_VCL::Postfix(BattleTech.UI.SelectionStateFire __instance)

20:51:35.787 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location)
20:51:35.787 [Info] Writing postfixes
20:51:35.789 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.789 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

20:51:35.789 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
20:51:35.789 [Info] Writing postfixes
20:51:35.791 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.791 [Info] Patching float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ToHit_GetMoraleAttackModifier::Postfix(Single& __result)

20:51:35.792 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack)
20:51:35.792 [Info] Writing postfixes
20:51:35.794 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.795 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiers::Postfix(Single& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:35.795 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:35.795 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:35.796 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:35.796 [Info] Writing prefixes
20:51:35.797 [Info] Writing postfixes
20:51:35.800 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.801 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiersDescription::Postfix(String& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:35.802 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:35.802 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
20:51:35.802 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:35.802 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:35.803 [Info] Writing postfixes
20:51:35.809 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.809 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

20:51:35.809 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
20:51:35.810 [Info] Writing postfixes
20:51:35.815 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.815 [Info] Patching virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDCalledShotPopUp_Update::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD)

20:51:35.816 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update()
20:51:35.816 [Info] Writing postfixes
20:51:35.819 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.820 [Info] Patching virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechMeleeSequence_ConsumesFiring_Getter::Prefix(BattleTech.MechMeleeSequence __instance)

20:51:35.820 [Info] Running ILHook manipulator on virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring()
20:51:35.820 [Info] Writing prefixes
20:51:35.822 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.822 [Info] Patching virtual bool BattleTech.MechDFASequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechDFASequence_ConsumesFiring_Getter::Prefix(BattleTech.MechDFASequence __instance)

20:51:35.822 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDFASequence::get_ConsumesFiring()
20:51:35.822 [Info] Writing prefixes
20:51:35.825 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.825 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
7 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)

20:51:35.825 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:35.826 [Info] Writing postfixes
20:51:35.830 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.830 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void IRTweaks.Modules.Combat.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

20:51:35.830 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
20:51:35.832 [Info] Writing prefixes
20:51:35.832 [Info] Writing postfixes
20:51:35.835 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.836 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List<BattleTech.ICombatant> __result)

20:51:35.836 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
20:51:35.836 [Info] Writing postfixes
20:51:35.839 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.840 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

20:51:35.840 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
20:51:35.840 [Info] Writing prefixes
20:51:35.841 [Info] Writing postfixes
20:51:35.844 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.845 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDWeaponPanel_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

20:51:35.845 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
20:51:35.845 [Info] Writing postfixes
20:51:35.848 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.848 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

20:51:35.848 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor)
20:51:35.849 [Info] Writing prefixes
20:51:35.850 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.851 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState2::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)

20:51:35.851 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)
20:51:35.851 [Info] Writing prefixes
20:51:35.854 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.855 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:35.856 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
20:51:35.856 [Info] Writing prefixes
20:51:35.856 [Info] Writing postfixes
20:51:35.864 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.865 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDActionButton_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string creatorGUID, string targetGUID)

20:51:35.865 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID)
20:51:35.866 [Info] Writing postfixes
20:51:35.869 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.869 [Info] Patching virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDEquipmentSlot_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDEquipmentSlot __instance, string creatorGUID, string targetGUID)

20:51:35.870 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID)
20:51:35.870 [Info] Writing postfixes
20:51:35.872 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.873 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
3 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButtons_Patch::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

20:51:35.873 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
20:51:35.873 [Info] Writing prefixes
20:51:35.873 [Info] Writing postfixes
20:51:35.876 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.877 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

20:51:35.877 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
20:51:35.877 [Info] Writing postfixes
20:51:35.880 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.882 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)

20:51:35.882 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
20:51:35.883 [Info] Writing postfixes
20:51:35.886 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 139 ms
20:51:35.887 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

20:51:35.888 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
20:51:35.888 [Info] Writing postfixes
20:51:35.888 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix(BattleTech.Turret __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

20:51:35.889 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
20:51:35.889 [Info] Writing prefixes
20:51:35.894 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:35.894 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
20:51:35.894 [Info] PrefixWrapper created: HXI︳46︳::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
20:51:35.895 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
20:51:35.895 [Info] PrefixWrapper created: HXI︳47︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
20:51:35.895 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.897 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 2 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:35.897 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:35.897 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
20:51:35.898 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:35.908 [Info] Writing prefixes
20:51:35.909 [Info] Writing postfixes
20:51:35.916 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.916 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.TurnDirector_StartFirstRound::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

20:51:35.917 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
20:51:35.917 [Info] Writing prefixes
20:51:35.917 [Info] Writing postfixes
20:51:35.921 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.921 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatHUDStatusPanel_ShowMeleeDamageMultipliers::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor)

20:51:35.922 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor)
20:51:35.922 [Info] Writing prefixes
20:51:35.925 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.926 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Mech_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:35.926 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:35.926 [Info] Writing prefixes
20:51:35.927 [Info] Writing postfixes
20:51:35.930 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.931 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Vehicle_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:35.931 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:35.932 [Info] Writing prefixes
20:51:35.932 [Info] Writing postfixes
20:51:35.935 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.936 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Turret_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:35.936 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:35.936 [Info] Writing prefixes
20:51:35.937 [Info] Writing postfixes
20:51:35.940 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.942 [Info] Patching virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Building_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Building __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

20:51:35.942 [Info] Running ILHook manipulator on virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
20:51:35.943 [Info] Writing postfixes
20:51:35.946 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
20:51:35.946 [Info] PrefixWrapper created: HXI︳48︳::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
20:51:35.946 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.948 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 5 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

20:51:35.948 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
20:51:35.948 [Info] Writing prefixes
20:51:35.949 [Info] Writing postfixes
20:51:35.953 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.954 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Weapon_InitStats_Patch::Postfix(BattleTech.Weapon __instance)

20:51:35.955 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
20:51:35.955 [Info] Writing postfixes
20:51:35.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 141 ms
20:51:35.965 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
8 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)

20:51:35.966 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:35.966 [Info] Writing postfixes
20:51:35.971 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:35.972 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
20:51:35.972 [Info] PrefixWrapper created: HXI︳49︳::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
20:51:35.972 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.Mech_DamageLocation::Prefix
20:51:35.973 [Info] PrefixWrapper created: HXI︳50︳::CustAmmoCategories.Mech_DamageLocation::Prefix
20:51:35.973 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
20:51:35.974 [Info] PrefixWrapper created: HXI︳51︳::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
20:51:35.974 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
20:51:35.974 [Info] PrefixWrapper created: HXI︳52︳::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
20:51:35.974 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 144 ms
20:51:35.976 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)

20:51:35.976 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
20:51:35.976 [Info] Writing prefixes
20:51:35.984 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 144 ms
20:51:35.985 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.AmmunitionBox_DamageComponent::Prefix(BattleTech.AmmunitionBox __instance, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:35.986 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:35.986 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
20:51:35.986 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:35.989 [Info] Writing prefixes
20:51:35.991 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:35.992 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.PilotInjurePilotPatch::Prefix
20:51:35.992 [Info] PrefixWrapper created: HXI︳53︳::MissionControl.Patches.PilotInjurePilotPatch::Prefix
20:51:35.992 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
20:51:35.993 [Info] PrefixWrapper created: HXI︳54︳::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
20:51:35.993 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
20:51:35.994 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
1 postfixes:
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

20:51:35.994 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
20:51:35.994 [Info] Writing prefixes
20:51:35.995 [Info] Writing postfixes
20:51:35.998 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
20:51:35.998 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.TurnDirector_OnTurnActorActivateComplete::Postfix(BattleTech.TurnDirector __instance)

20:51:35.998 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
20:51:35.999 [Info] Writing postfixes
20:51:36.002 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 148 ms
20:51:36.003 [Info] Patching virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:36.003 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
20:51:36.004 [Info] Transpiling virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
20:51:36.005 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:36.016 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 149 ms
20:51:36.017 [Info] Patching void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:36.018 [Info] Running ILHook manipulator on void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
20:51:36.018 [Info] Transpiling void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
20:51:36.020 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:36.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 149 ms
20:51:36.034 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
9 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_PainTolerance::Postfix(BattleTech.AbstractActor __instance)

20:51:36.040 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
20:51:36.040 [Info] Writing postfixes
20:51:36.047 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.047 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
20:51:36.048 [Info] PrefixWrapper created: HXI︳55︳::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
20:51:36.048 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AbstractActor_IsFriendly::Prefix
20:51:36.049 [Info] PrefixWrapper created: HXI︳56︳::CustomUnits.AbstractActor_IsFriendly::Prefix
20:51:36.049 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
20:51:36.050 [Info] PrefixWrapper created: HXI︳57︳::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
20:51:36.050 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 152 ms
20:51:36.050 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)

20:51:36.051 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
20:51:36.051 [Info] Writing prefixes
20:51:36.052 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 152 ms
20:51:36.053 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void IRTweaks.Modules.Combat.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance, BattleTech.Contract contract)

20:51:36.053 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
20:51:36.054 [Info] Writing postfixes
20:51:36.058 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 152 ms
20:51:36.059 [Info] Patching void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Building_AttachBuildingToObjective::Postfix(BattleTech.Building __instance, BattleTech.Framework.ObjectiveGameLogic objective)

20:51:36.059 [Info] Running ILHook manipulator on void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective)
20:51:36.059 [Info] Writing postfixes
20:51:36.061 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 152 ms
20:51:36.062 [Info] Patching void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ScaleObjectiveBuildingStructure_TurnDirector_OnInitializeContractComplete::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

20:51:36.062 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message)
20:51:36.062 [Info] Writing postfixes
20:51:36.064 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 152 ms
20:51:36.065 [Info] Patching void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SpawnProtection_Team_AddUnit::Postfix(BattleTech.Team __instance, BattleTech.AbstractActor unit)

20:51:36.065 [Info] Running ILHook manipulator on void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit)
20:51:36.065 [Info] Writing postfixes
20:51:36.081 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.081 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
20:51:36.081 [Info] PrefixWrapper created: HXI︳58︳::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
20:51:36.081 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
20:51:36.082 [Info] PrefixWrapper created: HXI︳59︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
20:51:36.082 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 154 ms
20:51:36.083 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract, Boolean& __runOriginal)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:36.083 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
20:51:36.083 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
20:51:36.084 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:36.085 [Info] Writing prefixes
20:51:36.085 [Info] Writing postfixes
20:51:36.088 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.089 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
20:51:36.089 [Info] PrefixWrapper created: HXI︳60︳::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
20:51:36.089 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
20:51:36.091 [Info] PrefixWrapper created: HXI︳61︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
20:51:36.091 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
20:51:36.092 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, Boolean& __runOriginal)

20:51:36.092 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
20:51:36.092 [Info] Writing prefixes
20:51:36.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
20:51:36.096 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
3 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:36.096 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:36.096 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
20:51:36.097 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:36.099 [Info] Writing prefixes
20:51:36.099 [Info] Writing postfixes
20:51:36.108 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
20:51:36.109 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

20:51:36.109 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
20:51:36.109 [Info] Writing postfixes
20:51:36.113 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
20:51:36.114 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.GameInstance_Load_Patch::Prefix(BattleTech.Save.GameInstanceSave save)

20:51:36.114 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
20:51:36.114 [Info] Writing prefixes
20:51:36.118 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
20:51:36.120 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)

20:51:36.121 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
20:51:36.121 [Info] Writing prefixes
20:51:36.121 [Info] Writing postfixes
20:51:36.126 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.127 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
20:51:36.127 [Info] PrefixWrapper created: HXI︳62︳::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
20:51:36.128 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
20:51:36.128 [Info] PrefixWrapper created: HXI︳63︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
20:51:36.128 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 159 ms
20:51:36.129 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

20:51:36.129 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
20:51:36.130 [Info] Writing prefixes
20:51:36.130 [Info] Writing postfixes
20:51:36.133 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.134 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
20:51:36.134 [Info] PrefixWrapper created: HXI︳64︳::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
20:51:36.134 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
20:51:36.135 [Info] PrefixWrapper created: HXI︳65︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
20:51:36.135 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 160 ms
20:51:36.136 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots)

20:51:36.136 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
20:51:36.136 [Info] Writing prefixes
20:51:36.136 [Info] Writing postfixes
20:51:36.138 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 160 ms
20:51:36.139 [Info] Patching void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.LancePreviewPanel_SaveLance::Prefix(BattleTech.UI.LancePreviewPanel __instance, BattleTech.LanceDef lanceToSave)

20:51:36.139 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave)
20:51:36.139 [Info] Writing prefixes
20:51:36.140 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.142 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.LancePreviewPanelSetData::Prefix
20:51:36.142 [Info] PrefixWrapper created: HXI︳66︳::MissionControl.Patches.LancePreviewPanelSetData::Prefix
20:51:36.142 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LancePreviewPanel_SetData::Prefix
20:51:36.143 [Info] PrefixWrapper created: HXI︳67︳::CustomUnits.LancePreviewPanel_SetData::Prefix
20:51:36.143 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
20:51:36.143 [Info] PrefixWrapper created: HXI︳68︳::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
20:51:36.143 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.145 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Boolean& __runOriginal)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)

20:51:36.145 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
20:51:36.145 [Info] Writing prefixes
20:51:36.150 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.151 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

20:51:36.151 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
20:51:36.152 [Info] Writing prefixes
20:51:36.153 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.154 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

20:51:36.154 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
20:51:36.154 [Info] Writing prefixes
20:51:36.156 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.156 [Info] Patching virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGCmdCenterLanceConfigBG_OnAddedToHierarchy::Postfix(BattleTech.UI.SGCmdCenterLanceConfigBG __instance)

20:51:36.156 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy()
20:51:36.157 [Info] Writing postfixes
20:51:36.158 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.160 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:36.161 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
20:51:36.161 [Info] Transpiling void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
20:51:36.162 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:36.169 [Info] Writing prefixes
20:51:36.174 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.175 [Info] Patching void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_CleanUpAllUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

20:51:36.175 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips()
20:51:36.176 [Info] Writing postfixes
20:51:36.179 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.180 [Info] Patching void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_ClearUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

20:51:36.180 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container)
20:51:36.180 [Info] Writing postfixes
20:51:36.184 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.186 [Info] Patching void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Patches.SGEngineeringScreen_AddUpgradePip::Prefix(BattleTech.UI.SGEngineeringScreen __instance, BattleTech.ShipModuleUpgrade upgrade)

20:51:36.186 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade)
20:51:36.186 [Info] Writing prefixes
20:51:36.192 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.285 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
10 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::FixMechInMechbay(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

20:51:36.286 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
20:51:36.286 [Info] Writing prefixes
20:51:36.287 [Info] Writing postfixes
20:51:36.308 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.310 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.SimGameState_InitCompanyStats_Patch::Postfix(BattleTech.SimGameState __instance)
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

20:51:36.310 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
20:51:36.311 [Info] Writing postfixes
20:51:36.317 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.317 [Info] Patching void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_AddArgoUpgrade::Postfix(BattleTech.SimGameState __instance)

20:51:36.318 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade)
20:51:36.318 [Info] Writing postfixes
20:51:36.323 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.324 [Info] Patching void BattleTech.SimGameState::ApplyArgoUpgrades() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_ApplyArgoUpgrades::Postfix(BattleTech.SimGameState __instance)

20:51:36.324 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ApplyArgoUpgrades()
20:51:36.324 [Info] Writing postfixes
20:51:36.328 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.329 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SkirmishMechBayPanel_SelectLance::Prefix(BattleTech.UI.SkirmishMechBayPanel __instance, BattleTech.LanceDef lance)

20:51:36.329 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance)
20:51:36.330 [Info] Writing prefixes
20:51:36.336 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 163 ms
20:51:36.338 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Features.Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

20:51:36.338 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState)
20:51:36.338 [Info] Writing prefixes
20:51:36.340 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.342 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
20:51:36.342 [Info] PrefixWrapper created: HXI︳69︳::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
20:51:36.343 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
20:51:36.343 [Info] PrefixWrapper created: HXI︳70︳::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
20:51:36.343 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
20:51:36.344 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.CombatGameState ___Combat, Boolean& __runOriginal)

20:51:36.344 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
20:51:36.344 [Info] Writing prefixes
20:51:36.348 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
20:51:36.348 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
20:51:36.348 [Info] PrefixWrapper created: HXI︳71︳::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
20:51:36.348 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
20:51:36.349 [Info] PrefixWrapper created: HXI︳72︳::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
20:51:36.349 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 167 ms
20:51:36.350 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)
* static void BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

20:51:36.351 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
20:51:36.351 [Info] Writing prefixes
20:51:36.352 [Info] Writing postfixes
20:51:39.871 [Info] ### Harmony id=io.kmission.fastload, version=2.10.1.0, location=C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPrewarm.Core::FinishedLoading(System.Collections.Generic.List<string> loadOrder), location C:\Program Files (x86)\Steam\steamapps\common\BATTLETECH\Mods\CustomPrewarm\CustomPrewarm.dll
### At 2023-03-12 08.51.39
20:51:39.874 [Info] Patching void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameContext_Rehydrate::Prefix(BattleTech.SimGameContext __instance, BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:39.875 [Info] Running ILHook manipulator on void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:39.875 [Info] Writing prefixes
20:51:39.879 [Info] Patching void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MetadataDatabase_WriteInMemoryDBToDisk::Prefix(BattleTech.Data.MetadataDatabase __instance, string filePath)

20:51:39.879 [Info] Running ILHook manipulator on void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath)
20:51:39.879 [Info] Writing prefixes
20:51:39.882 [Info] Patching void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameUXCreator_OnSimGameInitializeComplete::Prefix(BattleTech.UI.SimGameUXCreator __instance, MessageCenterMessage message)

20:51:39.883 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message)
20:51:39.883 [Info] Writing prefixes
20:51:39.885 [Info] Patching virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SGRoomController_Navigation_LeaveRoom::Prefix(BattleTech.UI.SGRoomController_Navigation __instance, bool ignoreFader)

20:51:39.885 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader)
20:51:39.886 [Info] Writing prefixes
20:51:39.888 [Info] Patching virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MechDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+MechDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:39.888 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:39.889 [Info] Writing prefixes
20:51:39.892 [Info] Patching virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.PilotHandler_Rehydrate::Prefix(BattleTech.SimGameContext+PilotHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:39.892 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:39.893 [Info] Writing prefixes
20:51:39.895 [Info] Patching virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.StarSystemHandler_Rehydrate::Prefix(BattleTech.SimGameContext+StarSystemHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:39.896 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:39.896 [Info] Writing prefixes
20:51:39.898 [Info] Patching virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FactionDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FactionDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:39.899 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:39.899 [Info] Writing prefixes
20:51:39.901 [Info] Patching virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FlashpointHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FlashpointHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

20:51:39.902 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
20:51:39.902 [Info] Writing prefixes
20:51:39.904 [Info] Patching void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.GameInstance_CreateSim::Prefix(BattleTech.GameInstance __instance, BattleTech.SimGameState+SimGameType gameType, bool debug)

20:51:39.904 [Info] Running ILHook manipulator on void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug)
20:51:39.905 [Info] Writing prefixes
20:51:39.907 [Info] Patching System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SaveGameStructure_GetAllCareerSlots::Postfix(BattleTech.Save.SaveGameStructure.SaveGameStructure __instance, System.Collections.Generic.List`1[[BattleTech.Save.SaveGameStructure.SlotModel, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:39.907 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots()
20:51:39.907 [Info] Writing postfixes
20:51:39.910 [Info] Patching bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MainMenu_EnableCareerLoadIfCareerSaves::Prefix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

20:51:39.910 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message)
20:51:39.912 [Info] Writing prefixes
20:51:39.915 [Info] Patching bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.MainMenu_ShowRefreshingSaves::Postfix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

20:51:39.915 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message)
20:51:39.915 [Info] Writing postfixes
20:51:39.917 [Info] Patching static void HBS.Util.JSONSerializationUtility::LogWarning(string error) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.JSONSerializationUtility_JSONSerializationUtility::Prefix()

20:51:39.918 [Info] Running ILHook manipulator on static void HBS.Util.JSONSerializationUtility::LogWarning(string error)
20:51:39.918 [Info] Writing prefixes
20:51:39.920 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.SimGameState__OnInit::Prefix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

20:51:39.920 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
20:51:39.920 [Info] Writing prefixes
20:51:39.920 [Info] Writing postfixes
20:51:39.924 [Info] Patching bool BattleTech.SimGameState::_OnHeadlessComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SimGameState__OnHeadlessComplete::Postfix(BattleTech.SimGameState __instance, Boolean& __result)

20:51:39.925 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::_OnHeadlessComplete()
20:51:39.925 [Info] Writing postfixes
20:51:39.929 [Info] Patching bool BattleTech.SimGameState::HandleSaveHydrate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_HandleSaveHydrate::Prefix(BattleTech.SimGameState __instance, Boolean& __result, BattleTech.Save.GameInstanceSave& ___save)

20:51:39.929 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HandleSaveHydrate()
20:51:39.930 [Info] Writing prefixes
20:51:39.934 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::FixDefaults(BattleTech.SimGameState __instance)
* static void CustomSalvage.SimGameState_RespondToDefsLoadComplete::FixDefaults(BattleTech.SimGameState __instance)
* static void CustomPrewarm.SimGameState_RespondToDefsLoadComplete::Prefix()

20:51:39.934 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
20:51:39.934 [Info] Writing prefixes
20:51:39.937 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_RequestDataManagerResources::Prefix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

20:51:39.937 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
20:51:39.937 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
20:51:39.938 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?1667036928::TranspilerWrapper<CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
20:51:40.034 [Info] Writing prefixes
20:51:40.043 [Info] Patching void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Prefix(System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Postfix(System.Diagnostics.Stopwatch& __state)

20:51:40.043 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager)
20:51:40.044 [Info] Writing prefixes
20:51:40.044 [Info] Writing postfixes
20:51:40.047 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomPrewarm.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

20:51:40.047 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
20:51:40.047 [Info] Writing postfixes
20:51:40.050 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_InitUserSettings::Prefix(BattleTech.UnityGameInstance __instance)
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

20:51:40.050 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
20:51:40.050 [Info] Writing prefixes
20:51:40.050 [Info] Writing postfixes
20:51:40.052 [Info] Patching void BattleTech.UnityGameInstance::OnModsInitComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_OnModsInitComplete::Prefix(BattleTech.UnityGameInstance __instance)

20:51:40.052 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnModsInitComplete()
20:51:40.052 [Info] Writing prefixes
20:51:40.055 [Info] Patching void BattleTech.Save.UserSettings::Save() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Save::Prefix(BattleTech.Save.UserSettings __instance)

20:51:40.055 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Save()
20:51:40.055 [Info] Writing prefixes
20:51:40.060 [Info] Patching void BattleTech.BTInput::LoadSavedBindings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.BTInput_LoadSavedBindings::Prefix(BattleTech.BTInput __instance)

20:51:40.060 [Info] Running ILHook manipulator on void BattleTech.BTInput::LoadSavedBindings()
20:51:40.060 [Info] Writing prefixes
20:51:40.068 [Info] Patching void BattleTech.Save.UserSettings::Load(Action loadComplete) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Load::Prefix(BattleTech.Save.UserSettings __instance, Action loadComplete)

20:51:40.068 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Load(Action loadComplete)
20:51:40.068 [Info] Writing prefixes
20:51:40.071 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
* static bool CustomPrewarm.Serialize.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

20:51:40.071 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
20:51:40.072 [Info] Writing prefixes
20:51:40.072 [Info] Writing postfixes
20:51:40.073 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
* static bool CustomPrewarm.Serialize.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.MechDef __instance)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

20:51:40.074 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
20:51:40.074 [Info] Writing prefixes
20:51:40.075 [Info] Writing postfixes
20:51:40.076 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static bool CustomPrewarm.Serialize.AmmunitionDef_FromJSON::Prefix(BattleTech.AmmunitionDef __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

20:51:40.076 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
20:51:40.077 [Info] Writing prefixes
20:51:40.077 [Info] Writing postfixes
20:51:40.078 [Info] Patching virtual void BattleTech.BackgroundDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BackgroundDef_FromJSON::Prefix(BattleTech.BackgroundDef __instance)

20:51:40.079 [Info] Running ILHook manipulator on virtual void BattleTech.BackgroundDef::FromJSON(string json)
20:51:40.079 [Info] Writing prefixes
20:51:40.080 [Info] Patching virtual void BattleTech.BaseDescriptionDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BaseDescriptionDef_FromJSON::Prefix(BattleTech.BaseDescriptionDef __instance)

20:51:40.080 [Info] Running ILHook manipulator on virtual void BattleTech.BaseDescriptionDef::FromJSON(string json)
20:51:40.081 [Info] Writing prefixes
20:51:40.082 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.ChassisDef_FromJSON::Prefix(BattleTech.ChassisDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

20:51:40.082 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
20:51:40.083 [Info] Writing prefixes
20:51:40.083 [Info] Writing postfixes
20:51:40.085 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
* static bool CustomPrewarm.Serialize.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

20:51:40.085 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
20:51:40.086 [Info] Writing prefixes
20:51:40.086 [Info] Writing postfixes
20:51:40.087 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)
* static bool CustomPrewarm.Serialize.MechDef_FromJSON::Prefix(BattleTech.MechDef __instance)

20:51:40.088 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
20:51:40.088 [Info] Writing prefixes
20:51:40.089 [Info] Patching virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.MovementCapabilitiesDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)

20:51:40.090 [Info] Running ILHook manipulator on virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json)
20:51:40.090 [Info] Writing prefixes
20:51:40.092 [Info] Patching virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.PathingCapabilitiesDef_FromJSON::Prefix(BattleTech.PathingCapabilitiesDef __instance)

20:51:40.092 [Info] Running ILHook manipulator on virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json)
20:51:40.092 [Info] Writing prefixes
20:51:40.094 [Info] Patching virtual void BattleTech.StarSystemDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.StarSystemDef_FromJSON::Prefix(BattleTech.StarSystemDef __instance)

20:51:40.094 [Info] Running ILHook manipulator on virtual void BattleTech.StarSystemDef::FromJSON(string json)
20:51:40.094 [Info] Writing prefixes
20:51:40.096 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.HeatSinkDef_FromJSON::Prefix(BattleTech.HeatSinkDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

20:51:40.096 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
20:51:40.097 [Info] Writing prefixes
20:51:40.097 [Info] Writing postfixes
20:51:40.099 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.JumpJetDef_FromJSON::Prefix(BattleTech.JumpJetDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

20:51:40.099 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
20:51:40.100 [Info] Writing prefixes
20:51:40.100 [Info] Writing postfixes
20:51:40.102 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.UpgradeDef_FromJSON::Prefix(BattleTech.UpgradeDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

20:51:40.102 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
20:51:40.102 [Info] Writing prefixes
20:51:40.102 [Info] Writing postfixes
20:51:40.104 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.VehicleChassisDef_FromJSON::Prefix(BattleTech.VehicleChassisDef __instance)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

20:51:40.104 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
20:51:40.105 [Info] Writing prefixes
20:51:40.105 [Info] Writing postfixes
20:51:40.106 [Info] Patching virtual void BattleTech.VehicleDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.VehicleDef_FromJSON::Prefix(BattleTech.VehicleDef __instance)

20:51:40.107 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::FromJSON(string json)
20:51:40.107 [Info] Writing prefixes
20:51:40.109 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state, Boolean& __runOriginal)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json, Boolean& __runOriginal)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

20:51:40.109 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
20:51:40.109 [Info] Writing prefixes
20:51:40.109 [Info] Writing postfixes
20:51:40.184 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Prefix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, Object& data, bool __result, BattleTech.BaseComponentRef& __state)
3 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result, BattleTech.BaseComponentRef& __state)

20:51:40.184 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
20:51:40.185 [Info] Writing prefixes
20:51:40.185 [Info] Writing postfixes
20:51:40.191 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.MechLabItemSlotElement_RefreshInfo::Prefix(BattleTech.UI.MechLabItemSlotElement __instance)

20:51:40.191 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshInfo()
20:51:40.191 [Info] Writing prefixes
20:51:40.193 [Info] Patching void BattleTech.UI.Tooltips.TooltipManager::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipManager_Awake::Prefix(BattleTech.UI.Tooltips.TooltipManager __instance, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.TooltipManager+TooltipObject, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___TooltipPool)

20:51:40.194 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipManager::Awake()
20:51:40.194 [Info] Writing prefixes
20:51:40.196 [Info] Patching BehaviorTreeResults BehaviorTree::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Prefix(BehaviorTree __instance)
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Postfix(BehaviorTree __instance, BehaviorTreeResults& __result)

20:51:40.196 [Info] Running ILHook manipulator on BehaviorTreeResults BehaviorTree::Update()
20:51:40.197 [Info] Writing prefixes
20:51:40.197 [Info] Writing postfixes
20:51:40.228 [Info] Patching virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

20:51:40.228 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick()
20:51:40.228 [Info] Writing postfixes
20:51:40.260 [Info] Patching virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

20:51:40.261 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick()
20:51:40.261 [Info] Writing postfixes
20:51:40.292 [Info] Patching virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

20:51:40.292 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick()
20:51:40.293 [Info] Writing postfixes
20:51:40.324 [Info] Patching virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

20:51:40.325 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick()
20:51:40.325 [Info] Writing postfixes
20:51:40.361 [Info] Patching virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

20:51:40.362 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick()
20:51:40.362 [Info] Writing postfixes
20:51:40.397 [Info] Patching virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

20:51:40.398 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick()
20:51:40.398 [Info] Writing prefixes
20:51:40.398 [Info] Writing postfixes
20:51:40.431 [Info] Patching virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

20:51:40.431 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick()
20:51:40.431 [Info] Writing prefixes
20:51:40.432 [Info] Writing postfixes
20:51:40.436 [Info] Patching static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

20:51:40.437 [Info] Running ILHook manipulator on static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg)
20:51:40.437 [Info] Writing prefixes
20:51:40.437 [Info] Writing postfixes
20:51:40.441 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Prefix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
2 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Postfix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, BattleTech.MoveType ___moveType, BattleTech.CombatGameState ___combat, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

20:51:40.441 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
20:51:40.442 [Info] Writing prefixes
20:51:40.442 [Info] Writing postfixes
20:51:40.683 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Prefix(BattleTech.MechDef mechDef)
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Postfix(BattleTech.MechDef mechDef)

20:51:40.684 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:40.684 [Info] Writing prefixes
20:51:40.684 [Info] Writing postfixes
20:51:40.690 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Prefix(BattleTech.MechDef mechDef)
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Postfix(BattleTech.MechDef mechDef)

20:51:40.690 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:40.690 [Info] Writing prefixes
20:51:40.690 [Info] Writing postfixes
20:51:40.692 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Prefix(BattleTech.MechDef mechDef)
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Postfix(BattleTech.MechDef mechDef)

20:51:40.693 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:40.693 [Info] Writing prefixes
20:51:40.693 [Info] Writing postfixes
20:51:40.696 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Prefix(BattleTech.MechDef mechDef)
* static bool MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Postfix(BattleTech.MechDef mechDef)

20:51:40.696 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
20:51:40.696 [Info] Writing prefixes
20:51:40.696 [Info] Writing postfixes
20:51:40.699 [Info] Patching void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Prefix(BattleTech.MechDef def)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Postfix(BattleTech.MechDef def)

20:51:40.699 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def)
20:51:40.700 [Info] Writing prefixes
20:51:40.700 [Info] Writing postfixes
20:51:40.782 [Info] Patching virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.783 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.783 [Info] Writing prefixes
20:51:40.783 [Info] Writing postfixes
20:51:40.784 [Info] Patching virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.785 [Info] Running ILHook manipulator on virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.785 [Info] Writing prefixes
20:51:40.785 [Info] Writing postfixes
20:51:40.787 [Info] Patching virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.787 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.788 [Info] Writing prefixes
20:51:40.788 [Info] Writing postfixes
20:51:40.789 [Info] Patching virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.789 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.790 [Info] Writing prefixes
20:51:40.790 [Info] Writing postfixes
20:51:40.792 [Info] Patching virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.792 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.793 [Info] Writing prefixes
20:51:40.793 [Info] Writing postfixes
20:51:40.794 [Info] Patching virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.794 [Info] Running ILHook manipulator on virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.794 [Info] Writing prefixes
20:51:40.794 [Info] Writing postfixes
20:51:40.796 [Info] Patching virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.796 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
20:51:40.796 [Info] Writing prefixes
20:51:40.796 [Info] Writing postfixes
20:51:40.798 [Info] Patching virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.798 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.798 [Info] Writing prefixes
20:51:40.799 [Info] Writing postfixes
20:51:40.800 [Info] Patching virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.800 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.800 [Info] Writing prefixes
20:51:40.800 [Info] Writing postfixes
20:51:40.803 [Info] Patching virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.803 [Info] Running ILHook manipulator on virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.803 [Info] Writing prefixes
20:51:40.804 [Info] Writing postfixes
20:51:40.806 [Info] Patching virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.806 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.806 [Info] Writing prefixes
20:51:40.806 [Info] Writing postfixes
20:51:40.808 [Info] Patching virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.808 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.808 [Info] Writing prefixes
20:51:40.809 [Info] Writing postfixes
20:51:40.810 [Info] Patching virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.811 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.811 [Info] Writing prefixes
20:51:40.811 [Info] Writing postfixes
20:51:40.812 [Info] Patching virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.813 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.813 [Info] Writing prefixes
20:51:40.813 [Info] Writing postfixes
20:51:40.815 [Info] Patching virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.815 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.815 [Info] Writing prefixes
20:51:40.815 [Info] Writing postfixes
20:51:40.817 [Info] Patching virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.817 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.817 [Info] Writing prefixes
20:51:40.817 [Info] Writing postfixes
20:51:40.819 [Info] Patching virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.819 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
20:51:40.820 [Info] Writing prefixes
20:51:40.820 [Info] Writing postfixes
20:51:40.822 [Info] Patching virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.822 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.822 [Info] Writing prefixes
20:51:40.822 [Info] Writing postfixes
20:51:40.825 [Info] Patching virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.825 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.825 [Info] Writing prefixes
20:51:40.825 [Info] Writing postfixes
20:51:40.828 [Info] Patching virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.828 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.828 [Info] Writing prefixes
20:51:40.828 [Info] Writing postfixes
20:51:40.830 [Info] Patching virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.830 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.830 [Info] Writing prefixes
20:51:40.832 [Info] Writing postfixes
20:51:40.833 [Info] Patching virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.834 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.834 [Info] Writing prefixes
20:51:40.834 [Info] Writing postfixes
20:51:40.836 [Info] Patching virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.836 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
20:51:40.837 [Info] Writing prefixes
20:51:40.837 [Info] Writing postfixes
20:51:40.839 [Info] Patching virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.839 [Info] Running ILHook manipulator on virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.839 [Info] Writing prefixes
20:51:40.840 [Info] Writing postfixes
20:51:40.842 [Info] Patching virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.842 [Info] Running ILHook manipulator on virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.842 [Info] Writing prefixes
20:51:40.842 [Info] Writing postfixes
20:51:40.844 [Info] Patching virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.845 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.845 [Info] Writing prefixes
20:51:40.845 [Info] Writing postfixes
20:51:40.848 [Warn] io.mission.customunits: You should only patch implemented methods/constructors to avoid issues. Patch the declared method virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) instead of virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused).
20:51:40.848 [Info] Patching virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.849 [Info] Running ILHook manipulator on virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.849 [Info] Writing prefixes
20:51:40.849 [Error] Failed to patch virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused): System.Exception: Parameter "unit" not found in method virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
  at HarmonyLib.Public.Patching.HarmonyManipulator.EmitCallParameter (System.Reflection.MethodInfo patch, System.Boolean allowFirsParamPassthrough, Mono.Cecil.Cil.VariableDefinition& tmpObjectVar, System.Collections.Generic.List`1[HarmonyLib.Public.Patching.HarmonyManipulator+ArgumentBoxInfo]& tmpBoxVars) [0x007d8] in <40f0e05edfaf48a5ad9c0d95dec81b56>:0 
  at HarmonyLib.Public.Patching.HarmonyManipulator.WritePrefixes (HarmonyLib.Internal.Util.ILEmitter+Label returnLabel) [0x0017e] in <40f0e05edfaf48a5ad9c0d95dec81b56>:0 
  at HarmonyLib.Public.Patching.HarmonyManipulator.WriteImpl () [0x00243] in <40f0e05edfaf48a5ad9c0d95dec81b56>:0 
20:51:40.851 [Info] Patching virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.851 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.851 [Info] Writing prefixes
20:51:40.851 [Info] Writing postfixes
20:51:40.853 [Info] Patching virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.853 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.854 [Info] Writing prefixes
20:51:40.854 [Info] Writing postfixes
20:51:40.856 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.857 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.857 [Info] Writing prefixes
20:51:40.857 [Info] Writing postfixes
20:51:40.859 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

20:51:40.860 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.860 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.860 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
20:51:40.860 [Info] Writing prefixes
20:51:40.860 [Info] Writing postfixes
20:51:40.863 [Info] Patching virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

20:51:40.863 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
20:51:40.863 [Info] Writing prefixes
20:51:40.863 [Info] Writing postfixes
20:51:40.866 [Info] Patching float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Core::MechDefMovementStatistics_GetJumpCapacity(object __instance, BattleTech.MechDef& ___mechDef, Single& __result)

20:51:40.866 [Info] Running ILHook manipulator on float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity()
20:51:40.866 [Info] Writing postfixes
20:51:41.025 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(BattleTech.Mech __instance)
* static bool CustomUnits.CustomMech::InitGameRepStatic(BattleTech.Mech __instance, UnityEngine.Transform parentTransform)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

20:51:41.025 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
20:51:41.025 [Info] Writing prefixes
20:51:41.025 [Info] Writing postfixes
20:51:41.034 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 5 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static bool MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)
* static bool CustomUnits.CustomMech::DamageLocation_Override(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __result)

20:51:41.035 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
20:51:41.035 [Info] Writing prefixes
20:51:41.042 [Info] Patching bool BattleTech.Pilot::get_IsIncapacitated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TrooperSquad::Pilot_IsIncapacitated_Patch(BattleTech.Pilot __instance, Boolean& __result)

20:51:41.042 [Info] Running ILHook manipulator on bool BattleTech.Pilot::get_IsIncapacitated()
20:51:41.042 [Info] Writing postfixes
20:51:41.044 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
5 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomDeploy.Core::PooledInstantiate_Fallback(BattleTech.Data.DataManager __instance, UnityEngine.GameObject& __result, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)

20:51:41.044 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
20:51:41.044 [Info] Writing prefixes
20:51:41.045 [Info] Writing postfixes
20:51:41.852 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::ShowStructureDamageThroughArmour(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:41.853 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor()
20:51:41.853 [Info] Writing postfixes
20:51:41.859 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
3 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::FixRearStructureDisplay(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.AttackDirection shownAttackDirection)

20:51:41.859 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
20:51:41.859 [Info] Writing prefixes
20:51:41.860 [Info] Writing postfixes
20:51:41.865 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::AddPaperDollSideLabel(BattleTech.UI.HUDMechArmorReadout __instance)

20:51:41.866 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
20:51:41.866 [Info] Writing prefixes
20:51:41.866 [Info] Writing postfixes
20:51:41.869 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state, Boolean& __runOriginal)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json, Boolean& __runOriginal)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
3 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void Sheepy.BattleTechMod.AttackImprovementMod.GameData::FixWeaponStats(BattleTech.WeaponDef __instance)

20:51:41.870 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
20:51:41.870 [Info] Writing prefixes
20:51:41.870 [Info] Writing postfixes
