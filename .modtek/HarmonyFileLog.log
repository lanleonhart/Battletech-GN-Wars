11:31:41.972 [Info] ### Harmony id=ModTekPreloader.Harmony12X, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ModTekPreloader.Harmony12X.ShimInjectorPatches::Register(ModTekPreloader.Harmony12X.DynamicShimInjector shimInjector), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\ModTekPreloader.dll
### At 2023-06-19 11.31.41
11:31:42.069 [Info] Patching static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadFrom_Prefix(String& assemblyFile)

11:31:42.072 [Info] Running ILHook manipulator on static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly)
11:31:42.078 [Info] Writing prefixes
11:31:42.095 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssembly_Prefix(String& assemblyRef)

11:31:42.097 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly)
11:31:42.099 [Info] Writing prefixes
11:31:42.106 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssemblyRaw_Prefix(Byte[]& rawAssembly)

11:31:42.108 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly)
11:31:42.110 [Info] Writing prefixes
11:31:42.124 [Info] Patching virtual string System.Reflection.Assembly::get_Location() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLocationPatch::Location(System.Reflection.Assembly __instance, String& __result)

11:31:42.127 [Info] Running ILHook manipulator on virtual string System.Reflection.Assembly::get_Location()
11:31:42.129 [Info] Writing prefixes
11:32:04.429 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
11:32:04.433 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()

11:32:04.436 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:04.439 [Info] Writing postfixes
11:32:04.668 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
11:32:04.671 [Info] Patching void ActivateAfterInit::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Patches.ActivateAfterInit_Start_Patch::Prefix(ActivateAfterInit __instance, ActivateAfterInit+ActivateAfter ___activateAfter, UnityEngine.GameObject[] ___activationSet)

11:32:04.673 [Info] Running ILHook manipulator on void ActivateAfterInit::Start()
11:32:04.676 [Info] Writing prefixes
11:32:04.682 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
11:32:04.686 [Info] Patching static string VersionInfo::GetReleaseVersion() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Patches.VersionInfo_GetReleaseVersion_Patch::Postfix(String& __result)

11:32:04.689 [Info] Running ILHook manipulator on static string VersionInfo::GetReleaseVersion()
11:32:04.692 [Info] Writing postfixes
11:32:04.698 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
11:32:04.704 [Info] Patching static void BattleTech.ModSupport.ModLoader::Init(Action callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_Init::Prefix(BattleTech.UnityGameInstance __instance, Action callback)

11:32:04.707 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::Init(Action callback)
11:32:04.710 [Info] Writing prefixes
11:32:04.733 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
11:32:04.737 [Info] Patching static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModLoader_AreModsEnabled::Postfix(Boolean& __result)

11:32:04.740 [Info] Running ILHook manipulator on static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled()
11:32:04.743 [Info] Writing postfixes
11:32:04.749 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
11:32:04.752 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadSystemModStatus::Prefix()

11:32:04.755 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus()
11:32:04.758 [Info] Writing prefixes
11:32:04.764 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.768 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadGameModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadGameModStatus::Prefix()

11:32:04.770 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadGameModStatus()
11:32:04.772 [Info] Writing prefixes
11:32:04.777 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.781 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_InitModResources::Prefix(BattleTech.UI.ModManagerScreen __instance)

11:32:04.784 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::Init()
11:32:04.786 [Info] Writing prefixes
11:32:04.795 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.800 [Info] Patching static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_GetCombinedModStatus::Postfix(System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[BattleTech.ModSupport.ModStatusItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:04.803 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus()
11:32:04.805 [Info] Writing postfixes
11:32:04.813 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.817 [Info] Patching static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_SaveModStatusToFile::Prefix(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)

11:32:04.819 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)
11:32:04.821 [Info] Writing prefixes
11:32:04.828 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.832 [Info] Patching bool BattleTech.UI.ModManagerScreen::UnsavedSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_UnsavedSettings::Prefix(BattleTech.UI.ModManagerScreen __instance, Boolean& __result)

11:32:04.834 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerScreen::UnsavedSettings()
11:32:04.837 [Info] Writing prefixes
11:32:04.849 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.853 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ReceiveButtonPress::Prefix(BattleTech.UI.ModManagerScreen __instance, string button)

11:32:04.856 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button)
11:32:04.858 [Info] Writing prefixes
11:32:04.867 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.870 [Info] Patching void BattleTech.UI.ModManagerScreen::ToggleModsEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ToggleModsEnabled::Prefix(BattleTech.UI.ModManagerScreen __instance, BattleTech.UI.HBSDOTweenToggle ___modsEnabledToggleBox)

11:32:04.874 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerScreen::ToggleModsEnabled()
11:32:04.876 [Info] Writing prefixes
11:32:04.881 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.886 [Info] Patching void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_ToggleItemEnabled::Prefix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.UI.HBSDOTweenToggle ___toggleBox, BattleTech.UI.ModManagerScreen ____screen)

11:32:04.890 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled()
11:32:04.892 [Info] Writing prefixes
11:32:04.898 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.903 [Info] Patching void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_SetData::Postfix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.ModSupport.ModStatusItem modStatusItem, BattleTech.UI.TMProWrapper.LocalizableText ___modNameText, BattleTech.UI.HBSDOTweenToggle ___toggleBox)

11:32:04.906 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem)
11:32:04.909 [Info] Writing postfixes
11:32:04.921 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.925 [Info] Patching bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_InitializeList::Prefix(BattleTech.UI.ModManagerInstalledModsPanel __instance, Boolean& __result, BattleTech.UI.ModManagerListView ___modsList)

11:32:04.929 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList()
11:32:04.933 [Info] Writing prefixes
11:32:04.956 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.960 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFilepath_Patch::Prefix(string assetBundleName, String& __result)

11:32:04.963 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName)
11:32:04.967 [Info] Writing prefixes
11:32:04.972 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.976 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFileURL_Patch::Prefix(string assetBundleName, String& __result)

11:32:04.979 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName)
11:32:04.982 [Info] Writing prefixes
11:32:04.987 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:04.992 [Info] Patching void BattleTech.BattleTechResourceLocator::RefreshTypedEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RefreshTypedEntries_Patch::Prefix()

11:32:04.996 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RefreshTypedEntries()
11:32:04.999 [Info] Writing prefixes
11:32:05.017 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.020 [Info] Patching void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_SetContentPackIndex_Patch::Prefix(BattleTech.Data.ContentPackIndex contentPackIndex)

11:32:05.024 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex)
11:32:05.028 [Info] Writing prefixes
11:32:05.034 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.038 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

11:32:05.042 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum)
11:32:05.045 [Info] Writing prefixes
11:32:05.051 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.054 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

11:32:05.059 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum)
11:32:05.062 [Info] Writing prefixes
11:32:05.067 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.071 [Info] Patching BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetAddendumByName_Patch::Prefix(string name, BattleTech.VersionManifestAddendum& __result)

11:32:05.075 [Info] Running ILHook manipulator on BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name)
11:32:05.078 [Info] Writing prefixes
11:32:05.083 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.087 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

11:32:05.091 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
11:32:05.094 [Info] Writing prefixes
11:32:05.100 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.104 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

11:32:05.107 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
11:32:05.110 [Info] Writing prefixes
11:32:05.116 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.122 [Info] Patching System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoresContainingEntry_Patch::Prefix(BattleTech.BattleTechResourceType resourceType, string id, System.Collections.Generic.List`1[[BattleTech.VersionManifestMemoryStore, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:05.126 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id)
11:32:05.128 [Info] Writing prefixes
11:32:05.135 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.139 [Info] Patching BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoreByName_Patch::Prefix(string name, BattleTech.VersionManifestMemoryStore& __result)

11:32:05.142 [Info] Running ILHook manipulator on BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name)
11:32:05.145 [Info] Writing prefixes
11:32:05.151 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.156 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntries_Patch::Prefix(BattleTech.VersionManifestEntry[]& __result)

11:32:05.159 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries()
11:32:05.162 [Info] Writing prefixes
11:32:05.169 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.173 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResource_Patch::Prefix(BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

11:32:05.176 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership)
11:32:05.179 [Info] Writing prefixes
11:32:05.188 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.193 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResourceFromAddendum_Patch::Prefix(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

11:32:05.195 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership)
11:32:05.199 [Info] Writing prefixes
11:32:05.205 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.208 [Info] Patching BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_EntryByID_Patch::Prefix(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry& __result)

11:32:05.211 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership)
11:32:05.214 [Info] Writing prefixes
11:32:05.220 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.225 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveEntry_Patch::Prefix(BattleTech.VersionManifestEntry entry)

11:32:05.228 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry)
11:32:05.231 [Info] Writing prefixes
11:32:05.241 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.246 [Info] Patching bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.ContentPackIndex_IsResourceOwned_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, string resourceId, Boolean& __result)

11:32:05.249 [Info] Running ILHook manipulator on bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId)
11:32:05.252 [Info] Writing prefixes
11:32:05.261 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.265 [Info] Patching void BattleTech.Data.ContentPackIndex::PatchMDD() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Prefix(Boolean& ___rebuildMDDOnLoadComplete, System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance, System.Diagnostics.Stopwatch __state)

11:32:05.269 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::PatchMDD()
11:32:05.284 [Info] Writing prefixes
11:32:05.287 [Info] Writing postfixes
11:32:05.298 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.302 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

11:32:05.306 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
11:32:05.309 [Info] Writing prefixes
11:32:05.312 [Info] Writing postfixes
11:32:05.342 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.346 [Info] Patching void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.DataManager_ProcessPrewarmRequests_Patch::Prefix(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)

11:32:05.350 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)
11:32:05.353 [Info] Writing prefixes
11:32:05.360 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.364 [Info] Patching BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Prefix(BattleTech.Data.LoadRequest __instance, BattleTech.Data.DataManager+FileLoadRequest& __result)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Postfix(BattleTech.Data.DataManager+FileLoadRequest& __result)

11:32:05.366 [Info] Running ILHook manipulator on BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest()
11:32:05.369 [Info] Writing prefixes
11:32:05.372 [Info] Writing postfixes
11:32:05.378 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.382 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_DB_PATH_Patch::Prefix(String& __result)

11:32:05.386 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH()
11:32:05.390 [Info] Writing prefixes
11:32:05.571 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.574 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_TMP_PATH_Patch::Prefix(String& __result)

11:32:05.577 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH()
11:32:05.580 [Info] Writing prefixes
11:32:05.586 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.590 [Info] Patching static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.SimGame_MDDExtensions_UpdateContract_Patch::Prefix(String& fileID)

11:32:05.593 [Info] Running ILHook manipulator on static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride)
11:32:05.597 [Info] Writing prefixes
11:32:05.605 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.610 [Info] Patching static void BattleTech.DebugBridge::ApplyCurrentSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.DebugBridge_ApplyCurrentSettings_Patch::Prefix()

11:32:05.613 [Info] Running ILHook manipulator on static void BattleTech.DebugBridge::ApplyCurrentSettings()
11:32:05.617 [Info] Writing prefixes
11:32:05.641 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.644 [Info] Patching static void HBS.Logging.Logger::CaptureUnityLogs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.Logger_CaptureUnityLogs_Patch::Prefix()

11:32:05.647 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::CaptureUnityLogs()
11:32:05.651 [Info] Writing prefixes
11:32:05.657 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
11:32:05.661 [Info] Patching bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_IsEnabledFor_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, HBS.Logging.LogLevel level, Boolean& __result)

11:32:05.665 [Info] Running ILHook manipulator on bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level)
11:32:05.668 [Info] Writing prefixes
11:32:05.689 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.693 [Info] Patching void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, string ___name, HBS.Logging.LogLevel level, object message, Exception exception, HBS.Logging.IStackTrace location)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:05.696 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
11:32:05.699 [Info] Transpiling void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
11:32:05.714 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:05.745 [Info] Writing prefixes
11:32:05.757 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.763 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
2 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

11:32:05.767 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:05.770 [Info] Writing prefixes
11:32:05.774 [Info] Writing postfixes
11:32:05.780 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.785 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_Init_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

11:32:05.790 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::Init()
11:32:05.793 [Info] Writing postfixes
11:32:05.818 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.821 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::LateUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_LateUpdate_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

11:32:05.825 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::LateUpdate()
11:32:05.828 [Info] Writing postfixes
11:32:05.834 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.838 [Info] Patching static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_ShowUntil_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

11:32:05.841 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime)
11:32:05.844 [Info] Writing postfixes
11:32:05.856 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.860 [Info] Patching static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.Logger_HandleUnityLog_Patch::Postfix(string logString, string stackTrace, UnityEngine.LogType type)

11:32:05.863 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type)
11:32:05.867 [Info] Writing postfixes
11:32:05.874 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.877 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

11:32:05.881 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
11:32:05.884 [Info] Writing postfixes
11:32:05.893 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 17 ms
11:32:05.897 [Info] Patching void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomVideos.Patches.BinkMediaPlayer_Play_Patch::Prefix(BattleTech.BinkMedia.BinkMediaPlayer __instance, string videoName)

11:32:05.900 [Info] Running ILHook manipulator on void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture)
11:32:05.903 [Info] Writing prefixes
11:32:05.939 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:05.943 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

11:32:05.947 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
11:32:05.950 [Info] Writing postfixes
11:32:05.957 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:05.961 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)

11:32:05.963 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
11:32:05.967 [Info] Writing postfixes
11:32:05.972 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:05.976 [Info] Patching SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.AmmoCategory_GetIcon::Postfix(BattleTech.AmmoCategoryValue __instance, SVGImporter.SVGAsset& __result)

11:32:05.979 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon()
11:32:05.983 [Info] Writing postfixes
11:32:05.990 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:05.994 [Info] Patching SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.WeaponCategoryValue_GetIcon::Postfix(BattleTech.WeaponCategoryValue __instance, SVGImporter.SVGAsset& __result)

11:32:05.997 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon()
11:32:06.000 [Info] Writing postfixes
11:32:06.007 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.011 [Info] Patching void LoadedAudioBank::LoadBank() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Prefix(string ___name)
1 postfixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Postfix(string ___name)

11:32:06.014 [Info] Running ILHook manipulator on void LoadedAudioBank::LoadBank()
11:32:06.018 [Info] Writing prefixes
11:32:06.021 [Info] Writing postfixes
11:32:06.029 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.033 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()

11:32:06.036 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
11:32:06.039 [Info] Writing postfixes
11:32:06.048 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.051 [Info] Patching virtual void BattleTech.UI.AudioSettingsModule::SaveSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioSettingsModule_SaveSettings::Postfix(BattleTech.UI.AudioSettingsModule __instance)

11:32:06.055 [Info] Running ILHook manipulator on virtual void BattleTech.UI.AudioSettingsModule::SaveSettings()
11:32:06.059 [Info] Writing postfixes
11:32:06.065 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.069 [Info] Patching void WwiseManager::LoadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_LoadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

11:32:06.072 [Info] Running ILHook manipulator on void WwiseManager::LoadCombatBanks()
11:32:06.075 [Info] Writing postfixes
11:32:06.081 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.086 [Info] Patching void WwiseManager::UnloadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_UnloadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

11:32:06.090 [Info] Running ILHook manipulator on void WwiseManager::UnloadCombatBanks()
11:32:06.093 [Info] Writing postfixes
11:32:06.101 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.105 [Info] Patching void LoadedAudioBank::UnloadBank() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_UnloadBank::Postfix(LoadedAudioBank __instance)

11:32:06.108 [Info] Running ILHook manipulator on void LoadedAudioBank::UnloadBank()
11:32:06.111 [Info] Writing postfixes
11:32:06.119 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
11:32:06.124 [Info] Patching AKRESULT LoadedAudioBank::LoadBankExternal() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_LoadBankExternal::Prefix(LoadedAudioBank __instance, AKRESULT& __result, UInt32& ___id)

11:32:06.129 [Info] Running ILHook manipulator on AKRESULT LoadedAudioBank::LoadBankExternal()
11:32:06.132 [Info] Writing prefixes
11:32:06.143 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:06.147 [Info] Patching void BattleTech.GameTipList::.ctor(string filename, int historyLength) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:06.151 [Info] Running ILHook manipulator on void BattleTech.GameTipList::.ctor(string filename, int historyLength)
11:32:06.155 [Info] Transpiling void BattleTech.GameTipList::.ctor(string filename, int historyLength)
11:32:06.161 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:06.172 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:06.176 [Info] Patching static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_DEFAULT_SETTINGS_FILE_PATH_Patch::Prefix(String& __result)

11:32:06.179 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH()
11:32:06.182 [Info] Writing prefixes
11:32:06.189 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:06.193 [Info] Patching static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetCustomSettingsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

11:32:06.195 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension)
11:32:06.199 [Info] Writing prefixes
11:32:06.204 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:06.207 [Info] Patching static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetStreamingAssetsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

11:32:06.210 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension)
11:32:06.213 [Info] Writing prefixes
11:32:06.219 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:06.223 [Info] Patching virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::Prefix(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

11:32:06.227 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load()
11:32:06.230 [Info] Writing prefixes
11:32:06.236 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:06.242 [Info] Patching virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::PrefixBase(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

11:32:06.244 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load()
11:32:06.247 [Info] Writing prefixes
11:32:07.623 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:07.628 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

11:32:07.631 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
11:32:07.634 [Info] Writing prefixes
11:32:07.647 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:07.651 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)
1 postfixes:
* static void BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Post(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

11:32:07.655 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
11:32:07.659 [Info] Writing prefixes
11:32:07.662 [Info] Writing postfixes
11:32:07.670 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:07.676 [Info] Patching static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DontStripComments::Prefix(string json, String& __result)

11:32:07.679 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json)
11:32:07.683 [Info] Writing prefixes
11:32:07.692 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 20 ms
11:32:07.697 [Info] Patching bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.NoSalvageSoftlock::HasAllPriority(BattleTech.UI.AAR_SalvageChosen __instance, Boolean& __result)

11:32:07.700 [Info] Running ILHook manipulator on bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority()
11:32:07.704 [Info] Writing prefixes
11:32:07.714 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
11:32:07.720 [Info] Patching HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.724 [Info] Running ILHook manipulator on HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
11:32:07.728 [Info] Transpiling HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
11:32:07.734 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.745 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
11:32:07.750 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

11:32:07.754 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
11:32:07.758 [Info] Writing postfixes
11:32:07.766 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 24 ms
11:32:07.771 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.ShopTabLagFix::AddItemToInventory(BattleTech.UI.MechLabInventoryWidget_ListView __instance, BattleTech.UI.InventoryDataObject_BASE ItemData)

11:32:07.775 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd)
11:32:07.777 [Info] Writing prefixes
11:32:07.811 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.816 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.819 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
11:32:07.822 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
11:32:07.827 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.833 [Info] Writing prefixes
11:32:07.836 [Info] Writing postfixes
11:32:07.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.846 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.849 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
11:32:07.853 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
11:32:07.858 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.864 [Info] Writing prefixes
11:32:07.867 [Info] Writing postfixes
11:32:07.877 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.880 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.884 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
11:32:07.887 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
11:32:07.891 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.897 [Info] Writing prefixes
11:32:07.900 [Info] Writing postfixes
11:32:07.906 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.910 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.913 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
11:32:07.916 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
11:32:07.921 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.927 [Info] Writing prefixes
11:32:07.930 [Info] Writing postfixes
11:32:07.936 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.939 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.942 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
11:32:07.945 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
11:32:07.949 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.954 [Info] Writing prefixes
11:32:07.958 [Info] Writing postfixes
11:32:07.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.966 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.969 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
11:32:07.971 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
11:32:07.974 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:07.979 [Info] Writing prefixes
11:32:07.981 [Info] Writing postfixes
11:32:07.987 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:07.991 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:07.994 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
11:32:07.996 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
11:32:08.000 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.029 [Info] Writing prefixes
11:32:08.031 [Info] Writing postfixes
11:32:08.036 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.040 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.043 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
11:32:08.045 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
11:32:08.048 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.054 [Info] Writing prefixes
11:32:08.058 [Info] Writing postfixes
11:32:08.063 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.067 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.070 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
11:32:08.074 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
11:32:08.077 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.082 [Info] Writing prefixes
11:32:08.086 [Info] Writing postfixes
11:32:08.091 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.095 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.098 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
11:32:08.100 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
11:32:08.103 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.108 [Info] Writing prefixes
11:32:08.111 [Info] Writing postfixes
11:32:08.116 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.120 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.126 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
11:32:08.129 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
11:32:08.132 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.137 [Info] Writing prefixes
11:32:08.141 [Info] Writing postfixes
11:32:08.146 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.150 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.153 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
11:32:08.158 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
11:32:08.161 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.167 [Info] Writing prefixes
11:32:08.170 [Info] Writing postfixes
11:32:08.175 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.178 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.181 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
11:32:08.184 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
11:32:08.188 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.194 [Info] Writing prefixes
11:32:08.197 [Info] Writing postfixes
11:32:08.202 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.205 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.208 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
11:32:08.211 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
11:32:08.214 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.220 [Info] Writing prefixes
11:32:08.223 [Info] Writing postfixes
11:32:08.228 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.233 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.235 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
11:32:08.237 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
11:32:08.241 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.245 [Info] Writing prefixes
11:32:08.248 [Info] Writing postfixes
11:32:08.253 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.257 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.261 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
11:32:08.263 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
11:32:08.267 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.272 [Info] Writing prefixes
11:32:08.274 [Info] Writing postfixes
11:32:08.279 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.284 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.287 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
11:32:08.290 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
11:32:08.294 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.298 [Info] Writing prefixes
11:32:08.301 [Info] Writing postfixes
11:32:08.306 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.310 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.314 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
11:32:08.317 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
11:32:08.320 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.327 [Info] Writing prefixes
11:32:08.330 [Info] Writing postfixes
11:32:08.336 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.341 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.344 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
11:32:08.347 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
11:32:08.352 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.359 [Info] Writing prefixes
11:32:08.362 [Info] Writing postfixes
11:32:08.368 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.372 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.375 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
11:32:08.379 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
11:32:08.383 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.390 [Info] Writing prefixes
11:32:08.394 [Info] Writing postfixes
11:32:08.399 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.402 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.405 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
11:32:08.408 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
11:32:08.411 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.416 [Info] Writing prefixes
11:32:08.419 [Info] Writing postfixes
11:32:08.424 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.427 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.430 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
11:32:08.433 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
11:32:08.436 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.441 [Info] Writing prefixes
11:32:08.444 [Info] Writing postfixes
11:32:08.449 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.453 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.457 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.460 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.463 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.468 [Info] Writing prefixes
11:32:08.471 [Info] Writing postfixes
11:32:08.475 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.479 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.482 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.486 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.489 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.495 [Info] Writing prefixes
11:32:08.498 [Info] Writing postfixes
11:32:08.503 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.507 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.509 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.512 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.516 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.521 [Info] Writing prefixes
11:32:08.525 [Info] Writing postfixes
11:32:08.530 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 27 ms
11:32:08.534 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.537 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.539 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.542 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.548 [Info] Writing prefixes
11:32:08.551 [Info] Writing postfixes
11:32:08.558 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.561 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.564 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.566 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.569 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.574 [Info] Writing prefixes
11:32:08.576 [Info] Writing postfixes
11:32:08.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.586 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.590 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.593 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.597 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.602 [Info] Writing prefixes
11:32:08.604 [Info] Writing postfixes
11:32:08.610 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.613 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.616 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.619 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.624 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.629 [Info] Writing prefixes
11:32:08.633 [Info] Writing postfixes
11:32:08.662 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.667 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.669 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.672 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
11:32:08.676 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.681 [Info] Writing prefixes
11:32:08.684 [Info] Writing postfixes
11:32:08.691 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.694 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.698 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
11:32:08.701 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
11:32:08.704 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.710 [Info] Writing prefixes
11:32:08.713 [Info] Writing postfixes
11:32:08.718 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.723 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.726 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
11:32:08.729 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
11:32:08.733 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.738 [Info] Writing prefixes
11:32:08.741 [Info] Writing postfixes
11:32:08.746 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.751 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.755 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
11:32:08.758 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
11:32:08.761 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.768 [Info] Writing prefixes
11:32:08.771 [Info] Writing postfixes
11:32:08.777 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.780 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.784 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
11:32:08.788 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
11:32:08.793 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.797 [Info] Writing prefixes
11:32:08.801 [Info] Writing postfixes
11:32:08.807 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.811 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.815 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
11:32:08.818 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
11:32:08.823 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.829 [Info] Writing prefixes
11:32:08.832 [Info] Writing postfixes
11:32:08.839 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.843 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.846 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
11:32:08.849 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
11:32:08.854 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.859 [Info] Writing prefixes
11:32:08.863 [Info] Writing postfixes
11:32:08.868 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.872 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.876 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
11:32:08.878 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
11:32:08.882 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.887 [Info] Writing prefixes
11:32:08.891 [Info] Writing postfixes
11:32:08.896 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.900 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:08.903 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
11:32:08.906 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
11:32:08.910 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:08.914 [Info] Writing prefixes
11:32:08.917 [Info] Writing postfixes
11:32:08.925 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.934 [Info] Patching void BattleTech.EncounterLayerData::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::EncounterLayerData_Constructor(BattleTech.EncounterLayerData __instance)

11:32:08.937 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::.ctor()
11:32:08.940 [Info] Writing postfixes
11:32:08.950 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.955 [Info] Patching void BattleTech.LevelLoader::EnableLogging(bool enable) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.EnableLoggingDuringLoads::EnableLogging(Boolean& enable)

11:32:08.959 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::EnableLogging(bool enable)
11:32:08.962 [Info] Writing prefixes
11:32:08.969 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.973 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)

11:32:08.976 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
11:32:08.979 [Info] Writing prefixes
11:32:08.991 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:08.995 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

11:32:08.999 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
11:32:09.002 [Info] Writing prefixes
11:32:09.019 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:09.023 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

11:32:09.027 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
11:32:09.029 [Info] Writing prefixes
11:32:09.033 [Info] Writing postfixes
11:32:09.041 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:09.044 [Info] Patching void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::InitializeTaggedLance_Pre()

11:32:09.048 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance()
11:32:09.052 [Info] Writing prefixes
11:32:09.060 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:09.064 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

11:32:09.067 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
11:32:09.070 [Info] Writing prefixes
11:32:09.078 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
11:32:09.083 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

11:32:09.088 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
11:32:09.091 [Info] Writing prefixes
11:32:09.105 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.109 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:09.112 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
11:32:09.115 [Info] Transpiling bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
11:32:09.119 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:09.128 [Info] Writing prefixes
11:32:09.134 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.138 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:09.142 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
11:32:09.145 [Info] Transpiling void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
11:32:09.148 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:09.159 [Info] Writing prefixes
11:32:09.168 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.181 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:09.185 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:09.188 [Info] Writing prefixes
11:32:09.322 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.327 [Info] Patching void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::Init_Pre(Single& ___betweenRoomTransitionTime, Single& ___inRoomTransitionTime)

11:32:09.330 [Info] Running ILHook manipulator on void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim)
11:32:09.333 [Info] Writing prefixes
11:32:09.342 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.345 [Info] Patching System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::TransitionMech_Pre(Single& fadeDuration)

11:32:09.349 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit)
11:32:09.353 [Info] Writing prefixes
11:32:09.360 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.373 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:09.376 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:09.380 [Info] Writing prefixes
11:32:09.421 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.427 [Info] Patching virtual bool BattleTech.VersionManifestBase::Contains(string id, string type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.VersionManifestPatches::Contains_Pre(BattleTech.VersionManifestBase __instance, string id, string type, Boolean& __result)

11:32:09.430 [Info] Running ILHook manipulator on virtual bool BattleTech.VersionManifestBase::Contains(string id, string type)
11:32:09.433 [Info] Writing prefixes
11:32:09.442 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.446 [Info] Patching void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DisableSensitiveDataLogDump::OnInternetConnectivityResult(BattleTech.UnityGameInstance __instance, bool success)

11:32:09.450 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success)
11:32:09.454 [Info] Writing prefixes
11:32:09.713 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.720 [Info] Patching void BattleTech.CameraControl::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.CameraControlUpdatePatch::Postfix(BattleTech.CameraControl __instance, BattleTech.DebugFlyCameraControl ___debugFlyCameraControl)

11:32:09.723 [Info] Running ILHook manipulator on void BattleTech.CameraControl::Update()
11:32:09.727 [Info] Writing postfixes
11:32:09.743 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.749 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)

11:32:09.752 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
11:32:09.755 [Info] Writing prefixes
11:32:09.772 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.776 [Info] Patching void BattleTech.RegionGameLogic::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.RegionGameLogicPatch::Postfix(BattleTech.RegionGameLogic __instance)

11:32:09.778 [Info] Running ILHook manipulator on void BattleTech.RegionGameLogic::Update()
11:32:09.785 [Info] Writing postfixes
11:32:09.794 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 31 ms
11:32:09.799 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

11:32:09.802 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
11:32:09.805 [Info] Writing prefixes
11:32:09.855 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:09.859 [Info] Patching void BattleTech.UnityGameInstance::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.UnityGameInstancePatch::Postfix(BattleTech.UnityGameInstance __instance)

11:32:09.863 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Update()
11:32:09.867 [Info] Writing postfixes
11:32:10.163 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:10.167 [Info] Patching bool BattleTech.Contract::get_IsFlashpointContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

11:32:10.170 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointContract()
11:32:10.174 [Info] Writing postfixes
11:32:10.179 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:10.182 [Info] Patching bool BattleTech.Contract::get_IsFlashpointCampaignContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointCampaignContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

11:32:10.185 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointCampaignContract()
11:32:10.188 [Info] Writing postfixes
11:32:10.194 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:10.197 [Info] Patching bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.FlashpointDef_GetisHeavyMetalCampaign_Patch::Postfix(BattleTech.FlashpointDef __instance, Boolean& __result)

11:32:10.200 [Info] Running ILHook manipulator on bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign()
11:32:10.203 [Info] Writing postfixes
11:32:10.209 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:10.213 [Info] Patching void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGContractsWidget_ListContracts::Postfix(BattleTech.UI.SGContractsWidget __instance, System.Collections.Generic.List<BattleTech.UI.SGContractsListItem> ___listedContracts, System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)

11:32:10.215 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)
11:32:10.219 [Info] Writing postfixes
11:32:10.236 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:10.240 [Info] Patching BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_GetSystemFlashpoint::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.Flashpoint flashpoint, BattleTech.StarmapSystemRenderer& __result)

11:32:10.244 [Info] Running ILHook manipulator on BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint)
11:32:10.247 [Info] Writing postfixes
11:32:10.257 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:10.261 [Info] Patching void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_ShowFlashpointSystems::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState ___simState)

11:32:10.264 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems()
11:32:10.268 [Info] Writing postfixes
11:32:10.445 [Info] ### Harmony id=io.github.denadan.CustomComponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomComponents.Control::Init(string directory, string settingsInitJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomComponents\CustomComponents.dll
### At 2023-06-19 11.32.10
11:32:10.456 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
3 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

11:32:10.460 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:10.463 [Info] Writing prefixes
11:32:10.466 [Info] Writing postfixes
11:32:10.472 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)

11:32:10.476 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
11:32:10.480 [Info] Writing prefixes
11:32:10.493 [Info] Patching static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.JSONSerializationUtility_RehydrateObjectFromDictionary_Patch::Postfix(object target, System.Collections.Generic.Dictionary<string, object> values)

11:32:10.497 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates)
11:32:10.500 [Info] Writing postfixes
11:32:10.519 [Info] Patching BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType)
1 postfixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Postfix(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.MechComponentRef __result, BattleTech.SimGameState __instance)

11:32:10.522 [Info] Running ILHook manipulator on BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory)
11:32:10.526 [Info] Writing prefixes
11:32:10.530 [Info] Writing postfixes
11:32:10.542 [Info] Patching bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Get_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.545 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
11:32:10.549 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
11:32:10.554 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Get_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.562 [Info] Patching bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Set::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.565 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
11:32:10.568 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
11:32:10.571 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Set::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.577 [Info] Patching bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Invoke_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.580 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
11:32:10.584 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
11:32:10.587 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Invoke_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.594 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.597 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
11:32:10.600 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
11:32:10.603 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.608 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.611 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
11:32:10.613 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
11:32:10.616 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.624 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::RequestResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.627 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
11:32:10.630 [Info] Transpiling void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
11:32:10.640 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.655 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:10.659 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
11:32:10.663 [Info] Transpiling void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
11:32:10.668 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:10.716 [Info] Patching void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Contract_AddMechComponentToSalvage::Prefix(Boolean& __runOriginal, BattleTech.MechComponentDef& def)

11:32:10.720 [Info] Running ILHook manipulator on void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade)
11:32:10.724 [Info] Writing prefixes
11:32:10.741 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

11:32:10.746 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:10.749 [Info] Writing prefixes
11:32:10.781 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

11:32:10.785 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
11:32:10.790 [Info] Writing prefixes
11:32:10.800 [Info] Patching void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ListView_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget_ListView __instance)

11:32:10.803 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting()
11:32:10.805 [Info] Writing prefixes
11:32:10.813 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

11:32:10.816 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:10.819 [Info] Writing postfixes
11:32:10.832 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

11:32:10.836 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:10.838 [Info] Writing postfixes
11:32:10.853 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

11:32:10.858 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:10.861 [Info] Writing prefixes
11:32:10.895 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)

11:32:10.899 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
11:32:10.902 [Info] Writing postfixes
11:32:10.910 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

11:32:10.913 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
11:32:10.916 [Info] Writing postfixes
11:32:10.924 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)

11:32:10.927 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
11:32:10.929 [Info] Writing postfixes
11:32:10.942 [Info] Patching BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentRepairWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, bool isOnMech, BattleTech.WorkOrderEntry_RepairComponent& __result)

11:32:10.945 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech)
11:32:10.949 [Info] Writing postfixes
11:32:10.958 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SorterMechInventory.Patches.MechDef_SetInventory_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponentRef[]& newInventory)

11:32:10.961 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
11:32:10.963 [Info] Writing prefixes
11:32:10.969 [Info] Patching bool BattleTech.Data.SVGCache::Contains(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Icons.SVGAssets_Contains::Prefix(Boolean& __runOriginal, string id, Boolean& __result)

11:32:10.972 [Info] Running ILHook manipulator on bool BattleTech.Data.SVGCache::Contains(string id)
11:32:10.975 [Info] Writing prefixes
11:32:10.980 [Info] Patching SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Icons.SVGCache_GetAsset::Prefix(Boolean& __runOriginal, string id, SVGImporter.SVGAsset& __result)

11:32:10.984 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id)
11:32:10.987 [Info] Writing prefixes
11:32:10.996 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHPText)

11:32:10.999 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
11:32:11.003 [Info] Writing postfixes
11:32:11.015 [Info] Patching void BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetHardpointData(BattleTech.ChassisDef chassis) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetHardpointData::Prefix(Boolean& __runOriginal)

11:32:11.019 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetHardpointData(BattleTech.ChassisDef chassis)
11:32:11.023 [Info] Writing prefixes
11:32:11.032 [Info] Patching void BattleTech.MechDef::InsertFixedEquipmentIntoInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Fixes.MechDef_InsertFixedEquipmentIntoInventory::Prefix(Boolean& __runOriginal, BattleTech.MechDef __instance, BattleTech.MechComponentRef[]& ___inventory, BattleTech.Data.DataManager ___dataManager)

11:32:11.036 [Info] Running ILHook manipulator on void BattleTech.MechDef::InsertFixedEquipmentIntoInventory()
11:32:11.039 [Info] Writing prefixes
11:32:11.089 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)
* static void CustomComponents.Fixes.SimGameState_CreateComponentInstallWorkOrder::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, string mechSimGameUID, BattleTech.WorkOrderEntry_InstallComponent __result)

11:32:11.093 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
11:32:11.095 [Info] Writing postfixes
11:32:11.106 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:11.110 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
11:32:11.113 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
11:32:11.124 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:11.147 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_ShowHighlightFrame::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, bool isOriginalLocation, bool canBeAdded)

11:32:11.150 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
11:32:11.154 [Info] Writing prefixes
11:32:11.172 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
1 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)

11:32:11.176 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:11.179 [Info] Writing prefixes
11:32:11.181 [Info] Writing postfixes
11:32:11.214 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishMechBayPanel_LanceConfiguratorDataLoaded_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishMechBayPanel __instance)

11:32:11.218 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest)
11:32:11.221 [Info] Writing prefixes
11:32:11.230 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)

11:32:11.233 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
11:32:11.236 [Info] Writing prefixes
11:32:11.246 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_InventoryGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_InventoryGear __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:11.249 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.252 [Info] Writing prefixes
11:32:11.258 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_InventoryWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_InventoryWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:11.261 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.264 [Info] Writing prefixes
11:32:11.270 [Info] Patching void BattleTech.UI.InventoryItemElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryItemElement_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement __instance, BattleTech.MechComponentRef ___componentRef)

11:32:11.272 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::RefreshItemColor()
11:32:11.276 [Info] Writing prefixes
11:32:11.281 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryItemElement_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement_NotListView __instance, BattleTech.MechComponentRef ___componentRef)

11:32:11.284 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor()
11:32:11.287 [Info] Writing prefixes
11:32:11.295 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_InventoryGear_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_InventoryGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

11:32:11.297 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:11.301 [Info] Writing prefixes
11:32:11.306 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_InventoryWeapon_NotListViewn_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

11:32:11.309 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:11.312 [Info] Writing prefixes
11:32:11.323 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentListItem_SetData::Postfix(BattleTech.ComponentDamageLevel damageLevel)

11:32:11.327 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor)
11:32:11.330 [Info] Writing postfixes
11:32:11.337 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentListItem_SetTooltipData::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentDef MechDef, BattleTech.UI.UIColorRefTracker ___backgroundColor, BattleTech.UI.UIColorRefTracker ___itemTextColor)

11:32:11.340 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef)
11:32:11.343 [Info] Writing postfixes
11:32:11.352 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechComponentDef_GetUIColor::Postfix(BattleTech.MechComponentDef componentDef, BattleTech.UI.UIColor& __result)

11:32:11.355 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef)
11:32:11.359 [Info] Writing postfixes
11:32:11.366 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechComponentRef_GetUIColor::Postfix(BattleTech.MechComponentRef __instance, BattleTech.UI.UIColor& __result, BattleTech.MechComponentRef componentRef)

11:32:11.369 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef)
11:32:11.371 [Info] Writing postfixes
11:32:11.377 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabSlotItem_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.UIColorRefTracker ___backgroundColor, UnityEngine.GameObject ___fixedEquipmentOverlay, BattleTech.UI.IMechLabDropTarget ___dropParent, BattleTech.UI.UIColorRefTracker ___nameTextColor, BattleTech.UI.UIColorRefTracker ___iconColor, SVGImporter.SVGImage ___icon)

11:32:11.380 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor()
11:32:11.384 [Info] Writing prefixes
11:32:11.392 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_SalvageGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageGear __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:11.395 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.399 [Info] Writing prefixes
11:32:11.405 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_SalvageWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:11.408 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.411 [Info] Writing prefixes
11:32:11.417 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageGear_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

11:32:11.421 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:11.425 [Info] Writing prefixes
11:32:11.432 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageWeapon_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

11:32:11.435 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:11.438 [Info] Writing prefixes
11:32:11.445 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InInventoryDataObject_SalvageFullMech_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:11.449 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.453 [Info] Writing prefixes
11:32:11.461 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageFullMech_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

11:32:11.464 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:11.468 [Info] Writing prefixes
11:32:11.474 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InInventoryDataObject_SalvageMechPart_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageMechPart __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:11.477 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.480 [Info] Writing prefixes
11:32:11.488 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageMechPart_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

11:32:11.492 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:11.495 [Info] Writing prefixes
11:32:11.500 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_ShopWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopWeapon __instance)

11:32:11.503 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.508 [Info] Writing prefixes
11:32:11.513 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.IInventoryDataObject_ShopGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopGear __instance)

11:32:11.516 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
11:32:11.520 [Info] Writing prefixes
11:32:11.528 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechBayChassisInfoWidget_SetHardpoints::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHardpointText, BattleTech.UI.TMProWrapper.LocalizableText ___ballisticHardpointText, BattleTech.ChassisDef ___selectedChassis)

11:32:11.531 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetHardpoints()
11:32:11.534 [Info] Writing prefixes
11:32:11.542 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechBayMechInfoWidget_SetHardpoints::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHardpointText, BattleTech.UI.TMProWrapper.LocalizableText ___ballisticHardpointText, BattleTech.MechDef ___selectedMech)

11:32:11.545 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints()
11:32:11.548 [Info] Writing prefixes
11:32:11.558 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RefreshHardpointData::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

11:32:11.561 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData()
11:32:11.563 [Info] Writing prefixes
11:32:11.572 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_GetTotalHardpoints::Prefix(Boolean& __runOriginal)

11:32:11.574 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints()
11:32:11.577 [Info] Writing prefixes
11:32:11.621 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechValidationRules_ValidateMechInventorySlots::Prefix(Boolean& __runOriginal)

11:32:11.627 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
11:32:11.630 [Info] Writing prefixes
11:32:11.650 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)

11:32:11.654 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
11:32:11.658 [Info] Writing postfixes
11:32:11.669 [Info] Patching void BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetHardpointData(BattleTech.ChassisDef chassis) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetHardpointData::Prefix(Boolean& __runOriginal, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance)

11:32:11.672 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetHardpointData(BattleTech.ChassisDef chassis)
11:32:11.676 [Info] Writing prefixes
11:32:11.681 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()

11:32:11.685 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
11:32:11.689 [Info] Writing postfixes
11:32:11.702 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)

11:32:11.705 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
11:32:11.708 [Info] Writing postfixes
11:32:11.719 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnItemGrab_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.MechComponentRef& __state)
1 postfixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnItemGrab_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.MechComponentRef __state, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.MechLabLocationWidget __instance)

11:32:11.723 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
11:32:11.727 [Info] Writing prefixes
11:32:11.731 [Info] Writing postfixes
11:32:11.737 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData)

11:32:11.740 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
11:32:11.743 [Info] Writing prefixes
11:32:11.754 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:11.759 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:11.761 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:11.765 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:11.772 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RepairStructure(bool validate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RepairStructure_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, System.Collections.Generic.Queue`1[[CustomComponents.Changes.IChange, CustomComponents, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null]]& __state)
1 postfixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RepairStructure_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, System.Collections.Generic.Queue`1[[CustomComponents.Changes.IChange, CustomComponents, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null]]& __state)

11:32:11.775 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RepairStructure(bool validate)
11:32:11.778 [Info] Writing prefixes
11:32:11.781 [Info] Writing postfixes
11:32:11.792 [Info] Patching void BattleTech.UI.MechLabLocationWidget::StripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_StripEquipment_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

11:32:11.794 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::StripEquipment()
11:32:11.797 [Info] Writing prefixes
11:32:11.803 [Info] Patching void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.SimGameState_ML_InstallComponent_Patch::Postfix(BattleTech.WorkOrderEntry_InstallComponent order, BattleTech.SimGameState __instance)

11:32:11.805 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order)
11:32:11.808 [Info] Writing postfixes
11:32:11.822 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText headerLabel)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:11.826 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
11:32:11.829 [Info] Transpiling void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
11:32:11.834 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:11.838 [Info] Writing postfixes
11:32:11.848 [Info] Patching void BattleTech.BaseComponentRef::RefreshComponentDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.BaseComponentRef_RefreshComponentDef::Postfix(BattleTech.BaseComponentRef __instance)

11:32:11.851 [Info] Running ILHook manipulator on void BattleTech.BaseComponentRef::RefreshComponentDef()
11:32:11.855 [Info] Writing postfixes
11:32:11.869 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

11:32:11.872 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
11:32:11.875 [Info] Writing postfixes
11:32:11.885 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanEquipItem_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

11:32:11.888 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly)
11:32:11.892 [Info] Writing prefixes
11:32:11.899 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanUseAmmo_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

11:32:11.901 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
11:32:11.904 [Info] Writing prefixes
11:32:11.909 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SimGameState_AddMechPart_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:11.914 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
11:32:11.918 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
11:32:11.928 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:11.932 [Info] Writing prefixes
11:32:11.940 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SimGameState_ReadyMech_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:11.943 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
11:32:11.946 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
11:32:11.958 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:11.963 [Info] Writing prefixes
11:32:11.973 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleDamagedAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleDamagedAlert::Postfix(UnityEngine.GameObject ___damagedAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:11.976 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleDamagedAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:11.978 [Info] Writing postfixes
11:32:11.984 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleGenericAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleGenericAlert::Postfix(UnityEngine.GameObject ___genericAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:11.988 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleGenericAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:11.991 [Info] Writing postfixes
11:32:11.997 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleInventoryAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleInventoryAlert::Postfix(UnityEngine.GameObject ___inventoryAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.001 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleInventoryAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.003 [Info] Writing postfixes
11:32:12.008 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleMissingWeaponAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleMissingWeaponAlert::Postfix(UnityEngine.GameObject ___missingWeaponAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.011 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleMissingWeaponAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.013 [Info] Writing postfixes
11:32:12.019 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleNoAmmoAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleNoAmmoAlert::Postfix(UnityEngine.GameObject ___noAmmoAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.022 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleNoAmmoAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.026 [Info] Writing postfixes
11:32:12.031 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleDestroyedAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleDestroyedAlert::Postfix(UnityEngine.GameObject ___destroyedAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.034 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleDestroyedAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.037 [Info] Writing postfixes
11:32:12.042 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleOverweightAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleOverweightAlert::Postfix(UnityEngine.GameObject ___overweightAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.046 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleOverweightAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.049 [Info] Writing postfixes
11:32:12.054 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleUnderweightAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleUnderweightAlert::Postfix(UnityEngine.GameObject ___underweightAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.058 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleUnderweightAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.060 [Info] Writing postfixes
11:32:12.064 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleUnneededAmmoAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleUnneededAmmoAlert::Postfix(UnityEngine.GameObject ___unneededAmmoAlert, System.Collections.Generic.List<Localize.Text> errors)

11:32:12.067 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleUnneededAmmoAlert(System.Collections.Generic.List<Localize.Text> errors)
11:32:12.070 [Info] Writing postfixes
11:32:12.076 [Info] Patching void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Database+DataManager_Clear_Patch::Prefix(Boolean& __runOriginal, bool defs)

11:32:12.078 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests)
11:32:12.081 [Info] Writing prefixes
11:32:12.319 [Info] ### Harmony id=io.github.denadan.CustomFilters, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomFilters.Control::Init(string directory), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomFilters\CustomFilters.dll
### At 2023-06-19 11.32.12
11:32:12.325 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
4 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

11:32:12.328 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:12.330 [Info] Writing prefixes
11:32:12.332 [Info] Writing postfixes
11:32:12.342 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:12.344 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:12.347 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:12.352 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:12.356 [Info] Writing prefixes
11:32:12.364 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.InventoryItemElement_NotListView_OnDestroy::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement_NotListView __instance)

11:32:12.367 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy()
11:32:12.369 [Info] Writing prefixes
11:32:12.374 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning)
1 postfixes:
* static void CustomComponents.Patches.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

11:32:12.377 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
11:32:12.380 [Info] Writing prefixes
11:32:12.382 [Info] Writing postfixes
11:32:12.393 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ApplySorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

11:32:12.396 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
11:32:12.399 [Info] Writing prefixes
11:32:12.406 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ClearInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ClearInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

11:32:12.409 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ClearInventory()
11:32:12.412 [Info] Writing prefixes
11:32:12.419 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnAddItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

11:32:12.422 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:12.425 [Info] Writing prefixes
11:32:12.435 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnItemGrab::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

11:32:12.438 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
11:32:12.442 [Info] Writing prefixes
11:32:12.447 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnRemoveItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

11:32:12.451 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:12.454 [Info] Writing prefixes
11:32:12.463 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget::RemoveItemData(BattleTech.UI.ListElementController_BASE_NotListView itemData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_RemoveItemData::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.ListElementController_BASE_NotListView itemData)

11:32:12.466 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget::RemoveItemData(BattleTech.UI.ListElementController_BASE_NotListView itemData)
11:32:12.469 [Info] Writing prefixes
11:32:12.477 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:12.481 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:12.484 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:12.487 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:12.491 [Info] Writing prefixes
11:32:12.497 [Info] Patching void BattleTech.UI.MechLabPanel::PopulateInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_PopulateInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)

11:32:12.500 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::PopulateInventory()
11:32:12.502 [Info] Writing prefixes
11:32:12.516 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshInventorySelectability() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_RefreshInventorySelectability::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)

11:32:12.519 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshInventorySelectability()
11:32:12.524 [Info] Writing prefixes
11:32:12.532 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)

11:32:12.535 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
11:32:12.537 [Info] Writing prefixes
11:32:12.559 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_OnFilterButtonClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

11:32:12.562 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button)
11:32:12.564 [Info] Writing prefixes
11:32:12.572 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::RefreshJumpJetOptions(float tonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_RefreshJumpJetOptions::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, float tonnage)

11:32:12.576 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::RefreshJumpJetOptions(float tonnage)
11:32:12.578 [Info] Writing prefixes
11:32:12.585 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ResetFilters() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_ResetFilters::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

11:32:12.588 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ResetFilters()
11:32:12.592 [Info] Writing prefixes
11:32:12.597 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_SetFilterWeapons::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

11:32:12.600 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons()
11:32:12.603 [Info] Writing prefixes
11:32:12.609 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:12.612 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:12.615 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:12.618 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:12.622 [Info] Writing prefixes
11:32:12.626 [Info] Writing postfixes
11:32:12.633 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

11:32:12.636 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering()
11:32:12.638 [Info] Writing prefixes
11:32:12.645 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::ClearInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ClearInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

11:32:12.647 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::ClearInventory()
11:32:12.650 [Info] Writing prefixes
11:32:12.695 [Info] Patching BattleTech.UI.LanceLoadoutMechItem BattleTech.UI.MechBayMechStorageWidget::CreateLanceItem(BattleTech.MechDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_CreateLanceItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.MechDef def, BattleTech.UI.LanceLoadoutMechItem& __result)

11:32:12.698 [Info] Running ILHook manipulator on BattleTech.UI.LanceLoadoutMechItem BattleTech.UI.MechBayMechStorageWidget::CreateLanceItem(BattleTech.MechDef def)
11:32:12.701 [Info] Writing prefixes
11:32:12.707 [Info] Patching BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetInventoryItem(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_GetInventoryItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, string id, BattleTech.UI.IMechLabDraggableItem& __result)

11:32:12.710 [Info] Running ILHook manipulator on BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetInventoryItem(string id)
11:32:12.713 [Info] Writing prefixes
11:32:12.720 [Info] Patching BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetMechDefByGUID(string GUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_GetMechDefByGUID::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, string GUID, BattleTech.UI.IMechLabDraggableItem& __result)

11:32:12.724 [Info] Running ILHook manipulator on BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetMechDefByGUID(string GUID)
11:32:12.726 [Info] Writing prefixes
11:32:12.733 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_InitInventory_Chassis::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters)

11:32:12.736 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters)
11:32:12.738 [Info] Writing prefixes
11:32:12.747 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_InitInventory_MechDefs::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters)

11:32:12.751 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters)
11:32:12.754 [Info] Writing prefixes
11:32:12.764 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnAddItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, Boolean& __result)

11:32:12.767 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:12.769 [Info] Writing prefixes
11:32:12.775 [Info] Patching virtual void BattleTech.UI.MechBayMechStorageWidget::OnButtonClicked(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnButtonClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

11:32:12.778 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayMechStorageWidget::OnButtonClicked(BattleTech.UI.IMechLabDraggableItem item)
11:32:12.780 [Info] Writing prefixes
11:32:12.785 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnItemGrab::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

11:32:12.787 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
11:32:12.792 [Info] Writing prefixes
11:32:12.797 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnRemoveItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item, Boolean& __result)

11:32:12.800 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:12.802 [Info] Writing prefixes
11:32:12.808 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetData(BattleTech.UI.IMechLabDropTarget dropTarget, BattleTech.Data.DataManager dataManager, string itemPrefabName, bool allowRemovingItems, bool useStockFilter, BattleTech.MechLabDraggableItemType inventoryType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetData::Prefix(Boolean& __runOriginal)

11:32:12.811 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetData(BattleTech.UI.IMechLabDropTarget dropTarget, BattleTech.Data.DataManager dataManager, string itemPrefabName, bool allowRemovingItems, bool useStockFilter, BattleTech.MechLabDraggableItemType inventoryType)
11:32:12.813 [Info] Writing prefixes
11:32:12.820 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetSorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

11:32:12.823 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
11:32:12.826 [Info] Writing prefixes
11:32:12.832 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)
* static void CustomFilters.MechBayScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)

11:32:12.835 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
11:32:12.837 [Info] Writing prefixes
11:32:12.977 [Info] ### Harmony id=io.kmission.localsettings, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomSettings.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomLocalSettings\CustomLocalSettings.dll
### At 2023-06-19 11.32.12
11:32:12.982 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

11:32:12.985 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
11:32:12.988 [Info] Writing postfixes
11:32:13.002 [Info] Patching virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_ReceiveButtonPress::Postfix(BattleTech.UI.SettingsMenu __instance, String& button, BattleTech.UI.TMProWrapper.LocalizableText& ___currentModuleTitle, BattleTech.UI.ISettingsModule& ____activeModule)

11:32:13.005 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button)
11:32:13.008 [Info] Writing postfixes
11:32:13.021 [Info] Patching virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.SettingsMenu __instance)

11:32:13.026 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy()
11:32:13.028 [Info] Writing postfixes
11:32:13.036 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)

11:32:13.039 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
11:32:13.042 [Info] Writing postfixes
11:32:13.197 [Info] ### Harmony id=io.github.denadan.CustomSalvage, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void CustomSalvage.Control::InitNonStatic(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomSalvage\CustomSalvage.dll
### At 2023-06-19 11.32.13
11:32:13.204 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
5 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

11:32:13.207 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:13.210 [Info] Writing prefixes
11:32:13.214 [Info] Writing postfixes
11:32:13.221 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

11:32:13.225 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
11:32:13.229 [Info] Writing postfixes
11:32:13.237 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::Postfix()

11:32:13.241 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
11:32:13.244 [Info] Writing postfixes
11:32:13.252 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::Postfix()

11:32:13.256 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
11:32:13.260 [Info] Writing postfixes
11:32:13.269 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

11:32:13.272 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:13.276 [Info] Writing prefixes
11:32:13.295 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

11:32:13.298 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
11:32:13.301 [Info] Writing prefixes
11:32:13.313 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnScrapClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

11:32:13.317 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked()
11:32:13.321 [Info] Writing prefixes
11:32:13.329 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisInfoWidget_SetDescriptions::Postfix(BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, TMPro.TextMeshProUGUI ___mechDetails, BattleTech.UI.Tooltips.HBSTooltip ___chassisStorageTooltip, UnityEngine.GameObject ___readyBtnObj, UnityEngine.GameObject ___partsCountObj, BattleTech.UI.MechUnitElementWidget ___mechIcon, TMPro.TextMeshProUGUI ___partsCountText)

11:32:13.332 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions()
11:32:13.335 [Info] Writing postfixes
11:32:13.344 [Info] Patching void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisUnitElement_SetData::Postfix(BattleTech.UI.MechBayChassisUnitElement __instance, UnityEngine.UI.Image ___mechImage, TMPro.TextMeshProUGUI ___partsText, TMPro.TextMeshProUGUI ___partsLabelText, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)

11:32:13.346 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)
11:32:13.350 [Info] Writing postfixes
11:32:13.361 [Info] Patching void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SGEventPanel_SetEvent::Postfix(BattleTech.SimGameEventDef evt, BattleTech.UI.SGEventPanel __instance, TMPro.TextMeshProUGUI ___eventDescription, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___optionParent, System.Collections.Generic.List<BattleTech.UI.SGEventOption> ___optionsList)

11:32:13.364 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry)
11:32:13.367 [Info] Writing postfixes
11:32:13.385 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.SimGameState_AddMechPart::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance, string id)
* static void CustomComponents.Patches.SimGameState_AddMechPart_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:13.388 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
11:32:13.392 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
11:32:13.396 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:13.399 [Info] Writing prefixes
11:32:13.407 [Info] Patching System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.SimGameState_GetAllInventoryMechDefs::Prefix(Boolean& __runOriginal, bool showMechParts, System.Collections.Generic.List`1[[BattleTech.ChassisDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.SimGameState __instance)

11:32:13.410 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts)
11:32:13.412 [Info] Writing prefixes
11:32:13.693 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:13.697 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

11:32:13.700 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
11:32:13.703 [Info] Writing prefixes
11:32:13.709 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:13.713 [Info] Patching bool BattleTech.SimGameState::DismissPilot(string pilotID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderBackgrounds.Mod+SimGameState_DismissPilot_Patch::Prefix(string pilotID, BattleTech.SimGameState __instance)

11:32:13.716 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::DismissPilot(string pilotID)
11:32:13.719 [Info] Writing prefixes
11:32:14.012 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.016 [Info] Patching void BattleTech.UI.SGHeaderWidget::RefreshCountdown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void HideCareerModeDays.Patches.SGHeaderWidget_RefreshCountdown_Patch::Postfix(BattleTech.UI.SGHeaderWidget __instance)

11:32:14.019 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::RefreshCountdown()
11:32:14.022 [Info] Writing postfixes
11:32:14.312 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.328 [Info] Patching void BattleTech.SimGameState::InitializeDataFromDefs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SimGameState_InitializeDataFromDefs_Patch::Prefix(BattleTech.SimGameState __instance)

11:32:14.331 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitializeDataFromDefs()
11:32:14.335 [Info] Writing prefixes
11:32:14.443 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.446 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)

11:32:14.449 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
11:32:14.452 [Info] Writing prefixes
11:32:14.459 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.463 [Info] Patching void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Prefix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState& ___simState)
1 postfixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Postfix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState ___simState)

11:32:14.466 [Info] Running ILHook manipulator on void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets()
11:32:14.469 [Info] Writing prefixes
11:32:14.472 [Info] Writing postfixes
11:32:14.482 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.486 [Info] Patching void BattleTech.StarmapBorders::OnWillRenderObject() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapBorders_OnWillRenderObject::Prefix(BattleTech.StarmapBorders __instance)

11:32:14.490 [Info] Running ILHook manipulator on void BattleTech.StarmapBorders::OnWillRenderObject()
11:32:14.493 [Info] Writing prefixes
11:32:14.499 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.504 [Info] Patching void BattleTech.StarmapRenderer::RefreshSystems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_RefreshSystems::Prefix(BattleTech.StarmapRenderer __instance)
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_RefreshSystems::Postfix(BattleTech.StarmapRenderer __instance)

11:32:14.507 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::RefreshSystems()
11:32:14.510 [Info] Writing prefixes
11:32:14.513 [Info] Writing postfixes
11:32:14.523 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 32 ms
11:32:14.528 [Info] Patching static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_NormalizeToMapSpace_Patch::Prefix(BattleTech.StarmapRenderer __instance, UnityEngine.Vector2 normalizedPos, UnityEngine.Vector3& __result)

11:32:14.530 [Info] Running ILHook manipulator on static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos)
11:32:14.533 [Info] Writing prefixes
11:32:14.541 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 35 ms
11:32:14.546 [Info] Patching void BattleTech.StarmapRenderer::Update() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch::Postfix(BattleTech.StarmapRenderer __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:14.549 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::Update()
11:32:14.552 [Info] Transpiling void BattleTech.StarmapRenderer::Update()
11:32:14.563 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:14.594 [Info] Writing postfixes
11:32:14.606 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 35 ms
11:32:14.609 [Info] Patching void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapRenderer_PlaceLogo_Patch::Postfix(BattleTech.StarmapRenderer __instance, BattleTech.FactionValue faction, UnityEngine.GameObject logo)

11:32:14.612 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo)
11:32:14.615 [Info] Writing postfixes
11:32:14.625 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 35 ms
11:32:14.629 [Info] Patching void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGSystemViewPopulator_UpdateRoutedSystem_Patch::Prefix(BattleTech.UI.SGNavigationActiveFactionWidget __instance, System.Collections.Generic.List<string> activeFactions, string OwnerFaction, System.Collections.Generic.List<BattleTech.UI.HBSButton> ___FactionButtons, System.Collections.Generic.List<UnityEngine.UI.Image> ___FactionIcons, BattleTech.SimGameState ___simState)

11:32:14.632 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction)
11:32:14.636 [Info] Writing prefixes
11:32:14.642 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 35 ms
11:32:14.645 [Info] Patching void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapSystemRenderer_SetBlackMarket_Patch::Prefix(BattleTech.StarmapSystemRenderer __instance, Boolean& state)

11:32:14.648 [Info] Running ILHook manipulator on void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state)
11:32:14.651 [Info] Writing prefixes
11:32:14.658 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:14.662 [Info] PrefixWrapper being created for: CommanderBackgrounds::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
11:32:14.675 [Info] PrefixWrapper created: HXI︳1︳::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
11:32:14.678 [Info] PrefixWrapper being created for: InnerSphereMap::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
11:32:14.681 [Info] PrefixWrapper created: HXI︳2︳::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
11:32:14.684 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:14.688 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)

11:32:14.691 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
11:32:14.694 [Info] Writing prefixes
11:32:14.879 [Info] ### Harmony id=us.frostraptor.IRBTModUtils, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void IRBTModUtils.Mod::Init(string modDirectory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\IRBTModUtils\IRBTModUtils.dll
### At 2023-06-19 11.32.14
11:32:14.884 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:14.887 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
11:32:14.890 [Info] Writing postfixes
11:32:14.896 [Info] Patching virtual float BattleTech.Mech::get_MaxBackwardDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxBackwardDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:14.899 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxBackwardDistance()
11:32:14.902 [Info] Writing postfixes
11:32:14.906 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:14.909 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
11:32:14.912 [Info] Writing postfixes
11:32:14.917 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

11:32:14.921 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:14.924 [Info] Writing postfixes
11:32:14.931 [Info] Patching void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.AAR_ObjectiveListItem__Init::Postfix(BattleTech.UI.AAR_ObjectiveListItem __instance, BattleTech.MissionObjectiveResult missionObjectiveResult)

11:32:14.934 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract)
11:32:14.937 [Info] Writing postfixes
11:32:14.947 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)

11:32:14.950 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
11:32:14.953 [Info] Writing postfixes
11:32:14.974 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()

11:32:14.977 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:14.979 [Info] Writing prefixes
11:32:15.033 [Info] Patching void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_SubscribeToMessages::Postfix(BattleTech.UI.CombatHUD __instance, bool shouldAdd)

11:32:15.036 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd)
11:32:15.038 [Info] Writing postfixes
11:32:15.051 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

11:32:15.055 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:15.058 [Info] Writing prefixes
11:32:15.061 [Info] Writing postfixes
11:32:15.074 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()

11:32:15.077 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
11:32:15.081 [Info] Writing prefixes
11:32:15.223 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.227 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
1 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()

11:32:15.229 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
11:32:15.232 [Info] Writing prefixes
11:32:15.235 [Info] Writing postfixes
11:32:15.520 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.525 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::InitializeData(BattleTech.UI.MissionResults mission) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_SalvageScreen_InitializeData::Postfix(BattleTech.UI.AAR_SalvageScreen __instance)

11:32:15.528 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::InitializeData(BattleTech.UI.MissionResults mission)
11:32:15.530 [Info] Writing postfixes
11:32:15.537 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.541 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_CalculateAndAddAvailableSalvage::Postfix(BattleTech.UI.AAR_SalvageScreen __instance, System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> ___AllSalvageControllers)

11:32:15.545 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage()
11:32:15.548 [Info] Writing postfixes
11:32:15.556 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.561 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::OnCompleted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.AAR_SalvageScreen_OnCompleted_storage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance)

11:32:15.563 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::OnCompleted()
11:32:15.566 [Info] Writing prefixes
11:32:15.573 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.577 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked_Storage::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

11:32:15.579 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked()
11:32:15.582 [Info] Writing postfixes
11:32:15.590 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.594 [Info] Patching virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnPointerEnter::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

11:32:15.596 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
11:32:15.600 [Info] Writing postfixes
11:32:15.604 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.608 [Info] Patching virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnPointerExit::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

11:32:15.611 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
11:32:15.612 [Info] Writing postfixes
11:32:15.619 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.625 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

11:32:15.628 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:15.631 [Info] Writing prefixes
11:32:15.646 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.652 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

11:32:15.655 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:15.659 [Info] Writing prefixes
11:32:15.692 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.695 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.ListElementController_SalvageMechPart_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget, BattleTech.MechDef ___mechDef, BattleTech.SalvageDef ___salvageDef)

11:32:15.698 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:15.701 [Info] Writing postfixes
11:32:15.709 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.713 [Info] Patching void BattleTech.Contract::AddToFinalSalvage(BattleTech.SalvageDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_AddToFinalSalvage::Prefix(BattleTech.Contract __instance, BattleTech.SalvageDef& def)

11:32:15.716 [Info] Running ILHook manipulator on void BattleTech.Contract::AddToFinalSalvage(BattleTech.SalvageDef def)
11:32:15.719 [Info] Writing prefixes
11:32:15.725 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.729 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool LootMagnet.AAR_SalvageScreen_CalculateAndAddAvailableSalvage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance, BattleTech.Contract ___contract, Int32& ___totalSalvageMadeAvailable)
1 postfixes:
* static void LootMagnet.AAR_CalculateAndAddAvailableSalvage::Postfix(BattleTech.UI.AAR_SalvageScreen __instance, System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> ___AllSalvageControllers)

11:32:15.732 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage()
11:32:15.734 [Info] Writing prefixes
11:32:15.737 [Info] Writing postfixes
11:32:15.743 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.747 [Info] Patching void BattleTech.UI.AAR_SalvageChosen::ConvertToFinalState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_SalvageChosen_ConvertToFinalState::Postfix(BattleTech.UI.AAR_SalvageChosen __instance, BattleTech.UI.TMProWrapper.LocalizableText ___howManyReceivedText, BattleTech.UI.AAR_SalvageScreen ___parent, BattleTech.SimGameState ___simState, BattleTech.Contract ___contract)

11:32:15.750 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageChosen::ConvertToFinalState()
11:32:15.753 [Info] Writing postfixes
11:32:15.760 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.763 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::OnCompleted() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void LootMagnet.AAR_SalvageScreen_OnCompleted_storage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance)
* static void LootMagnet.AAR_SalvageScreen_OnCompleted::Prefix()

11:32:15.766 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::OnCompleted()
11:32:15.769 [Info] Writing prefixes
11:32:15.774 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:15.778 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked_Storage::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

11:32:15.780 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked()
11:32:15.784 [Info] Writing postfixes
11:32:16.033 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:16.039 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:16.041 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:16.044 [Info] Writing postfixes
11:32:16.052 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:16.056 [Info] Patching bool BattleTech.AbstractActor::get_HasBreachingShotAbility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_HasBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

11:32:16.060 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_HasBreachingShotAbility()
11:32:16.063 [Info] Writing postfixes
11:32:16.068 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:16.071 [Info] Patching bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_IsUsingBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

11:32:16.074 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons)
11:32:16.076 [Info] Writing postfixes
11:32:16.081 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:16.085 [Info] Patching virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_AddToTeam::Postfix(BattleTech.AbstractActor __instance)

11:32:16.088 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team)
11:32:16.092 [Info] Writing postfixes
11:32:16.099 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 60 ms
11:32:16.102 [Info] Patching bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AttackSequence_IsBreachingShot::Postfix(BattleTech.AttackDirector+AttackSequence __instance, Boolean& __result)

11:32:16.104 [Info] Running ILHook manipulator on bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot()
11:32:16.107 [Info] Writing postfixes
11:32:16.113 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.118 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

11:32:16.121 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:16.125 [Info] Writing prefixes
11:32:16.128 [Info] Writing postfixes
11:32:16.142 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.145 [Info] Patching void BattleTech.UI.MechDetails::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechDetails_SetDescriptions::Postfix(BattleTech.UI.MechDetails __instance)

11:32:16.148 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetDescriptions()
11:32:16.150 [Info] Writing postfixes
11:32:16.157 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.162 [Info] Patching void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechLabStockInfoPopup_StockMechDefLoaded::Postfix(BattleTech.UI.MechLabStockInfoPopup __instance, BattleTech.MechDef def, BattleTech.UI.TMProWrapper.LocalizableText ___descriptionText)

11:32:16.165 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def)
11:32:16.168 [Info] Writing postfixes
11:32:16.173 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.180 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)

11:32:16.183 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
11:32:16.186 [Info] Writing postfixes
11:32:16.211 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.214 [Info] Patching void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksServicePanel_SetPilot::Postfix(BattleTech.UI.SGBarracksServicePanel __instance, BattleTech.Pilot p)

11:32:16.217 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p)
11:32:16.220 [Info] Writing postfixes
11:32:16.230 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.242 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
2 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:16.245 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:16.247 [Info] Writing prefixes
11:32:16.250 [Info] Writing postfixes
11:32:16.285 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.290 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

11:32:16.293 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
11:32:16.296 [Info] Writing postfixes
11:32:16.323 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.328 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

11:32:16.331 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
11:32:16.334 [Info] Writing postfixes
11:32:16.346 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.355 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)

11:32:16.357 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
11:32:16.361 [Info] Writing prefixes
11:32:16.403 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.407 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

11:32:16.410 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
11:32:16.413 [Info] Writing postfixes
11:32:16.442 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.449 [Info] Patching SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_GetPilotRoninIcon::Postfix(BattleTech.SimGameState __instance, BattleTech.Pilot p, SVGImporter.SVGAsset& __result)

11:32:16.454 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p)
11:32:16.458 [Info] Writing postfixes
11:32:16.510 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.514 [Info] Patching void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_SetupRoninTooltip::Postfix(BattleTech.SimGameState __instance, BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)

11:32:16.517 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)
11:32:16.521 [Info] Writing postfixes
11:32:16.531 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:16.535 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)

11:32:16.539 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
11:32:16.542 [Info] Writing postfixes
11:32:16.774 [Info] ### Harmony id=MechEngineer.NullableLogger, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Control::Start(string modDirectory, string json), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.16
11:32:16.778 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
6 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

11:32:16.781 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:16.784 [Info] Writing prefixes
11:32:16.787 [Info] Writing postfixes
11:32:16.804 [Info] ### Harmony id=MechEngineer.Features.OrderedStatusEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OrderedStatusEffects.OrderedStatusEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.16
11:32:16.808 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

11:32:16.811 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
11:32:16.814 [Info] Writing postfixes
11:32:16.826 [Info] ### Harmony id=MechEngineer.Features.OverrideTonnage, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideTonnage.OverrideTonnageSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.16
11:32:16.831 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechLabMechInfoWidget_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel ___mechLab, Single& ___currentTonnage, TMPro.TextMeshProUGUI ___totalTonnage, BattleTech.UI.UIColorRefTracker ___totalTonnageColor, TMPro.TextMeshProUGUI ___remainingTonnage, BattleTech.UI.UIColorRefTracker ___remainingTonnageColor)

11:32:16.834 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage()
11:32:16.837 [Info] Writing prefixes
11:32:16.847 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(Single& currentValue)

11:32:16.851 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:16.854 [Info] Writing prefixes
11:32:16.858 [Info] Writing postfixes
11:32:16.866 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:16.869 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
11:32:16.872 [Info] Transpiling static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
11:32:16.875 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:16.888 [Info] ### Harmony id=MechEngineer.Features.CustomCapacities, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CustomCapacities.CustomCapacitiesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.16
11:32:16.894 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::RefreshInfo(bool resetOriginalValues) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.CustomCapacities.Patches.MechLabMechInfoWidget_RefreshInfo_Patch::Postfix(BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.TMProWrapper.LocalizableText ___remainingTonnage)

11:32:16.896 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::RefreshInfo(bool resetOriginalValues)
11:32:16.899 [Info] Writing postfixes
11:32:16.917 [Info] ### Harmony id=MechEngineer.Features.HeatSinkCapacityStat, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.HeatSinkCapacityStat.HeatSinkCapacityStatSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.16
11:32:16.922 [Info] Patching void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.CombatHUD_GrantBonusHeatSinksAndUnhittable_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:16.927 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced)
11:32:16.930 [Info] Transpiling void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced)
11:32:16.934 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.CombatHUD_GrantBonusHeatSinksAndUnhittable_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:16.941 [Info] Patching virtual void BattleTech.Mech::CancelCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:16.945 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::CancelCreatedEffects()
11:32:16.947 [Info] Transpiling virtual void BattleTech.Mech::CancelCreatedEffects()
11:32:16.952 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:16.960 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Boolean& __runOriginal, Single& __result)

11:32:16.963 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
11:32:16.966 [Info] Writing prefixes
11:32:16.975 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

11:32:16.978 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:16.981 [Info] Writing postfixes
11:32:16.988 [Info] Patching virtual void BattleTech.Mech::RestartCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:16.991 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::RestartCreatedEffects()
11:32:16.994 [Info] Transpiling virtual void BattleTech.Mech::RestartCreatedEffects()
11:32:16.998 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.009 [Info] ### Harmony id=MechEngineer.Features.Engines, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Engines.EngineSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.014 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.017 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:17.020 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:17.026 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.030 [Info] Writing prefixes
11:32:17.047 [Info] Patching int BattleTech.Mech::CalcJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_CalcJumpHeat_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, float distJumped, Int32& __result)

11:32:17.050 [Info] Running ILHook manipulator on int BattleTech.Mech::CalcJumpHeat(float distJumped)
11:32:17.052 [Info] Writing prefixes
11:32:17.103 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

11:32:17.106 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:17.110 [Info] Writing prefixes
11:32:17.114 [Info] Writing postfixes
11:32:17.122 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, Single& __result)

11:32:17.126 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
11:32:17.129 [Info] Writing prefixes
11:32:17.142 [Info] ### Harmony id=MechEngineer.Features.MoveMultiplierStat, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.MoveMultiplierStat.MoveMultiplierStatSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.147 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

11:32:17.151 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:17.155 [Info] Writing prefixes
11:32:17.161 [Info] Writing postfixes
11:32:17.169 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:17.172 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
11:32:17.176 [Info] Writing postfixes
11:32:17.189 [Info] ### Harmony id=MechEngineer.Features.CompressFloatieMessages, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CompressFloatieMessages.CompressFloatieMessagesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.199 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)

11:32:17.201 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
11:32:17.204 [Info] Writing prefixes
11:32:17.215 [Info] ### Harmony id=MechEngineer.Features.DamageIgnore, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.DamageIgnore.DamageIgnoreSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.219 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)

11:32:17.223 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:17.226 [Info] Writing prefixes
11:32:17.239 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)

11:32:17.241 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
11:32:17.244 [Info] Writing prefixes
11:32:17.250 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.253 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:17.257 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:17.264 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.279 [Info] ### Harmony id=MechEngineer.Features.PlaceholderEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.PlaceholderEffects.PlaceholderEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.283 [Info] Patching virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.MechComponent_ApplyPassiveEffectToTarget_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.EffectData& effect)

11:32:17.286 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID)
11:32:17.289 [Info] Writing prefixes
11:32:17.296 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)

11:32:17.299 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
11:32:17.302 [Info] Writing postfixes
11:32:17.312 [Info] ### Harmony id=MechEngineer.Features.CriticalEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CriticalEffects.CriticalEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.316 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID)

11:32:17.319 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
11:32:17.322 [Info] Writing prefixes
11:32:17.336 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.EffectManager_GetTargetStatCollections_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.EffectData effectData, BattleTech.ICombatant target)

11:32:17.338 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
11:32:17.341 [Info] Writing prefixes
11:32:17.352 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
1 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.356 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:17.359 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:17.363 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.367 [Info] Writing prefixes
11:32:17.370 [Info] Writing postfixes
11:32:17.378 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)

11:32:17.381 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
11:32:17.384 [Info] Writing prefixes
11:32:17.390 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)

11:32:17.394 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
11:32:17.397 [Info] Writing prefixes
11:32:17.406 [Info] Patching void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.409 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
11:32:17.412 [Info] Transpiling void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
11:32:17.417 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.435 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.438 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
11:32:17.440 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
11:32:17.445 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.458 [Info] ### Harmony id=MechEngineer.Features.AccuracyEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.AccuracyEffects.AccuracyEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.462 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(Boolean& __runOriginal, String& description)

11:32:17.465 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
11:32:17.468 [Info] Writing prefixes
11:32:17.476 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

11:32:17.479 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:17.483 [Info] Writing prefixes
11:32:17.488 [Info] Writing postfixes
11:32:17.497 [Info] Patching float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.ToHit_GetSelfArmMountedModifier_Patch::Prefix(Boolean& __runOriginal, BattleTech.Weapon weapon, Single& __result)

11:32:17.499 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon)
11:32:17.502 [Info] Writing prefixes
11:32:17.512 [Info] ### Harmony id=MechEngineer.Features.OverrideDescriptions, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideDescriptions.OverrideDescriptionsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.516 [Info] Patching virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.ListElementController_BASE_NotListView_SetComponentTooltipData_Patch::Postfix(BattleTech.UI.ListElementController_BASE_NotListView __instance)

11:32:17.519 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef)
11:32:17.523 [Info] Writing postfixes
11:32:17.530 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)

11:32:17.534 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
11:32:17.536 [Info] Writing postfixes
11:32:17.545 [Info] Patching BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_CreateMechComponentItem_Patch::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.MechComponentRef componentRef, BattleTech.UI.MechLabItemSlotElement __result)

11:32:17.547 [Info] Running ILHook manipulator on BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem)
11:32:17.550 [Info] Writing postfixes
11:32:17.563 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:17.566 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
11:32:17.569 [Info] Writing postfixes
11:32:17.579 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_EquipmentSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Equipment __instance, object data)

11:32:17.582 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data)
11:32:17.585 [Info] Writing postfixes
11:32:17.603 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)

11:32:17.606 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
11:32:17.610 [Info] Writing postfixes
11:32:17.634 [Info] ### Harmony id=MechEngineer.Features.DynamicSlots, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.DynamicSlots.DynamicSlotsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.638 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerEnter_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance)

11:32:17.642 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
11:32:17.646 [Info] Writing prefixes
11:32:17.652 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerExit_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance)

11:32:17.656 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
11:32:17.660 [Info] Writing prefixes
11:32:17.666 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)

11:32:17.670 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
11:32:17.672 [Info] Writing postfixes
11:32:17.681 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:17.684 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
11:32:17.687 [Info] Writing postfixes
11:32:17.701 [Info] ### Harmony id=MechEngineer.Features.ShutdownInjuryProtection, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ShutdownInjuryProtection.ShutdownInjuryProtectionSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.706 [Info] Patching virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, string sourceID, int stackItemID)

11:32:17.709 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID)
11:32:17.712 [Info] Writing prefixes
11:32:17.719 [Info] Patching void BattleTech.MechShutdownSequence::CheckForHeatDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechShutdownSequence __instance)

11:32:17.722 [Info] Running ILHook manipulator on void BattleTech.MechShutdownSequence::CheckForHeatDamage()
11:32:17.726 [Info] Writing prefixes
11:32:17.733 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)

11:32:17.737 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
11:32:17.740 [Info] Writing prefixes
11:32:17.754 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

11:32:17.757 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:17.762 [Info] Writing prefixes
11:32:17.767 [Info] Writing postfixes
11:32:17.775 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)

11:32:17.778 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
11:32:17.781 [Info] Writing postfixes
11:32:17.794 [Info] ### Harmony id=MechEngineer.Features.MechLabSlots, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.MechLabSlots.MechLabSlotsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.17
11:32:17.798 [Info] Patching static BattleTech.ChassisLocations CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::MountedLocation(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.CCLanceMechEquipmentList_MountedLocation_Patch::Postfix(BattleTech.MechComponentRef componentRef, BattleTech.ChassisLocations& __result)

11:32:17.801 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::MountedLocation(BattleTech.MechComponentRef componentRef)
11:32:17.803 [Info] Writing postfixes
11:32:17.810 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_Awake_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel)

11:32:17.813 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::Awake()
11:32:17.815 [Info] Writing postfixes
11:32:17.822 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

11:32:17.826 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
11:32:17.829 [Info] Writing prefixes
11:32:17.832 [Info] Writing postfixes
11:32:17.839 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.842 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:17.844 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:17.847 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.851 [Info] Writing postfixes
11:32:17.905 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData)

11:32:17.908 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData)
11:32:17.911 [Info] Writing prefixes
11:32:17.917 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.920 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:17.924 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:17.928 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.931 [Info] Writing postfixes
11:32:17.939 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_ShowHighlightFrame_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, bool isOriginalLocation, BattleTech.MechComponentRef& cRef)
* static void CustomComponents.Patches.MechLabLocationWidget_ShowHighlightFrame::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, bool isOriginalLocation, bool canBeAdded)

11:32:17.942 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
11:32:17.945 [Info] Writing prefixes
11:32:17.951 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
2 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:17.954 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:17.958 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:17.961 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:17.964 [Info] Writing prefixes
11:32:17.967 [Info] Writing postfixes
11:32:17.975 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:17.977 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
11:32:17.980 [Info] Writing postfixes
11:32:17.987 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_RefreshDropHighlights_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

11:32:17.991 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item)
11:32:17.994 [Info] Writing prefixes
11:32:18.007 [Info] ### Harmony id=MechEngineer.Features.InvalidInventory, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.InvalidInventory.InvalidInventorySettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.011 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.014 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
11:32:18.017 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
11:32:18.022 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.026 [Info] Writing prefixes
11:32:18.034 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.037 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
11:32:18.040 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
11:32:18.043 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.047 [Info] Writing prefixes
11:32:18.057 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:18.061 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
11:32:18.063 [Info] Writing postfixes
11:32:18.074 [Info] ### Harmony id=MechEngineer.Features.ComponentExplosions, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ComponentExplosions.ComponentExplosionsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.079 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.081 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:18.085 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:18.089 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.098 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
2 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.101 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:18.104 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:18.107 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.110 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.114 [Info] Writing prefixes
11:32:18.118 [Info] Writing postfixes
11:32:18.128 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)

11:32:18.130 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
11:32:18.133 [Info] Writing prefixes
11:32:18.140 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)

11:32:18.143 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
11:32:18.145 [Info] Writing prefixes
11:32:18.165 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.168 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
11:32:18.172 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
11:32:18.176 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.195 [Info] ### Harmony id=MechEngineer.Features.ArmorStructureChanges, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ArmorStructureChanges.ArmorStructureChangesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.198 [Info] Patching float BattleTech.Mech::get_ArmorMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ArmorMultiplier_Getter_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:18.201 [Info] Running ILHook manipulator on float BattleTech.Mech::get_ArmorMultiplier()
11:32:18.204 [Info] Writing postfixes
11:32:18.211 [Info] Patching float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxArmor_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:18.214 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location)
11:32:18.217 [Info] Writing postfixes
11:32:18.226 [Info] Patching float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxStructure_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:18.229 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location)
11:32:18.231 [Info] Writing postfixes
11:32:18.241 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)

11:32:18.244 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
11:32:18.247 [Info] Writing prefixes
11:32:18.283 [Info] Patching float BattleTech.Mech::get_StructureMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_StructureMultiplier_Getter_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:18.287 [Info] Running ILHook manipulator on float BattleTech.Mech::get_StructureMultiplier()
11:32:18.290 [Info] Writing postfixes
11:32:18.297 [Info] Patching BattleTech.MechDef BattleTech.Mech::ToMechDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ToMechDef_Patch::Postfix(BattleTech.Mech __instance, BattleTech.MechDef __result)

11:32:18.300 [Info] Running ILHook manipulator on BattleTech.MechDef BattleTech.Mech::ToMechDef()
11:32:18.303 [Info] Writing postfixes
11:32:18.319 [Info] ### Harmony id=MechEngineer.Features.ArmorMaximizer, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ArmorMaximizer.ArmorMaximizerSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.323 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnFrontArmorAdd() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnFrontArmorAdd_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

11:32:18.326 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnFrontArmorAdd()
11:32:18.329 [Info] Writing prefixes
11:32:18.334 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnFrontArmorSubtract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnFrontArmorSubtract_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

11:32:18.337 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnFrontArmorSubtract()
11:32:18.340 [Info] Writing prefixes
11:32:18.346 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnRearArmorAdd() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnRearArmorAdd_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

11:32:18.349 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnRearArmorAdd()
11:32:18.351 [Info] Writing prefixes
11:32:18.358 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnRearArmorSubtract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnRearArmorSubtract_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

11:32:18.361 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnRearArmorSubtract()
11:32:18.364 [Info] Writing prefixes
11:32:18.370 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_RefreshArmor_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)

11:32:18.372 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshArmor()
11:32:18.375 [Info] Writing postfixes
11:32:18.382 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.386 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:18.390 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:18.394 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.397 [Info] Writing postfixes
11:32:18.408 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

11:32:18.411 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
11:32:18.413 [Info] Writing prefixes
11:32:18.436 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnStripArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

11:32:18.439 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripArmor()
11:32:18.442 [Info] Writing prefixes
11:32:18.457 [Info] ### Harmony id=MechEngineer.Features.HardpointFix, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.HardpointFix.HardpointFixSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.463 [Info] Patching static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Prefix(Boolean& __runOriginal, BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Postfix(BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:18.467 [Info] Running ILHook manipulator on static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location)
11:32:18.470 [Info] Writing prefixes
11:32:18.473 [Info] Writing postfixes
11:32:18.484 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(Boolean& __runOriginal, BattleTech.BaseComponentRef componentRef, String& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)

11:32:18.488 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
11:32:18.492 [Info] Writing prefixes
11:32:18.495 [Info] Writing postfixes
11:32:18.502 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechRepresentationSimGame __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

11:32:18.505 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
11:32:18.507 [Info] Writing prefixes
11:32:18.510 [Info] Writing postfixes
11:32:18.569 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

11:32:18.572 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
11:32:18.574 [Info] Writing prefixes
11:32:18.577 [Info] Writing postfixes
11:32:18.608 [Info] ### Harmony id=MechEngineer.Features.AutoFix, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.AutoFix.AutoFixerSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.612 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

11:32:18.615 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
11:32:18.618 [Info] Writing postfixes
11:32:18.625 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

11:32:18.630 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
11:32:18.632 [Info] Writing postfixes
11:32:18.639 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

11:32:18.641 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
11:32:18.644 [Info] Writing postfixes
11:32:18.649 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

11:32:18.652 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
11:32:18.655 [Info] Writing postfixes
11:32:18.661 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)

11:32:18.664 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
11:32:18.667 [Info] Writing postfixes
11:32:18.676 [Info] ### Harmony id=MechEngineer.Features.Globals, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Globals.GlobalsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.680 [Info] Patching void BattleTech.UI.MechBayPanel::CloseMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_CloseMechBay_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

11:32:18.683 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::CloseMechBay()
11:32:18.686 [Info] Writing postfixes
11:32:18.693 [Info] Patching void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_SelectMech_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

11:32:18.696 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload)
11:32:18.699 [Info] Writing postfixes
11:32:18.706 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:18.709 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
11:32:18.712 [Info] Writing postfixes
11:32:18.718 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:18.722 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
11:32:18.726 [Info] Writing postfixes
11:32:18.739 [Info] ### Harmony id=MechEngineer.Features.TurretMechComponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.TurretMechComponents.TurretMechComponentSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.745 [Info] Patching virtual void BattleTech.Turret::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Turret __instance)

11:32:18.748 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
11:32:18.752 [Info] Writing prefixes
11:32:18.775 [Info] ### Harmony id=MechEngineer.Features.TurretLimitedAmmo, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.779 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.781 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
11:32:18.784 [Info] Transpiling virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
11:32:18.789 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.798 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:18.801 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
11:32:18.803 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
11:32:18.807 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:18.819 [Info] ### Harmony id=MechEngineer.Features.OverrideGhostVFX, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideGhostVFX.OverrideGhostVFXSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.825 [Info] Patching virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.GameRepresentation_PlayVFXAt_Patch::Prefix(Boolean& __runOriginal, string vfxName)

11:32:18.829 [Info] Running ILHook manipulator on virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration)
11:32:18.832 [Info] Writing prefixes
11:32:18.859 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
1 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)

11:32:18.862 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
11:32:18.865 [Info] Writing prefixes
11:32:18.868 [Info] Writing postfixes
11:32:18.883 [Info] ### Harmony id=MechEngineer.Features.OverrideStatTooltips, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideStatTooltips.OverrideStatTooltipsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.18
11:32:18.888 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechBayMechInfoWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

11:32:18.891 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::Awake()
11:32:18.895 [Info] Writing postfixes
11:32:18.903 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)

11:32:18.905 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
11:32:18.909 [Info] Writing postfixes
11:32:18.917 [Info] Patching void BattleTech.UI.MechLabStatBlockWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechLabStatBlockWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

11:32:18.920 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStatBlockWidget::Awake()
11:32:18.923 [Info] Writing postfixes
11:32:18.929 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMeleeStat_Patch::Prefix(Boolean& __runOriginal, Single& currentValue, Single& maxValue)

11:32:18.932 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
11:32:18.934 [Info] Writing prefixes
11:32:18.940 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMovementStat_Patch::Prefix(Boolean& __runOriginal, Single& currentValue, Single& maxValue)

11:32:18.943 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
11:32:18.946 [Info] Writing prefixes
11:32:18.952 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateDurabilityStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:18.956 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:18.960 [Info] Writing prefixes
11:32:18.970 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:18.973 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:18.975 [Info] Writing prefixes
11:32:18.983 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:18.986 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:18.990 [Info] Writing prefixes
11:32:19.002 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:19.004 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:19.007 [Info] Writing prefixes
11:32:19.014 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMovementStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:19.017 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:19.020 [Info] Writing prefixes
11:32:19.028 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:19.035 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:19.038 [Info] Writing prefixes
11:32:19.046 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)

11:32:19.049 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
11:32:19.052 [Info] Writing postfixes
11:32:19.061 [Info] Patching void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetDurabilityData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:19.064 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def)
11:32:19.067 [Info] Writing postfixes
11:32:19.076 [Info] Patching void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetFirepowerData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:19.079 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def)
11:32:19.081 [Info] Writing postfixes
11:32:19.090 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:19.094 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
11:32:19.097 [Info] Writing postfixes
11:32:19.106 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:19.110 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
11:32:19.113 [Info] Writing postfixes
11:32:19.122 [Info] Patching void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMovementData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:19.125 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def)
11:32:19.129 [Info] Writing postfixes
11:32:19.137 [Info] Patching void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetRangeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:19.141 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def)
11:32:19.144 [Info] Writing postfixes
11:32:19.152 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)

11:32:19.156 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
11:32:19.159 [Info] Writing postfixes
11:32:19.171 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Stats_SetData_Patch::Postfix(object data, BattleTech.UI.TMProWrapper.LocalizableText ___Title)

11:32:19.174 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data)
11:32:19.177 [Info] Writing postfixes
11:32:19.190 [Info] ### Harmony id=MechEngineer.Features.Performance, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Performance.PerformanceSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-06-19 11.32.19
11:32:19.195 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:19.198 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
11:32:19.201 [Info] Transpiling virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
11:32:19.208 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:19.216 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)

11:32:19.220 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
11:32:19.223 [Info] Writing prefixes
11:32:19.292 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:19.295 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
11:32:19.298 [Info] Writing postfixes
11:32:19.312 [Info] Patching static BattleTech.Rendering.BTLight+LightStruct[] BattleTech.Rendering.BTLightController::GetLightArray(UnityEngine.Camera camera, bool simGame, UnityEngine.ComputeBuffer cullBuffer, UnityEngine.ComputeBuffer lightMatricies, UnityEngine.Vector4& numLights, bool isPortrait, float maxDistance, float distanceWidth, BattleTech.Rendering.BTLightController+LightSprite[]& outLightSprites, Int32& numSprites) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_GetLightArray_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.Rendering.BTLight> ___lightList)

11:32:19.315 [Info] Running ILHook manipulator on static BattleTech.Rendering.BTLight+LightStruct[] BattleTech.Rendering.BTLightController::GetLightArray(UnityEngine.Camera camera, bool simGame, UnityEngine.ComputeBuffer cullBuffer, UnityEngine.ComputeBuffer lightMatricies, UnityEngine.Vector4& numLights, bool isPortrait, float maxDistance, float distanceWidth, BattleTech.Rendering.BTLightController+LightSprite[]& outLightSprites, Int32& numSprites)
11:32:19.318 [Info] Writing prefixes
11:32:19.340 [Info] Patching static void BattleTech.Rendering.BTLightController::ProcessCommandBufferLegacy(UnityEngine.Rendering.CommandBuffer buf, UnityEngine.Camera camera, bool simGame, bool isPortrait, float maxDistance, float distanceWidth) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_ProcessCommandBufferLegacy_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.Rendering.BTLight> ___lightList)

11:32:19.343 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::ProcessCommandBufferLegacy(UnityEngine.Rendering.CommandBuffer buf, UnityEngine.Camera camera, bool simGame, bool isPortrait, float maxDistance, float distanceWidth)
11:32:19.346 [Info] Writing prefixes
11:32:19.371 [Info] Patching static void BattleTech.Rendering.BTLightController::SortList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_SortList_Patch::Prefix(Boolean& __runOriginal)

11:32:19.374 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::SortList()
11:32:19.377 [Info] Writing prefixes
11:32:19.382 [Info] Patching static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.BTLightController_AddLight_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:19.386 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light)
11:32:19.389 [Info] Transpiling static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light)
11:32:19.393 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.BTLightController_AddLight_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:19.399 [Info] Patching virtual int BattleTech.Rendering.BTLight::CompareTo(object obj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLight_CompareTo_Patch::Prefix(Boolean& __runOriginal, BattleTech.Rendering.BTLight __instance, object obj, Int32& __result)

11:32:19.403 [Info] Running ILHook manipulator on virtual int BattleTech.Rendering.BTLight::CompareTo(object obj)
11:32:19.405 [Info] Writing prefixes
11:32:19.412 [Info] Patching bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.CombatHUDEvasiveBarPips_TrySetButton_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:19.415 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color)
11:32:19.418 [Info] Transpiling bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color)
11:32:19.423 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.CombatHUDEvasiveBarPips_TrySetButton_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:19.495 [Info] Patching static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.TweenManager_FilteredOperation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:19.498 [Info] Running ILHook manipulator on static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray)
11:32:19.502 [Info] Transpiling static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray)
11:32:19.509 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.TweenManager_FilteredOperation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:20.032 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.036 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

11:32:20.039 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
11:32:20.042 [Info] Writing prefixes
11:32:20.047 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.051 [Info] Patching void BehaviorTree::InitRootNode() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.BehaviourTreeInitRootNodePatch::Postfix(BehaviorTree __instance, BattleTech.AbstractActor ___unit, BehaviorTreeIDEnum ___behaviorTreeIDEnum)

11:32:20.056 [Info] Running ILHook manipulator on void BehaviorTree::InitRootNode()
11:32:20.059 [Info] Writing postfixes
11:32:20.067 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.074 [Info] Patching void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateCompleteLanceConfigurationPrepPatch::Prefix(BattleTech.SimGameState __instance)

11:32:20.077 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request)
11:32:20.079 [Info] Writing prefixes
11:32:20.114 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.118 [Info] Patching static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideSelectLanceDefFromListPatch::Prefix(Int32& ___MAX_DIFF_DIVERGENCE)

11:32:20.121 [Info] Running ILHook manipulator on static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence)
11:32:20.124 [Info] Writing prefixes
11:32:20.131 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.135 [Info] Patching virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.DialogResultPatch::Prefix(BattleTech.Designed.DialogResult __instance, BattleTech.Framework.DialogueRef ___dialogueRef)

11:32:20.138 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName)
11:32:20.140 [Info] Writing prefixes
11:32:20.147 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.151 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()

11:32:20.155 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:20.158 [Info] Writing prefixes
11:32:20.162 [Info] Writing postfixes
11:32:20.172 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.176 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)

11:32:20.179 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
11:32:20.183 [Info] Writing prefixes
11:32:20.197 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.201 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

11:32:20.204 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
11:32:20.207 [Info] Writing prefixes
11:32:20.209 [Info] Writing postfixes
11:32:20.217 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.221 [Info] Patching void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractOverrideGenerateUnitsPatch::Prefix(BattleTech.Framework.ContractOverride __instance)

11:32:20.223 [Info] Running ILHook manipulator on void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags)
11:32:20.226 [Info] Writing prefixes
11:32:20.233 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.236 [Info] Patching virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ChunkOverrideCopyPatch::Prefix(BattleTech.Framework.ChunkOverride __instance, BattleTech.Framework.ChunkOverride& __result)

11:32:20.239 [Info] Running ILHook manipulator on virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy()
11:32:20.242 [Info] Writing prefixes
11:32:20.248 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.253 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)

11:32:20.256 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
11:32:20.259 [Info] Writing prefixes
11:32:20.274 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.277 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)

11:32:20.281 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
11:32:20.283 [Info] Writing prefixes
11:32:20.286 [Info] Writing postfixes
11:32:20.295 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.298 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)

11:32:20.301 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:20.304 [Info] Writing prefixes
11:32:20.312 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.315 [Info] Patching void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterChunkGameLogicApplyContractOverridePatch::Prefix(BattleTech.EncounterChunkGameLogic __instance, BattleTech.Framework.ChunkOverride chunkOverride)

11:32:20.318 [Info] Running ILHook manipulator on void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary)
11:32:20.321 [Info] Writing prefixes
11:32:20.327 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.330 [Info] Patching void BattleTech.EncounterLayerData::OverridePlots() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterLayerDataOverridePlotsPatch::Prefix(BattleTech.EncounterLayerData __instance)

11:32:20.333 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::OverridePlots()
11:32:20.336 [Info] Writing prefixes
11:32:20.340 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.344 [Info] Patching void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Prefix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)
1 postfixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Postfix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)

11:32:20.347 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status)
11:32:20.349 [Info] Writing prefixes
11:32:20.351 [Info] Writing postfixes
11:32:20.358 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.362 [Info] Patching void ItemRegistry::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ItemRegistryPatch::Postfix(ItemRegistry __instance, System.Collections.Generic.Dictionary<TaggedObjectType, System.Collections.Generic.List<ITaggedItem>> ___itemsByType)

11:32:20.365 [Info] Running ILHook manipulator on void ItemRegistry::.ctor()
11:32:20.368 [Info] Writing postfixes
11:32:20.376 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.379 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)

11:32:20.382 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
11:32:20.385 [Info] Writing prefixes
11:32:20.392 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.396 [Info] Patching BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataExporterPatch::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, MissionControl.DataManager dataManager)

11:32:20.399 [Info] Running ILHook manipulator on BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager)
11:32:20.401 [Info] Writing prefixes
11:32:20.409 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.412 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

11:32:20.415 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
11:32:20.418 [Info] Writing postfixes
11:32:20.474 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.480 [Info] Patching void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateFilterActiveMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.WeightedList`1[[BattleTech.Data.MapAndEncounters, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)

11:32:20.482 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)
11:32:20.485 [Info] Writing postfixes
11:32:20.506 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.510 [Info] Patching bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidContractsPatch::Postfix(BattleTech.SimGameState __instance, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)

11:32:20.513 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)
11:32:20.515 [Info] Writing postfixes
11:32:20.522 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.527 [Info] Patching bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system)

11:32:20.529 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps)
11:32:20.532 [Info] Writing postfixes
11:32:20.537 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.540 [Info] Patching System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.TeamDelayEnemySpottedVOPatch::Prefix(BattleTech.Team __instance, BattleTech.AbstractActor actor, System.Collections.IEnumerator& __result)

11:32:20.543 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor)
11:32:20.546 [Info] Writing prefixes
11:32:20.551 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.556 [Info] Patching UnityEngine.Vector3 BattleTech.UnitSpawnPointGameLogic::GetSpawnPosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.UnitSpawnPointGameLogicGetSpawnPositionPatch::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.Vector3& __result, BattleTech.UnitType ___unitType)

11:32:20.559 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UnitSpawnPointGameLogic::GetSpawnPosition()
11:32:20.562 [Info] Writing postfixes
11:32:20.567 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.570 [Info] Patching static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.BehaviourNodeLogAIPatch::Prefix(BehaviorNode __instance, string info)

11:32:20.573 [Info] Running ILHook manipulator on static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName)
11:32:20.575 [Info] Writing prefixes
11:32:20.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.584 [Info] Patching BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataGetCellAtPatch::Prefix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell& __result, BattleTech.Point index, BattleTech.MapTerrainDataCell[,] ___mapTerrainDataCells)

11:32:20.587 [Info] Running ILHook manipulator on BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index)
11:32:20.590 [Info] Writing prefixes
11:32:20.598 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.601 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.UnitSpawnPointGameLogicLoadDropPodPrefabsPatch::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)

11:32:20.604 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)
11:32:20.606 [Info] Writing prefixes
11:32:20.613 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 61 ms
11:32:20.617 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LanceConfiguratorPanelContinueConfirmClickedPatch::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance)

11:32:20.620 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked()
11:32:20.623 [Info] Writing postfixes
11:32:20.640 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.644 [Info] Patching void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDRetreatEscMenuOnRetreatConfirmedPatch::Prefix(BattleTech.UI.CombatHUDRetreatEscMenu __instance)

11:32:20.647 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed()
11:32:20.649 [Info] Writing prefixes
11:32:20.658 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.663 [Info] Patching UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EmotePortraitLoadPortraitPatch::Prefix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)
1 postfixes:
* static void MissionControl.Patches.EmotePortraitLoadPortraitPatch::Postfix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)

11:32:20.665 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits)
11:32:20.669 [Info] Writing prefixes
11:32:20.672 [Info] Writing postfixes
11:32:20.680 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.683 [Info] Patching void BattleTech.EncounterLayerParent::FirstTimeInitialization() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentFirstTimeInitializationPatch::Prefix(BattleTech.EncounterLayerParent __instance)

11:32:20.686 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::FirstTimeInitialization()
11:32:20.689 [Info] Writing prefixes
11:32:20.695 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.698 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)

11:32:20.701 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
11:32:20.704 [Info] Writing prefixes
11:32:20.711 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.715 [Info] Patching void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.CombatHUDMissionEndShowFailurePatch::Prefix(BattleTech.UI.CombatHUDMissionEnd __instance, Boolean& storyMission)

11:32:20.717 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission)
11:32:20.720 [Info] Writing prefixes
11:32:20.731 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.738 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)

11:32:20.741 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
11:32:20.744 [Info] Writing prefixes
11:32:20.746 [Info] Writing postfixes
11:32:20.770 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.773 [Info] Patching virtual BattleTech.LanceDef BattleTech.LanceDef::Copy() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Prefix(BattleTech.LanceDef __instance)
1 postfixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Postfix(BattleTech.LanceDef __instance, BattleTech.LanceDef __result)

11:32:20.776 [Info] Running ILHook manipulator on virtual BattleTech.LanceDef BattleTech.LanceDef::Copy()
11:32:20.778 [Info] Writing prefixes
11:32:20.781 [Info] Writing postfixes
11:32:20.789 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.795 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)

11:32:20.798 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
11:32:20.800 [Info] Writing prefixes
11:32:20.809 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.812 [Info] Patching void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.TurnDirectorOnFirstContactPatch::Postfix(BattleTech.TurnDirector __instance)

11:32:20.815 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message)
11:32:20.817 [Info] Writing postfixes
11:32:20.823 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.828 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.InterpolatorInterpolatePatch::Postfix(String& __result, BattleTech.GameContext context, bool localize)

11:32:20.831 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
11:32:20.834 [Info] Writing postfixes
11:32:20.841 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.845 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.PlayerLanceSpawnerGameLogicSpawnUnitsPatch::Postfix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

11:32:20.848 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen)
11:32:20.850 [Info] Writing postfixes
11:32:20.856 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.862 [Info] Patching void BattleTech.UI.SGDialogWidget::Show(string text, BattleTech.GameContext gameContext, BattleTech.CastDef whoIsTalking, BattleTech.CastMemberEmote emotion, BattleTech.UI.SGDialogWidget+OnContinueCallback onContinueCB, BattleTech.UI.SGDialogWidget+OnResponseCallback onResponseCB, System.Collections.Generic.List<BattleTech.SimGameConversationManager+ResponseData> responses, bool endOfConvo, bool changeFromContinueToResponse) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SGDialogWidgetShowPatch::Prefix(BattleTech.UI.SGDialogWidget __instance, String& text, BattleTech.CastDef& whoIsTalking)
1 postfixes:
* static void MissionControl.Patches.SGDialogWidgetShowPatch::Postfix(BattleTech.UI.SGDialogWidget __instance, BattleTech.UI.ConvDialogEntry ___currentEntry)

11:32:20.865 [Info] Running ILHook manipulator on void BattleTech.UI.SGDialogWidget::Show(string text, BattleTech.GameContext gameContext, BattleTech.CastDef whoIsTalking, BattleTech.CastMemberEmote emotion, BattleTech.UI.SGDialogWidget+OnContinueCallback onContinueCB, BattleTech.UI.SGDialogWidget+OnResponseCallback onResponseCB, System.Collections.Generic.List<BattleTech.SimGameConversationManager+ResponseData> responses, bool endOfConvo, bool changeFromContinueToResponse)
11:32:20.869 [Info] Writing prefixes
11:32:20.871 [Info] Writing postfixes
11:32:20.893 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.897 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
2 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)

11:32:20.899 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
11:32:20.903 [Info] Writing prefixes
11:32:20.906 [Info] Writing postfixes
11:32:20.913 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.917 [Info] Patching void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorCheckEnteredCellsForRegionsPatch::Prefix(BattleTech.AbstractActor __instance)

11:32:20.921 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList)
11:32:20.924 [Info] Writing prefixes
11:32:20.941 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.947 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)

11:32:20.951 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
11:32:20.955 [Info] Writing prefixes
11:32:20.969 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.973 [Info] Patching virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SmartTriggerResponseEvalutePatch::Prefix(BattleTech.Framework.SmartTriggerResponse __instance)

11:32:20.976 [Info] Running ILHook manipulator on virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message)
11:32:20.979 [Info] Writing prefixes
11:32:20.985 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:20.990 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)

11:32:20.995 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
11:32:20.998 [Info] Writing prefixes
11:32:21.024 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.028 [Info] Patching static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LevelLoaderLoadScenePatch::Prefix(BattleTech.LevelLoader __instance, string scene)

11:32:21.031 [Info] Running ILHook manipulator on static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene)
11:32:21.033 [Info] Writing prefixes
11:32:21.039 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.043 [Info] Patching static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LoadingCurtainHidePatch::Prefix(BattleTech.UI.LoadingCurtain __instance)

11:32:21.046 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader)
11:32:21.049 [Info] Writing prefixes
11:32:21.055 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.060 [Info] Patching BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMapPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Data.MapAndEncounters& __result)

11:32:21.063 [Info] Running ILHook manipulator on BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap()
11:32:21.065 [Info] Writing prefixes
11:32:21.071 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.074 [Info] Patching BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMoodPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Rendering.Mood.BattleMood& __result)

11:32:21.077 [Info] Running ILHook manipulator on BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood()
11:32:21.079 [Info] Writing prefixes
11:32:21.085 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.089 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)

11:32:21.092 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
11:32:21.095 [Info] Writing prefixes
11:32:21.106 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.110 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LaunchMap() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SkirmishSettingsBetaLaunchMapPatch::Postfix()

11:32:21.112 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LaunchMap()
11:32:21.115 [Info] Writing postfixes
11:32:21.189 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.195 [Info] Patching UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.AssetBundleManagerGetAssetFromBundlePatch::Postfix(BattleTech.Assetbundles.AssetBundleManager __instance, string assetName, string bundleName, UnityEngine.GameObject& __result)

11:32:21.198 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName)
11:32:21.201 [Info] Writing postfixes
11:32:21.208 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.212 [Info] Patching void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.GameInstanceLaunchContractFromSavePatch::Postfix(BattleTech.GameInstance __instance, BattleTech.CombatGameState combat)

11:32:21.215 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat)
11:32:21.217 [Info] Writing postfixes
11:32:21.226 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.229 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)

11:32:21.231 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
11:32:21.234 [Info] Writing prefixes
11:32:21.239 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.243 [Info] Patching virtual void BattleTech.UI.Briefing::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.BriefingInitPatch::Prefix(BattleTech.UI.Briefing __instance, BattleTech.UI.LoadingSpinnerAndTip_Widget ___spinnerGameTip)

11:32:21.246 [Info] Running ILHook manipulator on virtual void BattleTech.UI.Briefing::Init()
11:32:21.249 [Info] Writing prefixes
11:32:21.266 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.268 [Info] Patching void BattleTech.UI.LoadingSpinnerAndTip_Widget::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LoadingSpinnerAndTipWidgetInitPatch::Postfix(BattleTech.UI.LoadingSpinnerAndTip_Widget __instance)

11:32:21.271 [Info] Running ILHook manipulator on void BattleTech.UI.LoadingSpinnerAndTip_Widget::Init()
11:32:21.274 [Info] Writing postfixes
11:32:21.279 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
11:32:21.282 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateStartContractPatch::Prefix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

11:32:21.285 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
11:32:21.289 [Info] Writing prefixes
11:32:21.431 [Info] ### Harmony id=io.github.mpstark.NavigationComputer, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void NavigationComputer.Main::Init(string modDir, string settings), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\NavigationComputer\NavigationComputer.dll
### At 2023-06-19 11.32.21
11:32:21.436 [Info] Patching virtual void BattleTech.UI.SGNavigationScreen::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.SGNavigationScreen_Update_Patch::Postfix()

11:32:21.438 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationScreen::Update()
11:32:21.441 [Info] Writing postfixes
11:32:21.448 [Info] Patching void BattleTech.UI.SGNavigationScreen::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomController_Navigation myNavRoom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.SGNavigationScreen_Init_Patch::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState simGame)

11:32:21.451 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomController_Navigation myNavRoom)
11:32:21.455 [Info] Writing postfixes
11:32:21.469 [Info] Patching virtual bool BattleTech.UI.SGNavigationScreen::HandleEscapeKeypress() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SGNavigationScreen_HandleEscapeKeypress_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

11:32:21.472 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SGNavigationScreen::HandleEscapeKeypress()
11:32:21.475 [Info] Writing prefixes
11:32:21.480 [Info] Patching void BattleTech.UI.SGRoomController_Navigation::ExitNavScreen() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SGRoomController_Navigation_ExitNavScreen_Patch::Prefix()

11:32:21.483 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_Navigation::ExitNavScreen()
11:32:21.487 [Info] Writing prefixes
11:32:21.494 [Info] Patching void BattleTech.SimGameState::SetSimRoomState(BattleTech.DropshipLocation state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SimGameState_SetSimRoomState_Patch::Prefix(BattleTech.DropshipLocation state)

11:32:21.497 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetSimRoomState(BattleTech.DropshipLocation state)
11:32:21.500 [Info] Writing prefixes
11:32:21.507 [Info] Patching bool BattleTech.Starmap::SetSelectedSystem(BattleTech.StarSystemNode node) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.Starmap_SetSelectedSystem_Patch::Prefix(Boolean& __runOriginal, BattleTech.Starmap __instance, BattleTech.StarSystemNode node)

11:32:21.510 [Info] Running ILHook manipulator on bool BattleTech.Starmap::SetSelectedSystem(BattleTech.StarSystemNode node)
11:32:21.513 [Info] Writing prefixes
11:32:21.520 [Info] Patching BattleTech.StarSystemNode BattleTech.Starmap::GetLocationByUV(UnityEngine.Vector2 pos, UnityEngine.Rect loc, float scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.Starmap_GetLocationByUV_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.StarSystemNode __result)

11:32:21.523 [Info] Running ILHook manipulator on BattleTech.StarSystemNode BattleTech.Starmap::GetLocationByUV(UnityEngine.Vector2 pos, UnityEngine.Rect loc, float scale)
11:32:21.525 [Info] Writing postfixes
11:32:21.533 [Info] Patching void BattleTech.StarmapRenderer::SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer systemRenderer) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.StarmapRenderer_SetSelectedSystemRenderer_Patch::Prefix(Boolean& __runOriginal, BattleTech.StarmapRenderer __instance, BattleTech.StarmapSystemRenderer systemRenderer)

11:32:21.536 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer systemRenderer)
11:32:21.539 [Info] Writing prefixes
11:32:21.816 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 65 ms
11:32:21.820 [Info] Patching static void BattleTech.Save.CachedSettings::ClearCachedSettings() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_ClearCachedSettings_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:21.823 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::ClearCachedSettings()
11:32:21.827 [Info] Transpiling static void BattleTech.Save.CachedSettings::ClearCachedSettings()
11:32:21.831 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_ClearCachedSettings_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:21.841 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 68 ms
11:32:21.846 [Info] Patching static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SaveSettingsToPlayerPrefs_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:21.848 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings)
11:32:21.851 [Info] Transpiling static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings)
11:32:21.856 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SaveSettingsToPlayerPrefs_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:21.870 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 71 ms
11:32:21.874 [Info] Patching static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsGetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:21.876 [Info] Running ILHook manipulator on static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings()
11:32:21.879 [Info] Transpiling static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings()
11:32:21.883 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsGetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:21.899 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 74 ms
11:32:21.903 [Info] Patching static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsSetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:21.905 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value)
11:32:21.908 [Info] Transpiling static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value)
11:32:21.911 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsSetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:21.917 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 74 ms
11:32:21.922 [Info] Patching void BattleTech.Save.Core.WriteLocation::.ctor(string rootPath, bool usePlatform) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NewSaveFolder.Patches.WriteLocation_Constructor_Patch::Prefix(String& rootPath, Boolean& usePlatform)

11:32:21.925 [Info] Running ILHook manipulator on void BattleTech.Save.Core.WriteLocation::.ctor(string rootPath, bool usePlatform)
11:32:21.929 [Info] Writing prefixes
11:32:22.072 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 74 ms
11:32:22.077 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)

11:32:22.080 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:22.082 [Info] Writing prefixes
11:32:22.085 [Info] Writing postfixes
11:32:22.346 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 74 ms
11:32:22.350 [Info] Patching virtual void BattleTech.IntroCinematicLauncher::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SkipIntro.Patches.IntroCinematicLauncher_Init_Patch::Postfix()

11:32:22.354 [Info] Running ILHook manipulator on virtual void BattleTech.IntroCinematicLauncher::Init()
11:32:22.356 [Info] Writing postfixes
11:32:22.364 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 74 ms
11:32:22.368 [Info] Patching void SplashLauncher::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SkipIntro.Patches.SplashLauncher_Update_Patch::Prefix(SplashLauncher __instance)

11:32:22.370 [Info] Running ILHook manipulator on void SplashLauncher::Update()
11:32:22.373 [Info] Writing prefixes
11:32:22.524 [Info] ### Harmony id=ru.kmission.travelinfotooltips, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void TravelInfoTooltips.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\TravelInfoTooltips\TravelInfoTooltips.dll
### At 2023-06-19 11.32.22
11:32:22.529 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::SetupTooltips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TravelInfoTooltips.SGSystemViewPopulator_SetupTooltips::Postfix(BattleTech.UI.SGSystemViewPopulator __instance)

11:32:22.531 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::SetupTooltips()
11:32:22.534 [Info] Writing postfixes
11:32:22.683 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 77 ms
11:32:22.688 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:22.692 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
11:32:22.695 [Info] Transpiling void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
11:32:22.700 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:22.715 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 77 ms
11:32:22.719 [Info] Patching void BattleTech.PilotDef::SaveGameRequestResource(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.PilotDef_SaveGameRequestResourcesPatch::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.LoadRequest loadRequest)

11:32:22.722 [Info] Running ILHook manipulator on void BattleTech.PilotDef::SaveGameRequestResource(BattleTech.Data.LoadRequest loadRequest)
11:32:22.725 [Info] Writing postfixes
11:32:22.731 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 77 ms
11:32:22.735 [Info] Patching UnityEngine.Texture2D BattleTech.Portraits.RenderedPortraitResult::get_Item(BattleTech.Portraits.PortraitManager+PortraitSizes size) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.RenderedPortraitResult_GetItemPatch::Postfix(BattleTech.Portraits.RenderedPortraitResult __instance, UnityEngine.Texture2D& __result)

11:32:22.738 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.Portraits.RenderedPortraitResult::get_Item(BattleTech.Portraits.PortraitManager+PortraitSizes size)
11:32:22.741 [Info] Writing postfixes
11:32:22.750 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 80 ms
11:32:22.753 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:22.757 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
11:32:22.761 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
11:32:22.764 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:22.772 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 80 ms
11:32:22.776 [Info] Patching virtual void SGBarracksMWCustomizationPopup::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.SGBarracksMWCustomizationPopup_SavePatch::Postfix(SGBarracksMWCustomizationPopup& __instance)

11:32:22.779 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::Save()
11:32:22.782 [Info] Writing postfixes
11:32:22.793 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 80 ms
11:32:22.797 [Info] Patching void BattleTech.UI.SGCharacterCreationPortraitCustomization::LoadPortraitSettings(BattleTech.Portraits.PortraitSettings portraitSettingsData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderPortraitLoader.SGBarracksMWCustomizationPopup_LoadPortraitSettingsPatch::Prefix(SGBarracksMWCustomizationPopup& __instance, BattleTech.Portraits.PortraitSettings& portraitSettingsData)

11:32:22.799 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationPortraitCustomization::LoadPortraitSettings(BattleTech.Portraits.PortraitSettings portraitSettingsData)
11:32:22.802 [Info] Writing prefixes
11:32:22.811 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 83 ms
11:32:22.814 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:22.817 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
11:32:22.819 [Info] Transpiling void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
11:32:22.824 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:22.833 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 83 ms
11:32:22.836 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::LoadOptions() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderPortraitLoader.SGCharacterCreationNamePanel_LoadOptions_Patch::Prefix()
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationNamePanel_LoadOptions_Patch::Postfix(BattleTech.UI.SGCharacterCreationNamePanel& __instance)

11:32:22.839 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::LoadOptions()
11:32:22.841 [Info] Writing prefixes
11:32:22.845 [Info] Writing postfixes
11:32:22.851 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 83 ms
11:32:22.855 [Info] Patching BattleTech.Gender BattleTech.UI.SGCharacterCreationNamePanel::get_gender() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderPortraitLoader.SGCharacterCreationNamePanel_get_gender_Patch::Prefix(BattleTech.UI.SGCharacterCreationNamePanel& __instance, BattleTech.Gender& __result)
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationNamePanel_get_gender_Patch::Postfix(BattleTech.UI.SGCharacterCreationNamePanel& __instance, BattleTech.Gender& __result)

11:32:22.857 [Info] Running ILHook manipulator on BattleTech.Gender BattleTech.UI.SGCharacterCreationNamePanel::get_gender()
11:32:22.861 [Info] Writing prefixes
11:32:22.864 [Info] Writing postfixes
11:32:22.870 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 83 ms
11:32:22.873 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)

11:32:22.877 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
11:32:22.879 [Info] Writing postfixes
11:32:22.898 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 83 ms
11:32:22.902 [Info] Patching void BattleTech.SpawnableUnit::Init(BattleTech.PilotableActorDef unitDef, BattleTech.PilotDef pilotDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderPortraitLoader.SpawnableUnit_Init_Patch::Prefix(BattleTech.SpawnableUnit& __instance, BattleTech.PilotDef pilotDef)

11:32:22.905 [Info] Running ILHook manipulator on void BattleTech.SpawnableUnit::Init(BattleTech.PilotableActorDef unitDef, BattleTech.PilotDef pilotDef)
11:32:22.908 [Info] Writing prefixes
11:32:22.915 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 83 ms
11:32:22.918 [Info] Patching static BattleTech.VersionManifest BattleTech.VersionManifestUtilities::LoadDefaultManifest() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.VersionManifestUtilitiesPatch::Postfix(BattleTech.VersionManifest& __result)

11:32:22.922 [Info] Running ILHook manipulator on static BattleTech.VersionManifest BattleTech.VersionManifestUtilities::LoadDefaultManifest()
11:32:22.926 [Info] Writing postfixes
11:32:23.845 [Info] ### Harmony id=io.mission.customlocalization, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomTranslation.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomLocalization\CustomLocalization.dll
### At 2023-06-19 11.32.23
11:32:23.849 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)

11:32:23.852 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
11:32:23.855 [Info] Writing postfixes
11:32:23.862 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.Interpolator_Interpolate::Prefix(String& template, BattleTech.GameContext context)
1 postfixes:
* static void MissionControl.Patches.InterpolatorInterpolatePatch::Postfix(String& __result, BattleTech.GameContext context, bool localize)

11:32:23.866 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
11:32:23.868 [Info] Writing prefixes
11:32:23.871 [Info] Writing postfixes
11:32:23.878 [Info] Patching virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.CSVStringsProvider_LoadCultureFromReader::Postfix(BattleTech.CSVStringsProvider __instance)

11:32:23.881 [Info] Running ILHook manipulator on virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader)
11:32:23.884 [Info] Writing postfixes
11:32:23.897 [Info] Patching void System.IO.StreamReader::.ctor(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.StreamReader_Constructor::Prefix(System.IO.StreamReader __instance, String& path)

11:32:23.900 [Info] Running ILHook manipulator on void System.IO.StreamReader::.ctor(string path)
11:32:23.902 [Info] Writing prefixes
11:32:23.908 [Info] Patching void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.DataLoader_CallHandler::Prefix(String& path, System.Action<string, System.IO.Stream> handler)

11:32:23.911 [Info] Running ILHook manipulator on void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler)
11:32:23.913 [Info] Writing prefixes
11:32:23.920 [Info] Patching virtual void Localize.InterpolatedText::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.InterpolatedText_Append::Prefix(String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.InterpolatedText_Append::Postfix(Localize.InterpolatedText __instance)

11:32:23.923 [Info] Running ILHook manipulator on virtual void Localize.InterpolatedText::Append(string text, object[] args)
11:32:23.926 [Info] Writing prefixes
11:32:23.928 [Info] Writing postfixes
11:32:23.936 [Info] Patching virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ShipModuleUpgrade_FromJSON::Postfix(BattleTech.ShipModuleUpgrade __instance, string json)

11:32:23.939 [Info] Running ILHook manipulator on virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json)
11:32:23.941 [Info] Writing postfixes
11:32:23.948 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)

11:32:23.950 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
11:32:23.954 [Info] Writing prefixes
11:32:23.962 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomTranslation.MechValidationRules_ValidateMechDef::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:23.965 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
11:32:23.968 [Info] Writing postfixes
11:32:23.974 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:23.978 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
11:32:23.981 [Info] Writing postfixes
11:32:23.986 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
1 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)

11:32:23.990 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
11:32:23.993 [Info] Writing prefixes
11:32:23.997 [Info] Writing postfixes
11:32:24.005 [Info] Patching void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Prefix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text& description)
1 postfixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Postfix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text description, BattleTech.UI.TMProWrapper.LocalizableText ___Text)

11:32:24.009 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description)
11:32:24.012 [Info] Writing prefixes
11:32:24.014 [Info] Writing postfixes
11:32:24.022 [Info] Patching TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.FontLocTable_ConvertFontForCulture::Prefix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)
1 postfixes:
* static void CustomTranslation.FontLocTable_ConvertFontForCulture::Postfix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)

11:32:24.025 [Info] Running ILHook manipulator on TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont)
11:32:24.029 [Info] Writing prefixes
11:32:24.032 [Info] Writing postfixes
11:32:24.039 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

11:32:24.042 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
11:32:24.044 [Info] Writing prefixes
11:32:24.051 [Info] Patching void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.FloatieMessage_Constructor::Prefix(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)

11:32:24.054 [Info] Running ILHook manipulator on void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)
11:32:24.058 [Info] Writing prefixes
11:32:24.066 [Info] Patching void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatieAnchor_AddFloatie::Prefix(BattleTech.UI.CombatHUDFloatieAnchor __instance, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)

11:32:24.069 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)
11:32:24.072 [Info] Writing prefixes
11:32:24.079 [Info] Patching void BattleTech.UnityGameInstance::Reset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.UnityGameInstance_Reset::Postfix(BattleTech.UnityGameInstance __instance)

11:32:24.082 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Reset()
11:32:24.084 [Info] Writing postfixes
11:32:24.095 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
3 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

11:32:24.098 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
11:32:24.101 [Info] Writing prefixes
11:32:24.103 [Info] Writing postfixes
11:32:24.110 [Info] Patching void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ModDefsDatabase_FinishedLoadingMods::Postfix(object __instance)

11:32:24.112 [Info] Running ILHook manipulator on void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries()
11:32:24.115 [Info] Writing postfixes
11:32:24.682 [Info] Patching void BattleTech.UI.LanguageSelect::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.LanguageSelect_Save::Postfix(BattleTech.UI.LanguageSelect __instance)

11:32:24.685 [Info] Running ILHook manipulator on void BattleTech.UI.LanguageSelect::Save()
11:32:24.688 [Info] Writing postfixes
11:32:24.695 [Info] Patching virtual void Localize.Text::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.Text_Append::Prefix(Localize.Text __instance, String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.Text_Append::Postfix(Localize.Text __instance)

11:32:24.698 [Info] Running ILHook manipulator on virtual void Localize.Text::Append(string text, object[] args)
11:32:24.700 [Info] Writing prefixes
11:32:24.703 [Info] Writing postfixes
11:32:24.709 [Info] Patching string BattleTech.DescriptionDef::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_UINameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

11:32:24.712 [Info] Running ILHook manipulator on string BattleTech.DescriptionDef::get_UIName()
11:32:24.714 [Info] Writing postfixes
11:32:24.720 [Info] Patching string BattleTech.BaseDescriptionDef::get_Name() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_NameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

11:32:24.723 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Name()
11:32:24.725 [Info] Writing postfixes
11:32:24.731 [Info] Patching string BattleTech.BaseDescriptionDef::get_Details() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_DetailsGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

11:32:24.734 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Details()
11:32:24.737 [Info] Writing postfixes
11:32:24.886 [Info] ### Harmony id=io.kmission.custompilotdecorator, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPilotDecorator.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomPilotDecorator\CustomPilotDecorator.dll
### At 2023-06-19 11.32.24
11:32:24.891 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

11:32:24.895 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
11:32:24.898 [Info] Writing postfixes
11:32:24.904 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:24.907 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:24.911 [Info] Writing postfixes
11:32:24.921 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Prefix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon)
2 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon, BattleTech.UI.TMProWrapper.LocalizableText& ___callsign)

11:32:24.924 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
11:32:24.927 [Info] Writing prefixes
11:32:24.930 [Info] Writing postfixes
11:32:24.945 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:24.948 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
11:32:24.950 [Info] Writing postfixes
11:32:24.961 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:24.965 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
11:32:24.967 [Info] Writing postfixes
11:32:24.975 [Info] Patching void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechPilotPortraits_Init::Postfix(BattleTech.UI.LanceMechPilotPortraits __instance, BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)

11:32:24.978 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)
11:32:24.981 [Info] Writing postfixes
11:32:24.989 [Info] Patching void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_Init::Postfix(BattleTech.UI.LanceMechSlot __instance, BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)

11:32:24.992 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)
11:32:24.997 [Info] Writing postfixes
11:32:25.006 [Info] Patching void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechSlot __instance, bool isRandom)

11:32:25.009 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom)
11:32:25.011 [Info] Writing postfixes
11:32:25.018 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_Init::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)

11:32:25.021 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)
11:32:25.024 [Info] Writing postfixes
11:32:25.037 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, bool isRandom)

11:32:25.040 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom)
11:32:25.043 [Info] Writing postfixes
11:32:25.051 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.ListElementController_SalvageFullMech_NotListView_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:25.054 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
11:32:25.057 [Info] Writing postfixes
11:32:25.069 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

11:32:25.072 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
11:32:25.075 [Info] Writing postfixes
11:32:25.083 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif2::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)

11:32:25.086 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)
11:32:25.090 [Info] Writing postfixes
11:32:25.098 [Info] Patching void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechUnitElementWidget_SetIcon::Postfix(BattleTech.UI.MechUnitElementWidget __instance, string icon)

11:32:25.101 [Info] Running ILHook manipulator on void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon)
11:32:25.104 [Info] Writing postfixes
11:32:25.112 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHPText)
* static void CustomPilotDecorator.TooltipPrefab_Chassis_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, object data)

11:32:25.115 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
11:32:25.117 [Info] Writing postfixes
11:32:25.129 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

11:32:25.131 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
11:32:25.133 [Info] Writing postfixes
11:32:25.145 [Info] Patching void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitPreviewPanel_SetData::Postfix(BattleTech.UI.PortraitPreviewPanel __instance, BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)

11:32:25.148 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)
11:32:25.151 [Info] Writing postfixes
11:32:25.168 [Info] Patching void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitRenderPanel_Render::Postfix(BattleTech.UI.PortraitRenderPanel __instance, BattleTech.Portraits.PortraitSettings portraitSettings)

11:32:25.171 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings)
11:32:25.174 [Info] Writing postfixes
11:32:25.183 [Info] Patching void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGCharacterCreationWidget_UpdateSummary::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance)

11:32:25.186 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary()
11:32:25.189 [Info] Writing postfixes
11:32:25.204 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGBarracksDossierPanel_SetPilot_Gif::Postfix(BattleTech.UI.SGBarracksDossierPanel __instance, BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)

11:32:25.207 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)
11:32:25.210 [Info] Writing postfixes
11:32:25.236 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SG_HiringHall_DetailPanel_DisplayPilot::Postfix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

11:32:25.239 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p)
11:32:25.242 [Info] Writing postfixes
11:32:25.249 [Info] Patching void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.CombatHUDPortrait_ResetDisplayedActor::Postfix(BattleTech.UI.CombatHUDPortrait __instance)

11:32:25.252 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor()
11:32:25.255 [Info] Writing postfixes
11:32:25.266 [Info] Patching UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.SpriteLoadRequest_SpriteFromDisk::Prefix(BattleTech.Data.DataManager+SpriteLoadRequest __instance, string assetPath, UnityEngine.Sprite& __result)

11:32:25.269 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath)
11:32:25.271 [Info] Writing prefixes
11:32:25.281 [Info] Patching void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.TextureManager_ProcessCompletedRequest::Prefix(BattleTech.Data.TextureManager __instance, BattleTech.Data.TextureManager+TextureLoadRequest completed)

11:32:25.284 [Info] Running ILHook manipulator on void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed)
11:32:25.287 [Info] Writing prefixes
11:32:25.743 [Info] ### Harmony id=io.kmission.customunitdecorator, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnitDecorator.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnitDecorator\CustomUnitDecorator.dll
### At 2023-06-19 11.32.25
11:32:25.747 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetAlertIcon(bool shouldShow, BattleTech.UI.UIColor color) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.MechBayMechUnitElement_SetAlertIcon::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, bool shouldShow, BattleTech.UI.UIColor color)

11:32:25.750 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetAlertIcon(bool shouldShow, BattleTech.UI.UIColor color)
11:32:25.753 [Info] Writing postfixes
11:32:25.760 [Info] Patching virtual bool BattleTech.MechComponentDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.MechComponentDef __instance, uint loadWeight, Boolean& __result)

11:32:25.763 [Info] Running ILHook manipulator on virtual bool BattleTech.MechComponentDef::DependenciesLoaded(uint loadWeight)
11:32:25.766 [Info] Writing postfixes
11:32:25.775 [Info] Patching virtual void BattleTech.MechComponentDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.MechComponentDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:25.778 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponentDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:25.781 [Info] Writing postfixes
11:32:25.791 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnitDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

11:32:25.794 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
11:32:25.797 [Info] Writing postfixes
11:32:25.939 [Info] ### Harmony id=ru.kmission.customunitspawn, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnitSpawn.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnitSpawn\CustomUnitSpawn.dll
### At 2023-06-19 11.32.25
11:32:25.944 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)
* static void CustomUnitSpawn.LanceOverride_RequestLance::Prefix(BattleTech.Framework.LanceOverride __instance, BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)

11:32:25.947 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
11:32:25.949 [Info] Writing prefixes
11:32:25.958 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)
* static void CustomUnitSpawn.LanceOverride_RequestLanceComplete::Prefix(BattleTech.Framework.LanceOverride __instance, BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)

11:32:25.963 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
11:32:25.965 [Info] Writing prefixes
11:32:25.974 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

11:32:25.976 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
11:32:25.985 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags, System.Collections.Generic.List`1[[BattleTech.Data.UnitDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:25.988 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
11:32:25.991 [Info] Writing postfixes
11:32:26.000 [IL] Generated patch (System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> DMD<BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs>?-331830272::BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)):
.locals init (
    BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0 V_0
    System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> V_1
    System.Boolean V_2
)
IL_0000: newobj System.Void BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::.ctor()
IL_0005: stloc.0
IL_0006: ldloc.0
IL_0007: ldarg.0
IL_0008: stfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_000d: ldloc.0
IL_000e: ldarg.s currentDate
IL_0010: stfld System.Nullable`1<System.DateTime> BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::currentDate
IL_0015: ldloc.0
IL_0016: ldarg.s companyTags
IL_0018: stfld HBS.Collections.TagSet BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::companyTags
IL_001d: ldloc.0
IL_001e: ldfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0023: ldc.i4.5
IL_0024: ldarg.1
IL_0025: ldarg.2
IL_0026: ldstr "UnitDef"
IL_002b: ldstr ""
IL_0030: ldarg.3
IL_0031: ldstr "UnitDefID"
IL_0036: call System.Collections.Generic.List`1<DataBaseType> BattleTech.Data.TagSetQueryExtensions::GetMatchingDataByTagSet<BattleTech.Data.UnitDef_MDD>(BattleTech.Data.MetadataDatabase,BattleTech.Data.TagSetType,HBS.Collections.TagSet,HBS.Collections.TagSet,System.String,System.String,System.Boolean,System.String)
IL_003b: dup
IL_003c: ldloc.0
IL_003d: ldftn System.Boolean BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::<GetMatchingUnitDefs>b__0(BattleTech.Data.UnitDef_MDD)
IL_0043: newobj System.Void System.Predicate`1<BattleTech.Data.UnitDef_MDD>::.ctor(System.Object,System.IntPtr)
IL_0048: callvirt System.Int32 System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>::RemoveAll(System.Predicate`1<T>)
IL_004d: pop
IL_004e: br IL_0053
IL_0053: stloc V_1
IL_0057: ldc.i4.1
IL_0058: stloc V_2
IL_005c: ldarg mdd
IL_0060: ldarg requiredTags
IL_0064: ldarg excludedTags
IL_0068: ldarg checkOwnership
IL_006c: ldarg currentDate
IL_0070: ldarg companyTags
IL_0074: ldloca V_1
IL_0078: call System.Void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet,System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>&)
IL_007d: ldloc V_1
IL_0081: ret

11:32:26.345 [Info] ### Harmony id=ru.mission.customvoices, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomVoices.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomVoices\CustomVoices.dll
### At 2023-06-19 11.32.26
11:32:26.349 [Info] Patching void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Briefing_SetStartButtonActive::Prefix(BattleTech.UI.Briefing __instance, bool isActive)

11:32:26.352 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive)
11:32:26.356 [Info] Writing prefixes
11:32:26.364 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

11:32:26.367 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
11:32:26.369 [Info] Writing prefixes
11:32:26.377 [Info] Patching virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWCustomizationPopup_LoadTextSelectorOptions::Prefix(SGBarracksMWCustomizationPopup __instance, BattleTech.UI.HorizontalScrollSelectorText& ___voiceSelector, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___voiceIdMap)

11:32:26.380 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions()
11:32:26.383 [Info] Writing prefixes
11:32:26.393 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

11:32:26.398 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
11:32:26.401 [Info] Writing postfixes
11:32:26.409 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWDetailPanel_CustomizePilot::Prefix(BattleTech.UI.SGBarracksMWDetailPanel __instance, BattleTech.Pilot ___curPilot, BattleTech.UI.SGBarracksWidget ___barracks, BattleTech.UI.SGBarracksDossierPanel ___dossier)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:26.412 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
11:32:26.414 [Info] Transpiling void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
11:32:26.418 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:26.422 [Info] Writing prefixes
11:32:26.432 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.SGCharacterCreationNamePanel_Awake::Postfix(BattleTech.UI.SGCharacterCreationNamePanel __instance)

11:32:26.434 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::Awake()
11:32:26.438 [Info] Writing postfixes
11:32:26.446 [Info] Patching void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SetSwitchById::Postfix(WwiseManager __instance, uint switchGroup, uint switchId, AkGameObj sourceObject)

11:32:26.449 [Info] Running ILHook manipulator on void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject)
11:32:26.453 [Info] Writing postfixes
11:32:26.462 [Info] Patching void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Pilot_Init::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)

11:32:26.466 [Info] Running ILHook manipulator on void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)
11:32:26.469 [Info] Writing prefixes
11:32:26.479 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:26.482 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
11:32:26.485 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
11:32:26.490 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:26.495 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:26.503 [Info] Patching static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksDossierPanel_PlayVO::Prefix(string voice, Boolean& __result)

11:32:26.506 [Info] Running ILHook manipulator on static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice)
11:32:26.509 [Info] Writing prefixes
11:32:26.517 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SG_HiringHall_DetailPanel_PlayPilotSelectionVO::Prefix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

11:32:26.520 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
11:32:26.523 [Info] Writing prefixes
11:32:26.531 [Info] Patching static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_InterruptPilotVOForTeam::Postfix(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)

11:32:26.534 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)
11:32:26.537 [Info] Writing postfixes
11:32:26.544 [Info] Patching void BattleTech.PilotRepresentation::LoadSoundbanks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PilotRepresentation__LoadSoundbanks__Patch::Prefix(BattleTech.PilotRepresentation& __instance, Boolean& ___startedVOStatic)

11:32:26.546 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::LoadSoundbanks()
11:32:26.549 [Info] Writing prefixes
11:32:26.557 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

11:32:26.561 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
11:32:26.564 [Info] Writing postfixes
11:32:26.574 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()
* static void CustomVoices.AudioEventManager_LoadAudioSettings::Postfix()

11:32:26.577 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
11:32:26.579 [Info] Writing postfixes
11:32:26.585 [Info] Patching static void BattleTech.AudioEventManager::SaveAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_SaveAudioSettings::Postfix()

11:32:26.588 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::SaveAudioSettings()
11:32:26.592 [Info] Writing postfixes
11:32:26.599 [Info] Patching void WwiseManager::SuspendSoundEngine(bool processAudio) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SuspendSoundEngine::Postfix(WwiseManager __instance)

11:32:26.602 [Info] Running ILHook manipulator on void WwiseManager::SuspendSoundEngine(bool processAudio)
11:32:26.605 [Info] Writing postfixes
11:32:26.612 [Info] Patching uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_PostEventById::Postfix(WwiseManager __instance, uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie, System.Collections.Generic.Dictionary<string, uint> ___guidIdMap, uint __result)

11:32:26.615 [Info] Running ILHook manipulator on uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
11:32:26.618 [Info] Writing postfixes
11:32:26.626 [Info] Patching static AKRESULT AkSoundEngine::RenderAudio() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AkSoundEngine_RenderAudio::Postfix(AKRESULT __result)

11:32:26.631 [Info] Running ILHook manipulator on static AKRESULT AkSoundEngine::RenderAudio()
11:32:26.633 [Info] Writing postfixes
11:32:26.640 [Info] Patching void WwiseManager::WakeupSoundEngine() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_WakeupSoundEngine::Postfix()

11:32:26.642 [Info] Running ILHook manipulator on void WwiseManager::WakeupSoundEngine()
11:32:26.645 [Info] Writing postfixes
11:32:26.653 [Info] Patching void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioSettingsModule_ApplyUpdatedSlider::Postfix(BattleTech.UI.AudioSettingsModule __instance, string val, float ___currentVolumeMaster, float ___currentVolumeMusic, float ___currentVolumeVoice, float ___currentVolumeSFX, float ___currentVolumeAmbience, float ___currentVolumeCinematic)

11:32:26.656 [Info] Running ILHook manipulator on void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val)
11:32:26.659 [Info] Writing postfixes
11:32:26.669 [Info] Patching static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.AudioEventManager_SetMusicState::Prefix(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic, Boolean& __result)

11:32:26.672 [Info] Running ILHook manipulator on static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic)
11:32:26.674 [Info] Writing prefixes
11:32:26.682 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PlayPilotVOPatch::Prefix(BattleTech.PilotRepresentation __instance, Boolean& ___startedVOStatic, AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:26.684 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
11:32:26.687 [Info] Transpiling void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
11:32:26.690 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:26.699 [Info] Writing prefixes
11:32:27.116 [Info] ### Harmony id=io.mission.customammocategories.private, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomAmmoCategoriesPrivate.Core::Init(), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategoriesPrivate.dll
### At 2023-06-19 11.32.27
11:32:27.120 [Info] Patching static void ModTek.Features.Manifest.Mods.ModDefsDatabase::FinishedLoadingMods() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPrivate.Core::PrintHarmonySummary_postfix()

11:32:27.123 [Info] Running ILHook manipulator on static void ModTek.Features.Manifest.Mods.ModDefsDatabase::FinishedLoadingMods()
11:32:27.127 [Info] Writing postfixes
11:32:27.491 [Info] ### Harmony id=Sheepy.BattleTechMod.AttackImprovementMod, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Sheepy.BattleTechMod.BattleModModule::Patch(System.Reflection.MethodBase patched, HarmonyLib.HarmonyMethod prefix, HarmonyLib.HarmonyMethod postfix, HarmonyLib.HarmonyMethod transpiler), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\AttackImprovementMod.dll
### At 2023-06-19 11.32.27
11:32:27.497 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

11:32:27.500 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
11:32:27.503 [Info] Writing postfixes
11:32:27.509 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()

11:32:27.512 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
11:32:27.515 [Info] Writing postfixes
11:32:27.527 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
2 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)

11:32:27.532 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:27.535 [Info] Writing prefixes
11:32:27.539 [Info] Writing postfixes
11:32:27.557 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)

11:32:27.561 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
11:32:27.565 [Info] Writing prefixes
11:32:27.569 [Info] Writing postfixes
11:32:27.576 [Info] ### Harmony id=io.mission.modrepuation, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CACMain.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategories.dll
### At 2023-06-19 11.32.27
11:32:27.585 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:27.589 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
11:32:27.595 [Info] Transpiling void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
11:32:27.602 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:27.616 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GetIndividualHits(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.ClusteredShotEnabler::Prefix(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage, BattleTech.AttackDirector+AttackSequence __instance)

11:32:27.619 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GetIndividualHits(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage)
11:32:27.624 [Info] Writing prefixes
11:32:27.641 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

11:32:27.644 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
11:32:27.647 [Info] Writing postfixes
11:32:27.656 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)

11:32:27.659 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:27.663 [Info] Writing prefixes
11:32:27.680 [Info] Patching virtual void BallisticEffect::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.BallisticEffectOnCompleteMultifirePatch::Prefix(Int32& ___hitIndex, BallisticEffect __instance)

11:32:27.683 [Info] Running ILHook manipulator on virtual void BallisticEffect::OnComplete()
11:32:27.687 [Info] Writing prefixes
11:32:27.695 [Info] Patching virtual void LaserEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.LaserEffectOnCompleteMultifirePatch::Postfix(Int32& ___hitIndex, LaserEffect __instance)

11:32:27.699 [Info] Running ILHook manipulator on virtual void LaserEffect::OnComplete()
11:32:27.702 [Info] Writing postfixes
11:32:27.711 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CleverGirlAIDamagePrediction.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.AbstractActor __instance)

11:32:27.714 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase)
11:32:27.717 [Info] Writing postfixes
11:32:27.727 [Info] Patching static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrderForTarget::Prefix(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary)

11:32:27.731 [Info] Running ILHook manipulator on static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order)
11:32:27.734 [Info] Writing prefixes
11:32:27.773 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)

11:32:27.776 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
11:32:27.780 [Info] Writing postfixes
11:32:27.802 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerDown::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

11:32:27.806 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
11:32:27.809 [Info] Writing prefixes
11:32:27.818 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerUp::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

11:32:27.822 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
11:32:27.825 [Info] Writing prefixes
11:32:27.837 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

11:32:27.842 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted()
11:32:27.846 [Info] Writing prefixes
11:32:27.855 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshNonHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

11:32:27.859 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted()
11:32:27.863 [Info] Writing prefixes
11:32:27.881 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

11:32:27.884 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
11:32:27.887 [Info] Writing prefixes
11:32:27.891 [Info] Writing postfixes
11:32:27.899 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

11:32:27.903 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
11:32:27.907 [Info] Writing prefixes
11:32:28.011 [Info] Patching float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_GetAdjustedDamage::Postfix(BattleTech.AbstractActor __instance, float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging, Single& __result)

11:32:28.014 [Info] Running ILHook manipulator on float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging)
11:32:28.017 [Info] Writing postfixes
11:32:28.031 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

11:32:28.034 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
11:32:28.038 [Info] Writing prefixes
11:32:28.058 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

11:32:28.061 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:28.066 [Info] Writing prefixes
11:32:28.069 [Info] Writing postfixes
11:32:28.079 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

11:32:28.082 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:28.085 [Info] Writing prefixes
11:32:28.097 [Info] Patching BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_GetPriorityDesignMask::Postfix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell cell, BattleTech.DesignMaskDef& __result)

11:32:28.101 [Info] Running ILHook manipulator on BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell)
11:32:28.104 [Info] Writing postfixes
11:32:28.113 [Info] Patching AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetAudioSurfaceType::Postfix(BattleTech.MapTerrainDataCell __instance, AudioSwitch_surface_type& __result)

11:32:28.115 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType()
11:32:28.118 [Info] Writing postfixes
11:32:28.126 [Info] Patching string BattleTech.MapTerrainDataCell::GetVFXNameModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetVFXNameModifier::Postfix(BattleTech.MapTerrainDataCell __instance, String& __result)

11:32:28.130 [Info] Running ILHook manipulator on string BattleTech.MapTerrainDataCell::GetVFXNameModifier()
11:32:28.133 [Info] Writing postfixes
11:32:28.140 [Info] Patching void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_LoadData::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)

11:32:28.143 [Info] Running ILHook manipulator on void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)
11:32:28.146 [Info] Writing postfixes
11:32:28.165 [Info] Patching virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_Load::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.169 [Info] Running ILHook manipulator on virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
11:32:28.172 [Info] Transpiling virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
11:32:28.177 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.182 [Info] Writing postfixes
11:32:28.193 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

11:32:28.197 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
11:32:28.200 [Info] Writing postfixes
11:32:28.212 [Info] Patching void BattleTech.Rendering.Trees.TreeContainer::GatherTrees() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TreeContainer_GatherTrees::Postfix(BattleTech.Rendering.Trees.TreeContainer __instance)

11:32:28.214 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.TreeContainer::GatherTrees()
11:32:28.216 [Info] Writing postfixes
11:32:28.241 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionVFX::Postfix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

11:32:28.244 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX()
11:32:28.248 [Info] Writing postfixes
11:32:28.256 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionAudio::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

11:32:28.260 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio()
11:32:28.264 [Info] Writing prefixes
11:32:28.272 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

11:32:28.275 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
11:32:28.278 [Info] Writing postfixes
11:32:28.290 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
2 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

11:32:28.294 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
11:32:28.297 [Info] Writing prefixes
11:32:28.300 [Info] Writing postfixes
11:32:28.308 [Info] Patching void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Postfix(BattleTech.MapMetaDataExporter __instance, UnityEngine.Terrain terrain, bool force)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.313 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
11:32:28.315 [Info] Transpiling void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
11:32:28.319 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.324 [Info] Writing postfixes
11:32:28.335 [Info] Patching BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfo::Prefix(BattleTech.AttackDirector+AttackSequence __instance, BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, Boolean& indirectFire, float dodgedDamage, BattleTech.WeaponHitInfo& __result)

11:32:28.338 [Info] Running ILHook manipulator on BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage)
11:32:28.341 [Info] Writing prefixes
11:32:28.355 [Info] Patching float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.ToHit_GetEvasivePipsModifier::Prefix(BattleTech.ToHit __instance, int evasivePips, BattleTech.Weapon weapon, Single& __result)

11:32:28.358 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon)
11:32:28.362 [Info] Writing prefixes
11:32:28.370 [Info] Patching static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.373 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
11:32:28.377 [Info] Transpiling static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
11:32:28.381 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.390 [Info] Patching static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.393 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
11:32:28.397 [Info] Transpiling static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
11:32:28.401 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.408 [Info] Patching static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.411 [Info] Running ILHook manipulator on static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
11:32:28.414 [Info] Transpiling static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
11:32:28.417 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.425 [Info] Patching BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.429 [Info] Running ILHook manipulator on BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
11:32:28.433 [Info] Transpiling BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
11:32:28.436 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.443 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.446 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
11:32:28.449 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
11:32:28.453 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.461 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.465 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
11:32:28.468 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
11:32:28.471 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.476 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.480 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
11:32:28.483 [Info] Transpiling float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
11:32:28.487 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.500 [Info] Patching static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.503 [Info] Running ILHook manipulator on static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
11:32:28.506 [Info] Transpiling static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
11:32:28.511 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.520 [Info] Patching static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Postfix(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.524 [Info] Running ILHook manipulator on static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
11:32:28.527 [Info] Transpiling static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
11:32:28.532 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.535 [Info] Writing postfixes
11:32:28.545 [Info] Patching static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.548 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
11:32:28.551 [Info] Transpiling static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
11:32:28.561 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.577 [Info] Patching static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.583 [Info] Running ILHook manipulator on static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
11:32:28.584 [Info] Transpiling static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
11:32:28.590 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.602 [Info] Patching virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.606 [Info] Running ILHook manipulator on virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
11:32:28.608 [Info] Transpiling virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
11:32:28.613 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.624 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.628 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:32:28.631 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:32:28.634 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.642 [Info] Patching float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.646 [Info] Running ILHook manipulator on float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
11:32:28.649 [Info] Transpiling float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
11:32:28.653 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.667 [Info] Patching float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.671 [Info] Running ILHook manipulator on float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
11:32:28.674 [Info] Transpiling float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
11:32:28.678 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.693 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.698 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:28.701 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:28.708 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.712 [Info] Writing postfixes
11:32:28.725 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.730 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
11:32:28.733 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
11:32:28.738 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.754 [Info] Patching void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.757 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
11:32:28.761 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
11:32:28.767 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.776 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.779 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
11:32:28.782 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
11:32:28.785 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.789 [Info] Writing postfixes
11:32:28.799 [Info] Patching bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Postfix(LOFCache __instance, BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:28.802 [Info] Running ILHook manipulator on bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
11:32:28.804 [Info] Transpiling bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
11:32:28.808 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:28.811 [Info] Writing postfixes
11:32:28.818 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Prefix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Postfix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)

11:32:28.821 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
11:32:28.825 [Info] Writing prefixes
11:32:28.829 [Info] Writing postfixes
11:32:28.837 [Info] Patching static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Prefix(BattleTech.Weapon w)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Postfix()

11:32:28.840 [Info] Running ILHook manipulator on static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
11:32:28.843 [Info] Writing prefixes
11:32:28.846 [Info] Writing postfixes
11:32:28.871 [Info] Patching static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DamageOrderUtility_ApplyDamageToAllLocations::Prefix(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)

11:32:28.875 [Info] Running ILHook manipulator on static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)
11:32:28.878 [Info] Writing prefixes
11:32:28.893 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:28.897 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
11:32:28.900 [Info] Writing postfixes
11:32:28.912 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackSequenceFire::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message, System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> ___sortedWeapons, int[][] ___numberOfShots, BattleTech.WeaponHitInfo?[][] ___weaponHitInfo)

11:32:28.915 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message)
11:32:28.919 [Info] Writing prefixes
11:32:28.939 [Info] Patching float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponHitInfo_ConsolidateInstability::Postfix(BattleTech.WeaponHitInfo& __instance, string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier, Single& __result)

11:32:28.942 [Info] Running ILHook manipulator on float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier)
11:32:28.945 [Info] Writing postfixes
11:32:28.953 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

11:32:28.957 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
11:32:28.960 [Info] Writing prefixes
11:32:29.065 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanUseAmmo_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechLabPanel_MechCanUseAmmo::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.AmmunitionBoxDef ammoBoxDef, Boolean& __result)

11:32:29.068 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
11:32:29.071 [Info] Writing prefixes
11:32:29.074 [Info] Writing postfixes
11:32:29.081 [Info] Patching void BattleTech.AttackDirector+AttackSequence::Cleanup() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_Cleanup::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

11:32:29.084 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::Cleanup()
11:32:29.087 [Info] Writing postfixes
11:32:29.097 [Info] Patching void BattleTech.CombatGameState::RebuildAllLists() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_RebuildAllLists::Postfix(BattleTech.CombatGameState __instance)

11:32:29.100 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::RebuildAllLists()
11:32:29.104 [Info] Writing postfixes
11:32:29.110 [Info] Patching void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Weapon_SetAmmoBoxes::Prefix(BattleTech.Weapon __instance, System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)

11:32:29.114 [Info] Running ILHook manipulator on void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)
11:32:29.117 [Info] Writing prefixes
11:32:29.127 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MechValidationRules_ValidateMechHasAppropriateAmmo::Prefix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)

11:32:29.131 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
11:32:29.135 [Info] Writing prefixes
11:32:29.146 [Info] Patching void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRepresentation_PlayWeaponEffect::Prefix(BattleTech.WeaponRepresentation __instance, BattleTech.WeaponHitInfo hitInfo)

11:32:29.149 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo)
11:32:29.153 [Info] Writing prefixes
11:32:29.161 [Info] Patching void BattleTech.WeaponRepresentation::ResetWeaponEffect() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponRepresentation_ResetWeaponEffect::Postfix(BattleTech.WeaponRepresentation __instance)

11:32:29.165 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::ResetWeaponEffect()
11:32:29.168 [Info] Writing postfixes
11:32:29.174 [Info] Patching static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_ShutdownCombatState::Postfix(BattleTech.CombatGameState __instance)

11:32:29.177 [Info] Running ILHook manipulator on static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI)
11:32:29.180 [Info] Writing postfixes
11:32:29.187 [Info] Patching virtual void MissileEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)

11:32:29.192 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
11:32:29.195 [Info] Writing prefixes
11:32:29.205 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Prefix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo weaponHitInfo)

11:32:29.208 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo)
11:32:29.210 [Info] Writing prefixes
11:32:29.219 [Info] Patching BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_CreateAttackSequence::Postfix(BattleTech.AttackDirector __instance, int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack, BattleTech.AttackDirector+AttackSequence& __result)

11:32:29.223 [Info] Running ILHook manipulator on BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack)
11:32:29.227 [Info] Writing postfixes
11:32:29.236 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

11:32:29.239 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
11:32:29.242 [Info] Writing postfixes
11:32:29.249 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

11:32:29.252 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
11:32:29.256 [Info] Writing postfixes
11:32:29.269 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:29.272 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:29.275 [Info] Writing postfixes
11:32:29.284 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

11:32:29.287 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
11:32:29.290 [Info] Writing postfixes
11:32:29.302 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.PilotableActorRepresentation_ReturnToNeutralFacing::Prefix(BattleTech.PilotableActorRepresentation __instance, bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

11:32:29.305 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
11:32:29.308 [Info] Writing prefixes
11:32:29.315 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)

11:32:29.318 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
11:32:29.321 [Info] Writing prefixes
11:32:29.331 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.333 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
11:32:29.336 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
11:32:29.342 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.350 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.354 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:29.357 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:29.363 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.374 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

11:32:29.377 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
11:32:29.381 [Info] Writing prefixes
11:32:29.393 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

11:32:29.397 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
11:32:29.400 [Info] Writing prefixes
11:32:29.412 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)

11:32:29.415 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable)
11:32:29.418 [Info] Writing prefixes
11:32:29.422 [Info] Writing postfixes
11:32:29.434 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatSelectionHandler_TrySelectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, bool manualSelection)

11:32:29.437 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection)
11:32:29.440 [Info] Writing prefixes
11:32:29.458 [Info] Patching void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUD_OnAttackEnd::Postfix(BattleTech.UI.CombatHUD __instance, MessageCenterMessage message)

11:32:29.462 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message)
11:32:29.466 [Info] Writing postfixes
11:32:29.473 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnitTerrainAttack::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly, bool __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.476 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
11:32:29.480 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
11:32:29.483 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.486 [Info] Writing prefixes
11:32:29.500 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_ShowLineToTarget::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)

11:32:29.504 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)
11:32:29.506 [Info] Writing prefixes
11:32:29.515 [Info] Patching bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.FiringPreviewManager_HasLOS::Postfix(BattleTech.FiringPreviewManager __instance, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies, Boolean& __result)

11:32:29.518 [Info] Running ILHook manipulator on bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies)
11:32:29.522 [Info] Writing postfixes
11:32:29.531 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

11:32:29.534 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
11:32:29.538 [Info] Writing postfixes
11:32:29.545 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)

11:32:29.548 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:29.551 [Info] Writing prefixes
11:32:29.554 [Info] Writing postfixes
11:32:29.574 [Info] Patching virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.SelectionStateCommandTargetSinglePoint_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateCommandTargetSinglePoint __instance, UnityEngine.Vector3 worldPos)

11:32:29.578 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos)
11:32:29.581 [Info] Writing postfixes
11:32:29.594 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDActionButton_ActivateCommandAbility::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string teamGUID, UnityEngine.Vector3 targetPosition)

11:32:29.599 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition)
11:32:29.602 [Info] Writing postfixes
11:32:29.615 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:29.619 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
11:32:29.623 [Info] Writing postfixes
11:32:29.644 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:29.648 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
11:32:29.651 [Info] Writing postfixes
11:32:29.660 [Info] Patching static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.665 [Info] Running ILHook manipulator on static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
11:32:29.668 [Info] Transpiling static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
11:32:29.671 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.683 [Info] Patching void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_CalcAlphaStrikesRem_Patch::Prefix(BattleTech.AbstractActor __instance)

11:32:29.686 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining()
11:32:29.690 [Info] Writing prefixes
11:32:29.707 [Info] Patching void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.710 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
11:32:29.713 [Info] Transpiling void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
11:32:29.718 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.728 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.732 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
11:32:29.735 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
11:32:29.739 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.751 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.756 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
11:32:29.760 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
11:32:29.765 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.776 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.779 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
11:32:29.783 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
11:32:29.786 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.801 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.805 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:29.808 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:29.815 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.829 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.833 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:29.836 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:29.840 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.843 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.855 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.858 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
11:32:29.862 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
11:32:29.866 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.873 [Info] Patching void BattleTech.Weapon::EnableWeapon() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.877 [Info] Running ILHook manipulator on void BattleTech.Weapon::EnableWeapon()
11:32:29.881 [Info] Transpiling void BattleTech.Weapon::EnableWeapon()
11:32:29.885 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.893 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:29.897 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
11:32:29.900 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
11:32:29.904 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:29.912 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

11:32:29.916 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
11:32:29.919 [Info] Writing prefixes
11:32:29.923 [Info] Writing postfixes
11:32:29.931 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init0::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, Localize.Text title, bool isPrimary, bool useOnPointer)

11:32:29.934 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer)
11:32:29.937 [Info] Writing postfixes
11:32:29.951 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init1::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)

11:32:29.956 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)
11:32:29.959 [Info] Writing postfixes
11:32:29.977 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

11:32:29.980 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
11:32:29.983 [Info] Writing postfixes
11:32:29.991 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerExit::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

11:32:29.994 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
11:32:29.998 [Info] Writing postfixes
11:32:30.004 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)

11:32:30.008 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
11:32:30.011 [Info] Writing postfixes
11:32:30.017 [Info] Patching void BattleTech.VehicleDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

11:32:30.021 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
11:32:30.025 [Info] Writing postfixes
11:32:30.032 [Info] Patching void BattleTech.TurretDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurretDef_Refresh::Postfix(BattleTech.TurretDef __instance)

11:32:30.035 [Info] Running ILHook manipulator on void BattleTech.TurretDef::Refresh()
11:32:30.038 [Info] Writing postfixes
11:32:30.045 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_SetAllWeaponsArc_Debug::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& weapons, Int32[]& ___MultWeaponShaderVectorInts, Int32[]& ___MultWeaponShaderStrengthInts, Int32& ___MultiWeaponNumberInt)

11:32:30.048 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons)
11:32:30.051 [Info] Writing prefixes
11:32:30.065 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::OnAddToStack() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionStateMove_OnAddToStack_Debug::Prefix(BattleTech.UI.SelectionStateMove __instance)

11:32:30.069 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::OnAddToStack()
11:32:30.072 [Info] Writing prefixes
11:32:30.083 [Info] Patching void BattleTech.CameraControl::UpdatePlayerControl() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Prefix(Boolean& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:30.086 [Info] Running ILHook manipulator on void BattleTech.CameraControl::UpdatePlayerControl()
11:32:30.090 [Info] Transpiling void BattleTech.CameraControl::UpdatePlayerControl()
11:32:30.103 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:30.108 [Info] Writing prefixes
11:32:30.132 [Info] Patching void BattleTech.UI.CombatSelectionHandler::ProcessInput() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:30.136 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::ProcessInput()
11:32:30.138 [Info] Transpiling void BattleTech.UI.CombatSelectionHandler::ProcessInput()
11:32:30.148 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:30.252 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

11:32:30.255 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
11:32:30.259 [Info] Writing postfixes
11:32:30.281 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
3 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

11:32:30.287 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
11:32:30.292 [Info] Writing prefixes
11:32:30.296 [Info] Writing postfixes
11:32:30.308 [Info] Patching void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_SortSelectedWeapons::Postfix(BattleTech.AttackDirector+AttackSequence __instance, System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___sortedWeapons)

11:32:30.312 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons()
11:32:30.316 [Info] Writing postfixes
11:32:30.328 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)

11:32:30.332 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
11:32:30.335 [Info] Writing postfixes
11:32:30.352 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)

11:32:30.356 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList()
11:32:30.359 [Info] Writing prefixes
11:32:30.363 [Info] Writing postfixes
11:32:30.432 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:30.435 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:30.438 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:30.441 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:30.444 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:30.447 [Info] Writing postfixes
11:32:30.459 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

11:32:30.463 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
11:32:30.467 [Info] Writing postfixes
11:32:30.478 [Info] Patching virtual void BattleTech.UI.UIModule::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.UIModule_OnAddedToHierarchy::Postfix(BattleTech.UI.UIModule __instance)

11:32:30.481 [Info] Running ILHook manipulator on virtual void BattleTech.UI.UIModule::OnAddedToHierarchy()
11:32:30.484 [Info] Writing postfixes
11:32:30.493 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

11:32:30.497 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
11:32:30.500 [Info] Writing postfixes
11:32:30.513 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

11:32:30.516 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
11:32:30.519 [Info] Writing prefixes
11:32:30.529 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

11:32:30.532 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
11:32:30.535 [Info] Writing prefixes
11:32:30.543 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

11:32:30.547 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
11:32:30.550 [Info] Writing prefixes
11:32:30.553 [Info] Writing postfixes
11:32:30.565 [Info] Patching uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WwiseManager_PostEventByName::Prefix(WwiseManager __instance, string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)

11:32:30.568 [Info] Running ILHook manipulator on uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
11:32:30.571 [Info] Writing prefixes
11:32:30.579 [Info] Patching float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AttackSequence_GetRandomNumberCycle::Prefix(BattleTech.AttackDirector+AttackSequence __instance, int groupIndex, int weaponIndex, Int32[][]& ___randomCacheValuesUsed, Single[][][]& ___randomCache)

11:32:30.582 [Info] Running ILHook manipulator on float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex)
11:32:30.586 [Info] Writing prefixes
11:32:30.596 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

11:32:30.600 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:30.603 [Info] Writing prefixes
11:32:30.606 [Info] Writing postfixes
11:32:30.629 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatString::Prefix(BattleTech.SimGameState __instance, string id, string type, bool damaged)

11:32:30.633 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged)
11:32:30.636 [Info] Writing prefixes
11:32:30.643 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatType::Prefix(BattleTech.SimGameState __instance, string id, Type type, bool damaged)

11:32:30.647 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged)
11:32:30.650 [Info] Writing prefixes
11:32:30.658 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Prefix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, string text, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Postfix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, String& __state)

11:32:30.661 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
11:32:30.664 [Info] Writing prefixes
11:32:30.668 [Info] Writing postfixes
11:32:30.674 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)

11:32:30.677 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
11:32:30.681 [Info] Writing prefixes
11:32:30.684 [Info] Writing postfixes
11:32:30.691 [Info] Patching System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Shop_GetAllInventoryShopItems::Postfix(BattleTech.Shop __instance, System.Collections.Generic.List`1[[BattleTech.ShopDefItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:30.695 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems()
11:32:30.699 [Info] Writing postfixes
11:32:30.712 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SG_Shop_Screen_AddShopInventory::Prefix(BattleTech.UI.SG_Shop_Screen __instance, BattleTech.Shop shop, bool ___isInBuyingState, BattleTech.Data.DataManager ___dm)
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

11:32:30.714 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
11:32:30.717 [Info] Writing prefixes
11:32:30.721 [Info] Writing postfixes
11:32:30.731 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
1 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)

11:32:30.734 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
11:32:30.737 [Info] Writing prefixes
11:32:30.741 [Info] Writing postfixes
11:32:30.752 [Info] Patching virtual void BattleTech.AmmunitionBox::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AmmunitionBox_InitStats::Postfix(BattleTech.AmmunitionBox __instance)

11:32:30.755 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::InitStats()
11:32:30.759 [Info] Writing postfixes
11:32:30.767 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)
* static void CustAmmoCategories.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance)

11:32:30.770 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
11:32:30.773 [Info] Writing prefixes
11:32:30.779 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

11:32:30.783 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
11:32:30.785 [Info] Writing prefixes
11:32:30.796 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceMechEquipmentList_SetLoadout::Prefix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.MechDef& ___activeMech, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___allComponents, BattleTech.Data.DataManager ___dataManager, BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location, BattleTech.UI.UIColor& __state)
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText headerLabel)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:30.800 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
11:32:30.803 [Info] Transpiling void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
11:32:30.807 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:30.810 [Info] Writing prefixes
11:32:30.814 [Info] Writing postfixes
11:32:30.823 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)
* static void CustAmmoCategories.SharedVisibilityCache_RebuildCache::Postfix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.TMProWrapper.LocalizableText& ___nameText)

11:32:30.826 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
11:32:30.830 [Info] Writing postfixes
11:32:30.847 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
3 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:30.850 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:30.853 [Info] Writing prefixes
11:32:30.858 [Info] Writing postfixes
11:32:30.905 [Info] Patching BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_AddHistoryEvent::Postfix(BattleTech.StatCollection __instance, string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)

11:32:30.909 [Info] Running ILHook manipulator on BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)
11:32:30.913 [Info] Writing postfixes
11:32:30.924 [Info] Patching bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_RemoveHistoryEvent::Postfix(BattleTech.StatCollection __instance, BattleTech.Statistic stat, int eventUID, bool skipLogging)

11:32:30.929 [Info] Running ILHook manipulator on bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging)
11:32:30.932 [Info] Writing postfixes
11:32:30.942 [Info] Patching void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
1 postfixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)

11:32:30.946 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
11:32:30.949 [Info] Writing prefixes
11:32:30.952 [Info] Writing postfixes
11:32:30.961 [Info] Patching BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAttackDirection::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.AttackDirection& __result)

11:32:30.965 [Info] Running ILHook manipulator on BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target)
11:32:30.968 [Info] Writing postfixes
11:32:30.974 [Info] Patching virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SelectionStateFire_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

11:32:30.977 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot()
11:32:30.980 [Info] Writing postfixes
11:32:30.987 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)
* static void CustAmmoCategories.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

11:32:30.991 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
11:32:30.995 [Info] Writing postfixes
11:32:31.004 [Info] Patching void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Briefing_InitializeContractComplete::Prefix(BattleTech.UI.Briefing __instance, MessageCenterMessage message)

11:32:31.006 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message)
11:32:31.009 [Info] Writing prefixes
11:32:31.021 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

11:32:31.025 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
11:32:31.029 [Info] Writing postfixes
11:32:31.036 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_InitData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)

11:32:31.039 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)
11:32:31.042 [Info] Writing postfixes
11:32:31.050 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)

11:32:31.053 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
11:32:31.056 [Info] Writing postfixes
11:32:31.068 [Info] Patching virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_EjectPilot::Postfix(BattleTech.AbstractActor __instance)

11:32:31.071 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent)
11:32:31.075 [Info] Writing postfixes
11:32:31.082 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

11:32:31.085 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
11:32:31.088 [Info] Writing prefixes
11:32:31.092 [Info] Writing postfixes
11:32:31.102 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledMech::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

11:32:31.105 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech()
11:32:31.108 [Info] Writing prefixes
11:32:31.115 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledVehicle::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

11:32:31.119 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle()
11:32:31.122 [Info] Writing prefixes
11:32:31.135 [Info] Patching static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Prefix(BattleTech.SimGameResultAction action, object additionalObject)
1 postfixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Postfix(BattleTech.SimGameResultAction action, object additionalObject)

11:32:31.138 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject)
11:32:31.142 [Info] Writing prefixes
11:32:31.144 [Info] Writing postfixes
11:32:31.215 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

11:32:31.218 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
11:32:31.221 [Info] Writing postfixes
11:32:31.234 [Info] Patching bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameEventTracker_CheckRoll::Postfix(BattleTech.SimGameEventTracker __instance, bool incrementOnFailure, float randomRoll, Boolean& __result)

11:32:31.237 [Info] Running ILHook manipulator on bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll)
11:32:31.240 [Info] Writing postfixes
11:32:31.249 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)

11:32:31.252 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
11:32:31.255 [Info] Writing postfixes
11:32:31.268 [Info] Patching void BattleTech.SGTravelManager::HandleNextTravelStep() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:31.271 [Info] Running ILHook manipulator on void BattleTech.SGTravelManager::HandleNextTravelStep()
11:32:31.273 [Info] Transpiling void BattleTech.SGTravelManager::HandleNextTravelStep()
11:32:31.278 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:31.289 [Info] Patching void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:31.292 [Info] Running ILHook manipulator on void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
11:32:31.300 [Info] Transpiling void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
11:32:31.305 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:31.317 [Info] Patching virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_Init::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.UI.CombatHUD HUD)

11:32:31.320 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD)
11:32:31.324 [Info] Writing postfixes
11:32:31.334 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

11:32:31.337 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
11:32:31.340 [Info] Writing postfixes
11:32:31.442 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
3 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

11:32:31.445 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:31.448 [Info] Writing prefixes
11:32:31.451 [Info] Writing postfixes
11:32:31.468 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)
* static void CustAmmoCategories.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance, BattleTech.Data.LoadRequest batch)

11:32:31.472 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
11:32:31.475 [Info] Writing postfixes
11:32:31.481 [Info] Patching void BattleTech.Data.SVGCache::Clear() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SVGCache_Clear::Prefix(BattleTech.Data.SVGCache __instance)

11:32:31.484 [Info] Running ILHook manipulator on void BattleTech.Data.SVGCache::Clear()
11:32:31.488 [Info] Writing prefixes
11:32:31.497 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)

11:32:31.500 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
11:32:31.503 [Info] Writing postfixes
11:32:31.515 [Info] Patching void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_SetCompanyCrest::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState ___simState)

11:32:31.518 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId)
11:32:31.521 [Info] Writing postfixes
11:32:31.528 [Info] Patching void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_Init::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState simGame)

11:32:31.532 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame)
11:32:31.534 [Info] Writing postfixes
11:32:31.542 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

11:32:31.545 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
11:32:31.548 [Info] Writing postfixes
11:32:31.558 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

11:32:31.562 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
11:32:31.566 [Info] Writing postfixes
11:32:31.577 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

11:32:31.580 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
11:32:31.583 [Info] Writing postfixes
11:32:31.593 [Info] Patching UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.EncounterLayerData_GetEncounterBoundaryTexture::Postfix(BattleTech.EncounterLayerData __instance, UnityEngine.Texture2D& __result)

11:32:31.597 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture()
11:32:31.600 [Info] Writing postfixes
11:32:31.614 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

11:32:31.618 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
11:32:31.621 [Info] Writing postfixes
11:32:31.635 [Info] Patching bool BattleTech.Weapon::get_CanFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_CanFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

11:32:31.638 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_CanFire()
11:32:31.641 [Info] Writing postfixes
11:32:31.648 [Info] Patching void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DefendXUnitsObjective_Tick::Prefix(BattleTech.Designed.DefendXUnitsObjective __instance, MessageCenterMessage message)

11:32:31.651 [Info] Running ILHook manipulator on void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message)
11:32:31.655 [Info] Writing prefixes
11:32:31.664 [Info] Patching void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.TimerObjective_AdvanceTimer::Prefix(BattleTech.Designed.TimerObjective __instance, MessageCenterMessage message)

11:32:31.667 [Info] Running ILHook manipulator on void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message)
11:32:31.670 [Info] Writing prefixes
11:32:31.679 [Info] Patching void BattleTech.TurnDirector::FinishBeginRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.TurnDirector_FinishBeginRound::Postfix(BattleTech.TurnDirector __instance)

11:32:31.681 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::FinishBeginRound()
11:32:31.684 [Info] Writing postfixes
11:32:31.694 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

11:32:31.699 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
11:32:31.701 [Info] Writing postfixes
11:32:31.715 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CombatHUDWeaponSlot_UpdateTooltipStrings::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target)

11:32:31.718 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target)
11:32:31.721 [Info] Writing prefixes
11:32:31.731 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)

11:32:31.734 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:31.737 [Info] Writing prefixes
11:32:31.741 [Info] Writing postfixes
11:32:31.752 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)

11:32:31.755 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
11:32:31.759 [Info] Writing prefixes
11:32:31.763 [Info] Writing postfixes
11:32:31.772 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

11:32:31.775 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
11:32:31.778 [Info] Writing prefixes
11:32:31.794 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:31.798 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:31.802 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:31.806 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:31.809 [Info] Writing postfixes
11:32:31.825 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:31.828 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:31.832 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:31.836 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:31.839 [Info] Writing postfixes
11:32:31.850 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:31.853 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:31.857 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:31.861 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:31.865 [Info] Writing postfixes
11:32:31.873 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)

11:32:31.876 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:31.879 [Info] Writing prefixes
11:32:31.888 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.JammingRealizer::Postfix(BattleTech.Weapon __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:31.892 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
11:32:31.896 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
11:32:31.899 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:31.902 [Info] Writing postfixes
11:32:31.909 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:31.913 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:31.917 [Info] Writing prefixes
11:32:31.921 [Info] Writing postfixes
11:32:31.935 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Prefix(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Postfix(BattleTech.Weapon __instance, BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)

11:32:31.939 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
11:32:31.943 [Info] Writing prefixes
11:32:31.947 [Info] Writing postfixes
11:32:32.065 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Vehicle::Postfix(BattleTech.Weapon __instance, BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)

11:32:32.070 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)
11:32:32.073 [Info] Writing postfixes
11:32:32.082 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Turret::Postfix(BattleTech.Weapon __instance, BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)

11:32:32.085 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)
11:32:32.089 [Info] Writing postfixes
11:32:32.098 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

11:32:32.101 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
11:32:32.104 [Info] Writing postfixes
11:32:32.111 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_DisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon value)

11:32:32.115 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value)
11:32:32.117 [Info] Writing postfixes
11:32:32.124 [Info] Patching void BattleTech.AbstractActor::InitAbilities(bool ModifyStats) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_InitAbilities::Postfix(BattleTech.AbstractActor __instance)

11:32:32.128 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbilities(bool ModifyStats)
11:32:32.132 [Info] Writing postfixes
11:32:32.143 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

11:32:32.146 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
11:32:32.150 [Info] Writing prefixes
11:32:32.153 [Info] Writing postfixes
11:32:32.164 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayPreFire::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

11:32:32.168 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
11:32:32.171 [Info] Writing prefixes
11:32:32.174 [Info] Writing postfixes
11:32:32.183 [Info] Patching virtual void WeaponEffect::PlayImpact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpact::Prefix(WeaponEffect __instance)

11:32:32.186 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpact()
11:32:32.190 [Info] Writing prefixes
11:32:32.204 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

11:32:32.207 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
11:32:32.210 [Info] Writing prefixes
11:32:32.218 [Info] Patching virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Prefix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Postfix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)

11:32:32.221 [Info] Running ILHook manipulator on virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage)
11:32:32.224 [Info] Writing prefixes
11:32:32.228 [Info] Writing postfixes
11:32:32.236 [Info] Patching virtual void MissileEffect::PlayProjectile() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Prefix(MissileEffect __instance)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Postfix(MissileEffect __instance, int ___hitIndex)

11:32:32.239 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
11:32:32.242 [Info] Writing prefixes
11:32:32.245 [Info] Writing postfixes
11:32:32.253 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)

11:32:32.257 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
11:32:32.260 [Info] Writing prefixes
11:32:32.271 [Info] Patching void MissileEffect::GenerateMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateMissilePath::Prefix(MissileEffect __instance)

11:32:32.275 [Info] Running ILHook manipulator on void MissileEffect::GenerateMissilePath()
11:32:32.278 [Info] Writing prefixes
11:32:32.289 [Info] Patching void MissileEffect::GenerateIndirectMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateIndirectMissilePath::Prefix(MissileEffect __instance)

11:32:32.292 [Info] Running ILHook manipulator on void MissileEffect::GenerateIndirectMissilePath()
11:32:32.296 [Info] Writing prefixes
11:32:32.308 [Info] Patching virtual void MissileEffect::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_Update::Postfix(MissileEffect __instance)

11:32:32.311 [Info] Running ILHook manipulator on virtual void MissileEffect::Update()
11:32:32.315 [Info] Writing postfixes
11:32:32.324 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfoAMS::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

11:32:32.328 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo()
11:32:32.331 [Info] Writing postfixes
11:32:32.341 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:32.344 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:32.347 [Info] Writing prefixes
11:32:32.351 [Info] Writing postfixes
11:32:32.361 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Postfix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo?[][] allHitInfo)

11:32:32.365 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo)
11:32:32.368 [Info] Writing postfixes
11:32:32.378 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

11:32:32.382 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
11:32:32.385 [Info] Writing prefixes
11:32:32.388 [Info] Writing postfixes
11:32:32.411 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

11:32:32.415 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
11:32:32.417 [Info] Writing prefixes
11:32:32.434 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)

11:32:32.437 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
11:32:32.440 [Info] Writing prefixes
11:32:32.448 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)

11:32:32.451 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
11:32:32.454 [Info] Writing postfixes
11:32:32.465 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.ClusteredShotRandomCacheEnabler::Prefix(BattleTech.AttackDirector+AttackSequence __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:32.468 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
11:32:32.470 [Info] Transpiling void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
11:32:32.473 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:32.477 [Info] Writing prefixes
11:32:32.486 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:32.490 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:32.493 [Info] Writing postfixes
11:32:32.503 [Info] Patching static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AmmoCategoryEnumeration_GetAmmoCategoryByName::Postfix(string name, BattleTech.AmmoCategoryValue& __result)

11:32:32.506 [Info] Running ILHook manipulator on static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name)
11:32:32.509 [Info] Writing postfixes
11:32:32.515 [Info] Patching virtual bool BattleTech.Mech::get_CanSprint() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_CanSprint::Postfix(BattleTech.Mech __instance, Boolean& __result)

11:32:32.518 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_CanSprint()
11:32:32.523 [Info] Writing postfixes
11:32:32.531 [Info] Patching void BattleTech.UI.CombatHUD::HandleMissionComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUD_HandleMissionComplete::Prefix(BattleTech.UI.CombatHUD __instance)

11:32:32.534 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::HandleMissionComplete()
11:32:32.536 [Info] Writing prefixes
11:32:32.542 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)

11:32:32.544 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
11:32:32.548 [Info] Writing postfixes
11:32:32.554 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)

11:32:32.558 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
11:32:32.562 [Info] Writing prefixes
11:32:32.571 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
* static void CustAmmoCategoriesPatches.WeaponRepresentation_InitAMS::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

11:32:32.575 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
11:32:32.578 [Info] Writing postfixes
11:32:32.589 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

11:32:32.593 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
11:32:32.596 [Info] Writing prefixes
11:32:32.606 [Info] Patching int BattleTech.Mech::get_AdjustedHeatsinkCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_HeatSinkCapacity::Postfix(BattleTech.Mech __instance, Int32& __result)

11:32:32.609 [Info] Running ILHook manipulator on int BattleTech.Mech::get_AdjustedHeatsinkCapacity()
11:32:32.612 [Info] Writing postfixes
11:32:32.621 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

11:32:32.625 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
11:32:32.628 [Info] Writing prefixes
11:32:32.639 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_OnNewRound::Postfix(BattleTech.Mech __instance, int round)

11:32:32.642 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round)
11:32:32.645 [Info] Writing postfixes
11:32:32.651 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)

11:32:32.655 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
11:32:32.658 [Info] Writing prefixes
11:32:32.667 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)

11:32:32.669 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
11:32:32.672 [Info] Writing prefixes
11:32:32.679 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)

11:32:32.682 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
11:32:32.685 [Info] Writing prefixes
11:32:32.693 [Info] Patching void BattleTech.Mech::AddSprintHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddSprintHeat::Prefix(BattleTech.Mech __instance)

11:32:32.696 [Info] Running ILHook manipulator on void BattleTech.Mech::AddSprintHeat()
11:32:32.699 [Info] Writing prefixes
11:32:32.705 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)

11:32:32.708 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
11:32:32.711 [Info] Writing prefixes
11:32:32.717 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)

11:32:32.719 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
11:32:32.724 [Info] Writing prefixes
11:32:32.731 [Info] Patching void BattleTech.Mech::AddEnvironmentHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEnvironmentHeat::Prefix(BattleTech.Mech __instance)

11:32:32.735 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEnvironmentHeat()
11:32:32.738 [Info] Writing prefixes
11:32:32.747 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:32.750 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
11:32:32.752 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
11:32:32.757 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:32.766 [Info] Patching BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.Mech_GetHeatSequence::Prefix(BattleTech.Mech __instance, int rootSequenceGUID, Boolean& performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)

11:32:32.769 [Info] Running ILHook manipulator on BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)
11:32:32.772 [Info] Writing prefixes
11:32:32.778 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)

11:32:32.782 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
11:32:32.784 [Info] Writing postfixes
11:32:32.794 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForVisibility::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

11:32:32.797 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility()
11:32:32.801 [Info] Writing postfixes
11:32:32.807 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForTarget::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

11:32:32.809 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget()
11:32:32.812 [Info] Writing postfixes
11:32:32.819 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:32.823 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
11:32:32.826 [Info] Writing postfixes
11:32:32.841 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
3 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:32.844 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:32.847 [Info] Writing prefixes
11:32:32.851 [Info] Writing postfixes
11:32:32.862 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactWD::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

11:32:32.867 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
11:32:32.869 [Info] Writing prefixes
11:32:32.872 [Info] Writing postfixes
11:32:32.891 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSticky() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:32.895 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSticky()
11:32:32.899 [Info] Writing prefixes
11:32:32.902 [Info] Writing postfixes
11:32:32.910 [Info] Patching virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Init::Prefix(BattleTech.AbstractActor __instance)

11:32:32.913 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells)
11:32:32.916 [Info] Writing prefixes
11:32:32.923 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)

11:32:32.927 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
11:32:32.932 [Info] Writing prefixes
11:32:32.940 [Info] Patching virtual void BattleTech.Turret::InitStats() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Turret __instance)
* static void CustAmmoCategoriesPatches.Turret_InitStats::Prefix(BattleTech.Turret __instance)

11:32:32.943 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
11:32:32.946 [Info] Writing prefixes
11:32:32.960 [Info] Patching void BattleTech.AbstractActor::ReapplyDesignMasks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_ReapplyDesignMasks::Prefix(BattleTech.AbstractActor __instance)

11:32:32.965 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ReapplyDesignMasks()
11:32:32.968 [Info] Writing prefixes
11:32:32.976 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

11:32:32.980 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
11:32:32.983 [Info] Writing prefixes
11:32:32.986 [Info] Writing postfixes
11:32:32.997 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

11:32:33.000 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos)
11:32:33.003 [Info] Writing prefixes
11:32:33.007 [Info] Writing postfixes
11:32:33.015 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

11:32:33.017 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
11:32:33.020 [Info] Writing prefixes
11:32:33.024 [Info] Writing postfixes
11:32:33.032 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

11:32:33.035 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
11:32:33.038 [Info] Writing prefixes
11:32:33.040 [Info] Writing postfixes
11:32:33.047 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

11:32:33.050 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
11:32:33.052 [Info] Writing prefixes
11:32:33.055 [Info] Writing postfixes
11:32:33.064 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

11:32:33.068 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
11:32:33.070 [Info] Writing prefixes
11:32:33.073 [Info] Writing postfixes
11:32:33.080 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

11:32:33.083 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
11:32:33.086 [Info] Writing prefixes
11:32:33.089 [Info] Writing postfixes
11:32:33.099 [Info] Patching void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID)
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Postfix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef mask, int stackItemUID)

11:32:33.103 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID)
11:32:33.107 [Info] Writing prefixes
11:32:33.110 [Info] Writing postfixes
11:32:33.119 [Info] Patching virtual void BattleTech.DesignMaskDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.DesignMaskDef_fromJSON::Prefix(BattleTech.VehicleChassisDef __instance, String& json)

11:32:33.123 [Info] Running ILHook manipulator on virtual void BattleTech.DesignMaskDef::FromJSON(string json)
11:32:33.126 [Info] Writing prefixes
11:32:33.136 [Info] Patching void BattleTech.TurnDirector::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_Update::Prefix(BattleTech.TurnDirector __instance, bool ___needsToEndRound)

11:32:33.139 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::Update()
11:32:33.142 [Info] Writing prefixes
11:32:33.153 [Info] Patching bool BattleTech.TurnDirector::CanAdvanceTurns() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.TurnDirector_CanAdvanceTurns::Postfix(BattleTech.TurnDirector __instance, Boolean& __result)

11:32:33.156 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::CanAdvanceTurns()
11:32:33.160 [Info] Writing postfixes
11:32:33.173 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

11:32:33.176 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
11:32:33.179 [Info] Writing postfixes
11:32:33.209 [Info] Patching void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ElementManager_RefreshCommandBufferInt::Prefix(BattleTech.Rendering.UI.ElementManager __instance, UnityEngine.Rendering.CommandBuffer& ____uiCommandBuffer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIBleep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___bleepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UISweep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.BTUIDecal, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepDecalContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UICreep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___creepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIMovementDot, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___dotContainer, UnityEngine.Matrix4x4[]& ___normalTrs, UnityEngine.Matrix4x4[]& ___forestTrs, UnityEngine.Matrix4x4[]& ___waterTrs, UnityEngine.Matrix4x4[]& ___roughTrs, UnityEngine.Matrix4x4[]& ___roadTrs, UnityEngine.Matrix4x4[]& ___specialTrs, UnityEngine.Matrix4x4[]& ___dangerousTrs, Int32& ___log100Count)

11:32:33.212 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt()
11:32:33.215 [Info] Writing prefixes
11:32:33.328 [Info] Patching void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_FireShells::Postfix(MissileEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, bool isIndirect)

11:32:33.332 [Info] Running ILHook manipulator on void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect)
11:32:33.335 [Info] Writing postfixes
11:32:33.343 [Info] Patching void WeaponEffect::PublishWeaponCompleteMessage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Postfix(WeaponEffect __instance)

11:32:33.347 [Info] Running ILHook manipulator on void WeaponEffect::PublishWeaponCompleteMessage()
11:32:33.350 [Info] Writing prefixes
11:32:33.353 [Info] Writing postfixes
11:32:33.361 [Info] Patching void MissileLauncherEffect::SetupMissiles() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileLauncherEffect_SetupMissiles::Postfix(MissileLauncherEffect __instance, bool ___isIndirect)

11:32:33.365 [Info] Running ILHook manipulator on void MissileLauncherEffect::SetupMissiles()
11:32:33.369 [Info] Writing postfixes
11:32:33.377 [Info] Patching virtual void MissileLauncherEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_Update::Prefix(MissileLauncherEffect __instance)

11:32:33.381 [Info] Running ILHook manipulator on virtual void MissileLauncherEffect::Update()
11:32:33.384 [Info] Writing prefixes
11:32:33.392 [Info] Patching virtual void WeaponEffect::InitProjectile() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_InitProjectile::Postfix(WeaponEffect __instance)

11:32:33.396 [Info] Running ILHook manipulator on virtual void WeaponEffect::InitProjectile()
11:32:33.400 [Info] Writing postfixes
11:32:33.411 [Info] Patching void MissileLauncherEffect::ClearMissiles() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_ClearMissiles::Prefix(MissileLauncherEffect __instance)

11:32:33.414 [Info] Running ILHook manipulator on void MissileLauncherEffect::ClearMissiles()
11:32:33.417 [Info] Writing prefixes
11:32:33.424 [Info] Patching virtual void MissileEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_OnComplete::Postfix(MissileEffect __instance)

11:32:33.430 [Info] Running ILHook manipulator on virtual void MissileEffect::OnComplete()
11:32:33.434 [Info] Writing postfixes
11:32:33.441 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategoriesPatches.MissileEffect_DestroyFlimsyObjects::Prefix(MissileEffect __instance, int ___hitIndex)

11:32:33.444 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
11:32:33.447 [Info] Writing prefixes
11:32:33.456 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)
* static void CustAmmoCategoriesPatches.MissileEffect_PlayImpact::Postfix(MissileEffect __instance, int ___hitIndex)

11:32:33.459 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
11:32:33.463 [Info] Writing postfixes
11:32:33.475 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)
* static bool CustAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName, int ___hitIndex, AkGameObj ___projectileAudioObject, UnityEngine.Vector3 ___endPos, UnityEngine.Vector3 ___preFireEndPos, bool ___isSRM)

11:32:33.477 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
11:32:33.480 [Info] Writing prefixes
11:32:33.490 [Info] Patching void MissileLauncherEffect::FireNextMissile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_FireNextMissile::Prefix(MissileLauncherEffect __instance, int ___hitIndex, Int32& ___emitterIndex, AkGameObj ___parentAudioObject)

11:32:33.494 [Info] Running ILHook manipulator on void MissileLauncherEffect::FireNextMissile()
11:32:33.498 [Info] Writing prefixes
11:32:33.505 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

11:32:33.508 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
11:32:33.511 [Info] Writing postfixes
11:32:33.517 [Info] Patching void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_CompleteOrders::Prefix(BattleTech.ActorMovementSequence __instance, System.Collections.Generic.List`1[[BattleTech.WayPoint, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& waypoints, UnityEngine.Vector3& finalHeading, bool sprinting, BattleTech.ICombatant& meleeTarget)

11:32:33.521 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget)
11:32:33.525 [Info] Writing prefixes
11:32:33.539 [Info] Patching void BattleTech.ActorMovementSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Update::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:33.542 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Update()
11:32:33.545 [Info] Writing postfixes
11:32:33.560 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:33.564 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
11:32:33.567 [Info] Writing postfixes
11:32:33.582 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:33.585 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
11:32:33.588 [Info] Writing postfixes
11:32:33.599 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

11:32:33.602 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
11:32:33.606 [Info] Writing prefixes
11:32:33.614 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:33.618 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
11:32:33.620 [Info] Writing postfixes
11:32:33.631 [Info] Patching virtual void BattleTech.MechJumpSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechJumpSequence_CompleteOrders::Postfix(BattleTech.MechJumpSequence __instance)

11:32:33.634 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::CompleteOrders()
11:32:33.638 [Info] Writing postfixes
11:32:33.646 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

11:32:33.649 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
11:32:33.652 [Info] Writing postfixes
11:32:33.661 [Info] Patching void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.SGEventPanel_Init::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameState sim)

11:32:33.665 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim)
11:32:33.667 [Info] Writing prefixes
11:32:33.676 [Info] Patching void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_OnOptionSelected::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameEventOption option)

11:32:33.679 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option)
11:32:33.682 [Info] Writing prefixes
11:32:33.691 [Info] Patching void BattleTech.UI.SGEventPanel::Dismiss() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_Dismiss::Prefix(BattleTech.UI.SGEventPanel __instance)

11:32:33.694 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Dismiss()
11:32:33.698 [Info] Writing prefixes
11:32:33.705 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:33.708 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
11:32:33.711 [Info] Writing postfixes
11:32:33.720 [Info] Patching virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDInfoSidePanel_Update::Prefix(BattleTech.UI.CombatHUDInfoSidePanel __instance, Boolean& ___shownForSingleFrame)

11:32:33.725 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update()
11:32:33.728 [Info] Writing prefixes
11:32:33.738 [Info] Patching void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_OnActorHovered::Postfix(BattleTech.UI.CombatHUD __instance)

11:32:33.741 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message)
11:32:33.744 [Info] Writing postfixes
11:32:33.751 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedHeatInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

11:32:33.753 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo()
11:32:33.756 [Info] Writing postfixes
11:32:33.764 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedStabilityInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

11:32:33.768 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo()
11:32:33.770 [Info] Writing postfixes
11:32:33.779 [Info] Patching void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MoveStatusPreview_DisplayPreviewStatus::Prefix(BattleTech.UI.MoveStatusPreview __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)

11:32:33.782 [Info] Running ILHook manipulator on void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)
11:32:33.784 [Info] Writing prefixes
11:32:33.802 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:33.805 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target)
11:32:33.808 [Info] Writing postfixes
11:32:33.816 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

11:32:33.819 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
11:32:33.822 [Info] Writing postfixes
11:32:33.835 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

11:32:33.838 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
11:32:33.841 [Info] Writing postfixes
11:32:33.848 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

11:32:33.851 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
11:32:33.854 [Info] Writing postfixes
11:32:33.865 [Info] Patching virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_DependenciesLoaded::Prefix(BattleTech.WeaponDef __instance, uint loadWeight, Boolean& __result, BattleTech.Data.DataManager ___dataManager)

11:32:33.868 [Info] Running ILHook manipulator on virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight)
11:32:33.871 [Info] Writing prefixes
11:32:33.880 [Info] Patching virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_GatherDependencies::Prefix(BattleTech.WeaponDef __instance, BattleTech.Data.DataManager& ___dataManager, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:33.883 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:33.886 [Info] Writing prefixes
11:32:33.901 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

11:32:33.904 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
11:32:33.907 [Info] Writing prefixes
11:32:33.910 [Info] Writing postfixes
11:32:33.915 [Info] Patching int BattleTech.Weapon::get_CurrentAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_CurrentAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

11:32:33.918 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_CurrentAmmo()
11:32:33.921 [Info] Writing prefixes
11:32:33.929 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:33.934 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:33.937 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:33.941 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:33.944 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:33.946 [Info] Writing postfixes
11:32:33.958 [Info] Patching bool BattleTech.AbstractActor::get_IsTargetMarked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_IsTargetMarked::Prefix(BattleTech.AbstractActor __instance, Boolean& __result)

11:32:33.963 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_IsTargetMarked()
11:32:33.966 [Info] Writing prefixes
11:32:33.974 [Info] Patching Localize.Text BattleTech.MechComponent::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_UIName::Postfix(BattleTech.MechComponent __instance, Localize.Text& __result)

11:32:33.976 [Info] Running ILHook manipulator on Localize.Text BattleTech.MechComponent::get_UIName()
11:32:33.980 [Info] Writing postfixes
11:32:33.987 [Info] Patching float BattleTech.Weapon::get_DamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_DamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:33.991 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_DamagePerShot()
11:32:33.995 [Info] Writing postfixes
11:32:34.007 [Info] Patching void BattleTech.Weapon::ResetWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ResetWeapon::Postfix(BattleTech.Weapon __instance)

11:32:34.010 [Info] Running ILHook manipulator on void BattleTech.Weapon::ResetWeapon()
11:32:34.014 [Info] Writing postfixes
11:32:34.023 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)

11:32:34.026 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
11:32:34.030 [Info] Writing postfixes
11:32:34.038 [Info] Patching int BattleTech.Weapon::get_InternalAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_InternalAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

11:32:34.042 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_InternalAmmo()
11:32:34.045 [Info] Writing prefixes
11:32:34.052 [Info] Patching float BattleTech.Weapon::get_StructureDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_StructureDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.056 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_StructureDamagePerShot()
11:32:34.059 [Info] Writing postfixes
11:32:34.163 [Info] Patching float BattleTech.Weapon::get_HeatDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.167 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatDamagePerShot()
11:32:34.171 [Info] Writing postfixes
11:32:34.177 [Info] Patching int BattleTech.Weapon::get_ShotsWhenFired() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShotsWhenFired::Postfix(BattleTech.Weapon __instance, Int32& __result)

11:32:34.180 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ShotsWhenFired()
11:32:34.184 [Info] Writing postfixes
11:32:34.193 [Info] Patching int BattleTech.Weapon::get_ProjectilesPerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ProjectilesPerShot::Postfix(BattleTech.Weapon __instance, Int32& __result)

11:32:34.197 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ProjectilesPerShot()
11:32:34.202 [Info] Writing postfixes
11:32:34.210 [Info] Patching float BattleTech.Weapon::get_ClusteringModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ClusteringModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.213 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ClusteringModifier()
11:32:34.217 [Info] Writing postfixes
11:32:34.225 [Info] Patching float BattleTech.Weapon::get_CriticalChanceMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_CriticalChanceMultiplier::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.228 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_CriticalChanceMultiplier()
11:32:34.233 [Info] Writing postfixes
11:32:34.240 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

11:32:34.244 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
11:32:34.247 [Info] Writing postfixes
11:32:34.255 [Info] Patching float BattleTech.Weapon::get_AccuracyModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AccuracyModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.259 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_AccuracyModifier()
11:32:34.264 [Info] Writing postfixes
11:32:34.270 [Info] Patching float BattleTech.Weapon::get_MinRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MinRange::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.273 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MinRange()
11:32:34.276 [Info] Writing postfixes
11:32:34.282 [Info] Patching float BattleTech.Weapon::get_MaxRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MaxRange::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.285 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MaxRange()
11:32:34.288 [Info] Writing postfixes
11:32:34.294 [Info] Patching float BattleTech.Weapon::get_ShortRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShortRange::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.297 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ShortRange()
11:32:34.300 [Info] Writing postfixes
11:32:34.307 [Info] Patching float BattleTech.Weapon::get_MediumRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MediumRange::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.310 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MediumRange()
11:32:34.313 [Info] Writing postfixes
11:32:34.319 [Info] Patching float BattleTech.Weapon::get_LongRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_LongRange::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.321 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_LongRange()
11:32:34.325 [Info] Writing postfixes
11:32:34.333 [Info] Patching float BattleTech.Weapon::get_HeatGenerated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatGenerated::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.336 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatGenerated()
11:32:34.339 [Info] Writing postfixes
11:32:34.346 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)
* static void CustAmmoCategoriesPatches.Weapon_RefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

11:32:34.349 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
11:32:34.351 [Info] Writing postfixes
11:32:34.357 [Info] Patching bool BattleTech.Weapon::get_IndirectFireCapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_IndirectFireCapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

11:32:34.361 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IndirectFireCapable()
11:32:34.364 [Info] Writing postfixes
11:32:34.370 [Info] Patching bool BattleTech.Weapon::get_AOECapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AOECapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

11:32:34.373 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_AOECapable()
11:32:34.376 [Info] Writing postfixes
11:32:34.383 [Info] Patching float BattleTech.Weapon::Instability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_Instability::Postfix(BattleTech.Weapon __instance, Single& __result)

11:32:34.385 [Info] Running ILHook manipulator on float BattleTech.Weapon::Instability()
11:32:34.388 [Info] Writing postfixes
11:32:34.396 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

11:32:34.400 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
11:32:34.402 [Info] Writing prefixes
11:32:34.406 [Info] Writing postfixes
11:32:34.415 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategories+Weapon_DecrementAmmo::Prefix(BattleTech.Weapon __instance, int stackItemUID, Int32& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:34.418 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
11:32:34.420 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
11:32:34.423 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:34.427 [Info] Writing prefixes
11:32:34.436 [Info] Patching virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:34.440 [Info] Running ILHook manipulator on virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
11:32:34.443 [Info] Transpiling virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
11:32:34.448 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:34.459 [Info] Patching virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:34.463 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
11:32:34.466 [Info] Transpiling virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
11:32:34.470 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:34.485 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.DynamicTreesHelper::OnInsert(object __instance, UnityEngine.Matrix4x4& trs, UnityEngine.Vector3& pos, UnityEngine.Quaternion rot, UnityEngine.Vector3& scale)

11:32:34.488 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale)
11:32:34.492 [Info] Writing postfixes
11:32:34.501 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupFullArray()

11:32:34.505 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray()
11:32:34.508 [Info] Writing prefixes
11:32:34.518 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupComputeBuffer()

11:32:34.521 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer()
11:32:34.525 [Info] Writing prefixes
11:32:34.534 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateCombinedMesh()

11:32:34.537 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh()
11:32:34.541 [Info] Writing prefixes
11:32:34.560 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateMesh()

11:32:34.564 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh()
11:32:34.567 [Info] Writing prefixes
11:32:34.575 [Info] Patching virtual BehaviorTreeResults BraceNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.BraceNode_Tick::Prefix(LeafBehaviorNode __instance, String& ___name, BehaviorTree& ___tree, BattleTech.AbstractActor ___unit, BehaviorNodeState& ___currentState, BehaviorTreeResults& __result)

11:32:34.578 [Info] Running ILHook manipulator on virtual BehaviorTreeResults BraceNode::Tick()
11:32:34.581 [Info] Writing prefixes
11:32:34.837 [Info] ### Harmony id=io.mission.activatablecomponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomActivatableEquipment.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomActivatableEquipment\CustomActivatableEquipment.dll
### At 2023-06-19 11.32.34
11:32:34.847 [Info] Patching BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AITeam_GetUnitThatCanReachECM::Prefix(AITeam __instance, System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits, BattleTech.AbstractActor& __result)

11:32:34.851 [Info] Running ILHook manipulator on BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits)
11:32:34.855 [Info] Writing prefixes
11:32:34.866 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

11:32:34.869 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
11:32:34.872 [Info] Writing prefixes
11:32:34.876 [Info] Writing postfixes
11:32:34.883 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

11:32:34.886 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
11:32:34.890 [Info] Writing prefixes
11:32:34.894 [Info] Writing postfixes
11:32:34.903 [Info] Patching void BattleTech.TurnDirector::BeginNewPhase(int newPhase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.TurnDirector_BeginNewPhase::Postfix(BattleTech.TurnDirector __instance, int newPhase)

11:32:34.906 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewPhase(int newPhase)
11:32:34.908 [Info] Writing postfixes
11:32:34.919 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)

11:32:34.923 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
11:32:34.928 [Info] Writing prefixes
11:32:34.946 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)

11:32:34.951 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:34.965 [Info] Writing prefixes
11:32:35.003 [Info] Patching BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_DesiredAuraProjectionState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState& __result, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD)

11:32:35.010 [Info] Running ILHook manipulator on BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState()
11:32:35.021 [Info] Writing prefixes
11:32:35.053 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshAuraRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState auraProjectionState, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange)

11:32:35.060 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState)
11:32:35.067 [Info] Writing prefixes
11:32:35.082 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool showActiveProbe, BattleTech.AbstractActor& ___owner, Single& ___currentAPRange)

11:32:35.087 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe)
11:32:35.092 [Info] Writing prefixes
11:32:35.108 [Info] Patching bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform, Boolean& __result)

11:32:35.112 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState()
11:32:35.117 [Info] Writing prefixes
11:32:35.133 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeColor::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool isBright, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD, Boolean& ___currentAPIsBright)

11:32:35.138 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright)
11:32:35.142 [Info] Writing prefixes
11:32:35.154 [Info] Patching void BattleTech.UI.CombatAuraReticle::UpdatePosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.CombatAuraReticle_UpdatePosition::Postfix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform)

11:32:35.159 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::UpdatePosition()
11:32:35.168 [Info] Writing postfixes
11:32:35.182 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomActivatablePatches.CombatHUD_Update_HideReticlesHotKey::Postfix(BattleTech.UI.CombatHUD __instance)

11:32:35.186 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
11:32:35.189 [Info] Writing postfixes
11:32:35.204 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

11:32:35.208 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
11:32:35.212 [Info] Writing postfixes
11:32:35.223 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomActivatablePatches.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

11:32:35.228 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
11:32:35.233 [Info] Writing prefixes
11:32:35.245 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:35.249 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
11:32:35.253 [Info] Writing postfixes
11:32:35.273 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatablePatches.SelectionState_CanDeselect::Postfix(BattleTech.UI.SelectionState __instance, Boolean& __result)

11:32:35.279 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
11:32:35.284 [Info] Writing prefixes
11:32:35.289 [Info] Writing postfixes
11:32:35.302 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:35.308 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
11:32:35.315 [Info] Writing postfixes
11:32:35.331 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

11:32:35.337 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:35.342 [Info] Writing prefixes
11:32:35.349 [Info] Writing postfixes
11:32:35.362 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Boolean& __runOriginal, Single& __result)
1 postfixes:
* static void CustomActivatablePatches.Mech_GetHeatSinkDissipation::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:35.367 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
11:32:35.373 [Info] Writing prefixes
11:32:35.377 [Info] Writing postfixes
11:32:35.391 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)
1 postfixes:
* static void CustomActivatablePatches.Mech_ApplyHeatSinks::Postfix(BattleTech.Mech __instance, int stackID)

11:32:35.395 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
11:32:35.400 [Info] Writing prefixes
11:32:35.404 [Info] Writing postfixes
11:32:35.416 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

11:32:35.419 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
11:32:35.422 [Info] Writing postfixes
11:32:35.438 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)

11:32:35.442 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:35.446 [Info] Writing postfixes
11:32:35.463 [Info] Patching virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStandInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

11:32:35.468 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:35.471 [Info] Writing prefixes
11:32:35.478 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

11:32:35.482 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:35.486 [Info] Writing prefixes
11:32:35.495 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

11:32:35.499 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
11:32:35.502 [Info] Writing prefixes
11:32:35.513 [Info] Patching void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_GenerateFallSequence::Prefix(BattleTech.Mech __instance, int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)

11:32:35.517 [Info] Running ILHook manipulator on void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)
11:32:35.521 [Info] Writing prefixes
11:32:35.531 [Info] Patching virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_RestartCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

11:32:35.534 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh)
11:32:35.539 [Info] Writing prefixes
11:32:35.554 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

11:32:35.559 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
11:32:35.564 [Info] Writing prefixes
11:32:35.585 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Postfix::Postfix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

11:32:35.590 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
11:32:35.594 [Info] Writing prefixes
11:32:35.600 [Info] Writing postfixes
11:32:35.616 [Info] Patching void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> codeInstructions, System.Reflection.Emit.ILGenerator ilGenerator)

11:32:35.620 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
11:32:35.625 [Info] Transpiling void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
11:32:35.632 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> codeInstructions, System.Reflection.Emit.ILGenerator ilGenerator)
11:32:35.648 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatHUDStatusPanel_PreviewDesignMasks::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, System.Collections.Generic.List<BattleTech.WayPoint> waypoints)

11:32:35.653 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints)
11:32:35.657 [Info] Writing prefixes
11:32:35.687 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMoveBase_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

11:32:35.692 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos)
11:32:35.696 [Info] Writing prefixes
11:32:35.707 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
1 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

11:32:35.710 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
11:32:35.714 [Info] Writing prefixes
11:32:35.720 [Info] Writing postfixes
11:32:35.736 [Info] Patching void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatMovementReticle_UpdateReticle::Prefix(BattleTech.UI.CombatMovementReticle __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked)

11:32:35.741 [Info] Running ILHook manipulator on void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI)
11:32:35.744 [Info] Writing prefixes
11:32:35.767 [Info] Patching void BattleTech.AuraCache::ResetForFullRebuild() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ResetForFullRebuild_Disable::Prefix(BattleTech.AuraCache __instance)

11:32:35.771 [Info] Running ILHook manipulator on void BattleTech.AuraCache::ResetForFullRebuild()
11:32:35.776 [Info] Writing prefixes
11:32:35.786 [Info] Patching bool BattleTech.AuraCache::HasAlreadyChecked(string guid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_HasAlreadyChecked_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

11:32:35.790 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::HasAlreadyChecked(string guid)
11:32:35.794 [Info] Writing prefixes
11:32:35.803 [Info] Patching void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraAdded::Prefix(BattleTech.AbstractActor __instance)

11:32:35.807 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message)
11:32:35.811 [Info] Writing prefixes
11:32:35.828 [Info] Patching void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraRemoved::Prefix(BattleTech.AbstractActor __instance)

11:32:35.832 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message)
11:32:35.836 [Info] Writing prefixes
11:32:35.853 [Info] Patching static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAllAuras_Disable::Prefix()

11:32:35.858 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate)
11:32:35.862 [Info] Writing prefixes
11:32:35.876 [Info] Patching static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAurasToActor_Disable::Prefix()

11:32:35.881 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
11:32:35.886 [Info] Writing prefixes
11:32:35.899 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()

11:32:35.902 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
11:32:35.906 [Info] Writing prefixes
11:32:35.921 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Ability_Disable::Prefix()

11:32:35.925 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
11:32:35.930 [Info] Writing prefixes
11:32:35.946 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()

11:32:35.950 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
11:32:35.956 [Info] Writing prefixes
11:32:35.970 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

11:32:35.974 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
11:32:35.978 [Info] Writing prefixes
11:32:35.995 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Ability_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

11:32:36.000 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
11:32:36.003 [Info] Writing prefixes
11:32:36.012 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

11:32:36.016 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
11:32:36.021 [Info] Writing prefixes
11:32:36.033 [Info] Patching bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AddEffectIfNotPresent_Disable::Prefix()

11:32:36.037 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource)
11:32:36.042 [Info] Writing prefixes
11:32:36.051 [Info] Patching bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RemoveEffectIfPresent_Disable::Prefix()

11:32:36.056 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource)
11:32:36.061 [Info] Writing prefixes
11:32:36.074 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAuraFrom_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

11:32:36.079 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor)
11:32:36.084 [Info] Writing prefixes
11:32:36.094 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAnyAura() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAnyAura_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

11:32:36.099 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAnyAura()
11:32:36.102 [Info] Writing prefixes
11:32:36.114 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:36.119 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
11:32:36.124 [Info] Writing prefixes
11:32:36.137 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasFromActorAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:36.141 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
11:32:36.144 [Info] Writing prefixes
11:32:36.158 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffectingOthers_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:36.161 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
11:32:36.165 [Info] Writing prefixes
11:32:36.179 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffecting_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:36.184 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
11:32:36.190 [Info] Writing prefixes
11:32:36.203 [Info] Patching int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyGhostSpottedCount_Disable::Prefix(BattleTech.AuraCache __instance, Int32& __result)

11:32:36.207 [Info] Running ILHook manipulator on int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
11:32:36.211 [Info] Writing prefixes
11:32:36.224 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraA_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:36.229 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared)
11:32:36.232 [Info] Writing prefixes
11:32:36.240 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:36.244 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
11:32:36.246 [Info] Writing prefixes
11:32:36.257 [Info] Patching static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RefreshECMStates_Disable::Prefix(BattleTech.AuraCache __instance)

11:32:36.261 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource)
11:32:36.264 [Info] Writing prefixes
11:32:36.278 [Info] Patching BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_GetBestECMState_Disable::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor& __result)

11:32:36.281 [Info] Running ILHook manipulator on BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors)
11:32:36.284 [Info] Writing prefixes
11:32:36.306 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)

11:32:36.310 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
11:32:36.314 [Info] Writing postfixes
11:32:36.334 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_RefreshDisplayedEquipment::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDEquipmentSlot> ___EquipmentSlots, BattleTech.AbstractActor ___displayedActor)

11:32:36.338 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment()
11:32:36.341 [Info] Writing postfixes
11:32:36.358 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)
1 postfixes:
* static void CustomActivatableEquipment.TurnDirector_BeginNewRound::Postfix(BattleTech.TurnDirector __instance)

11:32:36.362 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
11:32:36.366 [Info] Writing prefixes
11:32:36.370 [Info] Writing postfixes
11:32:36.380 [Info] Patching virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDSidePanelHoverElement_OnPointerClick::Postfix(BattleTech.UI.CombatHUDSidePanelHoverElement __instance)

11:32:36.385 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
11:32:36.389 [Info] Writing postfixes
11:32:36.400 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)

11:32:36.404 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
11:32:36.409 [Info] Writing postfixes
11:32:36.418 [Info] Patching bool BattleTech.UI.CombatHUDActionButton::TryActivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_IsActive::Postfix(BattleTech.UI.CombatHUDActionButton __instance, Boolean& __result)

11:32:36.424 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDActionButton::TryActivate()
11:32:36.428 [Info] Writing postfixes
11:32:36.442 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_ProcessPressedButtons::Prefix(BattleTech.UI.CombatSelectionHandler __instance)

11:32:36.447 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons()
11:32:36.452 [Info] Writing prefixes
11:32:36.466 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

11:32:36.471 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
11:32:36.476 [Info] Writing postfixes
11:32:36.491 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_ResetDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

11:32:36.497 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons()
11:32:36.501 [Info] Writing postfixes
11:32:36.518 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

11:32:36.523 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
11:32:36.529 [Info] Writing prefixes
11:32:36.534 [Info] Writing postfixes
11:32:36.551 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

11:32:36.556 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
11:32:36.561 [Info] Writing postfixes
11:32:36.572 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatTargetingReticle_Create::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)

11:32:36.576 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)
11:32:36.581 [Info] Writing postfixes
11:32:36.608 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

11:32:36.627 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
11:32:36.635 [Info] Writing prefixes
11:32:36.644 [Info] Patching void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_ProcessAddedMark::Postfix(BattleTech.AbstractActor __instance)

11:32:36.648 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect)
11:32:36.652 [Info] Writing postfixes
11:32:36.664 [Info] Patching void BattleTech.AbstractActor::set_DistMovedThisRound(float value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_DistMovedThisRound_set::Postfix(BattleTech.AbstractActor __instance, float value)

11:32:36.666 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::set_DistMovedThisRound(float value)
11:32:36.669 [Info] Writing postfixes
11:32:36.679 [Info] Patching virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_OnEffectEnd::Postfix(BattleTech.AbstractActor __instance)

11:32:36.683 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect)
11:32:36.687 [Info] Writing postfixes
11:32:36.708 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)
1 postfixes:
* static void CustomActivatableEquipment.CombatAuraReticle_Init_Aura::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant, System.Collections.Generic.List`1[[BattleTech.UI.CombatAuraReticle, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AuraReticles, BattleTech.UI.CombatHUD ___HUD)

11:32:36.712 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
11:32:36.716 [Info] Writing prefixes
11:32:36.722 [Info] Writing postfixes
11:32:36.738 [Info] Patching void BattleTech.AbstractActor::EvaluateStealthState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.AbstractActor_EvaluateStealthState::Prefix(BattleTech.AbstractActor __instance)

11:32:36.741 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::EvaluateStealthState()
11:32:36.745 [Info] Writing prefixes
11:32:36.762 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:36.766 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
11:32:36.769 [Info] Writing postfixes
11:32:36.785 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)

11:32:36.789 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
11:32:36.794 [Info] Writing postfixes
11:32:36.931 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)

11:32:36.934 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
11:32:36.937 [Info] Writing postfixes
11:32:36.949 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()
* static bool CustomActivatableEquipment.AuraCache_UpdateAurasComponents::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)

11:32:36.952 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
11:32:36.955 [Info] Writing prefixes
11:32:36.964 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_ShouldAffectThisActor::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

11:32:36.967 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
11:32:36.969 [Info] Writing prefixes
11:32:36.973 [Info] Writing postfixes
11:32:36.983 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()
* static bool CustomActivatableEquipment.AuraCache_UpdateAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)

11:32:36.987 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
11:32:36.991 [Info] Writing prefixes
11:32:37.000 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static bool CustomActivatableEquipment.AuraCache_PreviewAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:37.004 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
11:32:37.007 [Info] Writing prefixes
11:32:37.014 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_AuraConditionsPassed::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

11:32:37.017 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
11:32:37.021 [Info] Writing prefixes
11:32:37.026 [Info] Writing postfixes
11:32:37.034 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:37.038 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
11:32:37.042 [Info] Writing postfixes
11:32:37.061 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)

11:32:37.065 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
11:32:37.069 [Info] Writing postfixes
11:32:37.079 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(Boolean& __runOriginal, String& description)
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponSlot_AddToolTipDetail::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, string description, int modifier)

11:32:37.084 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
11:32:37.088 [Info] Writing prefixes
11:32:37.093 [Info] Writing postfixes
11:32:37.107 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

11:32:37.110 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:37.116 [Info] Writing prefixes
11:32:37.121 [Info] Writing postfixes
11:32:37.138 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

11:32:37.142 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
11:32:37.148 [Info] Writing postfixes
11:32:37.161 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_SetState::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

11:32:37.168 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
11:32:37.172 [Info] Writing postfixes
11:32:37.183 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)
* static void CustomActivatableEquipment.Turret_InitGameRep::Postfix(BattleTech.Turret __instance)

11:32:37.189 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
11:32:37.195 [Info] Writing postfixes
11:32:37.209 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

11:32:37.213 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
11:32:37.217 [Info] Writing postfixes
11:32:37.233 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
2 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

11:32:37.237 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
11:32:37.241 [Info] Writing prefixes
11:32:37.244 [Info] Writing postfixes
11:32:37.262 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 3 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
3 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:37.266 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:37.270 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:37.274 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:37.278 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:37.282 [Info] Writing prefixes
11:32:37.286 [Info] Writing postfixes
11:32:37.299 [Info] Patching virtual void BattleTech.MechComponent::InitPassiveSelfEffects() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Prefix(BattleTech.MechComponent __instance)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Postfix(BattleTech.MechComponent __instance)

11:32:37.303 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitPassiveSelfEffects()
11:32:37.307 [Info] Writing prefixes
11:32:37.310 [Info] Writing postfixes
11:32:37.328 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)

11:32:37.332 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
11:32:37.336 [Info] Writing postfixes
11:32:37.346 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)
* static void CustomActivatableEquipment.StatisticEffect_initStatisiticEffect::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)

11:32:37.350 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
11:32:37.356 [Info] Writing postfixes
11:32:37.368 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.EffectManager_GetTargetStatCollections_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.EffectData effectData, BattleTech.ICombatant target)
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_GetTargetStatCollections::Postfix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:37.372 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
11:32:37.376 [Info] Writing prefixes
11:32:37.379 [Info] Writing postfixes
11:32:37.398 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)

11:32:37.402 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
11:32:37.406 [Info] Writing prefixes
11:32:37.426 [Info] Patching void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_InitAbstractActor::Prefix(BattleTech.AbstractActor __instance)

11:32:37.430 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat)
11:32:37.433 [Info] Writing prefixes
11:32:37.454 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance)

11:32:37.458 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
11:32:37.461 [Info] Writing prefixes
11:32:37.466 [Info] Writing postfixes
11:32:37.473 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance)

11:32:37.476 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
11:32:37.480 [Info] Writing prefixes
11:32:37.483 [Info] Writing postfixes
11:32:37.492 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance)

11:32:37.496 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
11:32:37.499 [Info] Writing prefixes
11:32:37.502 [Info] Writing postfixes
11:32:37.514 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance)

11:32:37.519 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
11:32:37.524 [Info] Writing prefixes
11:32:37.529 [Info] Writing postfixes
11:32:37.538 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance)

11:32:37.542 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
11:32:37.546 [Info] Writing prefixes
11:32:37.549 [Info] Writing postfixes
11:32:37.559 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.StatCollection_ModifyStatistic::Prefix(BattleTech.StatCollection __instance, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant)
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

11:32:37.563 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
11:32:37.566 [Info] Writing prefixes
11:32:37.569 [Info] Writing postfixes
11:32:37.580 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)
* static void CustomActivatableEquipment.MechComponent_InitStats::Postfix(BattleTech.MechComponent __instance)

11:32:37.585 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
11:32:37.589 [Info] Writing postfixes
11:32:37.598 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)
* static bool CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Postfix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)

11:32:37.602 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
11:32:37.606 [Info] Writing prefixes
11:32:37.611 [Info] Writing postfixes
11:32:37.626 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

11:32:37.630 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
11:32:37.633 [Info] Writing prefixes
11:32:37.648 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
4 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

11:32:37.653 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:37.656 [Info] Writing prefixes
11:32:37.660 [Info] Writing postfixes
11:32:37.676 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:37.680 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:37.684 [Info] Writing postfixes
11:32:37.695 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:37.698 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:37.701 [Info] Writing postfixes
11:32:37.709 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:37.712 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:37.715 [Info] Writing postfixes
11:32:37.727 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)

11:32:37.729 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
11:32:37.733 [Info] Writing postfixes
11:32:37.748 [Info] Patching void BattleTech.UI.InventoryItemElement::SetData(BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.InventoryItemElement_SetData::Prefix(BattleTech.UI.InventoryItemElement __instance, BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback)

11:32:37.751 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::SetData(BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback)
11:32:37.754 [Info] Writing prefixes
11:32:37.766 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechBayMechUnitElement_SetData::Prefix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

11:32:37.769 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
11:32:37.771 [Info] Writing prefixes
11:32:37.774 [Info] Writing postfixes
11:32:37.783 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:37.787 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:37.791 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:37.794 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:37.796 [Info] Writing postfixes
11:32:37.804 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 5 postfixes, 1 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
* static void CustomActivatableEquipment.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:37.808 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:37.811 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
11:32:37.815 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:37.820 [Info] Writing postfixes
11:32:37.833 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetData(BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechBayMechInfoWidget_SetData::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton)

11:32:37.836 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetData(BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton)
11:32:37.839 [Info] Writing prefixes
11:32:37.849 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:37.853 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:37.857 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:37.860 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:37.863 [Info] Writing postfixes
11:32:37.871 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::ClearData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_ClearData::Postfix(BattleTech.UI.MechLabItemSlotElement __instance)

11:32:37.874 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::ClearData()
11:32:37.877 [Info] Writing postfixes
11:32:37.885 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechValidationRules_GetMechFieldableWarnings::Prefix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:37.889 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
11:32:37.892 [Info] Writing prefixes
11:32:37.895 [Info] Writing postfixes
11:32:37.904 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
2 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

11:32:37.907 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
11:32:37.910 [Info] Writing prefixes
11:32:37.913 [Info] Writing postfixes
11:32:37.921 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentListItem_SetComponentRef::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)

11:32:37.924 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)
11:32:37.927 [Info] Writing postfixes
11:32:37.938 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)

11:32:37.942 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
11:32:37.944 [Info] Writing prefixes
11:32:37.990 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
4 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)

11:32:37.994 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:37.998 [Info] Writing prefixes
11:32:38.001 [Info] Writing postfixes
11:32:38.034 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_AssignAmmoToWeapons::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

11:32:38.037 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
11:32:38.040 [Info] Writing prefixes
11:32:38.042 [Info] Writing postfixes
11:32:38.048 [Info] Patching virtual void BattleTech.ActorDef::SetGuid(string newGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.ActorDef_SetGuid::Postfix(BattleTech.ActorDef __instance)

11:32:38.052 [Info] Running ILHook manipulator on virtual void BattleTech.ActorDef::SetGuid(string newGuid)
11:32:38.056 [Info] Writing postfixes
11:32:38.063 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
2 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)

11:32:38.066 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
11:32:38.069 [Info] Writing prefixes
11:32:38.072 [Info] Writing postfixes
11:32:38.082 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)

11:32:38.086 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
11:32:38.090 [Info] Writing prefixes
11:32:38.098 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:38.101 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:38.103 [Info] Writing prefixes
11:32:38.107 [Info] Writing postfixes
11:32:38.119 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

11:32:38.124 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
11:32:38.127 [Info] Writing prefixes
11:32:38.130 [Info] Writing postfixes
11:32:38.141 [Info] Patching void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddAbsoluteInstability_Patch::Postfix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

11:32:38.144 [Info] Running ILHook manipulator on void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
11:32:38.146 [Info] Writing postfixes
11:32:38.154 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

11:32:38.159 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
11:32:38.162 [Info] Writing postfixes
11:32:38.170 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:38.173 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:38.176 [Info] Writing prefixes
11:32:38.179 [Info] Writing postfixes
11:32:38.190 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:38.193 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:38.195 [Info] Writing prefixes
11:32:38.198 [Info] Writing postfixes
11:32:38.215 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:38.221 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:38.226 [Info] Writing prefixes
11:32:38.229 [Info] Writing postfixes
11:32:38.242 [Info] Patching virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AreAnyHostilesInWeaponRangeNode_Tick::Prefix(BehaviorNode __instance, BehaviorTreeResults& __result, BehaviorTree& ___tree, BattleTech.AbstractActor& ___unit)

11:32:38.245 [Info] Running ILHook manipulator on virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick()
11:32:38.248 [Info] Writing prefixes
11:32:38.396 [Info] ### Harmony id=io.mission.custommaps, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomMaps.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomMaps\CustomMaps.dll
### At 2023-06-19 11.32.38
11:32:38.401 [Info] Patching void DestructibleObject::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructibleObject_Start::Prefix(DestructibleObject __instance)

11:32:38.404 [Info] Running ILHook manipulator on void DestructibleObject::Start()
11:32:38.407 [Info] Writing prefixes
11:32:38.414 [Info] Patching void DestructibleObject::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructibleObject_OnEnable::Prefix(DestructibleObject __instance)

11:32:38.417 [Info] Running ILHook manipulator on void DestructibleObject::OnEnable()
11:32:38.420 [Info] Writing prefixes
11:32:38.429 [Info] Patching void DestructionConstants::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructionConstants_OnEnable::Prefix(DestructionConstants __instance)

11:32:38.432 [Info] Running ILHook manipulator on void DestructionConstants::OnEnable()
11:32:38.435 [Info] Writing prefixes
11:32:38.442 [Info] Patching void DestructionConstants::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructionConstants_LateUpdate::Prefix(DestructionConstants __instance)

11:32:38.445 [Info] Running ILHook manipulator on void DestructionConstants::LateUpdate()
11:32:38.447 [Info] Writing prefixes
11:32:38.456 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
5 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)

11:32:38.459 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:38.462 [Info] Writing prefixes
11:32:38.466 [Info] Writing postfixes
11:32:38.582 [Info] Patching void BattleTech.Rendering.TerrainClipRoot::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.TerrainClipRoot_Start::Prefix(BattleTech.Rendering.TerrainClipRoot __instance)

11:32:38.585 [Info] Running ILHook manipulator on void BattleTech.Rendering.TerrainClipRoot::Start()
11:32:38.589 [Info] Writing prefixes
11:32:38.606 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomMaps.Patches.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

11:32:38.609 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
11:32:38.612 [Info] Writing postfixes
11:32:38.620 [Info] Patching void BattleTech.Contract::AllDependenciesReady() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.Contract_AllDependenciesReady::Prefix(BattleTech.Contract __instance)

11:32:38.624 [Info] Running ILHook manipulator on void BattleTech.Contract::AllDependenciesReady()
11:32:38.628 [Info] Writing prefixes
11:32:38.637 [Info] Patching void BattleTech.Contract::.ctor(string mapName, string mapPath, string encounterLayerGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.GameInstance game, BattleTech.Framework.ContractOverride contractOverride, BattleTech.GameContext baseContext, bool fromSim, int difficulty, int initialContractValue, int? playerOneMoraleOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.Contract_Constructor::Prefix(string mapName, string mapPath, String& encounterLayerGuid, BattleTech.GameInstance game)

11:32:38.640 [Info] Running ILHook manipulator on void BattleTech.Contract::.ctor(string mapName, string mapPath, string encounterLayerGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.GameInstance game, BattleTech.Framework.ContractOverride contractOverride, BattleTech.GameContext baseContext, bool fromSim, int difficulty, int initialContractValue, int? playerOneMoraleOverride)
11:32:38.644 [Info] Writing prefixes
11:32:38.664 [Info] Patching void BattleTech.LevelLoader::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.LevelLoader_Start::Prefix(BattleTech.LevelLoader __instance)

11:32:38.667 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::Start()
11:32:38.671 [Info] Writing prefixes
11:32:38.678 [Info] Patching void BattleTech.LevelLoadRequestListener::BundlesLoaded(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.LevelLoadRequestListener_BundlesLoaded::Prefix(BattleTech.LevelLoadRequestListener __instance, BattleTech.Data.LoadRequest request)

11:32:38.681 [Info] Running ILHook manipulator on void BattleTech.LevelLoadRequestListener::BundlesLoaded(BattleTech.Data.LoadRequest request)
11:32:38.684 [Info] Writing prefixes
11:32:38.694 [Info] Patching void BattleTech.LevelLoadRequestListener::OnRequestLevelLoad(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.LevelLoadRequestListener_OnRequestLevelLoad::Prefix(BattleTech.LevelLoadRequestListener __instance, MessageCenterMessage message)

11:32:38.697 [Info] Running ILHook manipulator on void BattleTech.LevelLoadRequestListener::OnRequestLevelLoad(MessageCenterMessage message)
11:32:38.700 [Info] Writing prefixes
11:32:38.711 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.RenderTrees_InitQuadTree::Prefix(BattleTech.Rendering.Trees.RenderTrees __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

11:32:38.716 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
11:32:38.719 [Info] Writing prefixes
11:32:38.723 [Info] Writing postfixes
11:32:38.743 [Info] Patching void BattleTech.MapMetaDataExporter::LoadMapMetaDataOnly(BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.MapMetaDataExporter_LoadMapMetaDataOnly::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager)

11:32:38.746 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::LoadMapMetaDataOnly(BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager)
11:32:38.750 [Info] Writing prefixes
11:32:38.762 [Info] Patching void BattleTech.EncounterLayerData::ReattachReferences() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.EncounterLayerData_ReattachReferences::Prefix(BattleTech.EncounterLayerData __instance)

11:32:38.766 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::ReattachReferences()
11:32:38.769 [Info] Writing prefixes
11:32:38.778 [Info] Patching bool BattleTech.InclineMeshData::LoadFromPath(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.InclineMeshData_LoadFromPath::Prefix(BattleTech.InclineMeshData __instance, String& path)

11:32:38.781 [Info] Running ILHook manipulator on bool BattleTech.InclineMeshData::LoadFromPath(string path)
11:32:38.785 [Info] Writing prefixes
11:32:38.795 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.PlayerLanceSpawnerGameLogic_SpawnUnits::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance, bool offScreen)
1 postfixes:
* static void MissionControl.Patches.PlayerLanceSpawnerGameLogicSpawnUnitsPatch::Postfix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

11:32:38.799 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen)
11:32:38.802 [Info] Writing prefixes
11:32:38.805 [Info] Writing postfixes
11:32:38.812 [Info] Patching void BattleTech.EncounterLayerData::LoadRaycastInfo(HBS.Util.SerializationStream stream) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.EncounterLayerData_LoadRaycastInfo::Prefix(BattleTech.EncounterLayerData __instance, HBS.Util.SerializationStream& stream)

11:32:38.816 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::LoadRaycastInfo(HBS.Util.SerializationStream stream)
11:32:38.819 [Info] Writing prefixes
11:32:38.830 [Info] Patching static BattleTech.MapMetaData BattleTech.MapMetaData::LoadMapMetaData(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.MapMetaData_LoadMapMetaData::Prefix(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager, String& __state, BattleTech.MapMetaData& __result)
1 postfixes:
* static void CustomMaps.Patches.MapMetaData_LoadMapMetaData::Postfix(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager, String& __state, BattleTech.MapMetaData& __result)

11:32:38.834 [Info] Running ILHook manipulator on static BattleTech.MapMetaData BattleTech.MapMetaData::LoadMapMetaData(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager)
11:32:38.837 [Info] Writing prefixes
11:32:38.840 [Info] Writing postfixes
11:32:39.343 [Info] ### Harmony id=io.mission.customunits, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnits.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomUnits.dll
### At 2023-06-19 11.32.39
11:32:39.351 [Info] ### Harmony id=io.mission.customdeploy, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomDeploy.Core::Init(string directory, bool debugLog), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomDeploy.dll
### At 2023-06-19 11.32.39
11:32:39.357 [Info] Patching void BattleTech.FollowActorCameraSequence::CheckForFinished() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.FollowActorCameraSequence_CheckForFinished::Prefix(BattleTech.FollowActorCameraSequence __instance)

11:32:39.360 [Info] Running ILHook manipulator on void BattleTech.FollowActorCameraSequence::CheckForFinished()
11:32:39.362 [Info] Writing prefixes
11:32:39.371 [Info] Patching System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_DangerousLocationCellsList::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, System.Collections.Generic.List`1[[BattleTech.MapTerrainDataCell, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:39.374 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList()
11:32:39.376 [Info] Writing prefixes
11:32:39.386 [Info] Patching float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_GetEvaluationAtPositionOrientation::Prefix(BattleTech.InfluenceMapEvaluator __instance, UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode, Single& __result)

11:32:39.390 [Info] Running ILHook manipulator on float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
11:32:39.393 [Info] Writing prefixes
11:32:39.405 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_GetStringFromObjectDispatch::Prefix(String& __result, object obj, string expr)

11:32:39.408 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr)
11:32:39.411 [Info] Writing prefixes
11:32:39.424 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_LookupStringFromObjectAndMaybeDispatch::Prefix(String& __result, object obj, string expr, Boolean& dispatchLocalize)

11:32:39.427 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize)
11:32:39.430 [Info] Writing prefixes
11:32:39.439 [Info] Patching void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.HeapSnapshotCollector_CollectStaticFields::Prefix(UnityHeapCrawler.HeapSnapshotCollector __instance)

11:32:39.442 [Info] Running ILHook manipulator on void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields()
11:32:39.445 [Info] Writing prefixes
11:32:39.460 [Info] Patching static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AssemblyUtil_FindMethods::Prefix(System.Reflection.MethodInfo[]& __result, System.Reflection.Assembly assembly, string methodName, string typeName)

11:32:39.463 [Info] Running ILHook manipulator on static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName)
11:32:39.466 [Info] Writing prefixes
11:32:39.479 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_unit::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.SpawnableUnit spawnableUnit)

11:32:39.482 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit)
11:32:39.486 [Info] Writing postfixes
11:32:39.495 [Info] Patching void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.LanceConfiguration_AddUnits::Prefix(BattleTech.LanceConfiguration __instance, System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)

11:32:39.498 [Info] Running ILHook manipulator on void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)
11:32:39.501 [Info] Writing prefixes
11:32:39.510 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_logic::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.UnitSpawnPointGameLogic logic)

11:32:39.512 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic)
11:32:39.516 [Info] Writing postfixes
11:32:39.524 [Info] Patching static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AkTriggerBase_GetAllDerivedTypes::Prefix(System.Collections.Generic.Dictionary`2[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:39.527 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes()
11:32:39.530 [Info] Writing prefixes
11:32:39.539 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:39.542 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:39.545 [Info] Writing prefixes
11:32:39.554 [Info] Patching bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.LoadRequest_TryCreateAndAddLoadRequest::Postfix(BattleTech.Data.LoadRequest __instance, BattleTech.BattleTechResourceType resourceType, string resourceId, bool __result)

11:32:39.558 [Info] Running ILHook manipulator on bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership)
11:32:39.562 [Info] Writing postfixes
11:32:39.571 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomDeploy.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

11:32:39.574 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
11:32:39.577 [Info] Writing postfixes
11:32:39.587 [Info] Patching string BattleTech.StarSystem::GetLastPilotAddedToHiringName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.StarSystem_GetLastPilotAddedToHiringName::Prefix(BattleTech.StarSystem __instance, String& __result)

11:32:39.590 [Info] Running ILHook manipulator on string BattleTech.StarSystem::GetLastPilotAddedToHiringName()
11:32:39.594 [Info] Writing prefixes
11:32:39.600 [Info] Patching bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.SimGameState_AddPilotToHiringHall::Prefix(BattleTech.SimGameState __instance, string pilotDefID, string starSystemID, Boolean& __result)

11:32:39.603 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID)
11:32:39.606 [Info] Writing prefixes
11:32:39.613 [Info] Patching void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.StarSystem_AddAvailablePilot::Prefix(BattleTech.StarSystem __instance, BattleTech.PilotDef def, bool isRonin)

11:32:39.617 [Info] Running ILHook manipulator on void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin)
11:32:39.621 [Info] Writing prefixes
11:32:39.628 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

11:32:39.631 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
11:32:39.634 [Info] Writing prefixes
11:32:39.642 [Info] Patching void BattleTech.Data.DataManager::UpdateRequests() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.DataManager_UpdateRequests::Prefix(BattleTech.Data.DataManager __instance)

11:32:39.645 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::UpdateRequests()
11:32:39.648 [Info] Writing prefixes
11:32:39.659 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)

11:32:39.663 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:32:39.666 [Info] Writing prefixes
11:32:39.675 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.CombatHUDHeatDisplay_UpdateOverheatWarnings::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, Boolean& overHeated, Boolean& shutDown)

11:32:39.679 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown)
11:32:39.681 [Info] Writing prefixes
11:32:39.691 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

11:32:39.695 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
11:32:39.699 [Info] Writing postfixes
11:32:39.707 [Info] Patching static void Utilities::BuildExtensionMethodCacheForType(Type type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Utilities_BuildExtensionMethodCacheForType::Prefix(Type type)

11:32:39.710 [Info] Running ILHook manipulator on static void Utilities::BuildExtensionMethodCacheForType(Type type)
11:32:39.713 [Info] Writing prefixes
11:32:39.729 [Info] Patching System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Briefing_BuildSimGameResults::Prefix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride, System.Collections.Generic.List`1[[BattleTech.ResultDescriptionEntry, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:39.733 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride)
11:32:39.735 [Info] Writing prefixes
11:32:39.769 [Info] Patching static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr) with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomUnits.PatchingDebug::GetOriginalMethod_Finalizer(Exception __exception, HarmonyLib.HarmonyMethod attr)

11:32:39.773 [Info] Running ILHook manipulator on static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr)
11:32:39.775 [Info] Writing finalizers
11:32:39.800 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetSorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)
* static bool SortByTonnage.MechBayMechStorageWidget_SetSorting_Patch::Prefix(BattleTech.UI.MechBayMechStorageWidget __instance)

11:32:39.803 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
11:32:39.806 [Info] Writing prefixes
11:32:39.813 [Info] Patching void BattleTech.SimGameState::_OnDefsLoadComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Postfix(BattleTech.SimGameState __instance)

11:32:39.816 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnDefsLoadComplete()
11:32:39.819 [Info] Writing prefixes
11:32:39.823 [Info] Writing postfixes
11:32:39.834 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
3 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

11:32:39.837 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
11:32:39.841 [Info] Writing prefixes
11:32:39.846 [Info] Writing postfixes
11:32:39.864 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.Patches.SimGameState_ReadyMech_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Postfix(int baySlot, string id, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:39.867 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
11:32:39.871 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
11:32:39.874 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:39.879 [Info] Writing prefixes
11:32:39.882 [Info] Writing postfixes
11:32:39.894 [Info] Patching void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_RemoveMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, BattleTech.SimGameState __instance)

11:32:39.896 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active)
11:32:39.899 [Info] Writing postfixes
11:32:39.908 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

11:32:39.911 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
11:32:39.914 [Info] Writing postfixes
11:32:39.926 [Info] Patching bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapInativeMech_Patch::Postfix(string id, bool pay, BattleTech.SimGameState __instance)

11:32:39.929 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay)
11:32:39.932 [Info] Writing postfixes
11:32:39.942 [Info] Patching void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_StripMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

11:32:39.945 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def)
11:32:39.948 [Info] Writing postfixes
11:32:39.958 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

11:32:39.962 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
11:32:39.964 [Info] Writing postfixes
11:32:39.972 [Info] Patching void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

11:32:39.975 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
11:32:39.977 [Info] Writing prefixes
11:32:39.985 [Info] Patching void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_Cancel_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

11:32:39.988 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
11:32:39.992 [Info] Writing prefixes
11:32:40.003 [Info] Patching void BattleTech.UI.MechBayPanel::OnMechLabClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechBayPanel_OnMechLabClosed_Patch::Prefix(BattleTech.UI.MechBayPanel __instance)

11:32:40.006 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnMechLabClosed()
11:32:40.009 [Info] Writing prefixes
11:32:40.017 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

11:32:40.021 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder()
11:32:40.025 [Info] Writing prefixes
11:32:40.028 [Info] Writing postfixes
11:32:40.034 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

11:32:40.037 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech()
11:32:40.038 [Info] Writing prefixes
11:32:40.041 [Info] Writing postfixes
11:32:40.051 [Info] Patching void BattleTech.UI.MechPlacementPopup::OnConfirmClicked() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

11:32:40.055 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::OnConfirmClicked()
11:32:40.058 [Info] Writing prefixes
11:32:40.061 [Info] Writing postfixes
11:32:40.070 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

11:32:40.074 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
11:32:40.078 [Info] Writing postfixes
11:32:40.085 [Info] Patching void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechRepresentationSimGame_Init_Patch::Postfix(BattleTech.MechRepresentationSimGame __instance)

11:32:40.088 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef)
11:32:40.093 [Info] Writing postfixes
11:32:40.101 [Info] Patching void BattleTech.MouseRotation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechSpin.Patches.MouseRotation_Update::Prefix(BattleTech.MouseRotation __instance)

11:32:40.104 [Info] Running ILHook manipulator on void BattleTech.MouseRotation::Update()
11:32:40.107 [Info] Writing prefixes
11:32:40.116 [Info] Patching void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.TurretRepresentationInitPatch::Postfix(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented, BattleTech.TurretRepresentation __instance)

11:32:40.120 [Info] Running ILHook manipulator on void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented)
11:32:40.124 [Info] Writing postfixes
11:32:40.134 [Info] Patching void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.GameRepresentationInitPatch::Postfix(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented, BattleTech.VehicleRepresentation __instance)

11:32:40.136 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented)
11:32:40.139 [Info] Writing postfixes
11:32:40.146 [Info] Patching virtual void WeaponEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechResizer.WeaponEffectPlayProjectilePatch::Prefix(WeaponEffect __instance)

11:32:40.150 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayProjectile()
11:32:40.154 [Info] Writing prefixes
11:32:40.169 [Info] Patching void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LoadRequest_CompleteLoadTracker::Postfix(BattleTech.Data.LoadRequest __instance, object tracker, bool loadSuccess)

11:32:40.172 [Info] Running ILHook manipulator on void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess)
11:32:40.176 [Info] Writing postfixes
11:32:40.187 [Info] Patching void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AttackDirector_PerformAttack::Prefix(BattleTech.AttackDirector __instance, BattleTech.AttackDirector+AttackSequence sequence)

11:32:40.191 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence)
11:32:40.194 [Info] Writing prefixes
11:32:40.203 [Info] Patching virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_OnAudioEvent::Prefix(BattleTech.VehicleRepresentation __instance, string audioEvent)

11:32:40.206 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent)
11:32:40.208 [Info] Writing prefixes
11:32:40.215 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStartAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStartAudio::Prefix(BattleTech.VehicleRepresentation __instance)

11:32:40.218 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStartAudio()
11:32:40.221 [Info] Writing prefixes
11:32:40.229 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStopAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStopAudio::Prefix(BattleTech.VehicleRepresentation __instance)

11:32:40.233 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStopAudio()
11:32:40.236 [Info] Writing prefixes
11:32:40.342 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
3 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)
* static void CustomUnits.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

11:32:40.345 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
11:32:40.348 [Info] Writing prefixes
11:32:40.352 [Info] Writing postfixes
11:32:40.365 [Info] Patching UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_GetAttachTransform::Prefix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, UnityEngine.Transform& __result)

11:32:40.368 [Info] Running ILHook manipulator on UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location)
11:32:40.371 [Info] Writing prefixes
11:32:40.378 [Info] Patching virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_IsTargetPositionInFiringArc::Prefix(BattleTech.Vehicle __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

11:32:40.382 [Info] Running ILHook manipulator on virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
11:32:40.385 [Info] Writing prefixes
11:32:40.394 [Info] Patching virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_IsTargetPositionInFiringArc::Prefix(BattleTech.Mech __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

11:32:40.397 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
11:32:40.400 [Info] Writing prefixes
11:32:40.409 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

11:32:40.411 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
11:32:40.414 [Info] Writing postfixes
11:32:40.422 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:40.425 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:40.428 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:40.432 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:40.435 [Info] Writing postfixes
11:32:40.447 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateStartContractPatch::Prefix(BattleTech.SimGameState __instance, BattleTech.Contract contract)
1 postfixes:
* static void CustomUnits.SimGameState_StartContract::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

11:32:40.450 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
11:32:40.453 [Info] Writing prefixes
11:32:40.456 [Info] Writing postfixes
11:32:40.464 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet& requiredTags, HBS.Collections.TagSet& excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
1 postfixes:
* static void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags, System.Collections.Generic.List`1[[BattleTech.Data.UnitDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:40.467 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
11:32:40.469 [Info] Writing prefixes
11:32:40.472 [Info] Writing postfixes
11:32:40.476 [IL] Generated patch (System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> DMD<BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs>?-143825920::BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)):
.locals init (
    BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0 V_0
    System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> V_1
    System.Boolean V_2
)
IL_0000: ldc.i4.1
IL_0001: stloc V_2
IL_0005: ldarg mdd
IL_0009: ldarga requiredTags
IL_000d: ldarga excludedTags
IL_0011: ldarg checkOwnership
IL_0015: ldarg currentDate
IL_0019: ldarg companyTags
IL_001d: call System.Boolean CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet&,HBS.Collections.TagSet&,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)
IL_0022: ldloc V_2
IL_0026: and
IL_0027: stloc V_2
IL_002b: ldloc V_2
IL_002f: brfalse IL_0087
IL_0034: newobj System.Void BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::.ctor()
IL_0039: stloc.0
IL_003a: ldloc.0
IL_003b: ldarg.0
IL_003c: stfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0041: ldloc.0
IL_0042: ldarg.s currentDate
IL_0044: stfld System.Nullable`1<System.DateTime> BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::currentDate
IL_0049: ldloc.0
IL_004a: ldarg.s companyTags
IL_004c: stfld HBS.Collections.TagSet BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::companyTags
IL_0051: ldloc.0
IL_0052: ldfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0057: ldc.i4.5
IL_0058: ldarg.1
IL_0059: ldarg.2
IL_005a: ldstr "UnitDef"
IL_005f: ldstr ""
IL_0064: ldarg.3
IL_0065: ldstr "UnitDefID"
IL_006a: call System.Collections.Generic.List`1<DataBaseType> BattleTech.Data.TagSetQueryExtensions::GetMatchingDataByTagSet<BattleTech.Data.UnitDef_MDD>(BattleTech.Data.MetadataDatabase,BattleTech.Data.TagSetType,HBS.Collections.TagSet,HBS.Collections.TagSet,System.String,System.String,System.Boolean,System.String)
IL_006f: dup
IL_0070: ldloc.0
IL_0071: ldftn System.Boolean BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::<GetMatchingUnitDefs>b__0(BattleTech.Data.UnitDef_MDD)
IL_0077: newobj System.Void System.Predicate`1<BattleTech.Data.UnitDef_MDD>::.ctor(System.Object,System.IntPtr)
IL_007c: callvirt System.Int32 System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>::RemoveAll(System.Predicate`1<T>)
IL_0081: pop
IL_0082: br IL_008b
IL_0087: ldloc V_1
IL_008b: stloc V_1
IL_008f: ldarg mdd
IL_0093: ldarg requiredTags
IL_0097: ldarg excludedTags
IL_009b: ldarg checkOwnership
IL_009f: ldarg currentDate
IL_00a3: ldarg companyTags
IL_00a7: ldloca V_1
IL_00ab: call System.Void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet,System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>&)
IL_00b0: ldloc V_1
IL_00b4: ret

11:32:40.483 [Info] Patching void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector__SendTurnActorActivateMessage::Postfix(BattleTech.TurnDirector __instance, int turnActorIndex)

11:32:40.486 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex)
11:32:40.490 [Info] Writing postfixes
11:32:40.499 [Info] Patching UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDInWorldScalingActorInfo_GetWorldPos::Postfix(BattleTech.UI.CombatHUDInWorldScalingActorInfo __instance, UnityEngine.Vector3& __result)

11:32:40.502 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos()
11:32:40.506 [Info] Writing postfixes
11:32:40.515 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

11:32:40.518 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
11:32:40.522 [Info] Writing postfixes
11:32:40.531 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

11:32:40.533 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:40.536 [Info] Writing prefixes
11:32:40.539 [Info] Writing postfixes
11:32:40.552 [Info] Patching void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceContractDetailsWidget_PopulateContract::Postfix(BattleTech.UI.LanceContractDetailsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

11:32:40.555 [Info] Running ILHook manipulator on void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract)
11:32:40.559 [Info] Writing postfixes
11:32:40.586 [Info] Patching void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SGContractsWidget_PopulateContract::Postfix(BattleTech.UI.SGContractsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

11:32:40.590 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated)
11:32:40.593 [Info] Writing postfixes
11:32:40.626 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

11:32:40.629 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
11:32:40.632 [Info] Writing postfixes
11:32:40.639 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerEnter::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, UnityEngine.EventSystems.PointerEventData data)

11:32:40.642 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data)
11:32:40.644 [Info] Writing prefixes
11:32:40.655 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

11:32:40.659 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
11:32:40.661 [Info] Writing postfixes
11:32:40.673 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_Init::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD HUD)

11:32:40.677 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD)
11:32:40.679 [Info] Writing postfixes
11:32:40.689 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

11:32:40.693 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay()
11:32:40.695 [Info] Writing prefixes
11:32:40.698 [Info] Writing postfixes
11:32:40.709 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.AttackDirection& ___shownAttackDirection, BattleTech.Mech ___displayedMech, BattleTech.Vehicle ___displayedVehicle)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.Mech ___displayedMech, BattleTech.AttackDirection& ___shownAttackDirection)

11:32:40.712 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value)
11:32:40.715 [Info] Writing prefixes
11:32:40.719 [Info] Writing postfixes
11:32:40.728 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_ShowMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

11:32:40.731 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay()
11:32:40.734 [Info] Writing prefixes
11:32:40.740 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShowVehicleDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

11:32:40.743 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay()
11:32:40.746 [Info] Writing postfixes
11:32:40.752 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_ShowMechDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

11:32:40.756 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay()
11:32:40.759 [Info] Writing postfixes
11:32:40.766 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showVehicleDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

11:32:40.770 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay()
11:32:40.772 [Info] Writing postfixes
11:32:40.780 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showBuildingDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

11:32:40.783 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay()
11:32:40.786 [Info] Writing postfixes
11:32:40.795 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showTurretDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

11:32:40.797 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay()
11:32:40.800 [Info] Writing postfixes
11:32:40.807 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDTargetingComputer_UpdateStructureAndArmor::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)

11:32:40.810 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor()
11:32:40.812 [Info] Writing prefixes
11:32:40.822 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_RefreshHoverInfoSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:40.826 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo()
11:32:40.828 [Info] Writing prefixes
11:32:40.845 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.Mech value)

11:32:40.848 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value)
11:32:40.851 [Info] Writing prefixes
11:32:40.860 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)

11:32:40.863 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
11:32:40.867 [Info] Writing prefixes
11:32:40.879 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechDefSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.MechDef value)

11:32:40.882 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value)
11:32:40.885 [Info] Writing prefixes
11:32:40.892 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedChassisDef::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ChassisDef value)

11:32:40.895 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value)
11:32:40.898 [Info] Writing prefixes
11:32:40.906 [Info] Patching void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDVehicleArmorReadout_Init::Postfix(BattleTech.UI.HUDVehicleArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)

11:32:40.909 [Info] Running ILHook manipulator on void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)
11:32:40.912 [Info] Writing postfixes
11:32:40.926 [Info] Patching void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.GameRepresentation_SetHighlightAlpha::Prefix(BattleTech.GameRepresentation __instance, float alpha)

11:32:40.930 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha)
11:32:40.933 [Info] Writing prefixes
11:32:40.943 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

11:32:40.946 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
11:32:40.950 [Info] Writing postfixes
11:32:40.962 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
3 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:40.965 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:40.968 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
11:32:40.972 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:40.976 [Info] Writing prefixes
11:32:40.979 [Info] Writing postfixes
11:32:40.990 [Info] Patching void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)
1 postfixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)

11:32:40.993 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request)
11:32:40.996 [Info] Writing prefixes
11:32:41.000 [Info] Writing postfixes
11:32:41.007 [Info] Patching void BattleTech.UI.MechLabPanel::ConfirmRevertMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Prefix(BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:41.010 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ConfirmRevertMech()
11:32:41.013 [Info] Writing prefixes
11:32:41.016 [Info] Writing postfixes
11:32:41.024 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_ExitMechLab::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:41.028 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
11:32:41.031 [Info] Writing postfixes
11:32:41.038 [Info] Patching void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryWeapon_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance)

11:32:41.041 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor()
11:32:41.044 [Info] Writing postfixes
11:32:41.049 [Info] Patching void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryGear_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryGear_NotListView __instance)

11:32:41.052 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor()
11:32:41.055 [Info] Writing postfixes
11:32:41.062 [Info] Patching void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechLabPanel_ShowDropErrorMessage::Postfix(BattleTech.UI.MechLabPanel __instance, Localize.Text msg)

11:32:41.064 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg)
11:32:41.067 [Info] Writing postfixes
11:32:41.074 [Info] Patching int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_GetBayRowFromSlot::Prefix(BattleTech.UI.MechBayPanel __instance, Int32& slot)

11:32:41.076 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot)
11:32:41.079 [Info] Writing prefixes
11:32:41.086 [Info] Patching void BattleTech.UI.MechBayPanel::ViewMechStorage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewMechStorage::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, BattleTech.SimGameState ___sim)

11:32:41.089 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewMechStorage()
11:32:41.093 [Info] Writing postfixes
11:32:41.101 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_Init::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.SimGameState sim)
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

11:32:41.104 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
11:32:41.107 [Info] Writing prefixes
11:32:41.110 [Info] Writing postfixes
11:32:41.116 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

11:32:41.120 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
11:32:41.124 [Info] Writing prefixes
11:32:41.133 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, Boolean& locked, Single& minTonnage, Single& maxTonnage)

11:32:41.136 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage)
11:32:41.138 [Info] Writing prefixes
11:32:41.147 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
1 postfixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Postfix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)

11:32:41.151 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
11:32:41.155 [Info] Writing prefixes
11:32:41.159 [Info] Writing postfixes
11:32:41.168 [Info] Patching void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_SaveLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration config, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

11:32:41.171 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config)
11:32:41.175 [Info] Writing prefixes
11:32:41.185 [Info] Patching virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceLoadoutSlot_OnAddItem::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, bool __result, BattleTech.UI.LanceConfiguratorPanel ___LC)

11:32:41.190 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
11:32:41.195 [Info] Writing prefixes
11:32:41.205 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

11:32:41.208 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
11:32:41.211 [Info] Writing prefixes
11:32:41.214 [Info] Writing postfixes
11:32:41.224 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

11:32:41.227 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
11:32:41.229 [Info] Writing prefixes
11:32:41.233 [Info] Writing postfixes
11:32:41.248 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_MoveMultiplier::Prefix(BattleTech.Mech __instance, Single& __result)
2 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MoveMultiplier::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:41.251 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
11:32:41.255 [Info] Writing prefixes
11:32:41.258 [Info] Writing postfixes
11:32:41.267 [Info] Patching void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LogMechKillInflicted::Prefix(BattleTech.Pilot __instance, int stackID, string sourceID)

11:32:41.269 [Info] Running ILHook manipulator on void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID)
11:32:41.271 [Info] Writing prefixes
11:32:41.279 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
4 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

11:32:41.282 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
11:32:41.286 [Info] Writing prefixes
11:32:41.289 [Info] Writing postfixes
11:32:41.299 [Info] Patching void BattleTech.Rendering.MechMeshMerge::GenerateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_GenerateCache::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

11:32:41.302 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::GenerateCache()
11:32:41.305 [Info] Writing prefixes
11:32:41.329 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnDestroy::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

11:32:41.332 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnDestroy()
11:32:41.334 [Info] Writing prefixes
11:32:41.347 [Info] Patching void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_BuildCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

11:32:41.350 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh()
11:32:41.353 [Info] Writing prefixes
11:32:41.376 [Info] Patching void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_RefreshCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

11:32:41.379 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged)
11:32:41.381 [Info] Writing prefixes
11:32:41.392 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnEnable::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

11:32:41.395 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnEnable()
11:32:41.398 [Info] Writing prefixes
11:32:41.415 [Info] Patching virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_ContractInitialize::Postfix(BattleTech.UnitSpawnPointGameLogic __instance)

11:32:41.419 [Info] Running ILHook manipulator on virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize()
11:32:41.422 [Info] Writing postfixes
11:32:41.432 [Info] Patching static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorFactory_CreateMech::Prefix(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

11:32:41.435 [Info] Running ILHook manipulator on static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
11:32:41.438 [Info] Writing prefixes
11:32:41.445 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

11:32:41.448 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
11:32:41.451 [Info] Writing prefixes
11:32:41.463 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

11:32:41.466 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
11:32:41.468 [Info] Writing postfixes
11:32:41.476 [Info] Patching static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorFactory_CreateVehicle::Postfix(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Vehicle& __result)

11:32:41.479 [Info] Running ILHook manipulator on static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
11:32:41.481 [Info] Writing postfixes
11:32:41.490 [Info] Patching void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDestructibleObject_Collapse::Prefix(MechDestructibleObject __instance, UnityEngine.Vector3 forceDirection, float forceMagnitude, UnityEngine.Rigidbody[]& ___destroyedRigidbodies)

11:32:41.493 [Info] Running ILHook manipulator on void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude)
11:32:41.496 [Info] Writing prefixes
11:32:41.504 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_TryShow::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance, BattleTech.MechRepresentationSimGame mechRep)

11:32:41.507 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep)
11:32:41.509 [Info] Writing prefixes
11:32:41.514 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_OnValueChanged::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance)

11:32:41.518 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged()
11:32:41.522 [Info] Writing prefixes
11:32:41.529 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshPaintSelector() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechLabPanel_RefreshPaintSelector::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechPaintPatternSelectorWidget ___paintSelector)

11:32:41.533 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshPaintSelector()
11:32:41.535 [Info] Writing prefixes
11:32:41.544 [Info] Patching UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_childrenRenderers::Prefix(BattleTech.Rendering.MechMeshMerge __instance, Boolean& __state, UnityEngine.SkinnedMeshRenderer[]& ____childrenRenderers, UnityEngine.GameObject& ___visibleObject, UnityEngine.SkinnedMeshRenderer[]& __result)

11:32:41.546 [Info] Running ILHook manipulator on UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers()
11:32:41.549 [Info] Writing prefixes
11:32:41.557 [Info] Patching void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Renderer_sharedMaterial_set::Prefix(UnityEngine.Renderer __instance, UnityEngine.Material value)

11:32:41.560 [Info] Running ILHook manipulator on void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value)
11:32:41.563 [Info] Writing prefixes
11:32:41.570 [Info] Patching void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmorStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)
1 postfixes:
* static void CustomUnits.Mech_ApplyArmorStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)

11:32:41.573 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
11:32:41.576 [Info] Writing prefixes
11:32:41.578 [Info] Writing postfixes
11:32:41.587 [Info] Patching void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_SetNeedsInjury::Prefix(BattleTech.Pilot __instance, BattleTech.InjuryReason reason)

11:32:41.591 [Info] Running ILHook manipulator on void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason)
11:32:41.594 [Info] Writing prefixes
11:32:41.601 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)

11:32:41.604 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location)
11:32:41.607 [Info] Writing prefixes
11:32:41.610 [Info] Writing postfixes
11:32:41.617 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)

11:32:41.621 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location)
11:32:41.624 [Info] Writing prefixes
11:32:41.627 [Info] Writing postfixes
11:32:41.635 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.ArmorLocation value)
1 postfixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.ArmorLocation value)

11:32:41.637 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value)
11:32:41.640 [Info] Writing prefixes
11:32:41.643 [Info] Writing postfixes
11:32:41.650 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Prefix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

11:32:41.654 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
11:32:41.658 [Info] Writing prefixes
11:32:41.661 [Info] Writing postfixes
11:32:41.671 [Info] Patching static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetLongArmorLocation::Postfix(BattleTech.ArmorLocation location, Localize.Text& __result)

11:32:41.674 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location)
11:32:41.677 [Info] Writing postfixes
11:32:41.688 [Info] Patching static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetAbbreviatedChassisLocation::Postfix(BattleTech.ChassisLocations location, Localize.Text& __result)

11:32:41.692 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location)
11:32:41.695 [Info] Writing postfixes
11:32:41.703 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, bool ___usedForCalledShots)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance)

11:32:41.706 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data)
11:32:41.708 [Info] Writing prefixes
11:32:41.711 [Info] Writing postfixes
11:32:41.721 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:41.724 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
11:32:41.727 [Info] Writing prefixes
11:32:41.730 [Info] Writing postfixes
11:32:41.744 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:41.747 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
11:32:41.749 [Info] Writing postfixes
11:32:41.864 [Info] Patching void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Prefix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)
1 postfixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Postfix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)

11:32:41.868 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat)
11:32:41.871 [Info] Writing prefixes
11:32:41.875 [Info] Writing postfixes
11:32:41.890 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_NukeStructureLocation::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomUnits.Mech_NukeStructureLocation::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

11:32:41.894 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
11:32:41.897 [Info] Writing prefixes
11:32:41.900 [Info] Writing postfixes
11:32:41.909 [Info] Patching static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechStructureRules_GetDependentLocation::Postfix(BattleTech.ChassisLocations location, BattleTech.ChassisLocations& __result)

11:32:41.911 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location)
11:32:41.915 [Info] Writing postfixes
11:32:41.921 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

11:32:41.925 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
11:32:41.928 [Info] Writing prefixes
11:32:41.930 [Info] Writing postfixes
11:32:41.939 [Info] Patching bool BattleTech.Mech::get_IsLegged() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsLegged::Postfix(BattleTech.Mech __instance, Boolean& __result)

11:32:41.941 [Info] Running ILHook manipulator on bool BattleTech.Mech::get_IsLegged()
11:32:41.944 [Info] Writing postfixes
11:32:41.951 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:41.954 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
11:32:41.958 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
11:32:41.961 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:41.964 [Info] Writing postfixes
11:32:41.973 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

11:32:41.976 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:41.979 [Info] Writing prefixes
11:32:41.982 [Info] Writing postfixes
11:32:42.005 [Info] Patching bool BattleTech.MechDef::get_IsDestroyed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsDestroyed::Postfix(BattleTech.MechDef __instance, Boolean& __result)

11:32:42.008 [Info] Running ILHook manipulator on bool BattleTech.MechDef::get_IsDestroyed()
11:32:42.011 [Info] Writing postfixes
11:32:42.019 [Info] Patching void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyLegStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

11:32:42.022 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
11:32:42.026 [Info] Writing prefixes
11:32:42.035 [Info] Patching void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

11:32:42.039 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
11:32:42.042 [Info] Writing prefixes
11:32:42.049 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
* static bool CustomUnits.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

11:32:42.054 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
11:32:42.058 [Info] Writing prefixes
11:32:42.067 [Info] Patching void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplySideTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

11:32:42.071 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
11:32:42.073 [Info] Writing prefixes
11:32:42.080 [Info] Patching void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyCenterTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

11:32:42.083 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
11:32:42.087 [Info] Writing prefixes
11:32:42.097 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:42.100 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:42.103 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:42.106 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:42.109 [Info] Writing prefixes
11:32:42.111 [Info] Writing postfixes
11:32:42.124 [Info] Patching virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Prefix(BattleTech.Mech __instance, BattleTech.AttackDirection attackDirection, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Postfix()

11:32:42.127 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection)
11:32:42.129 [Info] Writing prefixes
11:32:42.131 [Info] Writing postfixes
11:32:42.144 [Info] Patching void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Prefix(BattleTech.UI.CombatDebugHUD __instance)
1 postfixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Postfix()

11:32:42.146 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics()
11:32:42.150 [Info] Writing prefixes
11:32:42.152 [Info] Writing postfixes
11:32:42.160 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
1 postfixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:42.163 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
11:32:42.165 [Info] Writing prefixes
11:32:42.169 [Info] Writing postfixes
11:32:42.178 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)

11:32:42.182 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)
11:32:42.185 [Info] Writing prefixes
11:32:42.189 [Info] Writing postfixes
11:32:42.201 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetAdjacentHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)

11:32:42.203 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)
11:32:42.206 [Info] Writing prefixes
11:32:42.209 [Info] Writing postfixes
11:32:42.222 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)

11:32:42.226 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
11:32:42.229 [Info] Writing prefixes
11:32:42.231 [Info] Writing postfixes
11:32:42.241 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeIn::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

11:32:42.244 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length)
11:32:42.247 [Info] Writing prefixes
11:32:42.253 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeOut::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

11:32:42.257 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length)
11:32:42.260 [Info] Writing prefixes
11:32:42.265 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_OnUnitSpawnComplete::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

11:32:42.268 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
11:32:42.270 [Info] Writing prefixes
11:32:42.273 [Info] Writing postfixes
11:32:42.280 [Info] Patching System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_GetRealMissionObjectiveResults::Postfix(BattleTech.Contract __instance, BattleTech.TeamController teamController, System.Collections.Generic.List`1[[BattleTech.MissionObjectiveResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:42.282 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController)
11:32:42.285 [Info] Writing postfixes
11:32:42.297 [Info] Patching bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HostilityMatrix_IsFriendly::Prefix(BattleTech.HostilityMatrix __instance, BattleTech.Team teamOne, BattleTech.Team teamTwo, Boolean& __result)

11:32:42.300 [Info] Running ILHook manipulator on bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo)
11:32:42.303 [Info] Writing prefixes
11:32:42.309 [Info] Patching virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateJump_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

11:32:42.312 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos)
11:32:42.314 [Info] Writing prefixes
11:32:42.323 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

11:32:42.326 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
11:32:42.328 [Info] Writing prefixes
11:32:42.335 [Info] Patching void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, MessageCenterMessage message, String& ____teamId, BattleTech.Team& ____team)

11:32:42.338 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message)
11:32:42.340 [Info] Writing postfixes
11:32:42.347 [Info] Patching virtual void BattleTech.Mech::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_HandleDeath::Postfix(BattleTech.Mech __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

11:32:42.350 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::HandleDeath(string attackerGUID)
11:32:42.353 [Info] Writing postfixes
11:32:42.361 [Info] Patching virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_HandleDeath::Postfix(BattleTech.Vehicle __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

11:32:42.364 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID)
11:32:42.367 [Info] Writing postfixes
11:32:42.374 [Info] Patching virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.OccupyRegionObjective_UpdateCounts::Postfix(BattleTech.Designed.OccupyRegionObjective __instance)

11:32:42.376 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts()
11:32:42.379 [Info] Writing postfixes
11:32:42.386 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ObjectiveGameLogic_ActivateObjectiveConvoy::Prefix(BattleTech.Framework.ObjectiveGameLogic __instance)
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

11:32:42.390 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
11:32:42.394 [Info] Writing prefixes
11:32:42.396 [Info] Writing postfixes
11:32:42.403 [Info] Patching float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetTerrainModifiedCost::Postfix(BattleTech.PathNodeGrid __instance, BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable, BattleTech.AbstractActor ___owningActor, BattleTech.CombatGameState ___combat, Single& __result)

11:32:42.406 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable)
11:32:42.408 [Info] Writing postfixes
11:32:42.417 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

11:32:42.421 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
11:32:42.424 [Info] Writing postfixes
11:32:42.436 [Info] Patching virtual void BattleTech.MechJumpSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_OnAdded::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:42.439 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnAdded()
11:32:42.442 [Info] Writing postfixes
11:32:42.462 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
1 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

11:32:42.465 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
11:32:42.467 [Info] Writing prefixes
11:32:42.470 [Info] Writing postfixes
11:32:42.480 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardDelta::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 delta)

11:32:42.483 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta)
11:32:42.486 [Info] Writing postfixes
11:32:42.495 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)

11:32:42.498 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
11:32:42.501 [Info] Writing prefixes
11:32:42.513 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
4 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:42.516 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
11:32:42.519 [Info] Writing prefixes
11:32:42.522 [Info] Writing postfixes
11:32:42.533 [Info] Patching void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechJumpSequence_Constructor::Prefix(BattleTech.MechJumpSequence __instance, UnityEngine.Vector3& finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)

11:32:42.536 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)
11:32:42.538 [Info] Writing prefixes
11:32:42.547 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

11:32:42.550 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
11:32:42.554 [Info] Writing prefixes
11:32:42.561 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

11:32:42.564 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
11:32:42.567 [Info] Writing prefixes
11:32:42.572 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

11:32:42.575 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
11:32:42.578 [Info] Writing prefixes
11:32:42.586 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

11:32:42.589 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
11:32:42.593 [Info] Writing prefixes
11:32:42.601 [Info] Patching void BattleTech.ActorMovementSequence::set_DamageParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_DamageParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

11:32:42.603 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_DamageParam(float value)
11:32:42.606 [Info] Writing prefixes
11:32:42.612 [Info] Patching void BattleTech.MechJumpSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_UpdateSquad::Postfix(BattleTech.MechJumpSequence __instance, bool ___HasStarted, float ___t)

11:32:42.616 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Update()
11:32:42.619 [Info] Writing postfixes
11:32:42.629 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_JumpDistance::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:42.632 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
11:32:42.634 [Info] Writing prefixes
11:32:42.637 [Info] Writing postfixes
11:32:42.644 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechJumpSequence_CompleteJump::Prefix(BattleTech.MechJumpSequence __instance, Boolean& __state)
3 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomUnits.MechJumpSequence_CompleteJump::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __state)

11:32:42.647 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
11:32:42.650 [Info] Writing prefixes
11:32:42.653 [Info] Writing postfixes
11:32:42.662 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_RefreshSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, bool forceUpdate, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

11:32:42.664 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
11:32:42.667 [Info] Writing prefixes
11:32:42.670 [Info] Writing postfixes
11:32:42.681 [Info] Patching virtual void BattleTech.MechRepresentation::LateUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:42.684 [Info] Running ILHook manipulator on virtual void BattleTech.MechRepresentation::LateUpdate()
11:32:42.687 [Info] Transpiling virtual void BattleTech.MechRepresentation::LateUpdate()
11:32:42.694 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:42.708 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_OnAdded::Prefix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType& ___moveType)

11:32:42.711 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnAdded()
11:32:42.713 [Info] Writing prefixes
11:32:42.732 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadDamageState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentationSimGame_LoadDamageState::Prefix(BattleTech.MechRepresentationSimGame __instance)

11:32:42.735 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadDamageState()
11:32:42.737 [Info] Writing prefixes
11:32:42.744 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:42.747 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
11:32:42.751 [Info] Writing postfixes
11:32:42.758 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)
* static void CustomUnits.Mech_WorkingJumpjets::Postfix(BattleTech.Mech __instance, Int32& __result)

11:32:42.761 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
11:32:42.763 [Info] Writing postfixes
11:32:42.771 [Info] Patching System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateJump_GetAllDFATargets::Postfix(BattleTech.UI.SelectionStateJump __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:42.774 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets()
11:32:42.777 [Info] Writing postfixes
11:32:42.792 [Info] Patching virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanDFATargetFromPosition::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, Boolean& __result)

11:32:42.794 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position)
11:32:42.797 [Info] Writing postfixes
11:32:42.804 [Info] Patching virtual int BattleTech.AbstractActor::get_GuardLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GuardLevel::Postfix(BattleTech.Mech __instance, Int32& __result)

11:32:42.806 [Info] Running ILHook manipulator on virtual int BattleTech.AbstractActor::get_GuardLevel()
11:32:42.809 [Info] Writing postfixes
11:32:42.820 [Info] Patching bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanEngageTarget::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, String& debugMsg, Boolean& __result)

11:32:42.823 [Info] Running ILHook manipulator on bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg)
11:32:42.827 [Info] Writing postfixes
11:32:42.835 [Info] Patching void BattleTech.MechDisplacementSequence::ApplyDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDisplacementSequence_ApplyDamage::Prefix(BattleTech.MechDisplacementSequence __instance)

11:32:42.838 [Info] Running ILHook manipulator on void BattleTech.MechDisplacementSequence::ApplyDamage()
11:32:42.841 [Info] Writing prefixes
11:32:42.857 [Info] Patching void BattleTech.Rendering.UI.UICreep::RefreshCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_RefreshCache::Prefix(BattleTech.Rendering.UI.UICreep __instance, UnityEngine.Bounds& ___creepBounds)

11:32:42.860 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.UICreep::RefreshCache()
11:32:42.863 [Info] Writing prefixes
11:32:42.877 [Info] Patching void BattleTech.MechRepresentation::SetLoadAnimation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetLoadAnimation::Prefix(BattleTech.MechRepresentation __instance)

11:32:42.880 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetLoadAnimation()
11:32:42.883 [Info] Writing prefixes
11:32:42.894 [Info] Patching void BattleTech.MechRepresentation::UpdateHeatSetting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateHeatSetting::Prefix(BattleTech.MechRepresentation __instance)

11:32:42.897 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateHeatSetting()
11:32:42.899 [Info] Writing prefixes
11:32:42.907 [Info] Patching void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateLegDamageAnimFlags::Prefix(BattleTech.MechRepresentation __instance, BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)

11:32:42.909 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)
11:32:42.912 [Info] Writing prefixes
11:32:42.919 [Info] Patching void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerMeleeTransition::Prefix(BattleTech.MechRepresentation __instance, bool meleeIn)

11:32:42.923 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn)
11:32:42.926 [Info] Writing prefixes
11:32:42.932 [Info] Patching void BattleTech.MechRepresentation::ClearLoadState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ClearLoadState::Prefix(BattleTech.MechRepresentation __instance)

11:32:42.935 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ClearLoadState()
11:32:42.937 [Info] Writing prefixes
11:32:42.943 [Info] Patching void BattleTech.MechRepresentation::PlayComponentCritVFX(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayComponentCritVFX::Prefix(BattleTech.MechRepresentation __instance, int location)

11:32:42.947 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayComponentCritVFX(int location)
11:32:42.950 [Info] Writing prefixes
11:32:42.960 [Info] Patching void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayDeathFloatie::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod)

11:32:42.963 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod)
11:32:42.966 [Info] Writing prefixes
11:32:42.973 [Info] Patching void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetMeleeIdleState::Prefix(BattleTech.MechRepresentation __instance, bool isMelee)

11:32:42.976 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee)
11:32:42.979 [Info] Writing prefixes
11:32:42.986 [Info] Patching void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleRandomIdles::Prefix(BattleTech.MechRepresentation __instance, bool shouldIdle)

11:32:42.989 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle)
11:32:42.993 [Info] Writing prefixes
11:32:43.001 [Info] Patching void BattleTech.MechRepresentation::SetIdleAnimState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetIdleAnimState::Prefix(BattleTech.MechRepresentation __instance)

11:32:43.005 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetIdleAnimState()
11:32:43.008 [Info] Writing prefixes
11:32:43.016 [Info] Patching void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayImpactAnimSimple::Prefix(BattleTech.MechRepresentation __instance, BattleTech.AttackDirection attackDirection, float totalDamage)

11:32:43.020 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage)
11:32:43.023 [Info] Writing prefixes
11:32:43.034 [Info] Patching void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetUnsteadyAnim::Prefix(BattleTech.MechRepresentation __instance, bool isUnsteady)

11:32:43.037 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady)
11:32:43.040 [Info] Writing prefixes
11:32:43.046 [Info] Patching void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ForceKnockdown::Prefix(BattleTech.MechRepresentation __instance, UnityEngine.Vector2 attackDirection)

11:32:43.049 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection)
11:32:43.052 [Info] Writing prefixes
11:32:43.061 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

11:32:43.064 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetAudio()
11:32:43.067 [Info] Writing prefixes
11:32:43.076 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

11:32:43.078 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetAudio()
11:32:43.082 [Info] Writing prefixes
11:32:43.090 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

11:32:43.093 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetEffect()
11:32:43.096 [Info] Writing prefixes
11:32:43.103 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

11:32:43.106 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetEffect()
11:32:43.109 [Info] Writing prefixes
11:32:43.117 [Info] Patching void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleHeadlights::Prefix(BattleTech.MechRepresentation __instance, bool headlightsActive)

11:32:43.121 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive)
11:32:43.126 [Info] Writing prefixes
11:32:43.260 [Info] Patching void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_HandleDeathOnLoad::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod, int location)

11:32:43.263 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location)
11:32:43.265 [Info] Writing prefixes
11:32:43.272 [Info] Patching void BattleTech.MechRepresentation::PlayAlliesReportDeathVO() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayAlliesReportDeathVO::Prefix(BattleTech.MechRepresentation __instance)

11:32:43.275 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayAlliesReportDeathVO()
11:32:43.278 [Info] Writing prefixes
11:32:43.287 [Info] Patching void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerFootFall::Prefix(BattleTech.MechRepresentation __instance, int leftFoot)

11:32:43.291 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot)
11:32:43.294 [Info] Writing prefixes
11:32:43.308 [Info] Patching void BattleTech.ActorMovementSequence::PlayMeleeAnim() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Prefix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee, BattleTech.ICombatant ___meleeTarget)

11:32:43.311 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::PlayMeleeAnim()
11:32:43.314 [Info] Writing prefixes
11:32:43.317 [Info] Writing postfixes
11:32:43.327 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateCache::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

11:32:43.331 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateCache()
11:32:43.334 [Info] Writing prefixes
11:32:43.344 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateProperties() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateProperties::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

11:32:43.346 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateProperties()
11:32:43.349 [Info] Writing prefixes
11:32:43.361 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_AddProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)

11:32:43.364 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)
11:32:43.366 [Info] Writing prefixes
11:32:43.373 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_RemoveProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)

11:32:43.376 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)
11:32:43.378 [Info] Writing prefixes
11:32:43.385 [Info] Patching virtual void BattleTech.VehicleRepresentation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_Update::Prefix(BattleTech.VehicleRepresentation __instance)

11:32:43.388 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::Update()
11:32:43.391 [Info] Writing prefixes
11:32:43.397 [Info] Patching virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:43.400 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
11:32:43.403 [Info] Transpiling virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
11:32:43.406 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:43.413 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:43.416 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
11:32:43.420 [Info] Transpiling void BattleTech.MechDef::Refresh()
11:32:43.423 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:43.427 [Info] Writing postfixes
11:32:43.433 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SorterMechInventory.Patches.MechDef_SetInventory_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponentRef[]& newInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:43.436 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
11:32:43.439 [Info] Transpiling void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
11:32:43.442 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:43.445 [Info] Writing prefixes
11:32:43.452 [Info] Patching virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_GatherDependencies::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:43.456 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:43.459 [Info] Writing prefixes
11:32:43.469 [Info] Patching void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_RequestInventoryPrefabs::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:43.472 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:43.474 [Info] Writing prefixes
11:32:43.485 [Info] Patching virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_GatherDependencies::Postfix(BattleTech.VehicleChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:43.488 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:43.492 [Info] Writing postfixes
11:32:43.503 [Info] Patching virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_DependenciesLoaded::Postfix(BattleTech.VehicleChassisDef __instance, uint loadWeight, Boolean& __result)

11:32:43.507 [Info] Running ILHook manipulator on virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight)
11:32:43.510 [Info] Writing postfixes
11:32:43.518 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:43.522 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:43.526 [Info] Writing postfixes
11:32:43.535 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:43.537 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:43.540 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:43.544 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:43.547 [Info] Writing postfixes
11:32:43.558 [Info] Patching virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight)
1 postfixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Postfix(BattleTech.MechDef __instance, uint loadWeight, Boolean& __result)

11:32:43.561 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight)
11:32:43.563 [Info] Writing prefixes
11:32:43.567 [Info] Writing postfixes
11:32:43.576 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_BeginRequestResources::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

11:32:43.579 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
11:32:43.586 [Info] Writing prefixes
11:32:43.589 [Info] Writing postfixes
11:32:43.602 [Info] Patching virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ChassisDef_DependenciesLoaded::Prefix(BattleTech.ChassisDef __instance, uint loadWeight, Boolean& __result, BattleTech.MechComponentRef[]& ___fixedEquipment)

11:32:43.605 [Info] Running ILHook manipulator on virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight)
11:32:43.609 [Info] Writing prefixes
11:32:43.618 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

11:32:43.621 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
11:32:43.624 [Info] Writing postfixes
11:32:43.630 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUD_OnActorSelected::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

11:32:43.634 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
11:32:43.636 [Info] Writing postfixes
11:32:43.643 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)

11:32:43.646 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
11:32:43.649 [Info] Writing prefixes
11:32:43.658 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

11:32:43.661 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
11:32:43.664 [Info] Writing prefixes
11:32:43.667 [Info] Writing postfixes
11:32:43.676 [Info] Patching void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbstractActor_OnPlayerVisibilityChanged::Prefix(BattleTech.AbstractActor __instance, BattleTech.VisibilityLevel& newLevel)

11:32:43.679 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
11:32:43.682 [Info] Writing prefixes
11:32:43.692 [Info] Patching void BattleTech.PathingManager::removeDeadPaths() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingManager_removeDeadPaths::Prefix(BattleTech.PathingManager __instance)

11:32:43.695 [Info] Running ILHook manipulator on void BattleTech.PathingManager::removeDeadPaths()
11:32:43.698 [Info] Writing prefixes
11:32:43.706 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)

11:32:43.710 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
11:32:43.712 [Info] Writing prefixes
11:32:43.722 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)
* static void CustomUnits.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

11:32:43.725 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
11:32:43.728 [Info] Writing postfixes
11:32:43.735 [Info] Patching void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SharedVisibilityCache_RebuildCache::Prefix(BattleTech.SharedVisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

11:32:43.737 [Info] Running ILHook manipulator on void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
11:32:43.740 [Info] Writing prefixes
11:32:43.752 [Info] Patching void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_RebuildCache::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

11:32:43.755 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
11:32:43.759 [Info] Writing prefixes
11:32:43.766 [Info] Patching void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_UpdateCacheReciprocal::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

11:32:43.769 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
11:32:43.772 [Info] Writing prefixes
11:32:43.786 [Info] Patching BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_getSharedValue::Prefix(BattleTech.VisibilityCache __instance, BattleTech.ICombatant target, BattleTech.VisibilityLevelAndAttribution& __result)

11:32:43.789 [Info] Running ILHook manipulator on BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target)
11:32:43.794 [Info] Writing prefixes
11:32:43.817 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyContact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyContact::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

11:32:43.821 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyContact()
11:32:43.824 [Info] Writing prefixes
11:32:43.830 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyVisibility::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

11:32:43.834 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility()
11:32:43.836 [Info] Writing prefixes
11:32:43.842 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMech::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech __result)

11:32:43.845 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
11:32:43.848 [Info] Writing postfixes
11:32:43.855 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_ShowWeaponsUpTo::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

11:32:43.859 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
11:32:43.862 [Info] Writing prefixes
11:32:43.865 [Info] Writing postfixes
11:32:43.875 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)

11:32:43.878 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
11:32:43.882 [Info] Writing prefixes
11:32:43.897 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_InitStats::Postfix(BattleTech.Mech __instance)

11:32:43.900 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
11:32:43.902 [Info] Writing prefixes
11:32:43.906 [Info] Writing postfixes
11:32:43.930 [Info] Patching void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_OnUnitSpawn::Prefix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_OnUnitSpawn::Postfix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

11:32:43.933 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message)
11:32:43.935 [Info] Writing prefixes
11:32:43.938 [Info] Writing postfixes
11:32:43.945 [Info] Patching void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_AddViewer::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_AddViewer::Postfix(FogOfWar.FogOfWarSystem __instance, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

11:32:43.948 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit)
11:32:43.951 [Info] Writing prefixes
11:32:43.954 [Info] Writing postfixes
11:32:43.963 [Info] Patching void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatSelectionHandler_DeselectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

11:32:43.966 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor)
11:32:43.968 [Info] Writing prefixes
11:32:43.975 [Info] Patching void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_WipeToValue::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.FogOfWarState& fowState)

11:32:43.978 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState)
11:32:43.981 [Info] Writing prefixes
11:32:43.990 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

11:32:43.994 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
11:32:43.996 [Info] Writing prefixes
11:32:43.999 [Info] Writing postfixes
11:32:44.006 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants0::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:44.009 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid)
11:32:44.012 [Info] Writing postfixes
11:32:44.021 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants1::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:44.024 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags)
11:32:44.028 [Info] Writing postfixes
11:32:44.035 [Info] Patching void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_DEBUG_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation& aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)

11:32:44.039 [Info] Running ILHook manipulator on void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)
11:32:44.042 [Info] Writing prefixes
11:32:44.056 [Info] Patching BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AITeam_getInvocationForCurrentUnit::Prefix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)
1 postfixes:
* static void CustomUnits.AITeam_getInvocationForCurrentUnit::Postfix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)

11:32:44.061 [Info] Running ILHook manipulator on BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit()
11:32:44.064 [Info] Writing prefixes
11:32:44.068 [Info] Writing postfixes
11:32:44.095 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActorInfo_UpdateItemVisibility::Prefix(BattleTech.UI.CombatHUDActorInfo __instance)

11:32:44.098 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility()
11:32:44.101 [Info] Writing prefixes
11:32:44.115 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PlayerLanceSpawnerGameLogic_OnEnterActive::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

11:32:44.118 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive()
11:32:44.121 [Info] Writing prefixes
11:32:44.129 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_UpdateSplineAnim::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 ___Forward, float ___t)

11:32:44.132 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
11:32:44.135 [Info] Writing prefixes
11:32:44.138 [Info] Writing postfixes
11:32:44.148 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_TurnParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

11:32:44.151 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
11:32:44.154 [Info] Writing prefixes
11:32:44.162 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_ForwardParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

11:32:44.165 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
11:32:44.169 [Info] Writing prefixes
11:32:44.177 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_IsMovingParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

11:32:44.181 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
11:32:44.187 [Info] Writing prefixes
11:32:44.198 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_BeginMovementParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

11:32:44.201 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
11:32:44.205 [Info] Writing prefixes
11:32:44.213 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init_fakeTurret::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

11:32:44.217 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
11:32:44.221 [Info] Writing prefixes
11:32:44.226 [Info] Writing postfixes
11:32:44.238 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_DisplayedTurret_set::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.Turret value)

11:32:44.242 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value)
11:32:44.246 [Info] Writing prefixes
11:32:44.255 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_UpdateTurretStructureAndArmor::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance)

11:32:44.259 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor()
11:32:44.263 [Info] Writing prefixes
11:32:44.274 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_OnActorTakeDamage::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, MessageCenterMessage message)

11:32:44.277 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message)
11:32:44.280 [Info] Writing prefixes
11:32:44.288 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_Init::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.UI.CombatHUD HUD)

11:32:44.292 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD)
11:32:44.296 [Info] Writing prefixes
11:32:44.302 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)

11:32:44.306 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
11:32:44.309 [Info] Writing postfixes
11:32:44.315 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_RefreshActorInfo::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:44.319 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
11:32:44.322 [Info] Writing prefixes
11:32:44.326 [Info] Writing postfixes
11:32:44.334 [Info] Patching float BattleTech.Mech::get_WalkSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_WalkSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:44.337 [Info] Running ILHook manipulator on float BattleTech.Mech::get_WalkSpeed()
11:32:44.340 [Info] Writing postfixes
11:32:44.346 [Info] Patching float BattleTech.Mech::get_RunSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_RunSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:44.349 [Info] Running ILHook manipulator on float BattleTech.Mech::get_RunSpeed()
11:32:44.352 [Info] Writing postfixes
11:32:44.360 [Info] Patching BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_propertyBlock::Prefix(BattleTech.GameRepresentation __instance, BattleTech.Rendering.PropertyBlockManager& __result)

11:32:44.363 [Info] Running ILHook manipulator on BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock()
11:32:44.366 [Info] Writing prefixes
11:32:44.372 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargetable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.375 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargetable()
11:32:44.378 [Info] Writing prefixes
11:32:44.385 [Info] Patching void BattleTech.GameRepresentation::set_IsTargetable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

11:32:44.389 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargetable(bool value)
11:32:44.393 [Info] Writing prefixes
11:32:44.399 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargeted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.403 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargeted()
11:32:44.405 [Info] Writing prefixes
11:32:44.411 [Info] Patching void BattleTech.GameRepresentation::set_IsTargeted(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

11:32:44.414 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargeted(bool value)
11:32:44.417 [Info] Writing prefixes
11:32:44.426 [Info] Patching bool BattleTech.GameRepresentation::get_IsAvailable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.428 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsAvailable()
11:32:44.431 [Info] Writing prefixes
11:32:44.437 [Info] Patching void BattleTech.GameRepresentation::set_IsAvailable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

11:32:44.440 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsAvailable(bool value)
11:32:44.443 [Info] Writing prefixes
11:32:44.449 [Info] Patching bool BattleTech.GameRepresentation::get_IsSelected() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.452 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsSelected()
11:32:44.456 [Info] Writing prefixes
11:32:44.464 [Info] Patching void BattleTech.GameRepresentation::set_IsSelected(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

11:32:44.467 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsSelected(bool value)
11:32:44.470 [Info] Writing prefixes
11:32:44.477 [Info] Patching bool BattleTech.GameRepresentation::get_IsHovered() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.480 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsHovered()
11:32:44.482 [Info] Writing prefixes
11:32:44.490 [Info] Patching void BattleTech.GameRepresentation::set_IsHovered(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

11:32:44.494 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsHovered(bool value)
11:32:44.496 [Info] Writing prefixes
11:32:44.503 [Info] Patching bool BattleTech.GameRepresentation::get_IsDead() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.506 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsDead()
11:32:44.509 [Info] Writing prefixes
11:32:44.515 [Info] Patching void BattleTech.GameRepresentation::set_IsDead(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

11:32:44.518 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsDead(bool value)
11:32:44.522 [Info] Writing prefixes
11:32:44.530 [Info] Patching bool BattleTech.GameRepresentation::get_VisibleToPlayer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_VisibleToPlayer::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

11:32:44.533 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_VisibleToPlayer()
11:32:44.536 [Info] Writing prefixes
11:32:44.544 [Info] Patching void BattleTech.GameRepresentation::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_Awake::Prefix(BattleTech.GameRepresentation __instance)

11:32:44.547 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::Awake()
11:32:44.549 [Info] Writing prefixes
11:32:44.558 [Info] Patching void BattleTech.GameRepresentation::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_OnDestroy::Prefix(BattleTech.GameRepresentation __instance)

11:32:44.561 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::OnDestroy()
11:32:44.564 [Info] Writing prefixes
11:32:44.572 [Info] Patching void BattleTech.GameRepresentation::InitHighlighting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_InitHighlighting::Prefix(BattleTech.GameRepresentation __instance)

11:32:44.575 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::InitHighlighting()
11:32:44.578 [Info] Writing prefixes
11:32:44.587 [Info] Patching void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_SetHighlightColor::Prefix(BattleTech.GameRepresentation __instance, BattleTech.CombatGameState combat, BattleTech.Team team)

11:32:44.590 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team)
11:32:44.594 [Info] Writing prefixes
11:32:44.602 [Info] Patching void BattleTech.GameRepresentation::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeIn::Prefix(BattleTech.GameRepresentation __instance, float length)

11:32:44.605 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeIn(float length)
11:32:44.608 [Info] Writing prefixes
11:32:44.614 [Info] Patching void BattleTech.GameRepresentation::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeOut::Prefix(BattleTech.GameRepresentation __instance, float length)

11:32:44.617 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeOut(float length)
11:32:44.621 [Info] Writing prefixes
11:32:44.628 [Info] Patching void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopManualPersistentVFX::Prefix(BattleTech.GameRepresentation __instance, string vfxName)

11:32:44.632 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName)
11:32:44.634 [Info] Writing prefixes
11:32:44.643 [Info] Patching void BattleTech.GameRepresentation::PauseAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_PauseAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

11:32:44.646 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::PauseAllPersistentVFX()
11:32:44.649 [Info] Writing prefixes
11:32:44.659 [Info] Patching void BattleTech.GameRepresentation::ResumeAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_ResumeAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

11:32:44.662 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::ResumeAllPersistentVFX()
11:32:44.665 [Info] Writing prefixes
11:32:44.673 [Info] Patching void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopAllPersistentVFXAttachedToLocation::Prefix(BattleTech.GameRepresentation __instance, int location)

11:32:44.676 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location)
11:32:44.679 [Info] Writing prefixes
11:32:44.688 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

11:32:44.691 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
11:32:44.694 [Info] Writing prefixes
11:32:44.697 [Info] Writing postfixes
11:32:44.705 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(Boolean& __runOriginal, BattleTech.BaseComponentRef componentRef, String& __result)
2 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)
* static void CustomUnits.MechHardpointRules_GetComponentPrefabName::Postfix(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames, String& __result)

11:32:44.708 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
11:32:44.710 [Info] Writing prefixes
11:32:44.713 [Info] Writing postfixes
11:32:44.722 [Info] Patching void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_RequestInventoryPrefabs::Prefix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)
1 postfixes:
* static void CustomUnits.MechDef_RequestInventoryPrefabs::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)

11:32:44.726 [Info] Running ILHook manipulator on void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight)
11:32:44.729 [Info] Writing prefixes
11:32:44.731 [Info] Writing postfixes
11:32:44.739 [Info] Patching bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_InventoryPrefabsLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight, BattleTech.MechComponentRef[] ___inventory, Boolean& __result)

11:32:44.741 [Info] Running ILHook manipulator on bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight)
11:32:44.744 [Info] Writing prefixes
11:32:44.754 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:44.759 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:44.762 [Info] Writing prefixes
11:32:44.765 [Info] Writing postfixes
11:32:44.775 [Info] Patching virtual void WeaponEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeaponEffect_UpdatePrefire::Prefix(WeaponEffect __instance, Single& ___preFireRate, BattleTech.CombatGameState ___Combat, Single& ___t)

11:32:44.778 [Info] Running ILHook manipulator on virtual void WeaponEffect::Update()
11:32:44.781 [Info] Writing prefixes
11:32:44.792 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
* static bool CustomUnits.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

11:32:44.795 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
11:32:44.797 [Info] Writing prefixes
11:32:44.801 [Info] Writing postfixes
11:32:44.810 [Info] Patching virtual void WeaponEffect::PlayMuzzleFlash() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.WeaponEffect_PlayMuzzleFlash::Postfix(WeaponEffect __instance)

11:32:44.812 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayMuzzleFlash()
11:32:44.815 [Info] Writing postfixes
11:32:44.825 [Info] Patching virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ComponentRepresentation_Init::Prefix(BattleTech.ComponentRepresentation __instance, BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)

11:32:44.828 [Info] Running ILHook manipulator on virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)
11:32:44.832 [Info] Writing prefixes
11:32:44.839 [Info] Patching virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_InitGameRep::Prefix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName, BattleTech.CombatGameState ___combat)
1 postfixes:
* static void CustomUnits.Weapon_InitGameRep::Postfix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)

11:32:44.842 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)
11:32:44.845 [Info] Writing prefixes
11:32:44.847 [Info] Writing postfixes
11:32:44.864 [Info] Patching bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DataManager_Exists::Prefix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, String& id)
1 postfixes:
* static void CustomUnits.DataManager_Exists::Postfix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, string id, Boolean& __result)

11:32:44.867 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id)
11:32:44.870 [Info] Writing prefixes
11:32:44.874 [Info] Writing postfixes
11:32:45.034 [Info] Patching void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_RequestResource::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& id)

11:32:45.037 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id)
11:32:45.040 [Info] Writing prefixes
11:32:45.047 [Info] Patching bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_Contains::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& resourceId)

11:32:45.050 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId)
11:32:45.053 [Info] Writing prefixes
11:32:45.062 [Info] Patching void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DataManager_PoolGameObject::Prefix(BattleTech.Data.DataManager __instance, String& id, UnityEngine.GameObject gameObj)

11:32:45.066 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj)
11:32:45.068 [Info] Writing prefixes
11:32:45.075 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)

11:32:45.077 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
11:32:45.081 [Info] Writing prefixes
11:32:45.088 [Info] Patching virtual void BattleTech.EncounterLayerParent::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.EncounterLayerParent_Update::Postfix(BattleTech.EncounterLayerParent __instance)

11:32:45.093 [Info] Running ILHook manipulator on virtual void BattleTech.EncounterLayerParent::Awake()
11:32:45.095 [Info] Writing postfixes
11:32:45.104 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:45.107 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
11:32:45.110 [Info] Writing prefixes
11:32:45.136 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
2 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void CustomUnits.EncounterLayerParent_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

11:32:45.139 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
11:32:45.142 [Info] Writing prefixes
11:32:45.146 [Info] Writing postfixes
11:32:45.158 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
6 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

11:32:45.162 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:45.165 [Info] Writing prefixes
11:32:45.168 [Info] Writing postfixes
11:32:45.191 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

11:32:45.195 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
11:32:45.198 [Info] Writing prefixes
11:32:45.232 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
5 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:45.235 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:45.238 [Info] Writing prefixes
11:32:45.241 [Info] Writing postfixes
11:32:45.286 [Info] Patching void BattleTech.SimGameState::FillContractLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_FillContractLance::Prefix(BattleTech.SimGameState __instance)

11:32:45.292 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FillContractLance()
11:32:45.296 [Info] Writing prefixes
11:32:45.312 [Info] Patching void BattleTech.SimGameState::OnLanceConfiguratorAccept() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_OnLanceConfiguratorAccept::Prefix(BattleTech.SimGameState __instance)

11:32:45.317 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnLanceConfiguratorAccept()
11:32:45.322 [Info] Writing prefixes
11:32:45.331 [Info] Patching BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GetLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration& __result, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

11:32:45.334 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance()
11:32:45.337 [Info] Writing prefixes
11:32:45.346 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:45.349 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
11:32:45.354 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
11:32:45.358 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:45.363 [Info] Writing prefixes
11:32:45.367 [Info] Writing postfixes
11:32:45.376 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults, Int32& ___numUnits, Int32& ___numOpponentUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState, BattleTech.Data.DataManager& ___dm)

11:32:45.380 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract)
11:32:45.384 [Info] Writing prefixes
11:32:45.388 [Info] Writing postfixes
11:32:45.401 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract)

11:32:45.404 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
11:32:45.407 [Info] Writing prefixes
11:32:45.415 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowMyResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults)

11:32:45.418 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults()
11:32:45.422 [Info] Writing prefixes
11:32:45.430 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLanceTonnage::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText)

11:32:45.433 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage()
11:32:45.436 [Info] Writing prefixes
11:32:45.446 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLance::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText, BattleTech.UI.LanceHeaderWidget& ___headerWidget)

11:32:45.449 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance()
11:32:45.452 [Info] Writing prefixes
11:32:45.463 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static bool CustomUnits.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

11:32:45.465 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
11:32:45.468 [Info] Writing prefixes
11:32:45.479 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
* static bool CustomUnits.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:45.482 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
11:32:45.485 [Info] Transpiling void BattleTech.SimGameState::ResolveCompleteContract()
11:32:45.492 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:45.498 [Info] Writing prefixes
11:32:45.502 [Info] Writing postfixes
11:32:45.529 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowOpponentResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults)

11:32:45.532 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults()
11:32:45.535 [Info] Writing prefixes
11:32:45.543 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)

11:32:45.545 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config)
11:32:45.548 [Info] Writing prefixes
11:32:45.552 [Info] Writing postfixes
11:32:45.564 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

11:32:45.568 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
11:32:45.570 [Info] Writing prefixes
11:32:45.573 [Info] Writing postfixes
11:32:45.582 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

11:32:45.586 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
11:32:45.589 [Info] Writing prefixes
11:32:45.599 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

11:32:45.601 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
11:32:45.604 [Info] Writing prefixes
11:32:45.612 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits)

11:32:45.617 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
11:32:45.619 [Info] Writing prefixes
11:32:45.632 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustomUnits.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

11:32:45.635 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
11:32:45.638 [Info] Writing postfixes
11:32:45.645 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:45.648 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
11:32:45.651 [Info] Writing prefixes
11:32:45.654 [Info] Writing postfixes
11:32:45.665 [Info] Patching void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUD_updateHUDElements::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

11:32:45.668 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor)
11:32:45.671 [Info] Writing postfixes
11:32:45.678 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorSelected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:45.682 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message)
11:32:45.684 [Info] Writing postfixes
11:32:45.694 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorDeselected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:45.697 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID)
11:32:45.699 [Info] Writing postfixes
11:32:45.706 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayInvoked::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:45.708 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message)
11:32:45.711 [Info] Writing postfixes
11:32:45.718 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayDismissed::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:45.722 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message)
11:32:45.726 [Info] Writing postfixes
11:32:45.733 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

11:32:45.736 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
11:32:45.739 [Info] Writing postfixes
11:32:45.755 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

11:32:45.759 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
11:32:45.762 [Info] Writing postfixes
11:32:45.770 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Enabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

11:32:45.774 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter()
11:32:45.777 [Info] Writing postfixes
11:32:45.782 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Selected_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

11:32:45.785 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter()
11:32:45.789 [Info] Writing postfixes
11:32:45.795 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Highlighted_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

11:32:45.798 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter()
11:32:45.802 [Info] Writing postfixes
11:32:45.807 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Disabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

11:32:45.810 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter()
11:32:45.813 [Info] Writing postfixes
11:32:45.821 [Info] Patching static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ShortcutExtensions_DOScale::Prefix(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)

11:32:45.824 [Info] Running ILHook manipulator on static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)
11:32:45.827 [Info] Writing prefixes
11:32:45.839 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD)

11:32:45.843 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
11:32:45.846 [Info] Writing prefixes
11:32:45.853 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

11:32:45.856 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
11:32:45.860 [Info] Writing postfixes
11:32:45.867 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerExit::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

11:32:45.870 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
11:32:45.873 [Info] Writing postfixes
11:32:45.881 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)

11:32:45.885 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
11:32:45.887 [Info] Writing prefixes
11:32:45.890 [Info] Writing postfixes
11:32:45.904 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_InitAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:45.907 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
11:32:45.909 [Info] Writing prefixes
11:32:45.912 [Info] Writing postfixes
11:32:45.924 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshActionHotKeys::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

11:32:45.927 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys()
11:32:45.929 [Info] Writing prefixes
11:32:45.935 [Info] Patching bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionState_ProcessDoneWithMechButton::Prefix(BattleTech.UI.SelectionState __instance, string button, Boolean& __result)

11:32:45.938 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button)
11:32:45.941 [Info] Writing prefixes
11:32:45.951 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)

11:32:45.954 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
11:32:45.958 [Info] Writing prefixes
11:32:45.962 [Info] Writing postfixes
11:32:45.978 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomUnits.CombatHUDActionButton_ExecuteClickAbilities::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

11:32:45.981 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
11:32:45.984 [Info] Writing prefixes
11:32:45.995 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:45.998 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
11:32:46.001 [Info] Writing prefixes
11:32:46.005 [Info] Writing postfixes
11:32:46.013 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

11:32:46.017 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
11:32:46.020 [Info] Writing prefixes
11:32:46.023 [Info] Writing postfixes
11:32:46.030 [Info] Patching System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeightedFactor_CollectMasksForCellAndPathNode::Prefix(BattleTech.WeightedFactor __instance, BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:46.033 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode)
11:32:46.036 [Info] Writing prefixes
11:32:46.043 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_OnLanceConfiguratorClosed::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance)

11:32:46.046 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed()
11:32:46.050 [Info] Writing prefixes
11:32:46.059 [Info] Patching void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Prefix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Postfix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

11:32:46.063 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
11:32:46.066 [Info] Writing prefixes
11:32:46.069 [Info] Writing postfixes
11:32:46.191 [Info] Patching void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_InitDistanceClamp::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Transform xform)

11:32:46.196 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform)
11:32:46.199 [Info] Writing postfixes
11:32:46.214 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
2 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
* static void CustomUnits.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

11:32:46.218 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
11:32:46.221 [Info] Writing prefixes
11:32:46.226 [Info] Writing postfixes
11:32:46.235 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

11:32:46.238 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
11:32:46.240 [Info] Writing prefixes
11:32:46.243 [Info] Writing postfixes
11:32:46.250 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMove_UpdateMousePosUI::Postfix(BattleTech.UI.SelectionStateMove __instance)

11:32:46.253 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate()
11:32:46.256 [Info] Writing postfixes
11:32:46.263 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxWalkDistance::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:46.266 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
11:32:46.269 [Info] Writing postfixes
11:32:46.274 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxSprintDistance::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:46.277 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
11:32:46.280 [Info] Writing postfixes
11:32:46.287 [Info] Patching virtual float BattleTech.Vehicle::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxWalkDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

11:32:46.290 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxWalkDistance()
11:32:46.293 [Info] Writing postfixes
11:32:46.299 [Info] Patching virtual float BattleTech.Vehicle::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxSprintDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

11:32:46.306 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxSprintDistance()
11:32:46.309 [Info] Writing postfixes
11:32:46.319 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)
* static void CustomUnits.JumpPathing_JumpPathing::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

11:32:46.323 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
11:32:46.328 [Info] Writing postfixes
11:32:46.337 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:46.340 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
11:32:46.343 [Info] Writing postfixes
11:32:46.354 [Info] Patching virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_InitNaval::Prefix(BattleTech.Mech __instance, UnityEngine.Vector3& position, float facing, bool checkEncounterCells)

11:32:46.358 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
11:32:46.360 [Info] Writing prefixes
11:32:46.373 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)

11:32:46.376 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
11:32:46.379 [Info] Writing prefixes
11:32:46.386 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
5 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMovePartial::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:46.390 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
11:32:46.393 [Info] Writing prefixes
11:32:46.395 [Info] Writing postfixes
11:32:46.405 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
* static void CustomUnits.Pathing_ResetPathGridIfTouchingPartial::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor actor)

11:32:46.409 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
11:32:46.411 [Info] Writing prefixes
11:32:46.419 [Info] Patching void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Pathing_UpdateCurrentPath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

11:32:46.421 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI)
11:32:46.424 [Info] Writing postfixes
11:32:46.432 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
1 postfixes:
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

11:32:46.435 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
11:32:46.438 [Info] Writing prefixes
11:32:46.440 [Info] Writing postfixes
11:32:46.447 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickPosPartial::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

11:32:46.451 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
11:32:46.454 [Info] Writing prefixes
11:32:46.458 [Info] Writing postfixes
11:32:46.467 [Info] Patching void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_LockToRotateInPlace::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

11:32:46.470 [Info] Running ILHook manipulator on void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI)
11:32:46.473 [Info] Writing prefixes
11:32:46.481 [Info] Patching virtual void BattleTech.UI.SelectionState::OnAddToStack() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_OnAddToStack::Postfix(BattleTech.UI.SelectionState __instance)

11:32:46.484 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionState::OnAddToStack()
11:32:46.488 [Info] Writing postfixes
11:32:46.497 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_CanBackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, Boolean& __result)

11:32:46.500 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut()
11:32:46.503 [Info] Writing postfixes
11:32:46.511 [Info] Patching void BattleTech.JumpPathing::UpdateCurrentPath() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Prefix(BattleTech.JumpPathing __instance, Single& __state)
1 postfixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Postfix(BattleTech.JumpPathing __instance, Single& __state)

11:32:46.513 [Info] Running ILHook manipulator on void BattleTech.JumpPathing::UpdateCurrentPath()
11:32:46.515 [Info] Writing prefixes
11:32:46.518 [Info] Writing postfixes
11:32:46.527 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::BackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_BackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance)

11:32:46.529 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::BackOut()
11:32:46.531 [Info] Writing postfixes
11:32:46.538 [Info] Patching AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_CurrentSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, AudioSwitch_surface_type& __result)

11:32:46.540 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType()
11:32:46.543 [Info] Writing prefixes
11:32:46.548 [Info] Patching bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_BlipDisplayed::Prefix(BattleTech.PilotableActorRepresentation __instance, Boolean& __result)

11:32:46.552 [Info] Running ILHook manipulator on bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed()
11:32:46.555 [Info] Writing prefixes
11:32:46.563 [Info] Patching void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_Init::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)

11:32:46.566 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)
11:32:46.569 [Info] Writing prefixes
11:32:46.581 [Info] Patching void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_InitPaintScheme::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.HeraldryDef heraldryDef, string teamGUID)

11:32:46.584 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID)
11:32:46.587 [Info] Writing prefixes
11:32:46.601 [Info] Patching void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newVisibility, bool showUI)

11:32:46.604 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI)
11:32:46.607 [Info] Writing prefixes
11:32:46.614 [Info] Patching void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_ClearForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)

11:32:46.618 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)
11:32:46.621 [Info] Writing prefixes
11:32:46.631 [Info] Patching void BattleTech.PilotableActorRepresentation::PlayEjectFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_PlayEjectFX::Prefix(BattleTech.PilotableActorRepresentation __instance)

11:32:46.634 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::PlayEjectFX()
11:32:46.636 [Info] Writing prefixes
11:32:46.643 [Info] Patching void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetBlipPositionRotation::Prefix(BattleTech.PilotableActorRepresentation __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

11:32:46.646 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
11:32:46.649 [Info] Writing prefixes
11:32:46.656 [Info] Patching virtual void BattleTech.PilotDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_FromJSON::Postfix(BattleTech.PilotDef __instance)

11:32:46.659 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::FromJSON(string json)
11:32:46.662 [Info] Writing postfixes
11:32:46.668 [Info] Patching void BattleTech.PilotDef::PostDeserialzation() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_PostDeserialzation::Postfix(BattleTech.PilotDef __instance)

11:32:46.671 [Info] Running ILHook manipulator on void BattleTech.PilotDef::PostDeserialzation()
11:32:46.673 [Info] Writing postfixes
11:32:46.680 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)
* static void CustomUnits.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

11:32:46.683 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
11:32:46.686 [Info] Writing postfixes
11:32:46.698 [Info] Patching void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Postfix(BattleTech.SimGameState __instance)

11:32:46.701 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs()
11:32:46.703 [Info] Writing prefixes
11:32:46.706 [Info] Writing postfixes
11:32:46.730 [Info] Patching void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_OnCareerModeCharacterCreationComplete::Prefix(BattleTech.SimGameState __instance, BattleTech.Pilot& p)

11:32:46.733 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p)
11:32:46.735 [Info] Writing prefixes
11:32:46.743 [Info] Patching System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotGenerator_GeneratePilots::Postfix(BattleTech.PilotGenerator __instance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:46.746 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList)
11:32:46.749 [Info] Writing postfixes
11:32:46.760 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

11:32:46.763 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
11:32:46.765 [Info] Writing prefixes
11:32:46.773 [Info] Patching virtual bool BattleTech.AbstractActor::get_IsShutDown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_IsShutDown::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

11:32:46.776 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::get_IsShutDown()
11:32:46.779 [Info] Writing postfixes
11:32:46.786 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByTypeShutdown::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

11:32:46.790 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
11:32:46.794 [Info] Writing prefixes
11:32:46.798 [Info] Writing postfixes
11:32:46.807 [Info] Patching void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ToggleAbilityState::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

11:32:46.810 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState()
11:32:46.813 [Info] Writing prefixes
11:32:46.821 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ActivateAbility::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

11:32:46.825 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility()
11:32:46.827 [Info] Writing prefixes
11:32:46.837 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomUnits.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

11:32:46.840 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
11:32:46.843 [Info] Writing postfixes
11:32:46.851 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:46.855 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:46.857 [Info] Writing postfixes
11:32:46.867 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)
* static void CustomUnits.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

11:32:46.870 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
11:32:46.873 [Info] Writing postfixes
11:32:46.883 [Info] Patching static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetTerrainCost::Prefix(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType, Single& __result)

11:32:46.887 [Info] Running ILHook manipulator on static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType)
11:32:46.889 [Info] Writing prefixes
11:32:46.902 [Info] Patching BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetPathNode::Prefix(BattleTech.PathNodeGrid __instance, int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors, BattleTech.PathNode& __result, BattleTech.PathNode[,]& ___pathNodes, BattleTech.MapTerrainDataCell& ___gpnCell, BattleTech.CombatGameState& ___combat, BattleTech.AbstractActor& ___owningActor)

11:32:46.905 [Info] Running ILHook manipulator on BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors)
11:32:46.908 [Info] Writing prefixes
11:32:46.918 [Info] Patching void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LethalInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

11:32:46.921 [Info] Running ILHook manipulator on void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:46.926 [Info] Writing prefixes
11:32:46.935 [Info] Patching void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_MaxInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

11:32:46.938 [Info] Running ILHook manipulator on void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:46.940 [Info] Writing prefixes
11:32:46.948 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
2 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

11:32:46.951 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:46.956 [Info] Writing prefixes
11:32:46.959 [Info] Writing postfixes
11:32:46.969 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)
* static void CustomUnits.MessageCenter_PublishMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

11:32:46.972 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
11:32:46.974 [Info] Writing prefixes
11:32:46.981 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 4 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
4 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:46.985 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:46.989 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:46.993 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:46.996 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:47.000 [Info] Writing prefixes
11:32:47.004 [Info] Writing postfixes
11:32:47.013 [Info] Patching void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_KillPilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

11:32:47.016 [Info] Running ILHook manipulator on void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:47.020 [Info] Writing prefixes
11:32:47.028 [Info] Patching float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetCurrentStructureSquad::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, Single& __result)

11:32:47.031 [Info] Running ILHook manipulator on float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location)
11:32:47.033 [Info] Writing postfixes
11:32:47.040 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomUnits.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

11:32:47.043 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
11:32:47.046 [Info] Writing postfixes
11:32:47.053 [Info] Patching virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_NullWidgets::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

11:32:47.057 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets()
11:32:47.060 [Info] Writing prefixes
11:32:47.067 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::RemoveMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_RemoveMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

11:32:47.070 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::RemoveMech()
11:32:47.073 [Info] Writing prefixes
11:32:47.083 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SGRoomController_MechBay_LoadMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force, BattleTech.MechDef& ___loadedMechDef)

11:32:47.086 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force)
11:32:47.089 [Info] Writing prefixes
11:32:47.097 [Info] Patching void BattleTech.UI.MechBayPanel::ViewBays() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)

11:32:47.101 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewBays()
11:32:47.103 [Info] Writing postfixes
11:32:47.111 [Info] Patching void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechPlacementPopup_SetData::Prefix(BattleTech.UI.MechPlacementPopup __instance, BattleTech.UI.MechBayRowGroupWidget ___rowGroupWidget, BattleTech.SimGameState sim)

11:32:47.114 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech)
11:32:47.116 [Info] Writing prefixes
11:32:47.128 [Info] Patching void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayRowGroupWidget_SetData::Prefix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim, BattleTech.UI.MechBayRowWidget[]& ___bays)
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_SetData::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)

11:32:47.131 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)
11:32:47.135 [Info] Writing prefixes
11:32:47.138 [Info] Writing postfixes
11:32:47.152 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_strings::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& startingMechs)

11:32:47.155 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs)
11:32:47.159 [Info] Writing prefixes
11:32:47.170 [Info] Patching void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Prefix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
1 postfixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Postfix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)

11:32:47.174 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
11:32:47.177 [Info] Writing prefixes
11:32:47.180 [Info] Writing postfixes
11:32:47.195 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_MechDefs::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& startingMechs)

11:32:47.198 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs)
11:32:47.200 [Info] Writing prefixes
11:32:47.208 [Info] Patching int BattleTech.SimGameState::GetFirstFreeMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SimGameState_GetFirstFreeMechBay::Postfix(BattleTech.SimGameState __instance, Int32& __result)

11:32:47.211 [Info] Running ILHook manipulator on int BattleTech.SimGameState::GetFirstFreeMechBay()
11:32:47.214 [Info] Writing postfixes
11:32:47.222 [Info] Patching int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_GetFirstFreeBaySlot::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, Int32& __result)

11:32:47.226 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot()
11:32:47.229 [Info] Writing postfixes
11:32:47.239 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static bool CustomUnits.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.StatCollection ___companyStats, BattleTech.UI.SimGameInterruptManager ___interruptQueue)
3 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

11:32:47.242 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
11:32:47.245 [Info] Writing prefixes
11:32:47.249 [Info] Writing postfixes
11:32:47.262 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechRepresentationSimGame __instance)
* static bool CustomUnits.MechRepresentationSimGame_LoadWeapons::Prefix(BattleTech.MechRepresentationSimGame __instance, BattleTech.Data.DataManager ___dataManager)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

11:32:47.264 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
11:32:47.268 [Info] Writing prefixes
11:32:47.270 [Info] Writing postfixes
11:32:47.280 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)
* static bool CustomUnits.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement)

11:32:47.283 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
11:32:47.285 [Info] Writing prefixes
11:32:47.296 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)
* static void CustomUnits.MechBayPanel_::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisInfoWidget ___chassisInfoWidget)

11:32:47.298 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
11:32:47.302 [Info] Writing postfixes
11:32:47.312 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

11:32:47.314 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
11:32:47.318 [Info] Writing prefixes
11:32:47.322 [Info] Writing postfixes
11:32:47.334 [Info] Patching virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Get::Prefix(object __instance, String& id)

11:32:47.337 [Info] Running ILHook manipulator on virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id)
11:32:47.340 [Info] Writing prefixes
11:32:47.351 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Exists::Prefix(object __instance, String& id)

11:32:47.355 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id)
11:32:47.358 [Info] Writing prefixes
11:32:47.367 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_TryGet::Prefix(object __instance, String& id)

11:32:47.370 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t)
11:32:47.372 [Info] Writing prefixes
11:32:47.380 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

11:32:47.383 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
11:32:47.386 [Info] Writing prefixes
11:32:47.389 [Info] Writing postfixes
11:32:47.397 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

11:32:47.399 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
11:32:47.402 [Info] Writing prefixes
11:32:47.405 [Info] Writing postfixes
11:32:47.412 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:47.415 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:47.418 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:47.421 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:47.433 [Info] Writing prefixes
11:32:47.437 [Info] Writing postfixes
11:32:47.447 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:47.450 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:47.453 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:47.458 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:47.461 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:47.466 [Info] Writing postfixes
11:32:47.479 [Info] Patching void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_SetOccupiedDesignMask::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& approvedMasks)

11:32:47.483 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks)
11:32:47.486 [Info] Writing prefixes
11:32:47.496 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_OnPositionUpdate::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, Boolean& updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
1 postfixes:
* static void CustomUnits.AbstractActor_OnPositionUpdate::Postfix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging, BattleTech.DesignMaskDef& ___opuDesignMask)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:47.499 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
11:32:47.502 [Info] Transpiling virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
11:32:47.505 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:47.508 [Info] Writing prefixes
11:32:47.511 [Info] Writing postfixes
11:32:47.519 [Info] Patching float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_DamagePerShotFromPosition::Prefix(BattleTech.Weapon __instance, BattleTech.DesignMaskDef& designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)

11:32:47.523 [Info] Running ILHook manipulator on float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)
11:32:47.527 [Info] Writing prefixes
11:32:47.536 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_FindBlockerBetween::Postfix(BattleTech.PathNodeGrid __instance, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

11:32:47.538 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
11:32:47.541 [Info] Writing postfixes
11:32:47.684 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_FindBlockerReciprocal::Prefix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

11:32:47.688 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
11:32:47.691 [Info] Writing prefixes
11:32:47.698 [Info] Patching virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleRepresentation_GetDestructibleObject::Postfix(BattleTech.VehicleRepresentation __instance, MechDestructibleObject& __result)

11:32:47.701 [Info] Running ILHook manipulator on virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location)
11:32:47.704 [Info] Writing postfixes
11:32:47.712 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:47.715 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:47.718 [Info] Writing postfixes
11:32:47.728 [Info] Patching float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameState_GetTargetTerrainModifier::Postfix(BattleTech.ToHit __instance, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee, Single& __result)

11:32:47.732 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee)
11:32:47.735 [Info] Writing postfixes
11:32:47.741 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)
* static bool CustomUnits.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

11:32:47.744 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
11:32:47.747 [Info] Writing prefixes
11:32:47.754 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnCollisionEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collision other)

11:32:47.758 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other)
11:32:47.761 [Info] Writing prefixes
11:32:47.766 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnParticleCollision::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.GameObject other)

11:32:47.770 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other)
11:32:47.772 [Info] Writing prefixes
11:32:47.779 [Info] Patching virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_Init::Postfix(BattleTech.Vehicle __instance, UnityEngine.Vector3 position, float facing, bool checkEncounterCells)

11:32:47.782 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
11:32:47.785 [Info] Writing postfixes
11:32:47.796 [Info] Patching static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingUtil_DoesMovementLineCollide::Prefix(BattleTech.AbstractActor thisActor, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& actors)
1 postfixes:
* static void CustomUnits.PathingUtil_DoesMovementLineCollide::Postfix(BattleTech.AbstractActor thisActor, BattleTech.AbstractActor& collision, Boolean& __result)

11:32:47.799 [Info] Running ILHook manipulator on static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier)
11:32:47.802 [Info] Writing prefixes
11:32:47.805 [Info] Writing postfixes
11:32:47.812 [Info] Patching static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNode_HasCollisionAt::Prefix(BattleTech.AbstractActor unit, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allActors)
1 postfixes:
* static void CustomUnits.PathNode_HasCollisionAt::Postfix(BattleTech.AbstractActor unit, Boolean& __result)

11:32:47.816 [Info] Running ILHook manipulator on static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor)
11:32:47.819 [Info] Writing prefixes
11:32:47.822 [Info] Writing postfixes
11:32:47.831 [Info] Patching float BattleTech.PathNodeGrid::GetGradeModifier(float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetGradeModifier::Postfix(BattleTech.PathNodeGrid __instance, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

11:32:47.834 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetGradeModifier(float grade)
11:32:47.837 [Info] Writing postfixes
11:32:47.844 [Info] Patching float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSteepnessMultiplier::Postfix(BattleTech.PathNodeGrid __instance, float steepness, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

11:32:47.847 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade)
11:32:47.849 [Info] Writing postfixes
11:32:47.856 [Info] Patching bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_WillFireAtTarget::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, Boolean& __result)

11:32:47.860 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target)
11:32:47.863 [Info] Writing postfixes
11:32:47.870 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:47.873 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
11:32:47.876 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
11:32:47.879 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:47.882 [Info] Writing postfixes
11:32:47.890 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

11:32:47.893 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
11:32:47.896 [Info] Writing prefixes
11:32:47.904 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)

11:32:47.907 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
11:32:47.911 [Info] Writing postfixes
11:32:47.927 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForMelee::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

11:32:47.930 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
11:32:47.933 [Info] Writing postfixes
11:32:47.940 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForDFA::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

11:32:47.943 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
11:32:47.946 [Info] Writing postfixes
11:32:47.955 [Info] Patching bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDWeaponSlot_contemplatingMelee::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, Boolean& __result)

11:32:47.958 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target)
11:32:47.961 [Info] Writing postfixes
11:32:47.968 [Info] Patching float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_GetToHitFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack, Single& __result)

11:32:47.971 [Info] Running ILHook manipulator on float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack)
11:32:47.974 [Info] Writing postfixes
11:32:47.982 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)
* static void CustomUnits.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

11:32:47.985 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
11:32:47.988 [Info] Writing postfixes
11:32:47.999 [Info] Patching void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_AddInstability::Prefix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

11:32:48.002 [Info] Running ILHook manipulator on void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
11:32:48.006 [Info] Writing prefixes
11:32:48.015 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)
* static void CustomUnits.MechDef_RefreshChassis::Postfix(BattleTech.MechDef __instance)

11:32:48.019 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
11:32:48.022 [Info] Writing postfixes
11:32:48.030 [Info] Patching virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetActorInfoFromVisLevel::Postfix(BattleTech.Mech __instance, BattleTech.VisibilityLevel visLevel, Localize.Text& __result)

11:32:48.034 [Info] Running ILHook manipulator on virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel)
11:32:48.037 [Info] Writing postfixes
11:32:48.047 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetHeatData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:48.050 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
11:32:48.053 [Info] Writing prefixes
11:32:48.059 [Info] Writing postfixes
11:32:48.070 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnitDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnits.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.LanceStatGraphic& ___MeleeBar, BattleTech.UI.LanceStatGraphic& ___HeatEffBar)

11:32:48.073 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
11:32:48.077 [Info] Writing postfixes
11:32:48.089 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)
* static void CustomUnits.SG_Shop_FullMechDetailPanel_FillInFullMech::Postfix(BattleTech.UI.SG_Shop_FullMechDetailPanel __instance, BattleTech.MechDef theMech, BattleTech.UI.LanceStat& ___Stat4, BattleTech.UI.LanceStat& ___Stat6)

11:32:48.093 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
11:32:48.095 [Info] Writing postfixes
11:32:48.105 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:48.108 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
11:32:48.111 [Info] Writing postfixes
11:32:48.121 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

11:32:48.124 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
11:32:48.127 [Info] Writing postfixes
11:32:48.136 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetMeleeData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

11:32:48.139 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
11:32:48.141 [Info] Writing prefixes
11:32:48.144 [Info] Writing postfixes
11:32:48.153 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ChassisLocations location, Single& __result)

11:32:48.157 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location)
11:32:48.161 [Info] Writing postfixes
11:32:48.167 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location, Single& __result)

11:32:48.171 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location)
11:32:48.174 [Info] Writing postfixes
11:32:48.182 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ArmorLocation location, Single& __result)

11:32:48.185 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location)
11:32:48.189 [Info] Writing postfixes
11:32:48.197 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location, Single& __result)

11:32:48.200 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location)
11:32:48.202 [Info] Writing postfixes
11:32:48.210 [Info] Patching virtual bool BattleTech.Mech::get_IsAnyStructureExposed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsAnyStructureExposed::Postfix(BattleTech.Mech __instance, Boolean& __result)

11:32:48.213 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsAnyStructureExposed()
11:32:48.216 [Info] Writing postfixes
11:32:48.227 [Info] Patching virtual float BattleTech.Mech::get_SummaryStructureCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_SummaryStructureCurrent::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:48.229 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_SummaryStructureCurrent()
11:32:48.232 [Info] Writing postfixes
11:32:48.240 [Info] Patching float BattleTech.MechDef::get_MechDefCurrentStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefCurrentStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

11:32:48.243 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefCurrentStructure()
11:32:48.246 [Info] Writing postfixes
11:32:48.253 [Info] Patching float BattleTech.MechDef::get_MechDefMaxStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefMaxStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

11:32:48.256 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefMaxStructure()
11:32:48.259 [Info] Writing postfixes
11:32:48.267 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_ResetArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:48.270 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars()
11:32:48.272 [Info] Writing prefixes
11:32:48.287 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_UpdateArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:48.290 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars()
11:32:48.294 [Info] Writing prefixes
11:32:48.304 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)
* static void CustomUnits.MechDetails_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList, BattleTech.MechDef ___activeMech)

11:32:48.308 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
11:32:48.311 [Info] Writing postfixes
11:32:48.320 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnMechLabClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

11:32:48.323 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked()
11:32:48.327 [Info] Writing prefixes
11:32:48.335 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

11:32:48.337 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked()
11:32:48.340 [Info] Writing prefixes
11:32:48.349 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

11:32:48.351 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
11:32:48.355 [Info] Writing prefixes
11:32:48.363 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnRepairClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

11:32:48.367 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked()
11:32:48.371 [Info] Writing prefixes
11:32:48.380 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnScrapClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

11:32:48.383 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked()
11:32:48.386 [Info] Writing prefixes
11:32:48.398 [Info] Patching static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDHeatDisplay_GetProjectedHeat::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, BattleTech.Mech mech, BattleTech.UI.CombatHUD hud, Int32& __result)

11:32:48.401 [Info] Running ILHook manipulator on static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud)
11:32:48.404 [Info] Writing postfixes
11:32:48.412 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

11:32:48.415 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel()
11:32:48.417 [Info] Writing prefixes
11:32:48.426 [Info] Patching virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDStabilityDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

11:32:48.429 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel()
11:32:48.432 [Info] Writing prefixes
11:32:48.438 [Info] Patching int BattleTech.Mech::get__heat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech__heat_get::Postfix(BattleTech.Mech __instance, Int32& __result)

11:32:48.442 [Info] Running ILHook manipulator on int BattleTech.Mech::get__heat()
11:32:48.444 [Info] Writing postfixes
11:32:48.451 [Info] Patching void BattleTech.Mech::set__heat(int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech__heat_set::Prefix(BattleTech.Mech __instance, Int32& value)

11:32:48.454 [Info] Running ILHook manipulator on void BattleTech.Mech::set__heat(int value)
11:32:48.458 [Info] Writing prefixes
11:32:48.464 [Info] Patching int BattleTech.Mech::get_TempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_TempHeat_get::Postfix(BattleTech.Mech __instance, Int32& __result, Int32& ____tempHeat)

11:32:48.467 [Info] Running ILHook manipulator on int BattleTech.Mech::get_TempHeat()
11:32:48.469 [Info] Writing postfixes
11:32:48.476 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddEngineDamageHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

11:32:48.479 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
11:32:48.481 [Info] Writing prefixes
11:32:48.484 [Info] Writing postfixes
11:32:48.492 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)

11:32:48.496 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
11:32:48.498 [Info] Writing prefixes
11:32:48.501 [Info] Writing postfixes
11:32:48.508 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddJumpHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

11:32:48.511 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
11:32:48.514 [Info] Writing prefixes
11:32:48.517 [Info] Writing postfixes
11:32:48.525 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWalkHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

11:32:48.528 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
11:32:48.531 [Info] Writing prefixes
11:32:48.534 [Info] Writing postfixes
11:32:48.541 [Info] Patching void BattleTech.Mech::AddTempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_AddSprintHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

11:32:48.544 [Info] Running ILHook manipulator on void BattleTech.Mech::AddTempHeat()
11:32:48.547 [Info] Writing postfixes
11:32:48.554 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWeaponHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

11:32:48.558 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
11:32:48.561 [Info] Writing prefixes
11:32:48.563 [Info] Writing postfixes
11:32:48.572 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:48.575 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:48.578 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:48.582 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:48.588 [Info] Writing prefixes
11:32:48.592 [Info] Writing postfixes
11:32:48.611 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:48.615 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:48.618 [Info] Writing prefixes
11:32:48.622 [Info] Writing postfixes
11:32:48.634 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(Single& currentValue)
* static void CustomUnits.MechStatisticsRules_CalculateTonnage::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:48.637 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:48.640 [Info] Writing prefixes
11:32:48.644 [Info] Writing postfixes
11:32:48.654 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateCBillValue::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:48.657 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:48.661 [Info] Writing prefixes
11:32:48.665 [Info] Writing postfixes
11:32:48.674 [Info] Patching bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_CreateMeleeOrders::Prefix(BattleTech.UI.SelectionStateMove __instance)

11:32:48.678 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders()
11:32:48.680 [Info] Writing prefixes
11:32:48.692 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

11:32:48.696 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:32:48.700 [Info] Writing prefixes
11:32:48.712 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayMechInfoWidget_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.LanceStat[] ___mechStats, BattleTech.MechDef ___selectedMech)

11:32:48.716 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetStats()
11:32:48.719 [Info] Writing postfixes
11:32:48.731 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
3 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void CustomUnits.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.TMProWrapper.LocalizableText ___headLabel, BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftLegLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightLegLabel, BattleTech.MechDef ___activeMech)
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

11:32:48.735 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
11:32:48.739 [Info] Writing prefixes
11:32:48.742 [Info] Writing postfixes
11:32:48.754 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:48.758 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
11:32:48.762 [Info] Writing prefixes
11:32:48.765 [Info] Writing postfixes
11:32:48.779 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:48.782 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
11:32:48.785 [Info] Transpiling void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
11:32:48.799 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:48.819 [Info] Patching static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_AlignVehicleToGround::Prefix(UnityEngine.Transform vehicleTransform, float deltaTime)

11:32:48.823 [Info] Running ILHook manipulator on static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime)
11:32:48.826 [Info] Writing prefixes
11:32:48.838 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.MechDef_GatherDependencies_fake::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:48.959 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:48.962 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:48.965 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:48.969 [Info] Writing postfixes
11:32:48.978 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.ChassisDef_GatherDependencies_fake::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

11:32:48.980 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
11:32:48.983 [Info] Writing postfixes
11:32:48.994 [Info] Patching virtual void BattleTech.VehicleDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_RefreshChassis::Postfix(BattleTech.VehicleDef __instance)

11:32:48.996 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::RefreshChassis()
11:32:48.999 [Info] Writing postfixes
11:32:49.008 [Info] Patching bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsLocationDestroyed::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisLocations loc, Boolean& __result)

11:32:49.011 [Info] Running ILHook manipulator on bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc)
11:32:49.014 [Info] Writing postfixes
11:32:49.021 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechStructureSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

11:32:49.029 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef)
11:32:49.033 [Info] Writing postfixes
11:32:49.041 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
1 postfixes:
* static void CustomUnits.Contract_GenerateSalvage::Postfix(System.Collections.Generic.List<BattleTech.UnitResult> lostUnits)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:49.044 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:49.047 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
11:32:49.051 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:49.056 [Info] Writing prefixes
11:32:49.060 [Info] Writing postfixes
11:32:49.077 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)
* static void CustomUnits.MechValidationRules_ValidateMechCanBeFielded::Postfix(BattleTech.SimGameState sim, BattleTech.MechDef mechDef, Boolean& __result)

11:32:49.080 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
11:32:49.083 [Info] Writing postfixes
11:32:49.091 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechPosessesWeaponsSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

11:32:49.095 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef)
11:32:49.098 [Info] Writing postfixes
11:32:49.105 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)

11:32:49.108 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
11:32:49.111 [Info] Writing prefixes
11:32:49.118 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
2 postfixes:
* static void CustomUnits.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

11:32:49.121 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
11:32:49.125 [Info] Writing prefixes
11:32:49.129 [Info] Writing postfixes
11:32:49.136 [Info] Patching void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_OnActorTakeDamage::Prefix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenterMessage message)

11:32:49.139 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message)
11:32:49.142 [Info] Writing prefixes
11:32:49.152 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
1 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

11:32:49.156 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
11:32:49.160 [Info] Writing prefixes
11:32:49.163 [Info] Writing postfixes
11:32:49.175 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

11:32:49.178 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
11:32:49.181 [Info] Writing prefixes
11:32:49.184 [Info] Writing postfixes
11:32:49.198 [Info] Patching void BattleTech.VehicleDef::Refresh() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_Refresh::Prefix(BattleTech.VehicleDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

11:32:49.202 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
11:32:49.205 [Info] Writing prefixes
11:32:49.207 [Info] Writing postfixes
11:32:49.214 [Info] Patching void BattleTech.VehicleChassisDef::Refresh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleChassisDef_Refresh::Prefix(BattleTech.VehicleChassisDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)

11:32:49.217 [Info] Running ILHook manipulator on void BattleTech.VehicleChassisDef::Refresh()
11:32:49.220 [Info] Writing prefixes
11:32:49.232 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_refreshMechInfo::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUDStatusPanel ___StatusPanel, BattleTech.AbstractActor ___displayedActor)
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

11:32:49.235 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
11:32:49.237 [Info] Writing prefixes
11:32:49.240 [Info] Writing postfixes
11:32:49.247 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.SkirmishSettings_Beta_FinalizeLances::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LancePreviewPanel ___playerLancePreview, BattleTech.UI.UIManager ___uiManager)

11:32:49.251 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
11:32:49.254 [Info] Writing prefixes
11:32:49.257 [Info] Writing postfixes
11:32:49.266 [Info] Patching virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SkirmishSettings_Beta_OnAddedToHierarchy::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance)

11:32:49.269 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy()
11:32:49.272 [Info] Writing prefixes
11:32:49.280 [Info] Patching void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatMeter_RefreshHeatInfo::Prefix(BattleTech.UI.CombatHUDHeatMeter __instance, float ___underlyingHeatTarget, float ___underlyingHeatDisplayed, float ___underlyingPredictionTarget, float ___underlyingPredictionDisplayed)

11:32:49.283 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo()
11:32:49.285 [Info] Writing prefixes
11:32:49.299 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMoveBase_CreateMoveOrders::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, bool isJump, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:49.303 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
11:32:49.305 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
11:32:49.308 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:49.312 [Info] Writing prefixes
11:32:49.325 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, bool consideringJump, bool useCOILPathingPreview, BattleTech.AbstractActor ___displayedActor, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

11:32:49.329 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
11:32:49.331 [Info] Writing prefixes
11:32:49.335 [Info] Writing postfixes
11:32:49.345 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardWaypoint::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType ___moveType)

11:32:49.348 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest)
11:32:49.350 [Info] Writing postfixes
11:32:49.359 [Info] Patching void BattleTech.ActorTwistSequence::update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_update::Prefix(BattleTech.ActorTwistSequence __instance, Object& __state)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_update::Postfix(BattleTech.ActorTwistSequence __instance, float ___t, Object& __state, BattleTech.PilotableActorRepresentation ___actorRep)

11:32:49.362 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::update()
11:32:49.365 [Info] Writing prefixes
11:32:49.368 [Info] Writing postfixes
11:32:49.487 [Info] ### Harmony id=com.BattleTech.PanicSystem, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void PanicSystem.PanicSystem::Init(string modDir, string settings), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\PanicSystem\PanicSystem.dll
### At 2023-06-19 11.32.49
11:32:49.493 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.AAR_UnitStatusWidget __instance)
2 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)
* static void PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:49.496 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
11:32:49.499 [Info] Transpiling void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
11:32:49.503 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:49.508 [Info] Writing prefixes
11:32:49.511 [Info] Writing postfixes
11:32:49.522 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:49.526 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:49.530 [Info] Writing postfixes
11:32:49.541 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_OnActivationBegin_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance)

11:32:49.544 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
11:32:49.547 [Info] Writing prefixes
11:32:49.560 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 5 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

11:32:49.563 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:49.566 [Info] Writing prefixes
11:32:49.570 [Info] Writing postfixes
11:32:49.581 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)
* static void PanicSystem.Patches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:49.584 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
11:32:49.587 [Info] Writing postfixes
11:32:49.600 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
5 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void PanicSystem.Patches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:49.603 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:49.606 [Info] Writing prefixes
11:32:49.610 [Info] Writing postfixes
11:32:49.622 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
3 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()

11:32:49.625 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:49.629 [Info] Writing prefixes
11:32:49.632 [Info] Writing postfixes
11:32:49.645 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()

11:32:49.648 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
11:32:49.651 [Info] Writing postfixes
11:32:49.664 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)
1 postfixes:
* static void PanicSystem.Patches.CombatHUDFloatieStack_AddFloatie_Patch1::Postfix(BattleTech.UI.CombatHUDFloatieStack __instance)

11:32:49.667 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
11:32:49.670 [Info] Writing prefixes
11:32:49.673 [Info] Writing postfixes
11:32:49.680 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(Localize.Text text, BattleTech.FloatieMessage+MessageNature nature) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.CombatHUDFloatieStack_AddFloatie_Patch2::Postfix(BattleTech.UI.CombatHUDFloatieStack __instance)

11:32:49.683 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(Localize.Text text, BattleTech.FloatieMessage+MessageNature nature)
11:32:49.686 [Info] Writing postfixes
11:32:49.697 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()
* static void PanicSystem.Patches.GameInstance_LaunchContract_Patch::Postfix()

11:32:49.700 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
11:32:49.703 [Info] Writing prefixes
11:32:49.706 [Info] Writing postfixes
11:32:49.713 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PanicSystem.Patches.GameInstance_Load_Patch::Prefix(Boolean& __runOriginal, BattleTech.Save.GameInstanceSave save)

11:32:49.716 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
11:32:49.719 [Info] Writing prefixes
11:32:49.729 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

11:32:49.732 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
11:32:49.735 [Info] Writing postfixes
11:32:49.746 [Info] Patching virtual void BattleTech.LanceSpawnerGameLogic::OnTriggerSpawn(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.LanceSpawnerGameLogic_OnTriggerSpawn_Patch::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

11:32:49.749 [Info] Running ILHook manipulator on virtual void BattleTech.LanceSpawnerGameLogic::OnTriggerSpawn(MessageCenterMessage message)
11:32:49.754 [Info] Writing postfixes
11:32:49.766 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)
* static void PanicSystem.Patches.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

11:32:49.770 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
11:32:49.772 [Info] Writing prefixes
11:32:49.776 [Info] Writing postfixes
11:32:49.786 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:49.790 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:49.795 [Info] Writing prefixes
11:32:49.799 [Info] Writing postfixes
11:32:49.811 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
* static void PanicSystem.Patches.Mech_OnLocationDestroyed_Patch::Postfix(BattleTech.Mech __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:49.814 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:49.818 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:49.823 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:49.829 [Info] Writing prefixes
11:32:49.832 [Info] Writing postfixes
11:32:49.846 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void PanicSystem.Patches.MechMeleeSequence_CompleteOrders::Postfix()

11:32:49.848 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
11:32:49.851 [Info] Writing postfixes
11:32:49.860 [Info] Patching void BattleTech.SimGameState::_OnFirstPlayInit(BattleTech.SimGameState+SimGameType gameType, bool allowDebug) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.SimGameState__OnFirstPlayInit_Patch::Postfix()

11:32:49.863 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnFirstPlayInit(BattleTech.SimGameState+SimGameType gameType, bool allowDebug)
11:32:49.866 [Info] Writing postfixes
11:32:49.888 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:49.892 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:49.895 [Info] Writing prefixes
11:32:49.898 [Info] Writing postfixes
11:32:49.906 [Info] Patching virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Components.SelectionStateEject_CreateConfirmationOrders_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:49.909 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders()
11:32:49.912 [Info] Transpiling virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders()
11:32:49.915 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Components.SelectionStateEject_CreateConfirmationOrders_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:49.926 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()
* static void PanicSystem.Components.StatusEffect+CombatGameState_LoadComplete_Patch::Postfix()

11:32:49.930 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
11:32:49.932 [Info] Writing postfixes
11:32:50.228 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.230 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
11:32:50.234 [Info] PrefixWrapper created: HXI︳3︳::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
11:32:50.236 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
11:32:50.239 [Info] PrefixWrapper created: HXI︳4︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
11:32:50.242 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 98 ms
11:32:50.246 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract, Boolean& __runOriginal)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:50.248 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
11:32:50.251 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
11:32:50.254 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:50.259 [Info] Writing prefixes
11:32:50.262 [Info] Writing postfixes
11:32:50.271 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.274 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
11:32:50.276 [Info] PrefixWrapper created: HXI︳5︳::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
11:32:50.279 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
11:32:50.283 [Info] PrefixWrapper created: HXI︳6︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
11:32:50.286 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
11:32:50.290 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, Boolean& __runOriginal)

11:32:50.294 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
11:32:50.296 [Info] Writing prefixes
11:32:50.304 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 113 ms
11:32:50.309 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:50.312 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:50.313 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:50.318 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:50.323 [Info] Writing prefixes
11:32:50.327 [Info] Writing postfixes
11:32:50.342 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 114 ms
11:32:50.346 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void PanicSystem.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)
* static void BiggerDrops.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

11:32:50.349 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
11:32:50.352 [Info] Writing postfixes
11:32:50.361 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 114 ms
11:32:50.364 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PanicSystem.Patches.GameInstance_Load_Patch::Prefix(Boolean& __runOriginal, BattleTech.Save.GameInstanceSave save)
* static void BiggerDrops.Patches.GameInstance_Load_Patch::Prefix(BattleTech.Save.GameInstanceSave save)

11:32:50.367 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
11:32:50.369 [Info] Writing prefixes
11:32:50.377 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 114 ms
11:32:50.385 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)

11:32:50.388 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
11:32:50.392 [Info] Writing prefixes
11:32:50.396 [Info] Writing postfixes
11:32:50.407 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.411 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
11:32:50.414 [Info] PrefixWrapper created: HXI︳7︳::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
11:32:50.417 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
11:32:50.420 [Info] PrefixWrapper created: HXI︳8︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
11:32:50.424 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 130 ms
11:32:50.429 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

11:32:50.432 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
11:32:50.435 [Info] Writing prefixes
11:32:50.439 [Info] Writing postfixes
11:32:50.446 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.449 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
11:32:50.452 [Info] PrefixWrapper created: HXI︳9︳::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
11:32:50.455 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
11:32:50.458 [Info] PrefixWrapper created: HXI︳10︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
11:32:50.461 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 145 ms
11:32:50.464 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots)

11:32:50.467 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
11:32:50.470 [Info] Writing prefixes
11:32:50.472 [Info] Writing postfixes
11:32:50.479 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 145 ms
11:32:50.482 [Info] Patching void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.LancePreviewPanel_SaveLance::Prefix(BattleTech.UI.LancePreviewPanel __instance, BattleTech.LanceDef lanceToSave)

11:32:50.484 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave)
11:32:50.487 [Info] Writing prefixes
11:32:50.494 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.497 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.LancePreviewPanelSetData::Prefix
11:32:50.499 [Info] PrefixWrapper created: HXI︳11︳::MissionControl.Patches.LancePreviewPanelSetData::Prefix
11:32:50.503 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LancePreviewPanel_SetData::Prefix
11:32:50.506 [Info] PrefixWrapper created: HXI︳12︳::CustomUnits.LancePreviewPanel_SetData::Prefix
11:32:50.508 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
11:32:50.511 [Info] PrefixWrapper created: HXI︳13︳::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
11:32:50.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.518 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Boolean& __runOriginal)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)

11:32:50.522 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
11:32:50.525 [Info] Writing prefixes
11:32:50.537 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.540 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

11:32:50.543 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
11:32:50.545 [Info] Writing prefixes
11:32:50.552 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.555 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

11:32:50.559 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
11:32:50.562 [Info] Writing prefixes
11:32:50.568 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.571 [Info] Patching virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGCmdCenterLanceConfigBG_OnAddedToHierarchy::Postfix(BattleTech.UI.SGCmdCenterLanceConfigBG __instance)

11:32:50.573 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy()
11:32:50.576 [Info] Writing postfixes
11:32:50.582 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.589 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)

11:32:50.592 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
11:32:50.595 [Info] Writing prefixes
11:32:50.613 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.616 [Info] Patching void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_CleanUpAllUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

11:32:50.619 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips()
11:32:50.622 [Info] Writing postfixes
11:32:50.632 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.635 [Info] Patching void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_ClearUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

11:32:50.637 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container)
11:32:50.640 [Info] Writing postfixes
11:32:50.648 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.652 [Info] Patching void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Patches.SGEngineeringScreen_AddUpgradePip::Prefix(BattleTech.UI.SGEngineeringScreen __instance, BattleTech.ShipModuleUpgrade upgrade)

11:32:50.656 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade)
11:32:50.660 [Info] Writing prefixes
11:32:50.673 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.802 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
6 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:50.805 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:50.808 [Info] Writing prefixes
11:32:50.811 [Info] Writing postfixes
11:32:50.849 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.854 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

11:32:50.857 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
11:32:50.860 [Info] Writing postfixes
11:32:50.872 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.877 [Info] Patching void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_AddArgoUpgrade::Postfix(BattleTech.SimGameState __instance)

11:32:50.880 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade)
11:32:50.883 [Info] Writing postfixes
11:32:50.896 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.900 [Info] Patching void BattleTech.SimGameState::ApplyArgoUpgrades() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_ApplyArgoUpgrades::Postfix(BattleTech.SimGameState __instance)

11:32:50.903 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ApplyArgoUpgrades()
11:32:50.907 [Info] Writing postfixes
11:32:50.916 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.922 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SkirmishMechBayPanel_SelectLance::Prefix(BattleTech.UI.SkirmishMechBayPanel __instance, BattleTech.LanceDef lance)

11:32:50.926 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance)
11:32:50.930 [Info] Writing prefixes
11:32:50.942 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 165 ms
11:32:50.946 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Features.Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

11:32:50.948 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState)
11:32:50.951 [Info] Writing prefixes
11:32:50.962 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.966 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
11:32:50.969 [Info] PrefixWrapper created: HXI︳14︳::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
11:32:50.971 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
11:32:50.974 [Info] PrefixWrapper created: HXI︳15︳::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
11:32:50.977 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 180 ms
11:32:50.980 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.CombatGameState ___Combat, Boolean& __runOriginal)

11:32:50.983 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
11:32:50.987 [Info] Writing prefixes
11:32:50.996 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:50.999 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
11:32:51.001 [Info] PrefixWrapper created: HXI︳16︳::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
11:32:51.005 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
11:32:51.008 [Info] PrefixWrapper created: HXI︳17︳::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
11:32:51.010 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 195 ms
11:32:51.014 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)
* static void BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

11:32:51.018 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
11:32:51.021 [Info] Writing prefixes
11:32:51.024 [Info] Writing postfixes
11:32:51.284 [Info] ### Harmony id=us.frostraptor.CBTBehaviorsEnhanced, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CBTBehaviorsEnhanced.Mod::Init(string modDirectory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CBTBehaviorsEnhanced\CBTBehaviorsEnhanced.dll
### At 2023-06-19 11.32.51
11:32:51.291 [Info] Patching virtual void BattleTech.MechFallSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Piloting.MechFallSequence_OnAdded::Postfix(BattleTech.MechFallSequence __instance)

11:32:51.295 [Info] Running ILHook manipulator on virtual void BattleTech.MechFallSequence::OnAdded()
11:32:51.298 [Info] Writing postfixes
11:32:51.305 [Info] Patching virtual void BattleTech.MechFallSequence::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Piloting.MechFallSequence_OnComplete::Prefix(BattleTech.MechFallSequence __instance)

11:32:51.308 [Info] Running ILHook manipulator on virtual void BattleTech.MechFallSequence::OnComplete()
11:32:51.311 [Info] Writing prefixes
11:32:51.321 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.Pathing::GetMeleeDestsForTarget(BattleTech.AbstractActor target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.Pathing_GetMeleeDestsForTarget::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor target, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:51.324 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.Pathing::GetMeleeDestsForTarget(BattleTech.AbstractActor target)
11:32:51.327 [Info] Writing prefixes
11:32:51.340 [Info] Patching BattleTech.PathNodeGrid BattleTech.Pathing::getGrid(BattleTech.MoveType moveType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.Pathing_getGrid::Postfix(BattleTech.Pathing __instance, BattleTech.MoveType moveType, BattleTech.PathNodeGrid& __result)

11:32:51.343 [Info] Running ILHook manipulator on BattleTech.PathNodeGrid BattleTech.Pathing::getGrid(BattleTech.MoveType moveType)
11:32:51.346 [Info] Writing postfixes
11:32:51.355 [Info] Patching void BattleTech.Pathing::SetMeleeTarget(BattleTech.AbstractActor target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.Pathing_SetMeleeTarget::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor target)

11:32:51.359 [Info] Running ILHook manipulator on void BattleTech.Pathing::SetMeleeTarget(BattleTech.AbstractActor target)
11:32:51.363 [Info] Writing prefixes
11:32:51.371 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

11:32:51.374 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
11:32:51.377 [Info] Writing prefixes
11:32:51.380 [Info] Writing postfixes
11:32:51.388 [Info] Patching virtual float BattleTech.UI.SelectionStateJump::get_ProjectedStabilityForState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateJump_ProjectedStabilityForState_Getter::Postfix(BattleTech.UI.SelectionStateJump __instance, Single& __result)

11:32:51.391 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SelectionStateJump::get_ProjectedStabilityForState()
11:32:51.395 [Info] Writing postfixes
11:32:51.403 [Info] Patching virtual float BattleTech.UI.SelectionStateMove::get_ProjectedStabilityForState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_ProjectedStabilityForState_Getter::Postfix(BattleTech.UI.SelectionStateMove __instance, Single& __result)

11:32:51.406 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SelectionStateMove::get_ProjectedStabilityForState()
11:32:51.408 [Info] Writing postfixes
11:32:51.415 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:32:51.418 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
11:32:51.421 [Info] Writing postfixes
11:32:51.432 [Info] Patching void BattleTech.MechDFASequence::Init(BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination, UnityEngine.Quaternion finalJumpRotation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_Init::Postfix(BattleTech.MechDFASequence __instance, BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination)

11:32:51.435 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::Init(BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination, UnityEngine.Quaternion finalJumpRotation)
11:32:51.438 [Info] Writing postfixes
11:32:51.447 [Info] Patching virtual void BattleTech.MechDFASequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_OnAdded::Prefix(BattleTech.MechMeleeSequence __instance)

11:32:51.450 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::OnAdded()
11:32:51.454 [Info] Writing prefixes
11:32:51.466 [Info] Patching void BattleTech.MechDFASequence::BuildMeleeDirectorSequence() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_BuildMeleeDirectorSequence::Postfix(BattleTech.MechDFASequence __instance, System.Collections.Generic.List<BattleTech.Weapon> ___requestedWeapons)

11:32:51.469 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::BuildMeleeDirectorSequence()
11:32:51.472 [Info] Writing postfixes
11:32:51.480 [Info] Patching void BattleTech.MechDFASequence::ExecuteJump() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_ExecuteJump::Prefix(BattleTech.MechDFASequence __instance)

11:32:51.482 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::ExecuteJump()
11:32:51.486 [Info] Writing prefixes
11:32:51.496 [Info] Patching void BattleTech.MechDFASequence::OnMeleeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_OnMeleeComplete::Prefix(BattleTech.MechDFASequence __instance, MessageCenterMessage message, BattleTech.AttackStackSequence ___meleeSequence)

11:32:51.499 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::OnMeleeComplete(MessageCenterMessage message)
11:32:51.502 [Info] Writing prefixes
11:32:51.509 [Info] Patching void BattleTech.MechDFASequence::FireWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_FireWeapons::Prefix(BattleTech.MechDFASequence __instance)

11:32:51.513 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::FireWeapons()
11:32:51.515 [Info] Writing prefixes
11:32:51.524 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

11:32:51.528 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
11:32:51.530 [Info] Writing postfixes
11:32:51.539 [Info] Patching void BattleTech.MechMeleeSequence::.ctor(BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ctor::Postfix(BattleTech.MechMeleeSequence __instance, BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition)

11:32:51.541 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::.ctor(BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition)
11:32:51.545 [Info] Writing postfixes
11:32:51.556 [Info] Patching virtual void BattleTech.MechMeleeSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_OnAdded::Prefix(BattleTech.MechMeleeSequence __instance)

11:32:51.560 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::OnAdded()
11:32:51.563 [Info] Writing prefixes
11:32:51.571 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance, System.Collections.Generic.List<BattleTech.Weapon> ___requestedWeapons)
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

11:32:51.574 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
11:32:51.576 [Info] Writing prefixes
11:32:51.583 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ExecuteMove::Prefix(BattleTech.MechMeleeSequence __instance)
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:51.586 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
11:32:51.590 [Info] Writing prefixes
11:32:51.593 [Info] Writing postfixes
11:32:51.602 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ExecuteMelee::Prefix(BattleTech.MechMeleeSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:51.605 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
11:32:51.607 [Info] Writing prefixes
11:32:51.610 [Info] Writing postfixes
11:32:51.618 [Info] Patching void BattleTech.MechMeleeSequence::OnMeleeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_OnMeleeComplete::Prefix(BattleTech.MechMeleeSequence __instance, MessageCenterMessage message, BattleTech.AttackStackSequence ___meleeSequence)

11:32:51.621 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::OnMeleeComplete(MessageCenterMessage message)
11:32:51.623 [Info] Writing prefixes
11:32:51.632 [Info] Patching void BattleTech.MechMeleeSequence::FireWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_FireWeapons::Prefix(BattleTech.MechMeleeSequence __instance, BattleTech.AttackStackSequence ___meleeSequence)

11:32:51.635 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::FireWeapons()
11:32:51.637 [Info] Writing prefixes
11:32:51.645 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void PanicSystem.Patches.MechMeleeSequence_CompleteOrders::Postfix()
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

11:32:51.648 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
11:32:51.650 [Info] Writing postfixes
11:32:51.660 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CBTBehaviorsEnhanced.HullIntegrity.AttackDirector_OnAttackSequenceBegin::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:51.664 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
11:32:51.667 [Info] Writing postfixes
11:32:51.679 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.AttackDirector_OnAttackSequenceEnd::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:51.682 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceEnd(MessageCenterMessage message)
11:32:51.685 [Info] Writing postfixes
11:32:51.699 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
2 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
* static void CBTBehaviorsEnhanced.HullIntegrity.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)

11:32:51.702 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
11:32:51.704 [Info] Writing prefixes
11:32:51.707 [Info] Writing postfixes
11:32:51.716 [Info] Patching void BattleTech.Turret::ApplyStructureStatDamage(BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.Turret_ApplyStructureStatDamage::Postfix(BattleTech.Turret __instance, BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)

11:32:51.720 [Info] Running ILHook manipulator on void BattleTech.Turret::ApplyStructureStatDamage(BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
11:32:51.723 [Info] Writing postfixes
11:32:51.732 [Info] Patching void BattleTech.Vehicle::applyStructureStatDamage(BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.Vehicle_ApplyStructureStatDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)

11:32:51.734 [Info] Running ILHook manipulator on void BattleTech.Vehicle::applyStructureStatDamage(BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
11:32:51.737 [Info] Writing postfixes
11:32:51.745 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)
* static bool CBTBehaviorsEnhanced.Heat.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState)

11:32:51.747 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:51.750 [Info] Writing prefixes
11:32:51.762 [Info] Patching int BattleTech.Mech::get_SprintHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Heat.Mech_SprintHeat_Getter::Postfix(BattleTech.Mech __instance, Int32& __result)

11:32:51.765 [Info] Running ILHook manipulator on int BattleTech.Mech::get_SprintHeat()
11:32:51.768 [Info] Writing postfixes
11:32:51.774 [Info] Patching int BattleTech.Mech::get_WalkHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Heat.Mech_WalkHeat_Getter::Postfix(BattleTech.Mech __instance, Int32& __result)

11:32:51.777 [Info] Running ILHook manipulator on int BattleTech.Mech::get_WalkHeat()
11:32:51.779 [Info] Writing postfixes
11:32:51.788 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:51.792 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:51.796 [Info] Writing postfixes
11:32:51.807 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

11:32:51.810 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
11:32:51.813 [Info] Writing prefixes
11:32:51.815 [Info] Writing postfixes
11:32:51.825 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnRecomputePathing::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnRecomputePathing::Postfix(BattleTech.AbstractActor __instance)

11:32:51.829 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
11:32:51.832 [Info] Writing prefixes
11:32:51.835 [Info] Writing postfixes
11:32:51.842 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_ResetPathing::Postfix(BattleTech.AbstractActor __instance)

11:32:51.845 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
11:32:51.848 [Info] Writing prefixes
11:32:51.851 [Info] Writing postfixes
11:32:51.860 [Info] Patching void BattleTech.Pathing::ResetPathGrid(UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Pathing_ResetPathGrid::Prefix(BattleTech.Pathing __instance, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Pathing_ResetPathGrid::Postfix(BattleTech.Pathing __instance, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)

11:32:51.863 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGrid(UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)
11:32:51.866 [Info] Writing prefixes
11:32:51.869 [Info] Writing postfixes
11:32:51.879 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
4 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()
* static void CBTBehaviorsEnhanced.Patches.CombatGameState_OnCombatGameDestroyed::Postfix()

11:32:51.882 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:51.884 [Info] Writing prefixes
11:32:51.887 [Info] Writing postfixes
11:32:51.899 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatDebugHUDPatches::Postfix(BattleTech.UI.CombatHUD ___combatHUD)

11:32:51.902 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
11:32:51.904 [Info] Writing postfixes
11:32:51.912 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_Init::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

11:32:51.915 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
11:32:51.918 [Info] Writing postfixes
11:32:51.929 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_ShowFireButton::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, String& additionalDetails, bool showHeatWarnings)
3 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, String& additionalDetails, bool showHeatWarnings)

11:32:51.932 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
11:32:51.934 [Info] Writing prefixes
11:32:51.937 [Info] Writing postfixes
11:32:51.945 [Info] Patching void BattleTech.UI.CombatHUDFireButton::set_CurrentFireMode(BattleTech.UI.CombatHUDFireButton+FireMode value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDFireButton_CurrentFireMode_Setter::Postfix(BattleTech.UI.CombatHUDFireButton __instance, BattleTech.UI.CombatHUDFireButton+FireMode value)

11:32:51.948 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::set_CurrentFireMode(BattleTech.UI.CombatHUDFireButton+FireMode value)
11:32:51.950 [Info] Writing postfixes
11:32:51.962 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)
* static bool CBTBehaviorsEnhanced.Patches.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

11:32:51.965 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
11:32:51.968 [Info] Writing prefixes
11:32:51.975 [Info] Patching int BattleTech.UI.CombatHUDHeatMeter::GetMaxOuterHeatLevel(BattleTech.Mech mech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatMeter_GetMaxOuterHeatLevel::Postfix(BattleTech.UI.CombatHUDHeatMeter __instance, BattleTech.Mech mech, Int32& __result)

11:32:51.978 [Info] Running ILHook manipulator on int BattleTech.UI.CombatHUDHeatMeter::GetMaxOuterHeatLevel(BattleTech.Mech mech)
11:32:51.982 [Info] Writing postfixes
11:32:52.000 [Info] Patching virtual void BattleTech.UI.CombatHUDHeatDisplay::Init(float dangerLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_Init::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance)

11:32:52.005 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDHeatDisplay::Init(float dangerLevel)
11:32:52.008 [Info] Writing postfixes
11:32:52.020 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::get_DangerLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_DangerLevel_Getter::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

11:32:52.025 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::get_DangerLevel()
11:32:52.029 [Info] Writing postfixes
11:32:52.039 [Info] Patching void BattleTech.UI.CombatHUDHeatDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance)

11:32:52.043 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatDisplay::RefreshInfo()
11:32:52.046 [Info] Writing postfixes
11:32:52.058 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:52.062 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
11:32:52.066 [Info] Writing postfixes
11:32:52.077 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
2 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance)

11:32:52.080 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
11:32:52.082 [Info] Writing prefixes
11:32:52.085 [Info] Writing postfixes
11:32:52.096 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowShutDownIndicator(BattleTech.Mech mech) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.CombatHUDStatusPanel_ShowShutDownIndicator::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDStatusPanel_ShowShutDownIndicator::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.Mech mech)

11:32:52.099 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowShutDownIndicator(BattleTech.Mech mech)
11:32:52.101 [Info] Writing prefixes
11:32:52.104 [Info] Writing postfixes
11:32:52.112 [Info] Patching virtual void BattleTech.UI.CombatHUDAttackModeSelector::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_Update::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance)

11:32:52.115 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDAttackModeSelector::Update()
11:32:52.118 [Info] Writing postfixes
11:32:52.128 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

11:32:52.131 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
11:32:52.133 [Info] Writing postfixes
11:32:52.143 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 1 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD, BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType ___weaponSlotType)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:52.146 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:52.149 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
11:32:52.152 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:52.155 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:52.159 [Info] Writing prefixes
11:32:52.162 [Info] Writing postfixes
11:32:52.173 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateMeleeWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_UpdateMeleeWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

11:32:52.177 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateMeleeWeapon()
11:32:52.180 [Info] Writing postfixes
11:32:52.188 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateDFAWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_UpdateDFAWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

11:32:52.191 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateDFAWeapon()
11:32:52.195 [Info] Writing postfixes
11:32:52.202 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::GenerateToolTipStrings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_GenerateToolTipStrings::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD, int ___displayedHeat)

11:32:52.206 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::GenerateToolTipStrings()
11:32:52.208 [Info] Writing postfixes
11:32:52.219 [Info] Patching void BattleTech.UI.CombatSelectionHandler::RemoveCompletedItems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatSelectionHandler_RemoveCompletedItems::Prefix(BattleTech.UI.CombatSelectionHandler __instance, Boolean& __state)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatSelectionHandler_RemoveCompletedItems::Postfix(BattleTech.UI.CombatSelectionHandler __instance, Boolean& __state)

11:32:52.223 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::RemoveCompletedItems()
11:32:52.227 [Info] Writing prefixes
11:32:52.230 [Info] Writing postfixes
11:32:52.246 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
4 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void CBTBehaviorsEnhanced.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

11:32:52.249 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
11:32:52.372 [Info] Writing prefixes
11:32:52.377 [Info] Writing postfixes
11:32:52.385 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, Single& damageAmount, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:52.389 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:52.392 [Info] Writing prefixes
11:32:52.395 [Info] Writing postfixes
11:32:52.404 [Info] Patching void BattleTech.Mech::ApplyStartupHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.Mech_ApplyStartupHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

11:32:52.407 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStartupHeatSinks(int stackID)
11:32:52.409 [Info] Writing prefixes
11:32:52.417 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)
* static bool CBTBehaviorsEnhanced.Patches.Mech_CheckForHeatDamage::Prefix(BattleTech.Mech __instance, int stackID, string attackerID)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

11:32:52.419 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
11:32:52.423 [Info] Writing prefixes
11:32:52.427 [Info] Writing postfixes
11:32:52.438 [Info] Patching virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, string sourceID, int stackItemID)
* static void CBTBehaviorsEnhanced.Patches.Mech_OnActivationEnd::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_OnActivationEnd::Postfix(BattleTech.Mech __instance)

11:32:52.440 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID)
11:32:52.443 [Info] Writing prefixes
11:32:52.446 [Info] Writing postfixes
11:32:52.453 [Info] Patching virtual float BattleTech.Mech::get_MaxMeleeEngageRangeDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_MaxMeleeEngageRangeDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

11:32:52.457 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxMeleeEngageRangeDistance()
11:32:52.461 [Info] Writing postfixes
11:32:52.469 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance)

11:32:52.472 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
11:32:52.475 [Info] Writing prefixes
11:32:52.493 [Info] Patching virtual void BattleTech.Mech::StandFromProne() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_StandFromProne::Prefix(BattleTech.Mech __instance)

11:32:52.497 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::StandFromProne()
11:32:52.500 [Info] Writing prefixes
11:32:52.508 [Info] Patching System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Team::DoneWithAllAvailableActors() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Team_DoneWithAllAvailableActors::Prefix(BattleTech.Team __instance, System.Collections.Generic.List<BattleTech.IStackSequence> __result)

11:32:52.511 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Team::DoneWithAllAvailableActors()
11:32:52.513 [Info] Writing prefixes
11:32:52.527 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)

11:32:52.532 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
11:32:52.535 [Info] Writing prefixes
11:32:52.538 [Info] Writing postfixes
11:32:52.548 [Info] Patching float BattleTech.ToHit::GetDFAModifier(BattleTech.MeleeAttackType meleeAttackType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetDFAModifier::Postfix(BattleTech.ToHit __instance, Single& __result)

11:32:52.552 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetDFAModifier(BattleTech.MeleeAttackType meleeAttackType)
11:32:52.555 [Info] Writing postfixes
11:32:52.565 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:52.568 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:52.570 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:52.574 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:52.577 [Info] Writing prefixes
11:32:52.580 [Info] Writing postfixes
11:32:52.592 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, String& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:52.596 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:52.599 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:52.602 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:52.604 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:52.607 [Info] Writing postfixes
11:32:52.618 [Info] Patching float BattleTech.ToHit::GetHeatModifier(BattleTech.AbstractActor attacker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetHeatModifier::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker)

11:32:52.622 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetHeatModifier(BattleTech.AbstractActor attacker)
11:32:52.626 [Info] Writing postfixes
11:32:52.634 [Info] Patching void BattleTech.TurnDirector::OnEncounterBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_OnEncounterBegin::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

11:32:52.637 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnEncounterBegin(MessageCenterMessage message)
11:32:52.639 [Info] Writing postfixes
11:32:52.648 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_OnTurnActorActivateComplete::Prefix(BattleTech.TurnDirector __instance)

11:32:52.651 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
11:32:52.655 [Info] Writing prefixes
11:32:52.664 [Info] Patching bool BattleTech.TurnDirector::get_DoAnyUnitsHaveContactWithEnemy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_DoAnyUnitsHaveContactWithEnemy_Getter::Prefix(BattleTech.TurnDirector __instance, Boolean& __result)

11:32:52.667 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::get_DoAnyUnitsHaveContactWithEnemy()
11:32:52.670 [Info] Writing prefixes
11:32:52.679 [Info] Patching void BattleTech.TurnDirector::NotifyContact(BattleTech.VisibilityLevel contactLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_NotifyContact::Prefix(BattleTech.TurnDirector __instance, BattleTech.VisibilityLevel contactLevel)

11:32:52.681 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::NotifyContact(BattleTech.VisibilityLevel contactLevel)
11:32:52.685 [Info] Writing prefixes
11:32:52.695 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

11:32:52.697 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
11:32:52.700 [Info] Writing postfixes
11:32:52.710 [Info] Patching void BattleTech.TurnDirector::OnLostContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_OnLostContact::Postfix(BattleTech.TurnDirector __instance)

11:32:52.715 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnLostContact(MessageCenterMessage message)
11:32:52.718 [Info] Writing postfixes
11:32:52.727 [Info] Patching bool BattleTech.Turret::DamageLocation(BattleTech.WeaponHitInfo hitInfo, BattleTech.BuildingLocation bLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Turret_DamageLocation::Prefix(BattleTech.Turret __instance)

11:32:52.730 [Info] Running ILHook manipulator on bool BattleTech.Turret::DamageLocation(BattleTech.WeaponHitInfo hitInfo, BattleTech.BuildingLocation bLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage)
11:32:52.732 [Info] Writing prefixes
11:32:52.744 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Vehicle_DamageLocation::Prefix(BattleTech.Vehicle __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:52.748 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
11:32:52.750 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
11:32:52.754 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:52.758 [Info] Writing prefixes
11:32:52.771 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)
* static void CBTBehaviorsEnhanced.Patches.Weapon_WillFire_Getter::Postfix(BattleTech.Weapon __instance, Boolean& __result)

11:32:52.773 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
11:32:52.776 [Info] Writing postfixes
11:32:52.783 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)
* static void CBTBehaviorsEnhanced.Patches.Melee.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

11:32:52.786 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
11:32:52.790 [Info] Writing postfixes
11:32:52.798 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.VehicleChassisLocations, int> BattleTech.HitLocation::GetVehicleHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Melee.HitLocation_GetVehicleHitTable::Postfix(BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.VehicleChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:52.802 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.VehicleChassisLocations, int> BattleTech.HitLocation::GetVehicleHitTable(BattleTech.AttackDirection from, bool log)
11:32:52.804 [Info] Writing postfixes
11:32:52.814 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CBTBehaviorsEnhanced.Patches.Melee.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:52.817 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
11:32:52.820 [Info] Writing postfixes
11:32:52.831 [Info] Patching BattleTech.MeleeAttackType BattleTech.MeleeRules::SelectRandomMeleeAttack(BattleTech.Mech attacker, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant target, float rnd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Melee.MeleeRules_SelectRandomMeleeAttack::Postfix(BattleTech.Mech attacker, BattleTech.ICombatant target, BattleTech.MeleeAttackType& __result)

11:32:52.834 [Info] Running ILHook manipulator on BattleTech.MeleeAttackType BattleTech.MeleeRules::SelectRandomMeleeAttack(BattleTech.Mech attacker, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant target, float rnd)
11:32:52.837 [Info] Writing postfixes
11:32:52.848 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.AI.AIUtil_ExpectedDamageForAttack::Prefix(AIUtil __instance, BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
2 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.AI.AIUtil_ExpectedDamageForAttack::Postfix(AIUtil __instance, BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext, float __result)

11:32:52.851 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
11:32:52.854 [Info] Writing prefixes
11:32:52.857 [Info] Writing postfixes
11:32:52.870 [Info] Patching static float AIUtil::GetAcceptableHeatLevelForMech(BattleTech.Mech mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.AI.AIUtil_GetAcceptableHeatLevelForMech::Prefix(BattleTech.Mech mech, Single& __result)

11:32:52.873 [Info] Running ILHook manipulator on static float AIUtil::GetAcceptableHeatLevelForMech(BattleTech.Mech mech)
11:32:52.875 [Info] Writing prefixes
11:32:52.884 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)
* static void CBTBehaviorsEnhanced.Patches.AI.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, BehaviorTreeResults& __result)

11:32:52.887 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
11:32:52.890 [Info] Writing postfixes
11:32:52.951 [Info] Patching virtual BehaviorTreeResults CanMeleeHostileTargetsNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.AI.CanMeleeHostileTargetsNode_Tick_Patch::Prefix(BehaviorTreeResults& __result, string ___name, BehaviorTree ___tree, BattleTech.AbstractActor ___unit)

11:32:52.953 [Info] Running ILHook manipulator on virtual BehaviorTreeResults CanMeleeHostileTargetsNode::Tick()
11:32:52.956 [Info] Writing prefixes
11:32:53.014 [Info] Patching virtual BehaviorTreeResults MechStartUpNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AI.MechStartUpNode_Tick::Postfix(BehaviorNode __instance, BehaviorTreeResults& __result)

11:32:53.017 [Info] Running ILHook manipulator on virtual BehaviorTreeResults MechStartUpNode::Tick()
11:32:53.020 [Info] Writing postfixes
11:32:53.030 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+OrderSequence_OnUpdate::Prefix(BattleTech.OrderSequence __instance, Boolean& __state)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+OrderSequence_OnUpdate::Postfix(BattleTech.OrderSequence __instance, bool __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:53.033 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
11:32:53.036 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
11:32:53.039 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:53.042 [Info] Writing prefixes
11:32:53.045 [Info] Writing postfixes
11:32:53.053 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_OnComplete::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_OnComplete::Postfix(BattleTech.ActorMovementSequence __instance)

11:32:53.057 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnComplete()
11:32:53.060 [Info] Writing prefixes
11:32:53.063 [Info] Writing postfixes
11:32:53.072 [Info] Patching virtual bool BattleTech.ActorMovementSequence::get_ConsumesFiring() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_ConsumesFiring_Getter::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __result)

11:32:53.075 [Info] Running ILHook manipulator on virtual bool BattleTech.ActorMovementSequence::get_ConsumesFiring()
11:32:53.078 [Info] Writing postfixes
11:32:53.085 [Info] Patching virtual bool BattleTech.MechJumpSequence::get_ConsumesFiring() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+MechJumpSequence_ConsumesFiring_Getter::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __result)

11:32:53.088 [Info] Running ILHook manipulator on virtual bool BattleTech.MechJumpSequence::get_ConsumesFiring()
11:32:53.091 [Info] Writing postfixes
11:32:53.100 [Info] Patching virtual void BattleTech.MechJumpSequence::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+MechJumpSequence_OnComplete::Prefix(BattleTech.MechJumpSequence __instance)

11:32:53.103 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnComplete()
11:32:53.107 [Info] Writing prefixes
11:32:53.115 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+AbstractActorMovementInvocation_Invoke::Postfix(BattleTech.AbstractActorMovementInvocation __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:53.121 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:53.125 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
11:32:53.130 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:53.134 [Info] Writing postfixes
11:32:53.143 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
* static bool CBTBehaviorsEnhanced.MovementPatches+AbstractActor_ResolveAttackSequence_Patch::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+AbstractActor_ResolveAttackSequence_Patch::Postfix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

11:32:53.146 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
11:32:53.149 [Info] Writing prefixes
11:32:53.153 [Info] Writing postfixes
11:32:53.167 [Info] Patching virtual void BattleTech.Mech::ResolveWeaponDamage(BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.PilotingPatches+Mech_ResolveWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType)

11:32:53.171 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ResolveWeaponDamage(BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType)
11:32:53.175 [Info] Writing postfixes
11:32:53.580 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 195 ms
11:32:53.586 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
7 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_Init_Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

11:32:53.589 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
11:32:53.592 [Info] Writing prefixes
11:32:53.597 [Info] Writing postfixes
11:32:53.611 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 195 ms
11:32:53.614 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_OnCombatGameDestroyed_Postfix()

11:32:53.617 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
11:32:53.620 [Info] Writing prefixes
11:32:53.623 [Info] Writing postfixes
11:32:53.631 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 195 ms
11:32:53.636 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Init_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.ActiveChatListView ____activeChatList)

11:32:53.639 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Init()
11:32:53.641 [Info] Writing postfixes
11:32:53.651 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 195 ms
11:32:53.655 [Info] Patching void BattleTech.UI.CombatChatModule::CombatInit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_CombatInit_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField, UnityEngine.GameObject ____activeChatWindow, BattleTech.UI.ActiveChatListView ____activeChatList, BattleTech.UI.PassiveChatListView ____passiveChatList)

11:32:53.658 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::CombatInit()
11:32:53.662 [Info] Writing postfixes
11:32:53.672 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 195 ms
11:32:53.675 [Info] Patching void BattleTech.UI.CombatChatModule::Active_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Active_OnEnter_Postfix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField)

11:32:53.679 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::Active_OnEnter()
11:32:53.681 [Info] Writing postfixes
11:32:53.689 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:53.693 [Info] PrefixWrapper being created for: CustomLocalization::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
11:32:53.697 [Info] PrefixWrapper created: HXI︳18︳::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
11:32:53.699 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
11:32:53.702 [Info] PrefixWrapper created: HXI︳19︳::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
11:32:53.705 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.708 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, BattleTech.CombatGameState ___combat, Boolean& __runOriginal)

11:32:53.711 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
11:32:53.714 [Info] Writing prefixes
11:32:53.721 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.726 [Info] Patching void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatLog::MessageCenter_RemoveSubscriber_Prefix(MessageCenter __instance, MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber, System.Collections.Generic.Dictionary<MessageCenterMessageType, System.Collections.Generic.List<MessageSubscription>> ___messageTable)

11:32:53.730 [Info] Running ILHook manipulator on void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber)
11:32:53.733 [Info] Writing prefixes
11:32:53.743 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.748 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

11:32:53.751 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
11:32:53.764 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.768 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

11:32:53.771 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
11:32:53.781 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.784 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

11:32:53.787 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
11:32:53.793 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.797 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

11:32:53.800 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
11:32:53.807 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.811 [Info] Patching void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

11:32:53.813 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState)
11:32:53.824 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.829 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
5 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()
* static void CBTBehaviorsEnhanced.Patches.CombatGameState_OnCombatGameDestroyed::Postfix()
* static void IRTweaks.Patches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

11:32:53.832 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
11:32:53.835 [Info] Writing prefixes
11:32:53.838 [Info] Writing postfixes
11:32:53.851 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.855 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)
* static void IRTweaks.Modules.UI.TgtComputerTonnage+CombatHUDActorDetailsDisplay_RefreshInfo_Patch::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

11:32:53.858 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
11:32:53.862 [Info] Writing postfixes
11:32:53.870 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 210 ms
11:32:53.874 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatLog+CombatChatModule_Update::Prefix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.ActiveChatListView ____activeChatList)

11:32:53.876 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Update()
11:32:53.879 [Info] Writing prefixes
11:32:53.888 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
11:32:53.891 [Info] Patching virtual void BattleTech.UI.SimGameOptionsMenu::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.SimGameOptionsMenu_Update::Postfix(BattleTech.UI.SimGameOptionsMenu __instance, BattleTech.UI.HBSDOTweenButton ___saveGame, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___saveTooltip, BattleTech.UI.HBSDOTweenButton ___restartMission, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___restartTooltip)

11:32:53.894 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameOptionsMenu::Update()
11:32:53.898 [Info] Writing postfixes
11:32:53.905 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
11:32:53.908 [Info] Patching void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.SimGameOptionsMenu_QuitPopup::Prefix(BattleTech.UI.SimGameOptionsMenu __instance, Action quitAction)

11:32:53.912 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction)
11:32:53.914 [Info] Writing prefixes
11:32:53.924 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
11:32:53.928 [Info] Patching void BattleTech.CombatGameState::TriggerAutoSaving() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatGameState_TriggerAutoSaving::Prefix(BattleTech.CombatGameState __instance)

11:32:53.931 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::TriggerAutoSaving()
11:32:53.934 [Info] Writing prefixes
11:32:53.942 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
11:32:53.945 [Info] Patching void BattleTech.UI.MechLabPanel::ToggleLayout() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_ToggleLayout::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabDismountWidget ___dismountWidget, BattleTech.UI.HBSDOTweenButton ___btn_mechViewerButton)

11:32:53.948 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ToggleLayout()
11:32:53.951 [Info] Writing postfixes
11:32:53.960 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 211 ms
11:32:53.965 [Info] Patching void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_SetData_1::Postfix(BattleTech.UI.MechLabPanel __instance)

11:32:53.968 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB)
11:32:53.971 [Info] Writing postfixes
11:32:53.982 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:53.985 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix
11:32:53.989 [Info] PrefixWrapper created: HXI︳20︳::MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix
11:32:53.993 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix
11:32:53.996 [Info] PrefixWrapper created: HXI︳21︳::IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix
11:32:53.999 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 227 ms
11:32:54.004 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem, Boolean& __runOriginal)

11:32:54.006 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
11:32:54.009 [Info] Writing prefixes
11:32:54.026 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 228 ms
11:32:54.030 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.MechLabPanel_OnStripEquipment_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, bool ___batchActionInProgress, BattleTech.UI.MechLabItemSlotElement ___dragItem)

11:32:54.032 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripEquipment()
11:32:54.035 [Info] Writing prefixes
11:32:54.043 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 228 ms
11:32:54.046 [Info] Patching bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabLocationWidget_ValidateAdd::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef newComponent, BattleTech.UI.MechLabPanel ___mechLab)

11:32:54.048 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent)
11:32:54.050 [Info] Writing postfixes
11:32:54.058 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:54.061 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
11:32:54.064 [Info] PrefixWrapper created: HXI︳22︳::CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
11:32:54.067 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
11:32:54.070 [Info] PrefixWrapper created: HXI︳23︳::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
11:32:54.072 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.076 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType, BattleTech.UI.MechLabPanel ___mechLab, Localize.Text ____dropErrorMessage, Boolean& __runOriginal)
* static void CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData, Boolean& __runOriginal)

11:32:54.078 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
11:32:54.081 [Info] Writing prefixes
11:32:54.091 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.096 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)
1 postfixes:
* static void IRTweaks.Modules.UI.SkirmishSettings_Beta_OnLoadComplete::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.TMProWrapper.HBS_Dropdown ___lanceBudgetDropdown)

11:32:54.098 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
11:32:54.102 [Info] Writing prefixes
11:32:54.105 [Info] Writing postfixes
11:32:54.113 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.118 [Info] Patching void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGContractsWidget_Init::Postfix(BattleTech.UI.SGContractsWidget __instance, UnityEngine.GameObject ___ContractList)

11:32:54.121 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted)
11:32:54.123 [Info] Writing postfixes
11:32:54.138 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.141 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_ResetFlyoutsToPrefab::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.TMProWrapper.LocalizableText ___text, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, int ___flyoutButtonCount)

11:32:54.144 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
11:32:54.147 [Info] Writing postfixes
11:32:54.154 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.159 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_SetStateAccordingToSimDropship::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipType shipType, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

11:32:54.163 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
11:32:54.166 [Info] Writing postfixes
11:32:54.175 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.179 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnPointerEnter::Postfix(BattleTech.UI.SGNavigationButton __instance, UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

11:32:54.182 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
11:32:54.185 [Info] Writing postfixes
11:32:54.195 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.198 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnClick::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.SGNavigationList ___buttonParent, BattleTech.UI.TMProWrapper.LocalizableText ___text)

11:32:54.201 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
11:32:54.204 [Info] Writing postfixes
11:32:54.213 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.217 [Info] Patching void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationWidgetLeft_Init::Postfix(BattleTech.UI.SGNavigationWidgetLeft __instance, BattleTech.UI.SGShipMap ___shipMap, BattleTech.UI.SGNavigationList ___locationList)

11:32:54.220 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager)
11:32:54.223 [Info] Writing postfixes
11:32:54.233 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.237 [Info] Patching void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_FlyoutClicked::Prefix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipMenuType buttonID, BattleTech.UI.TMProWrapper.LocalizableText ___text, BattleTech.UI.SGNavigationList ___buttonParent)

11:32:54.240 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID)
11:32:54.243 [Info] Writing prefixes
11:32:54.252 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.256 [Info] Patching void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.SimGameState simState)

11:32:54.259 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState)
11:32:54.263 [Info] Writing postfixes
11:32:54.270 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.274 [Info] Patching void BattleTech.UI.SGNavigationList::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_Start::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.UI.HBSRadioSet ___radioSet, BattleTech.UI.SGNavigationButton ___argoButton)

11:32:54.276 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::Start()
11:32:54.279 [Info] Writing postfixes
11:32:54.287 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.291 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

11:32:54.294 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
11:32:54.297 [Info] Writing postfixes
11:32:54.303 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.307 [Info] Patching void BattleTech.UI.CombatHUDPipBar::CalcPipsAndActivate(float min, float max, int targetPointsPerPip, int targetMinPips) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_CalcPipsAndActivate::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

11:32:54.309 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPipBar::CalcPipsAndActivate(float min, float max, int targetPointsPerPip, int targetMinPips)
11:32:54.311 [Info] Writing postfixes
11:32:54.317 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.322 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::CacheActorData(BattleTech.AbstractActor actor, bool actorTargeted, bool actorSelected) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_CacheActorData::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.AbstractActor actor)

11:32:54.326 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::CacheActorData(BattleTech.AbstractActor actor, bool actorTargeted, bool actorSelected)
11:32:54.329 [Info] Writing postfixes
11:32:54.339 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.342 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMoveIndicators(BattleTech.AbstractActor target, float currentEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDStatusPanel_ShowMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor target, float currentEvasive)

11:32:54.345 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMoveIndicators(BattleTech.AbstractActor target, float currentEvasive)
11:32:54.348 [Info] Writing postfixes
11:32:54.355 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.360 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)
1 postfixes:
* static void IRTweaks.Modules.UI.EffectManager_CreateEffect::Postfix(BattleTech.ICombatant target)

11:32:54.363 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
11:32:54.366 [Info] Writing prefixes
11:32:54.368 [Info] Writing postfixes
11:32:54.380 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.383 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)
* static void IRTweaks.Modules.UI.EffectManager_EffectComplete::Postfix(BattleTech.Effect e)

11:32:54.386 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
11:32:54.390 [Info] Writing postfixes
11:32:54.398 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.401 [Info] Patching static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_ShowCurrent_Postfix_Patch::Prefix()

11:32:54.405 [Info] Running ILHook manipulator on static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)
11:32:54.407 [Info] Writing prefixes
11:32:54.414 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.419 [Info] Patching void BattleTech.AttackStackSequence::FireSequence(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.AttackStackSequence_FireSequence::Prefix(BattleTech.AttackStackSequence __instance, BattleTech.AttackDirector+AttackSequence sequence)

11:32:54.422 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::FireSequence(BattleTech.AttackDirector+AttackSequence sequence)
11:32:54.425 [Info] Writing prefixes
11:32:54.441 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.446 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)

11:32:54.448 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
11:32:54.451 [Info] Writing postfixes
11:32:54.468 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.471 [Info] Patching void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_FromPilotDef::Postfix(BattleTech.Pilot __instance)

11:32:54.474 [Info] Running ILHook manipulator on void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def)
11:32:54.477 [Info] Writing postfixes
11:32:54.489 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.492 [Info] Patching void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_AddXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, int value)

11:32:54.497 [Info] Running ILHook manipulator on void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value)
11:32:54.499 [Info] Writing postfixes
11:32:54.506 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.509 [Info] Patching bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, uint value)

11:32:54.512 [Info] Running ILHook manipulator on bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value)
11:32:54.514 [Info] Writing prefixes
11:32:54.517 [Info] Writing postfixes
11:32:54.526 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.530 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksMWDetailPanel_OnPilotReset::Postfix(BattleTech.UI.SGBarracksMWDetailPanel __instance)

11:32:54.534 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset()
11:32:54.537 [Info] Writing postfixes
11:32:54.545 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 242 ms
11:32:54.547 [Info] Patching virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksWidget_ReceiveButtonPress::Postfix(BattleTech.UI.SGBarracksWidget __instance, string button)

11:32:54.550 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button)
11:32:54.553 [Info] Writing postfixes
11:32:54.562 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.565 [Info] Patching void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SGBarracksAdvancementPanel_OnValueClick_Patch::Prefix(BattleTech.UI.SGBarracksAdvancementPanel __instance, string type, int value)

11:32:54.567 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value)
11:32:54.570 [Info] Writing prefixes
11:32:54.577 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.581 [Info] Patching virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGRoomController_Barracks_Close_Patch::Postfix(BattleTech.UI.SGRoomController_Barracks __instance)

11:32:54.583 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader)
11:32:54.586 [Info] Writing postfixes
11:32:54.595 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.598 [Info] Patching void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Prefix(BattleTech.SimGameState __instance, int val)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Postfix(BattleTech.SimGameState __instance, int val)

11:32:54.601 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained)
11:32:54.604 [Info] Writing prefixes
11:32:54.606 [Info] Writing postfixes
11:32:54.614 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.617 [Info] Patching static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGS_SetSimGameStat::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)

11:32:54.621 [Info] Running ILHook manipulator on static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)
11:32:54.623 [Info] Writing postfixes
11:32:54.634 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.646 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
7 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)

11:32:54.648 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:54.651 [Info] Writing prefixes
11:32:54.654 [Info] Writing postfixes
11:32:54.687 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.696 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)

11:32:54.699 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
11:32:54.702 [Info] Writing prefixes
11:32:54.727 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.731 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
1 postfixes:
* static void IRTweaks.Modules.Misc.SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Postfix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

11:32:54.733 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
11:32:54.736 [Info] Writing prefixes
11:32:54.739 [Info] Writing postfixes
11:32:54.745 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.749 [Info] Patching bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddAllyFaction::Postfix(BattleTech.SimGameState __instance)

11:32:54.752 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement)
11:32:54.755 [Info] Writing postfixes
11:32:54.765 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.769 [Info] Patching void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_RemoveAllyFaction::Postfix(BattleTech.SimGameState __instance, BattleTech.FactionValue faction)

11:32:54.772 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction)
11:32:54.774 [Info] Writing postfixes
11:32:54.784 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.788 [Info] Patching BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetStatsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, BattleTech.StatCollection& __result)

11:32:54.791 [Info] Running ILHook manipulator on BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope)
11:32:54.795 [Info] Writing postfixes
11:32:54.804 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 243 ms
11:32:54.808 [Info] Patching HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetTagsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, HBS.Collections.TagSet& __result)

11:32:54.811 [Info] Running ILHook manipulator on HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope)
11:32:54.814 [Info] Writing postfixes
11:32:54.827 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:54.831 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:54.834 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
11:32:54.837 [Info] Transpiling void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
11:32:54.840 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:54.854 [Info] Writing prefixes
11:32:54.857 [Info] Writing postfixes
11:32:54.867 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:54.870 [Info] Patching void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.MechDef_constructor::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)

11:32:54.873 [Info] Running ILHook manipulator on void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)
11:32:54.876 [Info] Writing postfixes
11:32:54.886 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:54.890 [Info] Patching static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_ApplySimGameEventResult::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)

11:32:54.893 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)
11:32:54.897 [Info] Writing postfixes
11:32:54.913 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:54.917 [Info] Patching void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficulty_RefreshCareerScoreMultiplier::Prefix(BattleTech.SimGameDifficulty __instance, System.Collections.Generic.Dictionary<string, BattleTech.SimGameDifficulty+DifficultySetting> ___difficultyDict, System.Collections.Generic.Dictionary<string, int> ___difficultyIndices, Single& ___curCareerModifier)

11:32:54.921 [Info] Running ILHook manipulator on void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier()
11:32:54.924 [Info] Writing prefixes
11:32:55.064 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:55.067 [Info] Patching float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_CalculateRawScoreMod::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, Single& __result)

11:32:55.070 [Info] Running ILHook manipulator on float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod()
11:32:55.073 [Info] Writing postfixes
11:32:55.082 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:55.095 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
8 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:32:55.098 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:55.101 [Info] Writing prefixes
11:32:55.104 [Info] Writing postfixes
11:32:55.139 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 246 ms
11:32:55.142 [Info] Patching void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.UnityGameInstance_CalcGameHash::Prefix()

11:32:55.145 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm)
11:32:55.148 [Info] Writing prefixes
11:32:55.157 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 247 ms
11:32:55.161 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
1 postfixes:
* static void IRTweaks.Modules.Misc.UnitSpawnPointGameLogic_initializeActor::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

11:32:55.164 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
11:32:55.167 [Info] Writing prefixes
11:32:55.171 [Info] Writing postfixes
11:32:55.180 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 247 ms
11:32:55.185 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
7 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:55.189 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:55.194 [Info] Writing postfixes
11:32:55.209 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.215 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:55.219 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
11:32:55.222 [Info] Transpiling void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
11:32:55.227 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:55.245 [Info] Writing prefixes
11:32:55.259 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.263 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Prefix(BattleTech.UI.MainMenu __instance)
4 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

11:32:55.266 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
11:32:55.269 [Info] Writing prefixes
11:32:55.272 [Info] Writing postfixes
11:32:55.279 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.283 [Info] Patching void BattleTech.SimGameState::ShowLowFundsWarning() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameState_ShowLowFundsWarning::Prefix()

11:32:55.287 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ShowLowFundsWarning()
11:32:55.289 [Info] Writing prefixes
11:32:55.298 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.302 [Info] Patching bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.LineOfSight_FindSecondaryImpactTarget::Postfix(BattleTech.LineOfSight __instance, UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3& impactPoint, Boolean& __result)

11:32:55.306 [Info] Running ILHook manipulator on bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint)
11:32:55.309 [Info] Writing postfixes
11:32:55.323 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.328 [Info] Patching void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_UpdateDifficultyScoreBar_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)

11:32:55.333 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar()
11:32:55.337 [Info] Writing prefixes
11:32:55.346 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.350 [Info] Patching void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.PreGameCareerModeSettingsTotalScoreDescAndBar_RefreshInfo_Patch::Prefix(BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar __instance, float newMod)

11:32:55.354 [Info] Running ILHook manipulator on void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod)
11:32:55.358 [Info] Writing prefixes
11:32:55.368 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.378 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

11:32:55.381 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
11:32:55.383 [Info] Writing postfixes
11:32:55.405 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.409 [Info] Patching void BattleTech.SimGameState::Destroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__Destroy_Patch::Postfix(BattleTech.SimGameState __instance)

11:32:55.412 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Destroy()
11:32:55.415 [Info] Writing postfixes
11:32:55.422 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.427 [Info] Patching virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, string ___ironManModeId, string ___autoEquipMechsId, string ___mechPartsReqId, string ___skipPrologueId, string ___randomMechId, string ___argoUpgradeCostId, BattleTech.UI.SGDSToggle ___ironManModeToggle, BattleTech.UI.SGDSDropdown ___mechPartsReqDropdown, UnityEngine.GameObject ___disabledOverlay, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___activeDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___activeToggles, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___cachedDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___cachedToggles, BattleTech.UI.SGDSToggle ___togglePrefab, BattleTech.UI.SGDSDropdown ___dropdownPrefab)

11:32:55.431 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings()
11:32:55.434 [Info] Writing prefixes
11:32:55.437 [Info] Writing postfixes
11:32:55.454 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 249 ms
11:32:55.460 [Info] Patching void BattleTech.SimGameState::AddRandomStartingMechs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameState_AddRandomStartingMechs::Prefix(BattleTech.SimGameState __instance)

11:32:55.463 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddRandomStartingMechs()
11:32:55.466 [Info] Writing prefixes
11:32:55.480 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 250 ms
11:32:55.484 [Info] Patching void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameConstantOverride_ApplyOverride::Postfix(BattleTech.SimGameConstantOverride __instance, string constantType, string constantName)

11:32:55.487 [Info] Running ILHook manipulator on void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName)
11:32:55.490 [Info] Writing postfixes
11:32:55.499 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 250 ms
11:32:55.503 [Info] Patching virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.RandomStartByDifficulty_SGDifficultySettingObject_CurCareerModifier::Prefix(BattleTech.UI.SGDifficultySettingObject __instance, Single& __result, int ___curIdx)

11:32:55.506 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier()
11:32:55.508 [Info] Writing prefixes
11:32:55.519 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.524 [Info] Patching byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:55.529 [Info] Running ILHook manipulator on byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
11:32:55.532 [Info] Transpiling byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
11:32:55.536 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:55.551 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.558 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_InitStats::Postfix(BattleTech.Weapon __instance)

11:32:55.562 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
11:32:55.565 [Info] Writing postfixes
11:32:55.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.584 [Info] Patching bool BattleTech.Weapon::get_IsDisabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_IsDisabled::Postfix(BattleTech.Weapon __instance, Boolean& __result)

11:32:55.588 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IsDisabled()
11:32:55.591 [Info] Writing postfixes
11:32:55.599 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.604 [Info] Patching void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ObstructionGameLogic_ExplodeBuildingIfNeeded::Prefix(BattleTech.ObstructionGameLogic __instance)

11:32:55.606 [Info] Running ILHook manipulator on void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded()
11:32:55.609 [Info] Writing prefixes
11:32:55.620 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.624 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)

11:32:55.627 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
11:32:55.630 [Info] Writing postfixes
11:32:55.638 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.642 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)

11:32:55.645 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
11:32:55.648 [Info] Writing postfixes
11:32:55.659 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.664 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced_OnFire::Postfix(CustomUnits.CustomMech __instance)

11:32:55.666 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
11:32:55.670 [Info] Writing postfixes
11:32:55.676 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.680 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced_OnFire::Postfix(BattleTech.Mech __instance)

11:32:55.683 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
11:32:55.685 [Info] Writing postfixes
11:32:55.693 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.697 [Info] Patching void BattleTech.Weapon::ProcessOnFiredFloatieEffects() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_ProcessOnFiredFloatieEffects_Patch::Postfix(BattleTech.Weapon __instance, BattleTech.CombatGameState ___combat)

11:32:55.700 [Info] Running ILHook manipulator on void BattleTech.Weapon::ProcessOnFiredFloatieEffects()
11:32:55.703 [Info] Writing postfixes
11:32:55.711 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 253 ms
11:32:55.716 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void IRTweaks.Modules.Combat.AttackDirectorAttackSequence_OnAttackSequenceResolveDamage::Postfix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)

11:32:55.720 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
11:32:55.724 [Info] Writing prefixes
11:32:55.728 [Info] Writing postfixes
11:32:55.747 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:55.751 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
11:32:55.756 [Info] PrefixWrapper created: HXI︳24︳::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
11:32:55.759 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.JammingEnabler::Prefix
11:32:55.763 [Info] PrefixWrapper created: HXI︳25︳::CustAmmoCategories.JammingEnabler::Prefix
11:32:55.766 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
11:32:55.770 [Info] PrefixWrapper created: HXI︳26︳::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
11:32:55.773 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AttackDirector_OnAttackComplete::Prefix
11:32:55.776 [Info] PrefixWrapper created: HXI︳27︳::CustomUnits.AttackDirector_OnAttackComplete::Prefix
11:32:55.779 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
11:32:55.782 [Info] PrefixWrapper created: HXI︳28︳::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
11:32:55.786 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.792 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 5 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state, Boolean& __runOriginal)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
5 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void PanicSystem.Patches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

11:32:55.796 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
11:32:55.800 [Info] Writing prefixes
11:32:55.804 [Info] Writing postfixes
11:32:55.815 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.818 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
2 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
* static void IRTweaks.Modules.Combat.CombatHUDFloatie_Init_Patch::Postfix(BattleTech.UI.CombatHUDFloatie __instance)

11:32:55.822 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
11:32:55.825 [Info] Writing prefixes
11:32:55.829 [Info] Writing postfixes
11:32:55.837 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.841 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
8 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

11:32:55.845 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:55.849 [Info] Writing postfixes
11:32:55.860 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.865 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.HUDMechArmorReadout_SetHoveredAmor::Postfix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ArmorLocation location, BattleTech.Mech ___displayedMech)

11:32:55.867 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location)
11:32:55.870 [Info] Writing postfixes
11:32:55.877 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.880 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_AL::Postfix(BattleTech.UI.SelectionStateFire __instance, BattleTech.ArmorLocation location)

11:32:55.883 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location)
11:32:55.885 [Info] Writing postfixes
11:32:55.893 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.896 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_VCL::Postfix(BattleTech.UI.SelectionStateFire __instance)

11:32:55.898 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location)
11:32:55.901 [Info] Writing postfixes
11:32:55.907 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.911 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

11:32:55.913 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
11:32:55.916 [Info] Writing postfixes
11:32:55.923 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.927 [Info] Patching float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ToHit_GetMoraleAttackModifier::Postfix(Single& __result)

11:32:55.930 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack)
11:32:55.933 [Info] Writing postfixes
11:32:55.940 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.944 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
3 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiers::Postfix(Single& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:55.947 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:55.949 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:55.952 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:55.957 [Info] Writing prefixes
11:32:55.960 [Info] Writing postfixes
11:32:55.971 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:55.975 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 3 postfixes, 2 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, String& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiersDescription::Postfix(String& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:55.978 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:55.981 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
11:32:55.984 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:55.987 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:55.991 [Info] Writing postfixes
11:32:56.004 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.008 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)
* static void IRTweaks.Modules.Combat.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

11:32:56.011 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
11:32:56.014 [Info] Writing postfixes
11:32:56.025 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.029 [Info] Patching virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDCalledShotPopUp_Update::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD)

11:32:56.032 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update()
11:32:56.034 [Info] Writing postfixes
11:32:56.043 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.046 [Info] Patching virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechMeleeSequence_ConsumesFiring_Getter::Prefix(BattleTech.MechMeleeSequence __instance)

11:32:56.049 [Info] Running ILHook manipulator on virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring()
11:32:56.052 [Info] Writing prefixes
11:32:56.059 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.063 [Info] Patching virtual bool BattleTech.MechDFASequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechDFASequence_ConsumesFiring_Getter::Prefix(BattleTech.MechDFASequence __instance)

11:32:56.066 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDFASequence::get_ConsumesFiring()
11:32:56.070 [Info] Writing prefixes
11:32:56.076 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.081 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
9 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)

11:32:56.083 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:56.086 [Info] Writing postfixes
11:32:56.099 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.102 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

11:32:56.105 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
11:32:56.108 [Info] Writing prefixes
11:32:56.111 [Info] Writing postfixes
11:32:56.122 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.125 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List<BattleTech.ICombatant> __result)

11:32:56.129 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
11:32:56.132 [Info] Writing postfixes
11:32:56.139 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.142 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

11:32:56.146 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
11:32:56.149 [Info] Writing prefixes
11:32:56.152 [Info] Writing postfixes
11:32:56.163 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.167 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDWeaponPanel_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

11:32:56.170 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
11:32:56.173 [Info] Writing postfixes
11:32:56.183 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.187 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

11:32:56.191 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor)
11:32:56.197 [Info] Writing prefixes
11:32:56.204 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.208 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState2::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)

11:32:56.211 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)
11:32:56.214 [Info] Writing prefixes
11:32:56.223 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.230 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:56.232 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
11:32:56.236 [Info] Writing prefixes
11:32:56.239 [Info] Writing postfixes
11:32:56.255 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.259 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDActionButton_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string creatorGUID, string targetGUID)

11:32:56.263 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID)
11:32:56.266 [Info] Writing postfixes
11:32:56.273 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.277 [Info] Patching virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDEquipmentSlot_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDEquipmentSlot __instance, string creatorGUID, string targetGUID)

11:32:56.280 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID)
11:32:56.283 [Info] Writing postfixes
11:32:56.292 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 292 ms
11:32:56.296 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
3 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButtons_Patch::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

11:32:56.299 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
11:32:56.301 [Info] Writing prefixes
11:32:56.304 [Info] Writing postfixes
11:32:56.313 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 293 ms
11:32:56.317 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)
2 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

11:32:56.320 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
11:32:56.323 [Info] Writing prefixes
11:32:56.326 [Info] Writing postfixes
11:32:56.335 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 293 ms
11:32:56.338 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:56.341 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
11:32:56.343 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
11:32:56.347 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:56.349 [Info] Writing postfixes
11:32:56.358 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:56.362 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix
11:32:56.365 [Info] PrefixWrapper created: HXI︳29︳::MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix
11:32:56.368 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix
11:32:56.371 [Info] PrefixWrapper created: HXI︳30︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix
11:32:56.373 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 308 ms
11:32:56.377 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent, Boolean& __runOriginal)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

11:32:56.380 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
11:32:56.383 [Info] Writing prefixes
11:32:56.385 [Info] Writing postfixes
11:32:56.396 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:56.399 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
11:32:56.404 [Info] PrefixWrapper created: HXI︳31︳::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
11:32:56.406 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
11:32:56.409 [Info] PrefixWrapper created: HXI︳32︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
11:32:56.413 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.417 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 2 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
* static void PanicSystem.Patches.Mech_OnLocationDestroyed_Patch::Postfix(BattleTech.Mech __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:56.420 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:56.424 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
11:32:56.429 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:56.432 [Info] Writing prefixes
11:32:56.437 [Info] Writing postfixes
11:32:56.450 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.455 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.TurnDirector_StartFirstRound::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

11:32:56.459 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
11:32:56.463 [Info] Writing prefixes
11:32:56.466 [Info] Writing postfixes
11:32:56.474 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.478 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatHUDStatusPanel_ShowMeleeDamageMultipliers::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor)

11:32:56.480 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor)
11:32:56.483 [Info] Writing prefixes
11:32:56.493 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.497 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, Single& damageAmount, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Mech_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:56.500 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:56.503 [Info] Writing prefixes
11:32:56.506 [Info] Writing postfixes
11:32:56.516 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.520 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Vehicle_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:56.524 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:56.527 [Info] Writing prefixes
11:32:56.530 [Info] Writing postfixes
11:32:56.539 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.543 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Turret_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:56.546 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:56.549 [Info] Writing prefixes
11:32:56.552 [Info] Writing postfixes
11:32:56.562 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 325 ms
11:32:56.565 [Info] Patching virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Building_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Building __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

11:32:56.569 [Info] Running ILHook manipulator on virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
11:32:56.572 [Info] Writing postfixes
11:32:56.581 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:56.584 [Info] PrefixWrapper being created for: CustomAmmoCategories::WeaponRealizer.JammingEnabler::Prefix
11:32:56.588 [Info] PrefixWrapper created: HXI︳33︳::WeaponRealizer.JammingEnabler::Prefix
11:32:56.592 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
11:32:56.596 [Info] PrefixWrapper created: HXI︳34︳::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
11:32:56.599 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.unJammingEnabler::Prefix
11:32:56.603 [Info] PrefixWrapper created: HXI︳35︳::CustAmmoCategories.unJammingEnabler::Prefix
11:32:56.605 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
11:32:56.608 [Info] PrefixWrapper created: HXI︳36︳::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
11:32:56.611 [Info] PrefixWrapper being created for: PanicSystem::PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix
11:32:56.615 [Info] PrefixWrapper created: HXI︳37︳::PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix
11:32:56.618 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
11:32:56.622 [Info] PrefixWrapper created: HXI︳38︳::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
11:32:56.625 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 369 ms
11:32:56.631 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 6 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

11:32:56.634 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
11:32:56.637 [Info] Writing prefixes
11:32:56.641 [Info] Writing postfixes
11:32:56.652 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 369 ms
11:32:56.658 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_InitStats::Postfix(BattleTech.Weapon __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Weapon_InitStats_Patch::Postfix(BattleTech.Weapon __instance)

11:32:56.662 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
11:32:56.664 [Info] Writing postfixes
11:32:56.676 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 369 ms
11:32:56.681 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
10 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)

11:32:56.684 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:56.687 [Info] Writing postfixes
11:32:56.699 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:56.702 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
11:32:56.705 [Info] PrefixWrapper created: HXI︳39︳::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
11:32:56.708 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.Mech_DamageLocation::Prefix
11:32:56.712 [Info] PrefixWrapper created: HXI︳40︳::CustAmmoCategories.Mech_DamageLocation::Prefix
11:32:56.715 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
11:32:56.717 [Info] PrefixWrapper created: HXI︳41︳::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
11:32:56.721 [Info] PrefixWrapper being created for: CBTBehaviorsEnhanced::CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix
11:32:56.725 [Info] PrefixWrapper created: HXI︳42︳::CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix
11:32:56.728 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
11:32:56.731 [Info] PrefixWrapper created: HXI︳43︳::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
11:32:56.734 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 403 ms
11:32:56.739 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 5 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)

11:32:56.742 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
11:32:56.745 [Info] Writing prefixes
11:32:56.760 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 403 ms
11:32:56.764 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.AmmunitionBox_DamageComponent::Prefix(BattleTech.AmmunitionBox __instance, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:56.767 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:56.770 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:32:56.773 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:56.776 [Info] Writing prefixes
11:32:56.785 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:56.789 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.PilotInjurePilotPatch::Prefix
11:32:56.792 [Info] PrefixWrapper created: HXI︳44︳::MissionControl.Patches.PilotInjurePilotPatch::Prefix
11:32:56.795 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
11:32:56.799 [Info] PrefixWrapper created: HXI︳45︳::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
11:32:56.801 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 419 ms
11:32:56.807 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
2 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

11:32:56.811 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:32:56.814 [Info] Writing prefixes
11:32:56.817 [Info] Writing postfixes
11:32:56.827 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 419 ms
11:32:56.832 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_OnTurnActorActivateComplete::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void IRTweaks.Modules.Combat.TurnDirector_OnTurnActorActivateComplete::Postfix(BattleTech.TurnDirector __instance)

11:32:56.834 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
11:32:56.836 [Info] Writing prefixes
11:32:56.840 [Info] Writing postfixes
11:32:56.850 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 422 ms
11:32:56.853 [Info] Patching virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:56.857 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
11:32:56.861 [Info] Transpiling virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
11:32:56.866 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.024 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 426 ms
11:32:57.030 [Info] Patching void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.033 [Info] Running ILHook manipulator on void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
11:32:57.035 [Info] Transpiling void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
11:32:57.040 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.061 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 426 ms
11:32:57.066 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 11 postfixes, 0 transpilers, 0 finalizers
11 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_PainTolerance::Postfix(BattleTech.AbstractActor __instance)

11:32:57.069 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
11:32:57.072 [Info] Writing postfixes
11:32:57.083 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:32:57.086 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
11:32:57.090 [Info] PrefixWrapper created: HXI︳46︳::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
11:32:57.093 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AbstractActor_IsFriendly::Prefix
11:32:57.097 [Info] PrefixWrapper created: HXI︳47︳::CustomUnits.AbstractActor_IsFriendly::Prefix
11:32:57.100 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
11:32:57.103 [Info] PrefixWrapper created: HXI︳48︳::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
11:32:57.105 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 448 ms
11:32:57.109 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)

11:32:57.112 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
11:32:57.115 [Info] Writing prefixes
11:32:57.122 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.129 [Info] Patching void BattleTech.Pilot::InitStatValidators() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ExtendedStats_Pilot_InitStatValidators::Prefix(BattleTech.Pilot __instance, BattleTech.StatCollection ___statCollection)

11:32:57.133 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitStatValidators()
11:32:57.136 [Info] Writing prefixes
11:32:57.150 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.155 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()
* static void PanicSystem.Components.StatusEffect+CombatGameState_LoadComplete_Patch::Postfix()
* static void IRTweaks.Modules.Combat.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance, BattleTech.Contract contract)

11:32:57.158 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
11:32:57.162 [Info] Writing postfixes
11:32:57.175 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.179 [Info] Patching void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Building_AttachBuildingToObjective::Postfix(BattleTech.Building __instance, BattleTech.Framework.ObjectiveGameLogic objective)

11:32:57.182 [Info] Running ILHook manipulator on void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective)
11:32:57.185 [Info] Writing postfixes
11:32:57.198 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.203 [Info] Patching void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ScaleObjectiveBuildingStructure_TurnDirector_OnInitializeContractComplete::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

11:32:57.209 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message)
11:32:57.212 [Info] Writing postfixes
11:32:57.221 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.227 [Info] Patching void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SpawnProtection_Team_AddUnit::Postfix(BattleTech.Team __instance, BattleTech.AbstractActor unit)

11:32:57.231 [Info] Running ILHook manipulator on void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit)
11:32:57.234 [Info] Writing postfixes
11:32:57.523 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.528 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)
* static void CustomShops.SG_Stores_MultiPurchasePopup_Refresh::ReplaceTitle(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

11:32:57.532 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
11:32:57.535 [Info] Writing postfixes
11:32:57.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.552 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::Postfix()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnCancel::HandleExit()

11:32:57.556 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
11:32:57.561 [Info] Writing postfixes
11:32:57.573 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.577 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::Postfix()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnConfirm::HandleExit()

11:32:57.581 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
11:32:57.584 [Info] Writing postfixes
11:32:57.595 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 449 ms
11:32:57.607 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)

11:32:57.611 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
11:32:57.614 [Info] Writing prefixes
11:32:57.644 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 452 ms
11:32:57.647 [Info] Patching bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.650 [Info] Running ILHook manipulator on bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
11:32:57.653 [Info] Transpiling bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
11:32:57.658 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.675 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 456 ms
11:32:57.680 [Info] Patching void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.682 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
11:32:57.685 [Info] Transpiling void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
11:32:57.691 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.713 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 459 ms
11:32:57.717 [Info] Patching bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.720 [Info] Running ILHook manipulator on bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
11:32:57.724 [Info] Transpiling bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
11:32:57.730 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.747 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 463 ms
11:32:57.751 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.755 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.759 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.764 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.780 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 466 ms
11:32:57.784 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.787 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.791 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.796 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.814 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 470 ms
11:32:57.817 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.820 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.825 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.830 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.843 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:57.848 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

11:32:57.851 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.855 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
11:32:57.859 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?304120576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
11:32:57.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:57.877 [Info] Patching void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_RefreshColorAreas::Prefix()

11:32:57.881 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas()
11:32:57.884 [Info] Writing prefixes
11:32:57.900 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:57.904 [Info] Patching void BattleTech.UI.SG_Shop_Screen::BeginShop() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_BeginShop::BeginShop(BattleTech.UI.SG_Shop_Screen __instance)

11:32:57.908 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::BeginShop()
11:32:57.910 [Info] Writing prefixes
11:32:57.919 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:57.929 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

11:32:57.932 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
11:32:57.935 [Info] Writing prefixes
11:32:57.938 [Info] Writing postfixes
11:32:57.967 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:57.971 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()
* static void CustomShops.Patches.SimGameState_Init::OnInit(BattleTech.SimGameState __instance)

11:32:57.974 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
11:32:57.978 [Info] Writing postfixes
11:32:57.986 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:57.992 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()

11:32:57.996 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
11:32:58.000 [Info] Writing postfixes
11:32:58.019 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.023 [Info] Patching void BattleTech.StarSystem::RefreshShops() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.StarSystem_RefreshShops::RefreshShops()

11:32:58.027 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshShops()
11:32:58.030 [Info] Writing prefixes
11:32:58.038 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.042 [Info] Patching void BattleTech.StarSystem::CompletedContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.StarSystem_CompletedContract::RefreshShops()

11:32:58.045 [Info] Running ILHook manipulator on void BattleTech.StarSystem::CompletedContract()
11:32:58.048 [Info] Writing postfixes
11:32:58.057 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.061 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

11:32:58.065 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
11:32:58.068 [Info] Writing postfixes
11:32:58.077 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.090 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
9 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)

11:32:58.093 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:32:58.097 [Info] Writing prefixes
11:32:58.100 [Info] Writing postfixes
11:32:58.137 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.141 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.SimGameState_SetCurrentSystem::UpdateSystem(BattleTech.StarSystem system)
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

11:32:58.145 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
11:32:58.148 [Info] Writing prefixes
11:32:58.150 [Info] Writing postfixes
11:32:58.160 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.167 [Info] Patching void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Dehydrate::OverrideSaveShops(Boolean& saveShops)

11:32:58.171 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops)
11:32:58.174 [Info] Writing prefixes
11:32:58.183 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.192 [Info] Patching void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Rehydrate::OverrideLoadShops(Boolean& loadShops)

11:32:58.198 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops)
11:32:58.201 [Info] Writing prefixes
11:32:58.222 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.229 [Info] Patching BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerate(BattleTech.ItemCollectionDef collection, int count, string parentGUID)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerated(BattleTech.ItemCollectionDef collection, BattleTech.ItemCollectionResult __result)

11:32:58.232 [Info] Running ILHook manipulator on BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID)
11:32:58.235 [Info] Writing prefixes
11:32:58.238 [Info] Writing postfixes
11:32:58.266 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.269 [Info] Patching void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_InsertItemCollectionEntry::OnInsert(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)

11:32:58.272 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)
11:32:58.275 [Info] Writing prefixes
11:32:58.281 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.285 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnComplete(BattleTech.ItemCollectionResult collectionResult)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnCompleted(BattleTech.ItemCollectionResult collectionResult)

11:32:58.288 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult)
11:32:58.292 [Info] Writing prefixes
11:32:58.296 [Info] Writing postfixes
11:32:58.306 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.310 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionDefRetrieved::OnComplete(BattleTech.ItemCollectionDef& def, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<BattleTech.ItemCollectionDef+Entry, string>>> ____pendingGenerateRequests)

11:32:58.313 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def)
11:32:58.316 [Info] Writing prefixes
11:32:58.328 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.333 [Info] Patching void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_ProcessQueuedReferenceCollections::OnComplete(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)

11:32:58.337 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)
11:32:58.339 [Info] Writing prefixes
11:32:58.352 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 473 ms
11:32:58.357 [Info] Patching void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.Shop_OnItemsCollected::OnResultReveived(BattleTech.ItemCollectionResult result)

11:32:58.360 [Info] Running ILHook manipulator on void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result)
11:32:58.364 [Info] Writing prefixes
11:32:58.372 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 474 ms
11:32:58.376 [Info] Patching virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.DEBUG_Patches.SG_Shop_Screen_ReceiveButtonPress::Prefix(string button)

11:32:58.379 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button)
11:32:58.382 [Info] Writing prefixes
11:32:58.401 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 474 ms
11:32:58.405 [Info] Patching static bool IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::IsShopActive(BattleTech.SimGameState simState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.IsShopActive::ShowButton(Boolean& __result)

11:32:58.408 [Info] Running ILHook manipulator on static bool IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::IsShopActive(BattleTech.SimGameState simState)
11:32:58.411 [Info] Writing prefixes
11:32:58.788 [Info] ### Harmony id=LewdableTanks, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void LewdableTanks.Control::init(string directory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\LewdableTanks\LewdableTanks.dll
### At 2023-06-19 11.32.58
11:32:58.795 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
7 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

11:32:58.800 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
11:32:58.803 [Info] Writing prefixes
11:32:58.806 [Info] Writing postfixes
11:32:58.816 [Info] Patching virtual string BattleTech.UI.ListElementController_SalvageMechPart_NotListView::GetName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.SortFix.ListElementController_SalvageMechPart_NotListView_GetName::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, String& __result)

11:32:58.819 [Info] Running ILHook manipulator on virtual string BattleTech.UI.ListElementController_SalvageMechPart_NotListView::GetName()
11:32:58.824 [Info] Writing prefixes
11:32:58.836 [Info] Patching static System.Collections.Generic.HashSet<string> CustomSalvage.ChassisHandler::build_mech_tags(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_build_mech_tags::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

11:32:58.839 [Info] Running ILHook manipulator on static System.Collections.Generic.HashSet<string> CustomSalvage.ChassisHandler::build_mech_tags(BattleTech.MechDef mech)
11:32:58.842 [Info] Writing prefixes
11:32:58.855 [Info] Patching static string CustomSalvage.ChassisHandler::GetMechType(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetMechType::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, String& __result)

11:32:58.859 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetMechType(BattleTech.MechDef mech)
11:32:58.863 [Info] Writing prefixes
11:32:58.874 [Info] Patching static string CustomSalvage.ChassisHandler::GetPrefabId(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetPrefabId::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, String& __result)

11:32:58.877 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetPrefabId(BattleTech.MechDef mech)
11:32:58.880 [Info] Writing prefixes
11:32:58.889 [Info] Patching static CustomSalvage.IAssemblyVariant CustomSalvage.ChassisHandler::get_variant(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_get_variant::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, CustomSalvage.IAssemblyVariant& __result)

11:32:58.894 [Info] Running ILHook manipulator on static CustomSalvage.IAssemblyVariant CustomSalvage.ChassisHandler::get_variant(BattleTech.MechDef mech)
11:32:58.898 [Info] Writing prefixes
11:32:58.910 [Info] Patching static void CustomSalvage.ChassisHandler::MakeMech(BattleTech.SimGameState sim, int other_parts) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_MakeMech::Prefix(Boolean& __runOriginal)
1 postfixes:
* static void LewdableTanks.Patches.ChassisHandler_MakeMech::Postfix()

11:32:58.912 [Info] Running ILHook manipulator on static void CustomSalvage.ChassisHandler::MakeMech(BattleTech.SimGameState sim, int other_parts)
11:32:58.916 [Info] Writing prefixes
11:32:58.919 [Info] Writing postfixes
11:32:58.940 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
3 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void LewdableTanks.Patches.Contract_CompleteContract::Postfix(BattleTech.Contract __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:32:58.943 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:58.946 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:32:58.950 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:32:58.956 [Info] Writing prefixes
11:32:58.960 [Info] Writing postfixes
11:32:58.980 [Info] Patching static void CustomSalvage.Contract_GenerateSalvage::ProccessPlayerMech(BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.Contract_GenerateSalvage_ProccessPlayerMech::Prefix(Boolean& __runOriginal, BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract)

11:32:58.983 [Info] Running ILHook manipulator on static void CustomSalvage.Contract_GenerateSalvage::ProccessPlayerMech(BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract)
11:32:58.987 [Info] Writing prefixes
11:32:59.000 [Info] Patching static void CustomSalvage.Contract_GenerateSalvage::AddVechicleToSalvage(BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.GenerateSalvage_AddVechicleToSalvage::Prefix(Boolean& __runOriginal, BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame)

11:32:59.025 [Info] Running ILHook manipulator on static void CustomSalvage.Contract_GenerateSalvage::AddVechicleToSalvage(BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame)
11:32:59.032 [Info] Writing prefixes
11:32:59.051 [Info] Patching static string CustomSalvage.ChassisHandler::GetMDefFromCDef(string cdefid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetMDefFromCDef::Prefix(Boolean& __runOriginal, String& __result, string cdefid)

11:32:59.057 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetMDefFromCDef(string cdefid)
11:32:59.063 [Info] Writing prefixes
11:32:59.073 [Info] Patching static string CustomShops.Control::GetMDefFromCDef(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.Control_GetMDefFromCDef::Prefix(Boolean& __runOriginal, String& __result, string id)

11:32:59.076 [Info] Running ILHook manipulator on static string CustomShops.Control::GetMDefFromCDef(string id)
11:32:59.080 [Info] Writing prefixes
11:32:59.087 [Info] Patching static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.MechBayMechInfoWidget_OnUnreadyClicked_Prefix::Prefix(Boolean& __runOriginal)
1 postfixes:
* static void LewdableTanks.Patches.MechBayMechInfoWidget_OnUnreadyClicked_Prefix::Postfix()

11:32:59.091 [Info] Running ILHook manipulator on static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)
11:32:59.094 [Info] Writing prefixes
11:32:59.098 [Info] Writing postfixes
11:32:59.108 [Info] Patching void BattleTech.UI.MechBayPanel::RefreshData(bool resetFilters) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LewdableTanks.Patches.MechBayPanel_Init::Postfix(BattleTech.UI.MechBayPanel __instance)

11:32:59.112 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::RefreshData(bool resetFilters)
11:32:59.115 [Info] Writing postfixes
11:32:59.128 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
* static void LewdableTanks.Patches.MechBayPanel_OnReadyMech::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayChassisUnitElement& ___selectedChassis, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

11:32:59.132 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
11:32:59.135 [Info] Writing prefixes
11:32:59.140 [Info] Writing postfixes
11:32:59.153 [Info] Patching void BattleTech.ShopDefItem::ToSalvageDef(BattleTech.SalvageDef& salvageDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ShopDefItem_ToSalvageDef::Prefix(Boolean& __runOriginal, BattleTech.SalvageDef& salvageDef, BattleTech.ShopDefItem __instance)

11:32:59.156 [Info] Running ILHook manipulator on void BattleTech.ShopDefItem::ToSalvageDef(BattleTech.SalvageDef& salvageDef)
11:32:59.160 [Info] Writing prefixes
11:32:59.186 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)
* static void LewdableTanks.Patches.SH_Shop_Screen_AddShopItemToWidget::Prefix(Boolean& __runOriginal, BattleTech.ShopDefItem& itemDef, BattleTech.Shop shop, bool isBulkAdd, bool isSelling, BattleTech.UI.IMechLabDropTarget targetWidget, BattleTech.UI.MechLabInventoryWidget_ListView ___inventoryWidget, bool ___isInBuyingState, BattleTech.SimGameState ___simState, BattleTech.UI.SG_Shop_Screen __instance)

11:32:59.190 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
11:32:59.194 [Info] Writing prefixes
11:32:59.218 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_ScrapActiveMech::Prefix(Boolean& __runOriginal, int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

11:32:59.222 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
11:32:59.226 [Info] Writing prefixes
11:32:59.230 [Info] Writing postfixes
11:32:59.240 [Info] Patching bool BattleTech.SimGameState::ScrapMechPart(string id, float partCount, float partMax, bool pay) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_ScrapMechPart::Prefix(Boolean& __runOriginal, string id, float partCount, float partMax, bool pay, BattleTech.SimGameState __instance, Boolean& __result)

11:32:59.244 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapMechPart(string id, float partCount, float partMax, bool pay)
11:32:59.247 [Info] Writing prefixes
11:32:59.257 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_UnreadyMech::Prefix(Boolean& __runOriginal, int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

11:32:59.261 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
11:32:59.265 [Info] Writing prefixes
11:32:59.268 [Info] Writing postfixes
11:32:59.949 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 474 ms
11:32:59.952 [Info] Patching int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SGContractsWidget_GetContractComparePriority_Patch::Prefix(BattleTech.UI.SGContractsWidget __instance, Int32& __result, BattleTech.Contract contract)

11:32:59.955 [Info] Running ILHook manipulator on int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract)
11:32:59.959 [Info] Writing prefixes
11:32:59.967 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 474 ms
11:32:59.972 [Info] Patching void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_OnTargetSystemFound::Prefix(BattleTech.SimGameState __instance)

11:32:59.975 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result)
11:32:59.977 [Info] Writing prefixes
11:32:59.987 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 474 ms
11:32:59.994 [Info] Patching BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Prefix(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
1 postfixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Postfix(BattleTech.FactionDef employer)

11:32:59.998 [Info] Running ILHook manipulator on BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
11:33:00.001 [Info] Writing prefixes
11:33:00.004 [Info] Writing postfixes
11:33:00.025 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 474 ms
11:33:00.030 [Info] Patching void BattleTech.StarSystem::RefreshBreadcrumbs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_RefreshBreadcrumbs::Prefix(BattleTech.StarSystem __instance)

11:33:00.033 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshBreadcrumbs()
11:33:00.036 [Info] Writing prefixes
11:33:00.046 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
11:33:00.049 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.SimGameState_GeneratePotentialContracts::Prefix
11:33:00.052 [Info] PrefixWrapper created: HXI︳49︳::CustomUnits.SimGameState_GeneratePotentialContracts::Prefix
11:33:00.055 [Info] PrefixWrapper being created for: PersistentMapClient::PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix
11:33:00.060 [Info] PrefixWrapper created: HXI︳50︳::PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix
11:33:00.065 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.068 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine, Boolean& __runOriginal)
* static bool PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine, Boolean& __runOriginal)

11:33:00.071 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
11:33:00.074 [Info] Writing prefixes
11:33:00.082 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.085 [Info] Patching void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Contract_FinalizeSalvage_Patch::Postfix(BattleTech.Contract __instance, System.Collections.Generic.List<BattleTech.SalvageDef> ___finalPotentialSalvage)

11:33:00.088 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems)
11:33:00.092 [Info] Writing postfixes
11:33:00.106 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.110 [Info] Patching void BattleTech.UI.SG_Shop_Screen::OnCompleted() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SG_Shop_Screen_OnCompleted_Patch::Postfix()

11:33:00.114 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::OnCompleted()
11:33:00.117 [Info] Writing postfixes
11:33:00.127 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.133 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

11:33:00.137 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
11:33:00.140 [Info] Writing postfixes
11:33:00.152 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.163 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
10 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

11:33:00.166 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
11:33:00.170 [Info] Writing prefixes
11:33:00.173 [Info] Writing postfixes
11:33:00.356 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.359 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_DeductQuarterlyFunds_Patch::Prefix(BattleTech.SimGameState __instance, int quarterPassed)
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

11:33:00.363 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
11:33:00.365 [Info] Writing prefixes
11:33:00.368 [Info] Writing postfixes
11:33:00.375 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.379 [Info] Patching void BattleTech.UI.SGDebugEventWidget::Submit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGDebugEventWidget_Submit_Patch::Postfix(BattleTech.UI.SGDebugEventWidget __instance, BattleTech.UI.SGDebugEventWidget+DebugType ___curType, BattleTech.SimGameState ___Sim)

11:33:00.382 [Info] Running ILHook manipulator on void BattleTech.UI.SGDebugEventWidget::Submit()
11:33:00.385 [Info] Writing postfixes
11:33:00.403 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.406 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CompleteAllContractObjectives_Patch::Postfix()

11:33:00.409 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives()
11:33:00.413 [Info] Writing postfixes
11:33:00.422 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.427 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillTarget_Patch::Postfix()

11:33:00.431 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget()
11:33:00.434 [Info] Writing postfixes
11:33:00.444 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.448 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillAllEnemies_Patch::Postfix()

11:33:00.451 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies()
11:33:00.454 [Info] Writing postfixes
11:33:00.464 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.468 [Info] Patching void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_SetGodMode_Patch::Postfix()

11:33:00.471 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team)
11:33:00.474 [Info] Writing postfixes
11:33:00.482 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.492 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_DamageTarget_Patch::Postfix()

11:33:00.496 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget()
11:33:00.499 [Info] Writing postfixes
11:33:00.511 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.515 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CritTarget_Patch::Postfix()

11:33:00.518 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget()
11:33:00.521 [Info] Writing postfixes
11:33:00.533 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.537 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_ApplyInstability_Patch::Postfix()

11:33:00.539 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability()
11:33:00.542 [Info] Writing postfixes
11:33:00.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.551 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUDDEBUG_KnockdownTarget_Patch::Postfix()

11:33:00.555 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget()
11:33:00.558 [Info] Writing postfixes
11:33:00.568 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.571 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatDebugHUDPatches::Postfix(BattleTech.UI.CombatHUD ___combatHUD)
* static void PersistentMapClient.CombatDebugHUD_DEBUG_OverheatTarget_Patch::Postfix()

11:33:00.574 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
11:33:00.576 [Info] Writing postfixes
11:33:00.584 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.587 [Info] Patching void BattleTech.StarSystem::ResetContracts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.StarSystem_ResetContracts_Patch::Postfix(BattleTech.StarSystem __instance)

11:33:00.590 [Info] Running ILHook manipulator on void BattleTech.StarSystem::ResetContracts()
11:33:00.594 [Info] Writing postfixes
11:33:00.602 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.606 [Info] Patching void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_PrepareBreadcrumb_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract& contract)

11:33:00.609 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract)
11:33:00.612 [Info] Writing postfixes
11:33:00.622 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.627 [Info] Patching BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_AddPredefinedContract_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract __result)

11:33:00.631 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData)
11:33:00.634 [Info] Writing postfixes
11:33:00.648 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.653 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGSystemViewPopulator_UpdateRoutedSystem_Patch::Postfix(BattleTech.UI.SGSystemViewPopulator __instance, BattleTech.StarSystem ___starSystem, BattleTech.SimGameState ___simState)

11:33:00.657 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem()
11:33:00.660 [Info] Writing postfixes
11:33:00.685 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.690 [Info] Patching void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Starmap_PopulateMap_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.SimGameState simGame)

11:33:00.693 [Info] Running ILHook manipulator on void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame)
11:33:00.696 [Info] Writing postfixes
11:33:00.704 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.709 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
4 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void LewdableTanks.Patches.Contract_CompleteContract::Postfix(BattleTech.Contract __instance)
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:33:00.712 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:33:00.715 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
11:33:00.719 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:33:00.724 [Info] Writing prefixes
11:33:00.727 [Info] Writing postfixes
11:33:00.749 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.753 [Info] Patching void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Prefix(BattleTech.StarSystem __instance, Action onContractsFetched)
1 postfixes:
* static void PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Postfix(BattleTech.StarSystem __instance)

11:33:00.757 [Info] Running ILHook manipulator on void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched)
11:33:00.760 [Info] Writing prefixes
11:33:00.765 [Info] Writing postfixes
11:33:00.773 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 492 ms
11:33:00.777 [Info] Patching BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_CreateTravelContract_Patch::Prefix(BattleTech.FactionValue& employer, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& neutralToAll, BattleTech.FactionValue& hostileToAll)

11:33:00.780 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty)
11:33:00.783 [Info] Writing prefixes
11:33:00.797 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 493 ms
11:33:00.801 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
* static void PersistentMapClient.SimGameState_PrepContract_Patch::Prefix(BattleTech.SimGameState __instance, BattleTech.FactionValue& employer, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& NeutralToAll, BattleTech.FactionValue& HostileToAll, BattleTech.StarSystem& system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

11:33:00.805 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
11:33:00.807 [Info] Writing prefixes
11:33:00.810 [Info] Writing postfixes
11:33:00.822 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 493 ms
11:33:00.826 [Info] Patching void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_CreateBreakContractWarning_Patch::Prefix(BattleTech.SimGameState __instance, Action continueAction, Action cancelAction)

11:33:00.829 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction)
11:33:00.833 [Info] Writing prefixes
11:33:00.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 493 ms
11:33:00.847 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()
* static void PersistentMapClient.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

11:33:00.851 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
11:33:00.855 [Info] Writing postfixes
11:33:00.872 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 493 ms
11:33:00.877 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

11:33:00.880 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
11:33:00.883 [Info] Writing postfixes
11:33:08.144 [Info] ### Harmony id=io.kmission.fastload, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPrewarm.Core::FinishedLoading(System.Collections.Generic.List<string> loadOrder), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomPrewarm\CustomPrewarm.dll
### At 2023-06-19 11.33.08
11:33:08.151 [Info] Patching void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameContext_Rehydrate::Prefix(BattleTech.SimGameContext __instance, BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

11:33:08.155 [Info] Running ILHook manipulator on void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
11:33:08.160 [Info] Writing prefixes
11:33:08.170 [Info] Patching void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MetadataDatabase_WriteInMemoryDBToDisk::Prefix(BattleTech.Data.MetadataDatabase __instance, string filePath)

11:33:08.173 [Info] Running ILHook manipulator on void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath)
11:33:08.175 [Info] Writing prefixes
11:33:08.188 [Info] Patching void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameUXCreator_OnSimGameInitializeComplete::Prefix(BattleTech.UI.SimGameUXCreator __instance, MessageCenterMessage message)

11:33:08.192 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message)
11:33:08.195 [Info] Writing prefixes
11:33:08.203 [Info] Patching virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SGRoomController_Navigation_LeaveRoom::Prefix(BattleTech.UI.SGRoomController_Navigation __instance, bool ignoreFader)

11:33:08.207 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader)
11:33:08.210 [Info] Writing prefixes
11:33:08.220 [Info] Patching virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MechDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+MechDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

11:33:08.225 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
11:33:08.229 [Info] Writing prefixes
11:33:08.238 [Info] Patching virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.PilotHandler_Rehydrate::Prefix(BattleTech.SimGameContext+PilotHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

11:33:08.241 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
11:33:08.245 [Info] Writing prefixes
11:33:08.256 [Info] Patching virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.StarSystemHandler_Rehydrate::Prefix(BattleTech.SimGameContext+StarSystemHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

11:33:08.260 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
11:33:08.263 [Info] Writing prefixes
11:33:08.272 [Info] Patching virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FactionDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FactionDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

11:33:08.275 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
11:33:08.278 [Info] Writing prefixes
11:33:08.290 [Info] Patching virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FlashpointHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FlashpointHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

11:33:08.293 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
11:33:08.296 [Info] Writing prefixes
11:33:08.305 [Info] Patching void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.GameInstance_CreateSim::Prefix(BattleTech.GameInstance __instance, BattleTech.SimGameState+SimGameType gameType, bool debug)

11:33:08.309 [Info] Running ILHook manipulator on void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug)
11:33:08.311 [Info] Writing prefixes
11:33:08.321 [Info] Patching System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SaveGameStructure_GetAllCareerSlots::Postfix(BattleTech.Save.SaveGameStructure.SaveGameStructure __instance, System.Collections.Generic.List`1[[BattleTech.Save.SaveGameStructure.SlotModel, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:33:08.326 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots()
11:33:08.329 [Info] Writing postfixes
11:33:08.341 [Info] Patching bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MainMenu_EnableCareerLoadIfCareerSaves::Prefix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

11:33:08.344 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message)
11:33:08.347 [Info] Writing prefixes
11:33:08.361 [Info] Patching bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.MainMenu_ShowRefreshingSaves::Postfix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

11:33:08.364 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message)
11:33:08.367 [Info] Writing postfixes
11:33:08.379 [Info] Patching static void HBS.Util.JSONSerializationUtility::LogWarning(string error) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.JSONSerializationUtility_JSONSerializationUtility::Prefix()

11:33:08.382 [Info] Running ILHook manipulator on static void HBS.Util.JSONSerializationUtility::LogWarning(string error)
11:33:08.386 [Info] Writing prefixes
11:33:08.398 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.SimGameState__OnInit::Prefix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

11:33:08.401 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
11:33:08.403 [Info] Writing prefixes
11:33:08.407 [Info] Writing postfixes
11:33:08.418 [Info] Patching bool BattleTech.SimGameState::_OnHeadlessComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SimGameState__OnHeadlessComplete::Postfix(BattleTech.SimGameState __instance, Boolean& __result)

11:33:08.422 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::_OnHeadlessComplete()
11:33:08.426 [Info] Writing postfixes
11:33:08.439 [Info] Patching bool BattleTech.SimGameState::HandleSaveHydrate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_HandleSaveHydrate::Prefix(BattleTech.SimGameState __instance, Boolean& __result, BattleTech.Save.GameInstanceSave& ___save)

11:33:08.442 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HandleSaveHydrate()
11:33:08.445 [Info] Writing prefixes
11:33:08.459 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
* static void CustomPrewarm.SimGameState_RespondToDefsLoadComplete::Prefix()

11:33:08.463 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
11:33:08.486 [Info] Writing prefixes
11:33:08.496 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_RequestDataManagerResources::Prefix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:33:08.499 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
11:33:08.502 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
11:33:08.507 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:33:08.511 [Info] Writing prefixes
11:33:08.533 [Info] Patching void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Prefix(System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Postfix(System.Diagnostics.Stopwatch& __state)

11:33:08.536 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager)
11:33:08.539 [Info] Writing prefixes
11:33:08.542 [Info] Writing postfixes
11:33:08.555 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomPrewarm.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

11:33:08.558 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
11:33:08.561 [Info] Writing postfixes
11:33:08.571 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_InitUserSettings::Prefix(BattleTech.UnityGameInstance __instance)
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

11:33:08.575 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
11:33:08.578 [Info] Writing prefixes
11:33:08.582 [Info] Writing postfixes
11:33:08.594 [Info] Patching void BattleTech.UnityGameInstance::OnModsInitComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_OnModsInitComplete::Prefix(BattleTech.UnityGameInstance __instance)

11:33:08.597 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnModsInitComplete()
11:33:08.601 [Info] Writing prefixes
11:33:08.612 [Info] Patching void BattleTech.Save.UserSettings::Save() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Save::Prefix(BattleTech.Save.UserSettings __instance)

11:33:08.617 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Save()
11:33:08.622 [Info] Writing prefixes
11:33:08.636 [Info] Patching void BattleTech.BTInput::LoadSavedBindings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.BTInput_LoadSavedBindings::Prefix(BattleTech.BTInput __instance)

11:33:08.640 [Info] Running ILHook manipulator on void BattleTech.BTInput::LoadSavedBindings()
11:33:08.643 [Info] Writing prefixes
11:33:08.662 [Info] Patching void BattleTech.Save.UserSettings::Load(Action loadComplete) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Load::Prefix(BattleTech.Save.UserSettings __instance, Action loadComplete)

11:33:08.665 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Load(Action loadComplete)
11:33:08.668 [Info] Writing prefixes
11:33:08.680 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
* static bool CustomPrewarm.Serialize.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

11:33:08.683 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
11:33:08.686 [Info] Writing prefixes
11:33:08.689 [Info] Writing postfixes
11:33:08.697 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
* static bool CustomPrewarm.Serialize.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.MechDef __instance)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

11:33:08.700 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
11:33:08.703 [Info] Writing prefixes
11:33:08.706 [Info] Writing postfixes
11:33:08.713 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static bool CustomPrewarm.Serialize.AmmunitionDef_FromJSON::Prefix(BattleTech.AmmunitionDef __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

11:33:08.716 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
11:33:08.720 [Info] Writing prefixes
11:33:08.723 [Info] Writing postfixes
11:33:08.730 [Info] Patching virtual void BattleTech.BackgroundDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BackgroundDef_FromJSON::Prefix(BattleTech.BackgroundDef __instance)

11:33:08.733 [Info] Running ILHook manipulator on virtual void BattleTech.BackgroundDef::FromJSON(string json)
11:33:08.737 [Info] Writing prefixes
11:33:08.745 [Info] Patching virtual void BattleTech.BaseDescriptionDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BaseDescriptionDef_FromJSON::Prefix(BattleTech.BaseDescriptionDef __instance)

11:33:08.749 [Info] Running ILHook manipulator on virtual void BattleTech.BaseDescriptionDef::FromJSON(string json)
11:33:08.752 [Info] Writing prefixes
11:33:08.762 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.ChassisDef_FromJSON::Prefix(BattleTech.ChassisDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

11:33:08.766 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
11:33:08.768 [Info] Writing prefixes
11:33:08.771 [Info] Writing postfixes
11:33:08.778 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
* static bool CustomPrewarm.Serialize.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

11:33:08.781 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
11:33:08.784 [Info] Writing prefixes
11:33:08.787 [Info] Writing postfixes
11:33:08.795 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)
* static bool CustomPrewarm.Serialize.MechDef_FromJSON::Prefix(BattleTech.MechDef __instance)

11:33:08.799 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
11:33:08.803 [Info] Writing prefixes
11:33:08.810 [Info] Patching virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.MovementCapabilitiesDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)

11:33:08.814 [Info] Running ILHook manipulator on virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json)
11:33:08.817 [Info] Writing prefixes
11:33:08.827 [Info] Patching virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.PathingCapabilitiesDef_FromJSON::Prefix(BattleTech.PathingCapabilitiesDef __instance)

11:33:08.830 [Info] Running ILHook manipulator on virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json)
11:33:08.834 [Info] Writing prefixes
11:33:08.843 [Info] Patching virtual void BattleTech.StarSystemDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.StarSystemDef_FromJSON::Prefix(BattleTech.StarSystemDef __instance)

11:33:08.846 [Info] Running ILHook manipulator on virtual void BattleTech.StarSystemDef::FromJSON(string json)
11:33:08.849 [Info] Writing prefixes
11:33:08.858 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.HeatSinkDef_FromJSON::Prefix(BattleTech.HeatSinkDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

11:33:08.860 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
11:33:08.862 [Info] Writing prefixes
11:33:08.865 [Info] Writing postfixes
11:33:08.873 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.JumpJetDef_FromJSON::Prefix(BattleTech.JumpJetDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

11:33:08.877 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
11:33:08.881 [Info] Writing prefixes
11:33:08.885 [Info] Writing postfixes
11:33:08.896 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.UpgradeDef_FromJSON::Prefix(BattleTech.UpgradeDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

11:33:08.899 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
11:33:08.902 [Info] Writing prefixes
11:33:08.906 [Info] Writing postfixes
11:33:08.916 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.VehicleChassisDef_FromJSON::Prefix(BattleTech.VehicleChassisDef __instance)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

11:33:08.920 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
11:33:08.923 [Info] Writing prefixes
11:33:08.927 [Info] Writing postfixes
11:33:08.937 [Info] Patching virtual void BattleTech.VehicleDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.VehicleDef_FromJSON::Prefix(BattleTech.VehicleDef __instance)

11:33:08.940 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::FromJSON(string json)
11:33:08.943 [Info] Writing prefixes
11:33:08.954 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

11:33:08.959 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
11:33:08.962 [Info] Writing prefixes
11:33:08.965 [Info] Writing postfixes
11:33:09.151 [Info] Patching void BattleTech.StackManager::Update() with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomAmmoCategoriesPrivate.StackManager_Update::Finalizer(BattleTech.StackManager __instance, Exception __exception)

11:33:09.156 [Info] Running ILHook manipulator on void BattleTech.StackManager::Update()
11:33:09.159 [Info] Writing finalizers
11:33:09.177 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Prefix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, Object& data, bool __result, BattleTech.BaseComponentRef& __state)
4 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result, BattleTech.BaseComponentRef& __state)

11:33:09.180 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
11:33:09.183 [Info] Writing prefixes
11:33:09.187 [Info] Writing postfixes
11:33:09.205 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.MechLabItemSlotElement_RefreshInfo::Prefix(BattleTech.UI.MechLabItemSlotElement __instance)

11:33:09.209 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshInfo()
11:33:09.212 [Info] Writing prefixes
11:33:09.223 [Info] Patching void BattleTech.UI.Tooltips.TooltipManager::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipManager_Awake::Prefix(BattleTech.UI.Tooltips.TooltipManager __instance, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.TooltipManager+TooltipObject, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___TooltipPool)

11:33:09.226 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipManager::Awake()
11:33:09.229 [Info] Writing prefixes
11:33:09.239 [Info] Patching BehaviorTreeResults BehaviorTree::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Prefix(BehaviorTree __instance)
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Postfix(BehaviorTree __instance, BehaviorTreeResults& __result)

11:33:09.242 [Info] Running ILHook manipulator on BehaviorTreeResults BehaviorTree::Update()
11:33:09.246 [Info] Writing prefixes
11:33:09.249 [Info] Writing postfixes
11:33:09.282 [Info] Patching virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

11:33:09.286 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick()
11:33:09.290 [Info] Writing postfixes
11:33:09.329 [Info] Patching virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

11:33:09.333 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick()
11:33:09.335 [Info] Writing postfixes
11:33:09.374 [Info] Patching virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

11:33:09.378 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick()
11:33:09.382 [Info] Writing postfixes
11:33:09.419 [Info] Patching virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

11:33:09.424 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick()
11:33:09.428 [Info] Writing postfixes
11:33:09.469 [Info] Patching virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

11:33:09.474 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick()
11:33:09.476 [Info] Writing postfixes
11:33:09.512 [Info] Patching virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

11:33:09.516 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick()
11:33:09.521 [Info] Writing prefixes
11:33:09.526 [Info] Writing postfixes
11:33:09.563 [Info] Patching virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

11:33:09.566 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick()
11:33:09.569 [Info] Writing prefixes
11:33:09.571 [Info] Writing postfixes
11:33:09.582 [Info] Patching static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

11:33:09.585 [Info] Running ILHook manipulator on static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg)
11:33:09.588 [Info] Writing prefixes
11:33:09.592 [Info] Writing postfixes
11:33:09.601 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Prefix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
2 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Postfix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, BattleTech.MoveType ___moveType, BattleTech.CombatGameState ___combat, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

11:33:09.604 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
11:33:09.607 [Info] Writing prefixes
11:33:09.611 [Info] Writing postfixes
11:33:09.990 [Info] Patching static void PanicSystem.Components.DamageHandler::ProcessBatchedTurnDamage(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.UnitCombatStatisticHelper::DamageHandler_ProcessBatchedTurnDamage_Prefix(BattleTech.AbstractActor actor, Boolean& __state)
1 postfixes:
* static void CustAmmoCategories.UnitCombatStatisticHelper::DamageHandler_ProcessBatchedTurnDamage_Postfix(BattleTech.AbstractActor actor, Boolean& __state)

11:33:09.995 [Info] Running ILHook manipulator on static void PanicSystem.Components.DamageHandler::ProcessBatchedTurnDamage(BattleTech.AbstractActor actor)
11:33:09.998 [Info] Writing prefixes
11:33:10.000 [Info] Writing postfixes
11:33:10.042 [Info] Patching static void PanicSystem.Components.AARIcons::AddEjectedMech(UnityEngine.RectTransform KillGridParent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.UnitCombatStatisticHelper::AARIcons_AddEjectedMech_Prefix()

11:33:10.045 [Info] Running ILHook manipulator on static void PanicSystem.Components.AARIcons::AddEjectedMech(UnityEngine.RectTransform KillGridParent)
11:33:10.047 [Info] Writing prefixes
11:33:10.059 [Info] Patching static void PanicSystem.Components.AARIcons::AddEjectedVehicle(UnityEngine.RectTransform KillGridParent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.UnitCombatStatisticHelper::AARIcons_AddEjectedVehicle_Prefix()

11:33:10.063 [Info] Running ILHook manipulator on static void PanicSystem.Components.AARIcons::AddEjectedVehicle(UnityEngine.RectTransform KillGridParent)
11:33:10.067 [Info] Writing prefixes
11:33:10.079 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Postfix(BattleTech.MechDef mechDef)

11:33:10.082 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:33:10.086 [Info] Writing prefixes
11:33:10.091 [Info] Writing postfixes
11:33:10.104 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Postfix(BattleTech.MechDef mechDef)

11:33:10.108 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:33:10.112 [Info] Writing prefixes
11:33:10.115 [Info] Writing postfixes
11:33:10.126 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Postfix(BattleTech.MechDef mechDef)

11:33:10.129 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:33:10.133 [Info] Writing prefixes
11:33:10.135 [Info] Writing postfixes
11:33:10.145 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Postfix(BattleTech.MechDef mechDef)

11:33:10.148 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
11:33:10.152 [Info] Writing prefixes
11:33:10.156 [Info] Writing postfixes
11:33:10.168 [Info] Patching void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Prefix(BattleTech.MechDef def)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Postfix(BattleTech.MechDef def)

11:33:10.171 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def)
11:33:10.174 [Info] Writing prefixes
11:33:10.177 [Info] Writing postfixes
11:33:10.195 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
* static void CustomActivatablePatches.InjurePilot_Check::Prefix(BattleTech.Pilot __instance, BattleTech.Pilot& __state)
3 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
* static void CustomActivatablePatches.InjurePilot_Check::Postfix(BattleTech.Pilot __instance, BattleTech.Pilot& __state)

11:33:10.198 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
11:33:10.201 [Info] Writing prefixes
11:33:10.204 [Info] Writing postfixes
11:33:10.214 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 3 prefixes, 5 postfixes, 2 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.MechComponent_DamageComponent_Stack::Prefix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
5 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent_Stack::Postfix(BattleTech.MechComponent __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:33:10.218 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:33:10.223 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
11:33:10.228 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:33:10.231 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:33:10.234 [Info] Writing prefixes
11:33:10.238 [Info] Writing postfixes
11:33:11.048 [Info] Patching virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.052 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.056 [Info] Writing prefixes
11:33:11.059 [Info] Writing postfixes
11:33:11.066 [Info] Patching virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.069 [Info] Running ILHook manipulator on virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.072 [Info] Writing prefixes
11:33:11.075 [Info] Writing postfixes
11:33:11.083 [Info] Patching virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.086 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.090 [Info] Writing prefixes
11:33:11.093 [Info] Writing postfixes
11:33:11.100 [Info] Patching virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.103 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.105 [Info] Writing prefixes
11:33:11.108 [Info] Writing postfixes
11:33:11.116 [Info] Patching virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.119 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.123 [Info] Writing prefixes
11:33:11.127 [Info] Writing postfixes
11:33:11.134 [Info] Patching virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.136 [Info] Running ILHook manipulator on virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.139 [Info] Writing prefixes
11:33:11.142 [Info] Writing postfixes
11:33:11.148 [Info] Patching virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.152 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
11:33:11.156 [Info] Writing prefixes
11:33:11.159 [Info] Writing postfixes
11:33:11.169 [Info] Patching virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.171 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.174 [Info] Writing prefixes
11:33:11.177 [Info] Writing postfixes
11:33:11.186 [Info] Patching virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.189 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.193 [Info] Writing prefixes
11:33:11.195 [Info] Writing postfixes
11:33:11.205 [Info] Patching virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.209 [Info] Running ILHook manipulator on virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.212 [Info] Writing prefixes
11:33:11.215 [Info] Writing postfixes
11:33:11.226 [Info] Patching virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.230 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.233 [Info] Writing prefixes
11:33:11.236 [Info] Writing postfixes
11:33:11.245 [Info] Patching virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.248 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.251 [Info] Writing prefixes
11:33:11.255 [Info] Writing postfixes
11:33:11.265 [Info] Patching virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.268 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.270 [Info] Writing prefixes
11:33:11.274 [Info] Writing postfixes
11:33:11.282 [Info] Patching virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.286 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.289 [Info] Writing prefixes
11:33:11.293 [Info] Writing postfixes
11:33:11.300 [Info] Patching virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.303 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.306 [Info] Writing prefixes
11:33:11.309 [Info] Writing postfixes
11:33:11.317 [Info] Patching virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.321 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.325 [Info] Writing prefixes
11:33:11.327 [Info] Writing postfixes
11:33:11.335 [Info] Patching virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.339 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
11:33:11.505 [Info] Writing prefixes
11:33:11.508 [Info] Writing postfixes
11:33:11.518 [Info] Patching virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.521 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.525 [Info] Writing prefixes
11:33:11.529 [Info] Writing postfixes
11:33:11.536 [Info] Patching virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.539 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.542 [Info] Writing prefixes
11:33:11.545 [Info] Writing postfixes
11:33:11.555 [Info] Patching virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.560 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.562 [Info] Writing prefixes
11:33:11.565 [Info] Writing postfixes
11:33:11.572 [Info] Patching virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.576 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.578 [Info] Writing prefixes
11:33:11.581 [Info] Writing postfixes
11:33:11.593 [Info] Patching virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.596 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.599 [Info] Writing prefixes
11:33:11.601 [Info] Writing postfixes
11:33:11.610 [Info] Patching virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.612 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
11:33:11.614 [Info] Writing prefixes
11:33:11.617 [Info] Writing postfixes
11:33:11.627 [Info] Patching virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.630 [Info] Running ILHook manipulator on virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.633 [Info] Writing prefixes
11:33:11.636 [Info] Writing postfixes
11:33:11.646 [Info] Patching virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.649 [Info] Running ILHook manipulator on virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.652 [Info] Writing prefixes
11:33:11.656 [Info] Writing postfixes
11:33:11.666 [Info] Patching virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.669 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.672 [Info] Writing prefixes
11:33:11.676 [Info] Writing postfixes
11:33:11.685 [Warn] io.mission.customunits: You should only patch implemented methods/constructors to avoid issues. Patch the declared method virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) instead of virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused).
11:33:11.689 [Info] Patching virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix_Unused(BattleTech.AbstractActor unit_unused, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix_Unused(BattleTech.AbstractActor unit_unused, Nullable`1& __state)

11:33:11.693 [Info] Running ILHook manipulator on virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.696 [Info] Writing prefixes
11:33:11.699 [Info] Writing postfixes
11:33:11.706 [Info] Patching virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.709 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.712 [Info] Writing prefixes
11:33:11.715 [Info] Writing postfixes
11:33:11.725 [Info] Patching virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.727 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.730 [Info] Writing prefixes
11:33:11.733 [Info] Writing postfixes
11:33:11.740 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.743 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.745 [Info] Writing prefixes
11:33:11.748 [Info] Writing postfixes
11:33:11.756 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

11:33:11.760 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.762 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.765 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
11:33:11.768 [Info] Writing prefixes
11:33:11.770 [Info] Writing postfixes
11:33:11.777 [Info] Patching virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.780 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
11:33:11.783 [Info] Writing prefixes
11:33:11.786 [Info] Writing postfixes
11:33:11.794 [Info] Patching virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferAvoidMeleeWhenOutTonned::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.797 [Info] Running ILHook manipulator on virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferAvoidMeleeWhenOutTonned::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
11:33:11.799 [Info] Writing prefixes
11:33:11.802 [Info] Writing postfixes
11:33:11.811 [Info] Patching virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferStationaryWithMeleeWeapon::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

11:33:11.813 [Info] Running ILHook manipulator on virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferStationaryWithMeleeWeapon::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
11:33:11.816 [Info] Writing prefixes
11:33:11.819 [Info] Writing postfixes
11:33:11.830 [Info] Patching float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Core::MechDefMovementStatistics_GetJumpCapacity(object __instance, BattleTech.MechDef& ___mechDef, Single& __result)

11:33:11.833 [Info] Running ILHook manipulator on float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity()
11:33:11.836 [Info] Writing postfixes
11:33:12.130 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static bool CustomUnits.CustomMech::InitGameRepStatic(BattleTech.Mech __instance, UnityEngine.Transform parentTransform)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

11:33:12.133 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
11:33:12.136 [Info] Writing prefixes
11:33:12.139 [Info] Writing postfixes
11:33:12.160 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 6 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)
* static bool CustomUnits.CustomMech::DamageLocation_Override(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __result)

11:33:12.164 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
11:33:12.167 [Info] Writing prefixes
11:33:12.183 [Info] Patching bool BattleTech.Pilot::get_IsIncapacitated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TrooperSquad::Pilot_IsIncapacitated_Patch(BattleTech.Pilot __instance, Boolean& __result)

11:33:12.186 [Info] Running ILHook manipulator on bool BattleTech.Pilot::get_IsIncapacitated()
11:33:12.189 [Info] Writing postfixes
11:33:12.195 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
5 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomDeploy.Core::PooledInstantiate_Fallback(BattleTech.Data.DataManager __instance, UnityEngine.GameObject& __result, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)

11:33:12.198 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
11:33:12.201 [Info] Writing prefixes
11:33:12.204 [Info] Writing postfixes
11:33:13.485 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::ShowStructureDamageThroughArmour(BattleTech.UI.HUDMechArmorReadout __instance)

11:33:13.489 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor()
11:33:13.492 [Info] Writing postfixes
11:33:13.506 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
3 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::FixRearStructureDisplay(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.AttackDirection shownAttackDirection)

11:33:13.509 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
11:33:13.512 [Info] Writing prefixes
11:33:13.515 [Info] Writing postfixes
11:33:13.530 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::AddPaperDollSideLabel(BattleTech.UI.HUDMechArmorReadout __instance)

11:33:13.533 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
11:33:13.536 [Info] Writing prefixes
11:33:13.538 [Info] Writing postfixes
11:33:13.552 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
3 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void Sheepy.BattleTechMod.AttackImprovementMod.GameData::FixWeaponStats(BattleTech.WeaponDef __instance)

11:33:13.556 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
11:33:13.560 [Info] Writing prefixes
11:33:13.562 [Info] Writing postfixes
