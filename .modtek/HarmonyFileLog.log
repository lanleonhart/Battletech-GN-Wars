14:10:11.022 [Info] ### Harmony id=ModTekPreloader.Harmony12X, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ModTekPreloader.Harmony12X.ShimInjectorPatches::Register(ModTekPreloader.Harmony12X.DynamicShimInjector shimInjector), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\ModTekPreloader.dll
### At 2023-05-07 02.10.11
14:10:11.110 [Info] Patching static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadFrom_Prefix(String& assemblyFile)

14:10:11.113 [Info] Running ILHook manipulator on static System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(string assemblyFile, bool refonly)
14:10:11.118 [Info] Writing prefixes
14:10:11.132 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssembly_Prefix(String& assemblyRef)

14:10:11.134 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssembly(string assemblyRef, System.Security.Policy.Evidence securityEvidence, bool refOnly)
14:10:11.136 [Info] Writing prefixes
14:10:11.142 [Info] Patching System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLoadPatches::LoadAssemblyRaw_Prefix(Byte[]& rawAssembly)

14:10:11.144 [Info] Running ILHook manipulator on System.Reflection.Assembly AppDomain::LoadAssemblyRaw(byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence, bool refonly)
14:10:11.147 [Info] Writing prefixes
14:10:11.155 [Info] Patching virtual string System.Reflection.Assembly::get_Location() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTekPreloader.Harmony12X.ShimInjectorPatches+AssemblyLocationPatch::Location(System.Reflection.Assembly __instance, String& __result)

14:10:11.157 [Info] Running ILHook manipulator on virtual string System.Reflection.Assembly::get_Location()
14:10:11.160 [Info] Writing prefixes
14:10:20.255 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.257 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()

14:10:20.259 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:20.260 [Info] Writing postfixes
14:10:20.396 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.399 [Info] Patching void ActivateAfterInit::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Patches.ActivateAfterInit_Start_Patch::Prefix(ActivateAfterInit __instance, ActivateAfterInit+ActivateAfter ___activateAfter, UnityEngine.GameObject[] ___activationSet)

14:10:20.400 [Info] Running ILHook manipulator on void ActivateAfterInit::Start()
14:10:20.402 [Info] Writing prefixes
14:10:20.406 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.409 [Info] Patching static string VersionInfo::GetReleaseVersion() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Patches.VersionInfo_GetReleaseVersion_Patch::Postfix(String& __result)

14:10:20.411 [Info] Running ILHook manipulator on static string VersionInfo::GetReleaseVersion()
14:10:20.413 [Info] Writing postfixes
14:10:20.418 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.422 [Info] Patching static void BattleTech.ModSupport.ModLoader::Init(Action callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_Init::Prefix(BattleTech.UnityGameInstance __instance, Action callback)

14:10:20.424 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::Init(Action callback)
14:10:20.426 [Info] Writing prefixes
14:10:20.443 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.446 [Info] Patching static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModLoader_AreModsEnabled::Postfix(Boolean& __result)

14:10:20.448 [Info] Running ILHook manipulator on static bool BattleTech.ModSupport.ModLoader::get_AreModsEnabled()
14:10:20.449 [Info] Writing postfixes
14:10:20.454 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.456 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadSystemModStatus::Prefix()

14:10:20.458 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadSystemModStatus()
14:10:20.459 [Info] Writing prefixes
14:10:20.464 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.467 [Info] Patching static void BattleTech.ModSupport.ModLoader::LoadGameModStatus() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_LoadGameModStatus::Prefix()

14:10:20.469 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::LoadGameModStatus()
14:10:20.471 [Info] Writing prefixes
14:10:20.474 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.476 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_InitModResources::Prefix(BattleTech.UI.ModManagerScreen __instance)

14:10:20.478 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::Init()
14:10:20.479 [Info] Writing prefixes
14:10:20.484 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.487 [Info] Patching static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_GetCombinedModStatus::Postfix(System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[BattleTech.ModSupport.ModStatusItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:20.490 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> BattleTech.ModSupport.ModLoader::GetCombinedModStatus()
14:10:20.492 [Info] Writing postfixes
14:10:20.499 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.502 [Info] Patching static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModLoader_SaveModStatusToFile::Prefix(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)

14:10:20.505 [Info] Running ILHook manipulator on static void BattleTech.ModSupport.ModLoader::SaveModStatusToFile(System.Collections.Generic.Dictionary<string, BattleTech.ModSupport.ModStatusItem> tempLoadedMods)
14:10:20.507 [Info] Writing prefixes
14:10:20.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.517 [Info] Patching bool BattleTech.UI.ModManagerScreen::UnsavedSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_UnsavedSettings::Prefix(BattleTech.UI.ModManagerScreen __instance, Boolean& __result)

14:10:20.520 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerScreen::UnsavedSettings()
14:10:20.523 [Info] Writing prefixes
14:10:20.533 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.536 [Info] Patching virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ReceiveButtonPress::Prefix(BattleTech.UI.ModManagerScreen __instance, string button)

14:10:20.539 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ModManagerScreen::ReceiveButtonPress(string button)
14:10:20.541 [Info] Writing prefixes
14:10:20.550 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.553 [Info] Patching void BattleTech.UI.ModManagerScreen::ToggleModsEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerScreen_ToggleModsEnabled::Prefix(BattleTech.UI.ModManagerScreen __instance, BattleTech.UI.HBSDOTweenToggle ___modsEnabledToggleBox)

14:10:20.556 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerScreen::ToggleModsEnabled()
14:10:20.558 [Info] Writing prefixes
14:10:20.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.567 [Info] Patching void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_ToggleItemEnabled::Prefix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.UI.HBSDOTweenToggle ___toggleBox, BattleTech.UI.ModManagerScreen ____screen)

14:10:20.570 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::ToggleItemEnabled()
14:10:20.573 [Info] Writing prefixes
14:10:20.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.587 [Info] Patching void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.ModLoaderSupport.Patches.ModManagerListViewItem_SetData::Postfix(BattleTech.UI.ModManagerListViewItem __instance, BattleTech.ModSupport.ModStatusItem modStatusItem, BattleTech.UI.TMProWrapper.LocalizableText ___modNameText, BattleTech.UI.HBSDOTweenToggle ___toggleBox)

14:10:20.590 [Info] Running ILHook manipulator on void BattleTech.UI.ModManagerListViewItem::SetData(BattleTech.ModSupport.ModStatusItem modStatusItem)
14:10:20.593 [Info] Writing postfixes
14:10:20.608 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.612 [Info] Patching bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.ModLoaderSupport.Patches.ModManagerInstalledModsPanel_InitializeList::Prefix(BattleTech.UI.ModManagerInstalledModsPanel __instance, Boolean& __result, BattleTech.UI.ModManagerListView ___modsList)

14:10:20.632 [Info] Running ILHook manipulator on bool BattleTech.UI.ModManagerInstalledModsPanel::InitializeList()
14:10:20.634 [Info] Writing prefixes
14:10:20.641 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 0 ms
14:10:20.644 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFilepath_Patch::Prefix(string assetBundleName, String& __result)

14:10:20.647 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFilepath(string assetBundleName)
14:10:20.650 [Info] Writing prefixes
14:10:20.655 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.658 [Info] Patching static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.AssetBundleManager_AssetBundleNameToFileURL_Patch::Prefix(string assetBundleName, String& __result)

14:10:20.662 [Info] Running ILHook manipulator on static string BattleTech.Assetbundles.AssetBundleManager::AssetBundleNameToFileURL(string assetBundleName)
14:10:20.664 [Info] Writing prefixes
14:10:20.669 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.674 [Info] Patching void BattleTech.BattleTechResourceLocator::RefreshTypedEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RefreshTypedEntries_Patch::Prefix()

14:10:20.676 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RefreshTypedEntries()
14:10:20.679 [Info] Writing prefixes
14:10:20.695 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.699 [Info] Patching void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_SetContentPackIndex_Patch::Prefix(BattleTech.Data.ContentPackIndex contentPackIndex)

14:10:20.701 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::SetContentPackIndex(BattleTech.Data.ContentPackIndex contentPackIndex)
14:10:20.703 [Info] Writing prefixes
14:10:20.708 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.712 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

14:10:20.715 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyAddendum(BattleTech.VersionManifestAddendum addendum)
14:10:20.717 [Info] Writing prefixes
14:10:20.722 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.724 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveAddendum_Patch::Prefix(BattleTech.VersionManifestAddendum addendum)

14:10:20.728 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveAddendum(BattleTech.VersionManifestAddendum addendum)
14:10:20.730 [Info] Writing prefixes
14:10:20.734 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.737 [Info] Patching BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetAddendumByName_Patch::Prefix(string name, BattleTech.VersionManifestAddendum& __result)

14:10:20.739 [Info] Running ILHook manipulator on BattleTech.VersionManifestAddendum BattleTech.BattleTechResourceLocator::GetAddendumByName(string name)
14:10:20.741 [Info] Writing prefixes
14:10:20.746 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.749 [Info] Patching void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_ApplyMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

14:10:20.753 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::ApplyMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
14:10:20.755 [Info] Writing prefixes
14:10:20.760 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.763 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveMemoryStore_Patch::Prefix(BattleTech.VersionManifestMemoryStore memoryStore)

14:10:20.765 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveMemoryStore(BattleTech.VersionManifestMemoryStore memoryStore)
14:10:20.767 [Info] Writing prefixes
14:10:20.772 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.775 [Info] Patching System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoresContainingEntry_Patch::Prefix(BattleTech.BattleTechResourceType resourceType, string id, System.Collections.Generic.List`1[[BattleTech.VersionManifestMemoryStore, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:20.778 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.VersionManifestMemoryStore> BattleTech.BattleTechResourceLocator::GetMemoryStoresContainingEntry(BattleTech.BattleTechResourceType resourceType, string id)
14:10:20.780 [Info] Writing prefixes
14:10:20.787 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.789 [Info] Patching BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_GetMemoryStoreByName_Patch::Prefix(string name, BattleTech.VersionManifestMemoryStore& __result)

14:10:20.792 [Info] Running ILHook manipulator on BattleTech.VersionManifestMemoryStore BattleTech.BattleTechResourceLocator::GetMemoryStoreByName(string name)
14:10:20.795 [Info] Writing prefixes
14:10:20.800 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.803 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntries_Patch::Prefix(BattleTech.VersionManifestEntry[]& __result)

14:10:20.806 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntries()
14:10:20.808 [Info] Writing prefixes
14:10:20.814 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.817 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResource_Patch::Prefix(BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

14:10:20.820 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResource(BattleTech.BattleTechResourceType type, bool filterByOwnership)
14:10:20.823 [Info] Writing prefixes
14:10:20.829 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.832 [Info] Patching BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_AllEntriesOfResourceFromAddendum_Patch::Prefix(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership, BattleTech.VersionManifestEntry[]& __result)

14:10:20.835 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry[] BattleTech.BattleTechResourceLocator::AllEntriesOfResourceFromAddendum(BattleTech.BattleTechResourceType type, BattleTech.VersionManifestAddendum addendum, bool filterByOwnership)
14:10:20.837 [Info] Writing prefixes
14:10:20.842 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.845 [Info] Patching BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_EntryByID_Patch::Prefix(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership, BattleTech.VersionManifestEntry& __result)

14:10:20.848 [Info] Running ILHook manipulator on BattleTech.VersionManifestEntry BattleTech.BattleTechResourceLocator::EntryByID(string id, BattleTech.BattleTechResourceType type, bool filterByOwnership)
14:10:20.850 [Info] Writing prefixes
14:10:20.855 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.859 [Info] Patching void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.BattleTechResourceLocator_RemoveEntry_Patch::Prefix(BattleTech.VersionManifestEntry entry)

14:10:20.862 [Info] Running ILHook manipulator on void BattleTech.BattleTechResourceLocator::RemoveEntry(BattleTech.VersionManifestEntry entry)
14:10:20.865 [Info] Writing prefixes
14:10:20.874 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.877 [Info] Patching bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.ContentPackIndex_IsResourceOwned_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, string resourceId, Boolean& __result)

14:10:20.881 [Info] Running ILHook manipulator on bool BattleTech.Data.ContentPackIndex::IsResourceOwned(string resourceId)
14:10:20.883 [Info] Writing prefixes
14:10:20.889 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.892 [Info] Patching void BattleTech.Data.ContentPackIndex::PatchMDD() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Prefix(Boolean& ___rebuildMDDOnLoadComplete, System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_PatchMDD_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance, System.Diagnostics.Stopwatch __state)

14:10:20.895 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::PatchMDD()
14:10:20.908 [Info] Writing prefixes
14:10:20.911 [Info] Writing postfixes
14:10:20.920 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.922 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

14:10:20.925 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
14:10:20.927 [Info] Writing prefixes
14:10:20.930 [Info] Writing postfixes
14:10:20.951 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.954 [Info] Patching void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.DataManager_ProcessPrewarmRequests_Patch::Prefix(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)

14:10:20.957 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::ProcessPrewarmRequests(System.Collections.Generic.IEnumerable<BattleTech.Data.PrewarmRequest> toPrewarm)
14:10:20.959 [Info] Writing prefixes
14:10:20.965 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.968 [Info] Patching BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Prefix(BattleTech.Data.LoadRequest __instance, BattleTech.Data.DataManager+FileLoadRequest& __result)
1 postfixes:
* static void ModTek.Features.Manifest.Patches.LoadRequest_PopPendingRequest_Patch::Postfix(BattleTech.Data.DataManager+FileLoadRequest& __result)

14:10:20.971 [Info] Running ILHook manipulator on BattleTech.Data.DataManager+FileLoadRequest BattleTech.Data.LoadRequest::PopPendingRequest()
14:10:20.974 [Info] Writing prefixes
14:10:20.976 [Info] Writing postfixes
14:10:20.983 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:20.986 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_DB_PATH_Patch::Prefix(String& __result)

14:10:20.989 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_DB_PATH()
14:10:20.991 [Info] Writing prefixes
14:10:21.071 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:21.074 [Info] Patching string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Manifest.Patches.MetadataDatabase_MDD_TMP_PATH_Patch::Prefix(String& __result)

14:10:21.076 [Info] Running ILHook manipulator on string BattleTech.Data.MetadataDatabase::get_MDD_TMP_PATH()
14:10:21.078 [Info] Writing prefixes
14:10:21.083 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:21.086 [Info] Patching static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.SimGame_MDDExtensions_UpdateContract_Patch::Prefix(String& fileID)

14:10:21.088 [Info] Running ILHook manipulator on static BattleTech.Data.Contract_MDD BattleTech.Data.SimGame_MDDExtensions::UpdateContract(BattleTech.Data.MetadataDatabase mdd, string fileID, BattleTech.Framework.ContractOverride contractOverride)
14:10:21.090 [Info] Writing prefixes
14:10:21.097 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:21.101 [Info] Patching static void BattleTech.DebugBridge::ApplyCurrentSettings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.DebugBridge_ApplyCurrentSettings_Patch::Prefix()

14:10:21.103 [Info] Running ILHook manipulator on static void BattleTech.DebugBridge::ApplyCurrentSettings()
14:10:21.105 [Info] Writing prefixes
14:10:21.127 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:21.130 [Info] Patching static void HBS.Logging.Logger::CaptureUnityLogs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.Logger_CaptureUnityLogs_Patch::Prefix()

14:10:21.132 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::CaptureUnityLogs()
14:10:21.134 [Info] Writing prefixes
14:10:21.138 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 1 ms
14:10:21.141 [Info] Patching bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_IsEnabledFor_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, HBS.Logging.LogLevel level, Boolean& __result)

14:10:21.143 [Info] Running ILHook manipulator on bool HBS.Logging.Logger+LogImpl::IsEnabledFor(HBS.Logging.LogLevel level)
14:10:21.145 [Info] Writing prefixes
14:10:21.162 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.165 [Info] Patching void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Prefix(HBS.Logging.Logger+LogImpl __instance, string ___name, HBS.Logging.LogLevel level, object message, Exception exception, HBS.Logging.IStackTrace location)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:21.167 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
14:10:21.170 [Info] Transpiling void HBS.Logging.Logger+LogImpl::LogAtLevel(HBS.Logging.LogLevel level, object message, UnityEngine.Object context, Exception exception, HBS.Logging.IStackTrace location)
14:10:21.182 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<ModTek.Features.Logging.Patches.LogImpl_LogAtLevel_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:21.206 [Info] Writing prefixes
14:10:21.214 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.219 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
2 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

14:10:21.221 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:21.224 [Info] Writing prefixes
14:10:21.226 [Info] Writing postfixes
14:10:21.230 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.233 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_Init_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

14:10:21.235 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::Init()
14:10:21.238 [Info] Writing postfixes
14:10:21.257 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.260 [Info] Patching virtual void BattleTech.UI.LoadingCurtain::LateUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_LateUpdate_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

14:10:21.263 [Info] Running ILHook manipulator on virtual void BattleTech.UI.LoadingCurtain::LateUpdate()
14:10:21.265 [Info] Writing postfixes
14:10:21.270 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.273 [Info] Patching static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.LoadingCurtain_ShowUntil_Patch::Postfix(BattleTech.UI.LoadingCurtain __instance)

14:10:21.275 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::ShowUntil(System.Func<bool> closureConditional, bool isPopup, BattleTech.GameTipManager+GameTipType tipType, float extraWaitTime)
14:10:21.278 [Info] Writing postfixes
14:10:21.286 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.289 [Info] Patching static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadingCurtainEx.Logger_HandleUnityLog_Patch::Postfix(string logString, string stackTrace, UnityEngine.LogType type)

14:10:21.292 [Info] Running ILHook manipulator on static void HBS.Logging.Logger::HandleUnityLog(string logString, string stackTrace, UnityEngine.LogType type)
14:10:21.293 [Info] Writing postfixes
14:10:21.299 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.301 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

14:10:21.304 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
14:10:21.306 [Info] Writing postfixes
14:10:21.313 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.316 [Info] Patching void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomVideos.Patches.BinkMediaPlayer_Play_Patch::Prefix(BattleTech.BinkMedia.BinkMediaPlayer __instance, string videoName)

14:10:21.319 [Info] Running ILHook manipulator on void BattleTech.BinkMedia.BinkMediaPlayer::Play(string videoName, Localize.Strings+Culture culture)
14:10:21.322 [Info] Writing prefixes
14:10:21.334 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.337 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

14:10:21.340 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
14:10:21.341 [Info] Writing postfixes
14:10:21.345 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.348 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)

14:10:21.350 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
14:10:21.353 [Info] Writing postfixes
14:10:21.357 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.359 [Info] Patching SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.AmmoCategory_GetIcon::Postfix(BattleTech.AmmoCategoryValue __instance, SVGImporter.SVGAsset& __result)

14:10:21.362 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.AmmoCategoryValue::GetIcon()
14:10:21.364 [Info] Writing postfixes
14:10:21.370 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.372 [Info] Patching SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.WeaponCategoryValue_GetIcon::Postfix(BattleTech.WeaponCategoryValue __instance, SVGImporter.SVGAsset& __result)

14:10:21.375 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.WeaponCategoryValue::GetIcon()
14:10:21.376 [Info] Writing postfixes
14:10:21.382 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.385 [Info] Patching void LoadedAudioBank::LoadBank() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Prefix(string ___name)
1 postfixes:
* static void ModTek.Features.CustomSoundBanks.Patches.LoadedAudioBank_LoadBank_Patch::Postfix(string ___name)

14:10:21.387 [Info] Running ILHook manipulator on void LoadedAudioBank::LoadBank()
14:10:21.390 [Info] Writing prefixes
14:10:21.392 [Info] Writing postfixes
14:10:21.398 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.401 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()

14:10:21.404 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
14:10:21.406 [Info] Writing postfixes
14:10:21.413 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.415 [Info] Patching virtual void BattleTech.UI.AudioSettingsModule::SaveSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioSettingsModule_SaveSettings::Postfix(BattleTech.UI.AudioSettingsModule __instance)

14:10:21.417 [Info] Running ILHook manipulator on virtual void BattleTech.UI.AudioSettingsModule::SaveSettings()
14:10:21.420 [Info] Writing postfixes
14:10:21.425 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.427 [Info] Patching void WwiseManager::LoadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_LoadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

14:10:21.430 [Info] Running ILHook manipulator on void WwiseManager::LoadCombatBanks()
14:10:21.432 [Info] Writing postfixes
14:10:21.437 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.440 [Info] Patching void WwiseManager::UnloadCombatBanks() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.WwiseManager_UnloadCombatBanks::Postfix(WwiseManager __instance, System.Collections.Generic.List`1[[LoadedAudioBank, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___loadedBanks)

14:10:21.442 [Info] Running ILHook manipulator on void WwiseManager::UnloadCombatBanks()
14:10:21.445 [Info] Writing postfixes
14:10:21.451 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.454 [Info] Patching void LoadedAudioBank::UnloadBank() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_UnloadBank::Postfix(LoadedAudioBank __instance)

14:10:21.456 [Info] Running ILHook manipulator on void LoadedAudioBank::UnloadBank()
14:10:21.458 [Info] Writing postfixes
14:10:21.463 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 13 ms
14:10:21.466 [Info] Patching AKRESULT LoadedAudioBank::LoadBankExternal() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSoundBankDefs.LoadedAudioBank_LoadBankExternal::Prefix(LoadedAudioBank __instance, AKRESULT& __result, UInt32& ___id)

14:10:21.468 [Info] Running ILHook manipulator on AKRESULT LoadedAudioBank::LoadBankExternal()
14:10:21.470 [Info] Writing prefixes
14:10:21.479 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.482 [Info] Patching void BattleTech.GameTipList::.ctor(string filename, int historyLength) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:21.484 [Info] Running ILHook manipulator on void BattleTech.GameTipList::.ctor(string filename, int historyLength)
14:10:21.487 [Info] Transpiling void BattleTech.GameTipList::.ctor(string filename, int historyLength)
14:10:21.492 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<ModTek.Features.CustomGameTips.Patches.GameTipList_ctor_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:21.501 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.504 [Info] Patching static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_DEFAULT_SETTINGS_FILE_PATH_Patch::Prefix(String& __result)

14:10:21.506 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::get_DEFAULT_SETTINGS_FILE_PATH()
14:10:21.508 [Info] Writing prefixes
14:10:21.511 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.514 [Info] Patching static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetCustomSettingsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

14:10:21.517 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetCustomSettingsFilePath(string fileName, string defaultExtension)
14:10:21.519 [Info] Writing prefixes
14:10:21.523 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.526 [Info] Patching static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomDebugSettings.Patches.DebugBridge_GetStreamingAssetsFilePath_Patch::Prefix(string fileName, string defaultExtension, String& __result)

14:10:21.528 [Info] Running ILHook manipulator on static string BattleTech.DebugBridge::GetStreamingAssetsFilePath(string fileName, string defaultExtension)
14:10:21.530 [Info] Writing prefixes
14:10:21.535 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.538 [Info] Patching virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::Prefix(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

14:10:21.541 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+SVGAssetLoadRequest::Load()
14:10:21.543 [Info] Writing prefixes
14:10:21.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.552 [Info] Patching virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ModTek.Features.CustomSVGAssets.Patches.SVGAssetLoadRequest_Load::PrefixBase(BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset> __instance)

14:10:21.555 [Info] Running ILHook manipulator on virtual void BattleTech.Data.DataManager+ResourceLoadRequest<SVGImporter.SVGAsset>::Load()
14:10:21.557 [Info] Writing prefixes
14:10:21.937 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.940 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

14:10:21.942 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
14:10:21.945 [Info] Writing prefixes
14:10:21.956 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.960 [Info] Patching virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Pre(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)
1 postfixes:
* static void BattletechPerformanceFix.LocalizationPatches::StringForKeyFormat_Post(BattleTech.StringsProviderBase<object> __instance, string key, String& __result, Nullable`1& __state, object[] args)

14:10:21.963 [Info] Running ILHook manipulator on virtual string BattleTech.StringsProviderBase<object>::StringForKeyFormat(string key, object[] args)
14:10:21.966 [Info] Writing prefixes
14:10:21.968 [Info] Writing postfixes
14:10:21.975 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.978 [Info] Patching static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DontStripComments::Prefix(string json, String& __result)

14:10:21.981 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::StripHBSCommentsFromJSON(string json)
14:10:21.983 [Info] Writing prefixes
14:10:21.989 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 16 ms
14:10:21.992 [Info] Patching bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.NoSalvageSoftlock::HasAllPriority(BattleTech.UI.AAR_SalvageChosen __instance, Boolean& __result)

14:10:21.995 [Info] Running ILHook manipulator on bool BattleTech.UI.AAR_SalvageChosen::HasAllPriority()
14:10:21.997 [Info] Writing prefixes
14:10:22.004 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 18 ms
14:10:22.007 [Info] Patching HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.009 [Info] Running ILHook manipulator on HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
14:10:22.012 [Info] Transpiling HBS.Data.DataLoader+Entry HBS.Data.DataLoader::GetEntry(string path, bool createIfNecessary)
14:10:22.015 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.DataLoaderGetEntryCheck::GetEntry>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.022 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
14:10:22.025 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

14:10:22.027 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
14:10:22.030 [Info] Writing postfixes
14:10:22.035 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 19 ms
14:10:22.039 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.ShopTabLagFix::AddItemToInventory(BattleTech.UI.MechLabInventoryWidget_ListView __instance, BattleTech.UI.InventoryDataObject_BASE ItemData)

14:10:22.041 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget_ListView::AddItemToInventory(BattleTech.UI.InventoryDataObject_BASE ItemData, bool bulkAdd)
14:10:22.043 [Info] Writing prefixes
14:10:22.073 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.077 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.080 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
14:10:22.082 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterObjectGameLogic>::UpdateEncounterObjectRef()
14:10:22.085 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.091 [Info] Writing prefixes
14:10:22.093 [Info] Writing postfixes
14:10:22.098 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.102 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.105 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
14:10:22.107 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterLayerData>::UpdateEncounterObjectRef()
14:10:22.111 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.116 [Info] Writing prefixes
14:10:22.119 [Info] Writing postfixes
14:10:22.126 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.130 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.132 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
14:10:22.135 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ContractObjectiveGameLogic>::UpdateEncounterObjectRef()
14:10:22.137 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.142 [Info] Writing prefixes
14:10:22.145 [Info] Writing postfixes
14:10:22.150 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.153 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.156 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
14:10:22.158 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.AudioEventGameLogic>::UpdateEncounterObjectRef()
14:10:22.162 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.167 [Info] Writing prefixes
14:10:22.170 [Info] Writing postfixes
14:10:22.175 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.179 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.182 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
14:10:22.184 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.CameraShakeGameLogic>::UpdateEncounterObjectRef()
14:10:22.187 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.191 [Info] Writing prefixes
14:10:22.194 [Info] Writing postfixes
14:10:22.198 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.200 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.203 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
14:10:22.205 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueGameLogic>::UpdateEncounterObjectRef()
14:10:22.208 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.212 [Info] Writing prefixes
14:10:22.214 [Info] Writing postfixes
14:10:22.218 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.221 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.223 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
14:10:22.226 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DialogueSequenceGameLogic>::UpdateEncounterObjectRef()
14:10:22.229 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.233 [Info] Writing prefixes
14:10:22.235 [Info] Writing postfixes
14:10:22.239 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.242 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.244 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
14:10:22.246 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipGameLogic>::UpdateEncounterObjectRef()
14:10:22.249 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.253 [Info] Writing prefixes
14:10:22.256 [Info] Writing postfixes
14:10:22.259 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.263 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.284 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
14:10:22.286 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.DropshipLandingSpotGameLogic>::UpdateEncounterObjectRef()
14:10:22.289 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.293 [Info] Writing prefixes
14:10:22.295 [Info] Writing postfixes
14:10:22.299 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 21 ms
14:10:22.302 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.305 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
14:10:22.307 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortAndDefendLayerGameLogic>::UpdateEncounterObjectRef()
14:10:22.310 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.314 [Info] Writing prefixes
14:10:22.316 [Info] Writing postfixes
14:10:22.320 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.323 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.325 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
14:10:22.327 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceSpawnerGameLogic>::UpdateEncounterObjectRef()
14:10:22.329 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.334 [Info] Writing prefixes
14:10:22.336 [Info] Writing postfixes
14:10:22.340 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.343 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.345 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
14:10:22.347 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Framework.ObjectiveGameLogic>::UpdateEncounterObjectRef()
14:10:22.350 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.354 [Info] Writing prefixes
14:10:22.356 [Info] Writing postfixes
14:10:22.360 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.363 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.365 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
14:10:22.367 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.ArtilleryObjective>::UpdateEncounterObjectRef()
14:10:22.370 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.374 [Info] Writing prefixes
14:10:22.376 [Info] Writing postfixes
14:10:22.380 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.382 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.384 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
14:10:22.386 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.TimerObjective>::UpdateEncounterObjectRef()
14:10:22.389 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.394 [Info] Writing prefixes
14:10:22.396 [Info] Writing postfixes
14:10:22.400 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.403 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.406 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
14:10:22.408 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.ObstructionGameLogic>::UpdateEncounterObjectRef()
14:10:22.411 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.415 [Info] Writing prefixes
14:10:22.417 [Info] Writing postfixes
14:10:22.421 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.424 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.426 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
14:10:22.429 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceSpawnerGameLogic>::UpdateEncounterObjectRef()
14:10:22.431 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.435 [Info] Writing prefixes
14:10:22.437 [Info] Writing postfixes
14:10:22.442 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.445 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.447 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
14:10:22.449 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionGameLogic>::UpdateEncounterObjectRef()
14:10:22.451 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.455 [Info] Writing prefixes
14:10:22.458 [Info] Writing postfixes
14:10:22.462 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.465 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.467 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
14:10:22.469 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RegionPointGameLogic>::UpdateEncounterObjectRef()
14:10:22.472 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.476 [Info] Writing prefixes
14:10:22.478 [Info] Writing postfixes
14:10:22.482 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.485 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.488 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
14:10:22.491 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RouteGameLogic>::UpdateEncounterObjectRef()
14:10:22.494 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.498 [Info] Writing prefixes
14:10:22.500 [Info] Writing postfixes
14:10:22.504 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.508 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.510 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
14:10:22.512 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.RoutePointGameLogic>::UpdateEncounterObjectRef()
14:10:22.515 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.519 [Info] Writing prefixes
14:10:22.522 [Info] Writing postfixes
14:10:22.526 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.529 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.532 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
14:10:22.534 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.UnitSpawnPointGameLogic>::UpdateEncounterObjectRef()
14:10:22.537 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.541 [Info] Writing prefixes
14:10:22.543 [Info] Writing postfixes
14:10:22.548 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.551 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.553 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
14:10:22.556 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.WorldPointGameLogic>::UpdateEncounterObjectRef()
14:10:22.559 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.563 [Info] Writing prefixes
14:10:22.566 [Info] Writing postfixes
14:10:22.570 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.573 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.576 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.578 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.AmbushChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.581 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.585 [Info] Writing prefixes
14:10:22.588 [Info] Writing postfixes
14:10:22.592 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.595 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.597 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.599 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.602 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.606 [Info] Writing prefixes
14:10:22.609 [Info] Writing postfixes
14:10:22.614 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.617 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.619 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.622 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.624 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.629 [Info] Writing prefixes
14:10:22.632 [Info] Writing postfixes
14:10:22.636 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.639 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.642 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.645 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EmptyCustomChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.648 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.653 [Info] Writing prefixes
14:10:22.655 [Info] Writing postfixes
14:10:22.660 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.664 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.666 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.669 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.EncounterChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.673 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.676 [Info] Writing prefixes
14:10:22.679 [Info] Writing postfixes
14:10:22.683 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.686 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.689 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.691 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.694 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.698 [Info] Writing prefixes
14:10:22.700 [Info] Writing postfixes
14:10:22.704 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.707 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.709 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.711 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.LanceChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.714 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.717 [Info] Writing prefixes
14:10:22.719 [Info] Writing postfixes
14:10:22.723 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.725 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.727 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.729 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.PlayerLanceChunkGameLogic>::UpdateEncounterObjectRef()
14:10:22.732 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.735 [Info] Writing prefixes
14:10:22.738 [Info] Writing postfixes
14:10:22.742 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.745 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.747 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
14:10:22.749 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DefendXUnitsObjective>::UpdateEncounterObjectRef()
14:10:22.752 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.775 [Info] Writing prefixes
14:10:22.778 [Info] Writing postfixes
14:10:22.782 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.785 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.787 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
14:10:22.789 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyLanceObjective>::UpdateEncounterObjectRef()
14:10:22.791 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.796 [Info] Writing prefixes
14:10:22.798 [Info] Writing postfixes
14:10:22.804 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.807 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.809 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
14:10:22.812 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.DestroyXUnitsObjective>::UpdateEncounterObjectRef()
14:10:22.815 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.820 [Info] Writing prefixes
14:10:22.823 [Info] Writing postfixes
14:10:22.828 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.831 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.834 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
14:10:22.836 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureAllUnitsSurviveObjective>::UpdateEncounterObjectRef()
14:10:22.839 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.844 [Info] Writing prefixes
14:10:22.847 [Info] Writing postfixes
14:10:22.852 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.855 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.858 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
14:10:22.860 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EnsureUnitsSurviveObjective>::UpdateEncounterObjectRef()
14:10:22.864 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.868 [Info] Writing prefixes
14:10:22.871 [Info] Writing postfixes
14:10:22.876 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.880 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.882 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
14:10:22.884 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.EscortXUnitsObjective>::UpdateEncounterObjectRef()
14:10:22.888 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.892 [Info] Writing prefixes
14:10:22.895 [Info] Writing postfixes
14:10:22.899 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.902 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.904 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
14:10:22.906 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.GoToObjective>::UpdateEncounterObjectRef()
14:10:22.909 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.914 [Info] Writing prefixes
14:10:22.916 [Info] Writing postfixes
14:10:22.921 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.924 [Info] Patching void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ContractLagFix::Pre()
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::Post()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:22.926 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
14:10:22.929 [Info] Transpiling void BattleTech.EncounterObjectRef<BattleTech.Designed.OccupyRegionObjective>::UpdateEncounterObjectRef()
14:10:22.932 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ContractLagFix::Transpile>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:22.936 [Info] Writing prefixes
14:10:22.939 [Info] Writing postfixes
14:10:22.944 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.947 [Info] Patching void BattleTech.EncounterLayerData::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BattletechPerformanceFix.ContractLagFix::EncounterLayerData_Constructor(BattleTech.EncounterLayerData __instance)

14:10:22.950 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::.ctor()
14:10:22.952 [Info] Writing postfixes
14:10:22.959 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.961 [Info] Patching void BattleTech.LevelLoader::EnableLogging(bool enable) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.EnableLoggingDuringLoads::EnableLogging(Boolean& enable)

14:10:22.964 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::EnableLogging(bool enable)
14:10:22.966 [Info] Writing prefixes
14:10:22.974 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.975 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)

14:10:22.978 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
14:10:22.980 [Info] Writing prefixes
14:10:22.988 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:22.991 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

14:10:22.994 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
14:10:22.996 [Info] Writing prefixes
14:10:23.009 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:23.013 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

14:10:23.015 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
14:10:23.017 [Info] Writing prefixes
14:10:23.020 [Info] Writing postfixes
14:10:23.026 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:23.029 [Info] Patching void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::InitializeTaggedLance_Pre()

14:10:23.031 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::InitializeTaggedLance()
14:10:23.034 [Info] Writing prefixes
14:10:23.039 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:23.042 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

14:10:23.044 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
14:10:23.047 [Info] Writing prefixes
14:10:23.052 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 22 ms
14:10:23.056 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)

14:10:23.058 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
14:10:23.061 [Info] Writing prefixes
14:10:23.072 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.075 [Info] Patching bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:23.078 [Info] Running ILHook manipulator on bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
14:10:23.081 [Info] Transpiling bool BattleTech.Assetbundles.AssetBundleManager::IsBundleLoaded(string name, BattleTech.Assetbundles.AssetBundleTracker& bundleTracker)
14:10:23.083 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:23.089 [Info] Writing prefixes
14:10:23.095 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.098 [Info] Patching void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.ShaderDependencyOverride::GetManager(BattleTech.Assetbundles.AssetBundleManager __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:23.100 [Info] Running ILHook manipulator on void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
14:10:23.102 [Info] Transpiling void BattleTech.Assetbundles.AssetBundleManager::GenerateWebRequest(string assetBundleName, BattleTech.VersionManifestEntry versionEntry)
14:10:23.105 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<BattletechPerformanceFix.ShaderDependencyOverride::WithShaderDeps>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:23.114 [Info] Writing prefixes
14:10:23.121 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.132 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:23.134 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:23.136 [Info] Writing prefixes
14:10:23.225 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.228 [Info] Patching void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::Init_Pre(Single& ___betweenRoomTransitionTime, Single& ___inRoomTransitionTime)

14:10:23.231 [Info] Running ILHook manipulator on void BattleTech.SimGameCameraController::Init(BattleTech.SimGameState sim)
14:10:23.233 [Info] Writing prefixes
14:10:23.239 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.242 [Info] Patching System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BattletechPerformanceFix.DisableSimAnimations::TransitionMech_Pre(Single& fadeDuration)

14:10:23.244 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.UI.SGRoomController_MechBay::TransitionMech(BattleTech.MechDef mechDef, float fadeDuration, UnityEngine.Camera camera, bool useCameraFit)
14:10:23.247 [Info] Writing prefixes
14:10:23.252 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.262 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:23.265 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:23.267 [Info] Writing prefixes
14:10:23.295 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.298 [Info] Patching virtual bool BattleTech.VersionManifestBase::Contains(string id, string type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.VersionManifestPatches::Contains_Pre(BattleTech.VersionManifestBase __instance, string id, string type, Boolean& __result)

14:10:23.300 [Info] Running ILHook manipulator on virtual bool BattleTech.VersionManifestBase::Contains(string id, string type)
14:10:23.302 [Info] Writing prefixes
14:10:23.308 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.311 [Info] Patching void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BattletechPerformanceFix.DisableSensitiveDataLogDump::OnInternetConnectivityResult(BattleTech.UnityGameInstance __instance, bool success)

14:10:23.313 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnInternetConnectivityResult(bool success)
14:10:23.316 [Info] Writing prefixes
14:10:23.339 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.342 [Info] Patching void BattleTech.CameraControl::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.CameraControlUpdatePatch::Postfix(BattleTech.CameraControl __instance, BattleTech.DebugFlyCameraControl ___debugFlyCameraControl)

14:10:23.345 [Info] Running ILHook manipulator on void BattleTech.CameraControl::Update()
14:10:23.347 [Info] Writing postfixes
14:10:23.359 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.364 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)

14:10:23.366 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
14:10:23.367 [Info] Writing prefixes
14:10:23.382 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.385 [Info] Patching void BattleTech.RegionGameLogic::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.RegionGameLogicPatch::Postfix(BattleTech.RegionGameLogic __instance)

14:10:23.387 [Info] Running ILHook manipulator on void BattleTech.RegionGameLogic::Update()
14:10:23.389 [Info] Writing postfixes
14:10:23.394 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.397 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

14:10:23.400 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
14:10:23.401 [Info] Writing prefixes
14:10:23.411 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.414 [Info] Patching void BattleTech.UnityGameInstance::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BTDebug.UnityGameInstancePatch::Postfix(BattleTech.UnityGameInstance __instance)

14:10:23.416 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Update()
14:10:23.418 [Info] Writing postfixes
14:10:23.476 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.479 [Info] Patching bool BattleTech.Contract::get_IsFlashpointContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

14:10:23.482 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointContract()
14:10:23.484 [Info] Writing postfixes
14:10:23.489 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.492 [Info] Patching bool BattleTech.Contract::get_IsFlashpointCampaignContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.Contract_GetIsFlashpointCampaignContract_Patch::Postfix(BattleTech.Contract __instance, Boolean& __result)

14:10:23.494 [Info] Running ILHook manipulator on bool BattleTech.Contract::get_IsFlashpointCampaignContract()
14:10:23.497 [Info] Writing postfixes
14:10:23.501 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.503 [Info] Patching bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.FlashpointDef_GetisHeavyMetalCampaign_Patch::Postfix(BattleTech.FlashpointDef __instance, Boolean& __result)

14:10:23.506 [Info] Running ILHook manipulator on bool BattleTech.FlashpointDef::get_isHeavyMetalCampaign()
14:10:23.508 [Info] Writing postfixes
14:10:23.512 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.516 [Info] Patching void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGContractsWidget_ListContracts::Postfix(BattleTech.UI.SGContractsWidget __instance, System.Collections.Generic.List<BattleTech.UI.SGContractsListItem> ___listedContracts, System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)

14:10:23.518 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::ListContracts(System.Collections.Generic.List<BattleTech.Contract> contracts, BattleTech.Framework.ContractDisplayStyle? initialSelection)
14:10:23.521 [Info] Writing postfixes
14:10:23.534 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.537 [Info] Patching BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_GetSystemFlashpoint::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.Flashpoint flashpoint, BattleTech.StarmapSystemRenderer& __result)

14:10:23.539 [Info] Running ILHook manipulator on BattleTech.StarmapSystemRenderer BattleTech.UI.SGNavigationScreen::GetSystemFlashpoint(BattleTech.Flashpoint flashpoint)
14:10:23.542 [Info] Writing postfixes
14:10:23.550 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:23.552 [Info] Patching void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ColourfulFlashPoints.Patches.SGNavigationScreen_ShowFlashpointSystems::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState ___simState)

14:10:23.555 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::ShowFlashpointSystems()
14:10:23.558 [Info] Writing postfixes
14:10:23.574 [Info] ### Harmony id=io.github.denadan.CustomComponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomComponents.Control::Init(string directory, string settingsInitJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomComponents\CustomComponents.dll
### At 2023-05-07 02.10.23
14:10:23.584 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
3 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

14:10:23.587 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:23.589 [Info] Writing prefixes
14:10:23.591 [Info] Writing postfixes
14:10:23.597 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)

14:10:23.600 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
14:10:23.601 [Info] Writing prefixes
14:10:23.609 [Info] Patching static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.JSONSerializationUtility_RehydrateObjectFromDictionary_Patch::Postfix(object target, System.Collections.Generic.Dictionary<string, object> values)

14:10:23.612 [Info] Running ILHook manipulator on static string HBS.Util.JSONSerializationUtility::RehydrateObjectFromDictionary(object target, System.Collections.Generic.Dictionary<string, object> values, string classStructure, HBS.Stopwatch convertTime, HBS.Stopwatch reflectTime, HBS.Util.JSONSerializationUtility+RehydrationFilteringMode filteringMode, System.Func<string, bool>[] predicates)
14:10:23.615 [Info] Writing postfixes
14:10:23.627 [Info] Patching BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType)
1 postfixes:
* static void CustomComponents.SimGameState_GetMechComponentRefForUID::Postfix(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.MechComponentRef __result, BattleTech.SimGameState __instance)

14:10:23.630 [Info] Running ILHook manipulator on BattleTech.MechComponentRef BattleTech.SimGameState::GetMechComponentRefForUID(BattleTech.MechDef mech, string simGameUID, string componentID, BattleTech.ComponentType componentType, BattleTech.ComponentDamageLevel damageLevel, BattleTech.ChassisLocations desiredLocation, int hardpointSlot, Boolean& itemWasFromInventory)
14:10:23.632 [Info] Writing prefixes
14:10:23.635 [Info] Writing postfixes
14:10:23.643 [Info] Patching bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Get_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.646 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
14:10:23.648 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Get(Type t, string memberName, object target, Object& result, object[] idx)
14:10:23.651 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Get_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.657 [Info] Patching bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Set::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.659 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
14:10:23.662 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Set(Type t, string memberName, Object& target, object value, object[] idx)
14:10:23.665 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Set::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.669 [Info] Patching bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Invoke_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.671 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
14:10:23.673 [Info] Transpiling bool HBS.Reflection.ReflectionCache::Invoke(Type t, string methodName, object target, Object& result, object[] args)
14:10:23.676 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_Invoke_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.680 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.683 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
14:10:23.684 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMember(Type t, string memberName, String& key)
14:10:23.687 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMember_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.691 [Info] Patching bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.693 [Info] Running ILHook manipulator on bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
14:10:23.695 [Info] Transpiling bool HBS.Reflection.ReflectionCache::TryCacheMethod(Type t, string methodName, String& key)
14:10:23.698 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.ReflectionCache_TryCacheMethod_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.703 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::RequestResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.705 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
14:10:23.707 [Info] Transpiling void BattleTech.UI.SkirmishMechBayPanel::RequestResources()
14:10:23.714 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishMechBayPanel_RequestResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.721 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:23.724 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
14:10:23.726 [Info] Transpiling void BattleTech.UI.SkirmishSettings_Beta::LoadLanceConfiguratorData()
14:10:23.731 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.SkirmishSettings_Beta_LoadLanceConfiguratorData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:23.739 [Info] Patching void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Contract_AddMechComponentToSalvage::Prefix(Boolean& __runOriginal, BattleTech.MechComponentDef& def)

14:10:23.741 [Info] Running ILHook manipulator on void BattleTech.Contract::AddMechComponentToSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> salvageList, BattleTech.MechComponentDef def, BattleTech.ComponentDamageLevel damageLevel, bool breakComponents, BattleTech.SimGameConstants sc, NetworkRandom rand, bool chanceForUpgrade)
14:10:23.743 [Info] Writing prefixes
14:10:23.779 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

14:10:23.781 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:23.783 [Info] Writing prefixes
14:10:23.808 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

14:10:23.810 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
14:10:23.813 [Info] Writing prefixes
14:10:23.820 [Info] Patching void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ListView_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget_ListView __instance)

14:10:23.823 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget_ListView::ApplySorting()
14:10:23.825 [Info] Writing prefixes
14:10:23.829 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

14:10:23.832 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:23.834 [Info] Writing postfixes
14:10:23.840 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)

14:10:23.842 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:23.844 [Info] Writing postfixes
14:10:23.856 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

14:10:23.859 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:23.860 [Info] Writing prefixes
14:10:23.882 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)

14:10:23.884 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
14:10:23.886 [Info] Writing postfixes
14:10:23.893 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

14:10:23.895 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
14:10:23.898 [Info] Writing postfixes
14:10:23.902 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)

14:10:23.905 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
14:10:23.907 [Info] Writing postfixes
14:10:23.917 [Info] Patching BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.SimGameState_CreateComponentRepairWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, bool isOnMech, BattleTech.WorkOrderEntry_RepairComponent& __result)

14:10:23.919 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_RepairComponent BattleTech.SimGameState::CreateComponentRepairWorkOrder(BattleTech.MechComponentRef mechComponent, bool isOnMech)
14:10:23.921 [Info] Writing postfixes
14:10:23.927 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SorterMechInventory.Patches.MechDef_SetInventory_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponentRef[]& newInventory)

14:10:23.930 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
14:10:23.932 [Info] Writing prefixes
14:10:23.937 [Info] Patching bool BattleTech.Data.SVGCache::Contains(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Icons.SVGAssets_Contains::Prefix(Boolean& __runOriginal, string id, Boolean& __result)

14:10:23.940 [Info] Running ILHook manipulator on bool BattleTech.Data.SVGCache::Contains(string id)
14:10:23.942 [Info] Writing prefixes
14:10:23.947 [Info] Patching SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Icons.SVGCache_GetAsset::Prefix(Boolean& __runOriginal, string id, SVGImporter.SVGAsset& __result)

14:10:23.950 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.Data.SVGCache::GetAsset(string id)
14:10:23.952 [Info] Writing prefixes
14:10:23.958 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHPText)

14:10:23.960 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
14:10:23.962 [Info] Writing postfixes
14:10:23.971 [Info] Patching void BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetHardpointData(BattleTech.ChassisDef chassis) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetHardpointData::Prefix(Boolean& __runOriginal)

14:10:23.973 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetHardpointData(BattleTech.ChassisDef chassis)
14:10:23.975 [Info] Writing prefixes
14:10:23.980 [Info] Patching void BattleTech.MechDef::InsertFixedEquipmentIntoInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Fixes.MechDef_InsertFixedEquipmentIntoInventory::Prefix(Boolean& __runOriginal, BattleTech.MechDef __instance, BattleTech.MechComponentRef[]& ___inventory, BattleTech.Data.DataManager ___dataManager)

14:10:23.983 [Info] Running ILHook manipulator on void BattleTech.MechDef::InsertFixedEquipmentIntoInventory()
14:10:23.985 [Info] Writing prefixes
14:10:23.993 [Info] Patching BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.SimGameState_CreateComponentInstallWorkOrder_Patch::Postfix(BattleTech.SimGameState __instance, string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, BattleTech.WorkOrderEntry_InstallComponent __result)
* static void CustomComponents.Fixes.SimGameState_CreateComponentInstallWorkOrder::Postfix(BattleTech.SimGameState __instance, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation, string mechSimGameUID, BattleTech.WorkOrderEntry_InstallComponent __result)

14:10:23.996 [Info] Running ILHook manipulator on BattleTech.WorkOrderEntry_InstallComponent BattleTech.SimGameState::CreateComponentInstallWorkOrder(string mechSimGameUID, BattleTech.MechComponentRef mechComponent, BattleTech.ChassisLocations newLocation, BattleTech.ChassisLocations previousLocation)
14:10:23.998 [Info] Writing postfixes
14:10:24.027 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.030 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
14:10:24.032 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
14:10:24.038 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.054 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_ShowHighlightFrame::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, bool isOriginalLocation, bool canBeAdded)

14:10:24.057 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
14:10:24.059 [Info] Writing prefixes
14:10:24.071 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
1 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)

14:10:24.074 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:24.076 [Info] Writing prefixes
14:10:24.079 [Info] Writing postfixes
14:10:24.108 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishMechBayPanel_LanceConfiguratorDataLoaded_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishMechBayPanel __instance)

14:10:24.110 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::LanceConfiguratorDataLoaded(BattleTech.Data.LoadRequest loadRequest)
14:10:24.113 [Info] Writing prefixes
14:10:24.120 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)

14:10:24.123 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
14:10:24.125 [Info] Writing prefixes
14:10:24.132 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_InventoryGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_InventoryGear __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:24.135 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.137 [Info] Writing prefixes
14:10:24.142 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_InventoryWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_InventoryWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:24.144 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_InventoryWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.146 [Info] Writing prefixes
14:10:24.150 [Info] Patching void BattleTech.UI.InventoryItemElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryItemElement_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement __instance, BattleTech.MechComponentRef ___componentRef)

14:10:24.153 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::RefreshItemColor()
14:10:24.155 [Info] Writing prefixes
14:10:24.159 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryItemElement_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement_NotListView __instance, BattleTech.MechComponentRef ___componentRef)

14:10:24.162 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::RefreshItemColor()
14:10:24.164 [Info] Writing prefixes
14:10:24.169 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_InventoryGear_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_InventoryGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

14:10:24.171 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:24.174 [Info] Writing prefixes
14:10:24.179 [Info] Patching virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_InventoryWeapon_NotListViewn_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

14:10:24.181 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:24.183 [Info] Writing prefixes
14:10:24.187 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentListItem_SetData::Postfix(BattleTech.ComponentDamageLevel damageLevel)

14:10:24.190 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetData(string text, BattleTech.ComponentDamageLevel damageLevel, BattleTech.UI.UIColor itemColor, BattleTech.UI.UIColor bgColor)
14:10:24.192 [Info] Writing postfixes
14:10:24.197 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentListItem_SetTooltipData::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentDef MechDef, BattleTech.UI.UIColorRefTracker ___backgroundColor, BattleTech.UI.UIColorRefTracker ___itemTextColor)

14:10:24.199 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetTooltipData(BattleTech.MechComponentDef MechDef)
14:10:24.201 [Info] Writing postfixes
14:10:24.206 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechComponentDef_GetUIColor::Postfix(BattleTech.MechComponentDef componentDef, BattleTech.UI.UIColor& __result)

14:10:24.209 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentDef::GetUIColor(BattleTech.MechComponentDef componentDef)
14:10:24.211 [Info] Writing postfixes
14:10:24.217 [Info] Patching static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechComponentRef_GetUIColor::Postfix(BattleTech.MechComponentRef __instance, BattleTech.UI.UIColor& __result, BattleTech.MechComponentRef componentRef)

14:10:24.219 [Info] Running ILHook manipulator on static BattleTech.UI.UIColor BattleTech.MechComponentRef::GetUIColor(BattleTech.MechComponentRef componentRef)
14:10:24.222 [Info] Writing postfixes
14:10:24.226 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabSlotItem_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.UIColorRefTracker ___backgroundColor, UnityEngine.GameObject ___fixedEquipmentOverlay, BattleTech.UI.IMechLabDropTarget ___dropParent, BattleTech.UI.UIColorRefTracker ___nameTextColor, BattleTech.UI.UIColorRefTracker ___iconColor, SVGImporter.SVGImage ___icon)

14:10:24.229 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshItemColor()
14:10:24.231 [Info] Writing prefixes
14:10:24.236 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_SalvageGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageGear __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:24.239 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.241 [Info] Writing prefixes
14:10:24.246 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_SalvageWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageWeapon __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:24.249 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.251 [Info] Writing prefixes
14:10:24.256 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageGear_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageGear_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

14:10:24.258 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageGear_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:24.260 [Info] Writing prefixes
14:10:24.266 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageWeapon_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageWeapon_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

14:10:24.268 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageWeapon_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:24.270 [Info] Writing prefixes
14:10:24.275 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InInventoryDataObject_SalvageFullMech_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:24.277 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.280 [Info] Writing prefixes
14:10:24.284 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageFullMech_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

14:10:24.286 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:24.288 [Info] Writing prefixes
14:10:24.293 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InInventoryDataObject_SalvageMechPart_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryDataObject_SalvageMechPart __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:24.294 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageMechPart::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.297 [Info] Writing prefixes
14:10:24.302 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.ListElementController_SalvageMechPart_NotListView_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget)

14:10:24.304 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshItemColor(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:24.306 [Info] Writing prefixes
14:10:24.310 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.InventoryDataObject_ShopWeapon_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopWeapon __instance)

14:10:24.312 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.315 [Info] Writing prefixes
14:10:24.319 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.IInventoryDataObject_ShopGear_RefreshItemColor::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement theWidget, BattleTech.UI.InventoryDataObject_ShopGear __instance)

14:10:24.321 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopGear::RefreshItemColor(BattleTech.UI.InventoryItemElement theWidget)
14:10:24.324 [Info] Writing prefixes
14:10:24.329 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechBayChassisInfoWidget_SetHardpoints::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHardpointText, BattleTech.UI.TMProWrapper.LocalizableText ___ballisticHardpointText, BattleTech.ChassisDef ___selectedChassis)

14:10:24.331 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetHardpoints()
14:10:24.333 [Info] Writing prefixes
14:10:24.339 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechBayMechInfoWidget_SetHardpoints::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHardpointText, BattleTech.UI.TMProWrapper.LocalizableText ___ballisticHardpointText, BattleTech.MechDef ___selectedMech)

14:10:24.341 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetHardpoints()
14:10:24.343 [Info] Writing prefixes
14:10:24.350 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RefreshHardpointData::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

14:10:24.353 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshHardpointData()
14:10:24.355 [Info] Writing prefixes
14:10:24.362 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_GetTotalHardpoints::Prefix(Boolean& __runOriginal)

14:10:24.365 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::GetTotalHardpoints()
14:10:24.367 [Info] Writing prefixes
14:10:24.376 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechValidationRules_ValidateMechInventorySlots::Prefix(Boolean& __runOriginal)

14:10:24.378 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechInventorySlots(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
14:10:24.381 [Info] Writing prefixes
14:10:24.423 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)

14:10:24.426 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
14:10:24.428 [Info] Writing postfixes
14:10:24.436 [Info] Patching void BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetHardpointData(BattleTech.ChassisDef chassis) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetHardpointData::Prefix(Boolean& __runOriginal, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance)

14:10:24.439 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetHardpointData(BattleTech.ChassisDef chassis)
14:10:24.441 [Info] Writing prefixes
14:10:24.446 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()

14:10:24.448 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
14:10:24.450 [Info] Writing postfixes
14:10:24.455 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)

14:10:24.458 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
14:10:24.460 [Info] Writing postfixes
14:10:24.468 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnItemGrab_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.MechComponentRef& __state)
1 postfixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnItemGrab_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, Boolean& __result, BattleTech.MechComponentRef __state, BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.MechLabLocationWidget __instance)

14:10:24.470 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
14:10:24.472 [Info] Writing prefixes
14:10:24.475 [Info] Writing postfixes
14:10:24.479 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData)

14:10:24.482 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
14:10:24.484 [Info] Writing prefixes
14:10:24.493 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.496 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:24.498 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:24.501 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.506 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RepairStructure(bool validate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RepairStructure_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, System.Collections.Generic.Queue`1[[CustomComponents.Changes.IChange, CustomComponents, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null]]& __state)
1 postfixes:
* static void CustomComponents.Patches.MechLabLocationWidget_RepairStructure_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, System.Collections.Generic.Queue`1[[CustomComponents.Changes.IChange, CustomComponents, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null]]& __state)

14:10:24.509 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RepairStructure(bool validate)
14:10:24.511 [Info] Writing prefixes
14:10:24.513 [Info] Writing postfixes
14:10:24.520 [Info] Patching void BattleTech.UI.MechLabLocationWidget::StripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabLocationWidget_StripEquipment_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

14:10:24.522 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::StripEquipment()
14:10:24.524 [Info] Writing prefixes
14:10:24.529 [Info] Patching void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.SimGameState_ML_InstallComponent_Patch::Postfix(BattleTech.WorkOrderEntry_InstallComponent order, BattleTech.SimGameState __instance)

14:10:24.532 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_InstallComponent(BattleTech.WorkOrderEntry_InstallComponent order)
14:10:24.534 [Info] Writing postfixes
14:10:24.546 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText headerLabel)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.549 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
14:10:24.551 [Info] Transpiling void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
14:10:24.554 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.557 [Info] Writing postfixes
14:10:24.565 [Info] Patching void BattleTech.BaseComponentRef::RefreshComponentDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.BaseComponentRef_RefreshComponentDef::Postfix(BattleTech.BaseComponentRef __instance)

14:10:24.568 [Info] Running ILHook manipulator on void BattleTech.BaseComponentRef::RefreshComponentDef()
14:10:24.570 [Info] Writing postfixes
14:10:24.582 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

14:10:24.584 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
14:10:24.586 [Info] Writing postfixes
14:10:24.593 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanEquipItem_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

14:10:24.596 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanEquipItem(BattleTech.UI.InventoryItemElement_NotListView item, bool validDropOnly)
14:10:24.599 [Info] Writing prefixes
14:10:24.605 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanUseAmmo_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

14:10:24.607 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
14:10:24.609 [Info] Writing prefixes
14:10:24.615 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SimGameState_AddMechPart_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.617 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
14:10:24.620 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
14:10:24.627 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.632 [Info] Writing prefixes
14:10:24.639 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SimGameState_ReadyMech_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.642 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
14:10:24.644 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
14:10:24.652 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.656 [Info] Writing prefixes
14:10:24.663 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleDamagedAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleDamagedAlert::Postfix(UnityEngine.GameObject ___damagedAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.666 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleDamagedAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.668 [Info] Writing postfixes
14:10:24.672 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleGenericAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleGenericAlert::Postfix(UnityEngine.GameObject ___genericAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.675 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleGenericAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.678 [Info] Writing postfixes
14:10:24.683 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleInventoryAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleInventoryAlert::Postfix(UnityEngine.GameObject ___inventoryAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.685 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleInventoryAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.688 [Info] Writing postfixes
14:10:24.692 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleMissingWeaponAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleMissingWeaponAlert::Postfix(UnityEngine.GameObject ___missingWeaponAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.694 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleMissingWeaponAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.696 [Info] Writing postfixes
14:10:24.701 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleNoAmmoAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleNoAmmoAlert::Postfix(UnityEngine.GameObject ___noAmmoAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.703 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleNoAmmoAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.706 [Info] Writing postfixes
14:10:24.710 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleDestroyedAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleDestroyedAlert::Postfix(UnityEngine.GameObject ___destroyedAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.712 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleDestroyedAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.714 [Info] Writing postfixes
14:10:24.718 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleOverweightAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleOverweightAlert::Postfix(UnityEngine.GameObject ___overweightAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.721 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleOverweightAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.723 [Info] Writing postfixes
14:10:24.727 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleUnderweightAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleUnderweightAlert::Postfix(UnityEngine.GameObject ___underweightAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.730 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleUnderweightAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.732 [Info] Writing postfixes
14:10:24.737 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::ToggleUnneededAmmoAlert(System.Collections.Generic.List<Localize.Text> errors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.Patches.MechLabMechInfoWidget_ToggleUnneededAmmoAlert::Postfix(UnityEngine.GameObject ___unneededAmmoAlert, System.Collections.Generic.List<Localize.Text> errors)

14:10:24.739 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::ToggleUnneededAmmoAlert(System.Collections.Generic.List<Localize.Text> errors)
14:10:24.742 [Info] Writing postfixes
14:10:24.747 [Info] Patching void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Database+DataManager_Clear_Patch::Prefix(Boolean& __runOriginal, bool defs)

14:10:24.749 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::Clear(bool defs, bool images, bool objects, bool assetBundles, bool resetRequests)
14:10:24.751 [Info] Writing prefixes
14:10:24.843 [Info] ### Harmony id=io.github.denadan.CustomFilters, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomFilters.Control::Init(string directory), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomFilters\CustomFilters.dll
### At 2023-05-07 02.10.24
14:10:24.848 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
4 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

14:10:24.851 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:24.853 [Info] Writing prefixes
14:10:24.856 [Info] Writing postfixes
14:10:24.864 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.866 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:24.868 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:24.873 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.876 [Info] Writing prefixes
14:10:24.882 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.InventoryItemElement_NotListView_OnDestroy::Prefix(Boolean& __runOriginal, BattleTech.UI.InventoryItemElement_NotListView __instance)

14:10:24.884 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnDestroy()
14:10:24.886 [Info] Writing prefixes
14:10:24.891 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, bool refreshPositioning)
1 postfixes:
* static void CustomComponents.Patches.MechLabInventoryWidget_ApplyFiltering_Patch::Postfix(BattleTech.UI.MechLabInventoryWidget __instance, float ___mechTonnage, System.Collections.Generic.List<BattleTech.UI.InventoryItemElement_NotListView> ___localInventory)

14:10:24.893 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplyFiltering(bool refreshPositioning)
14:10:24.896 [Info] Writing prefixes
14:10:24.898 [Info] Writing postfixes
14:10:24.905 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.MechLabInventoryWidget_ApplySorting_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ApplySorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

14:10:24.908 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ApplySorting(bool refreshPositioning)
14:10:24.910 [Info] Writing prefixes
14:10:24.915 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ClearInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_ClearInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

14:10:24.917 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ClearInventory()
14:10:24.920 [Info] Writing prefixes
14:10:24.926 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnAddItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

14:10:24.928 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:24.930 [Info] Writing prefixes
14:10:24.939 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnItemGrab::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

14:10:24.941 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
14:10:24.943 [Info] Writing prefixes
14:10:24.947 [Info] Patching virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_OnRemoveItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

14:10:24.950 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabInventoryWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:24.952 [Info] Writing prefixes
14:10:24.958 [Info] Patching bool BattleTech.UI.MechLabInventoryWidget::RemoveItemData(BattleTech.UI.ListElementController_BASE_NotListView itemData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabInventoryWidget_RemoveItemData::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, BattleTech.UI.ListElementController_BASE_NotListView itemData)

14:10:24.961 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabInventoryWidget::RemoveItemData(BattleTech.UI.ListElementController_BASE_NotListView itemData)
14:10:24.963 [Info] Writing prefixes
14:10:24.970 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:24.972 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:24.975 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:24.977 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:24.979 [Info] Writing prefixes
14:10:24.986 [Info] Patching void BattleTech.UI.MechLabPanel::PopulateInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_PopulateInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)

14:10:24.989 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::PopulateInventory()
14:10:24.991 [Info] Writing prefixes
14:10:25.002 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshInventorySelectability() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_RefreshInventorySelectability::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)

14:10:25.005 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshInventorySelectability()
14:10:25.008 [Info] Writing prefixes
14:10:25.015 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)

14:10:25.018 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
14:10:25.021 [Info] Writing prefixes
14:10:25.034 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_OnFilterButtonClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

14:10:25.037 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::OnFilterButtonClicked(string button)
14:10:25.040 [Info] Writing prefixes
14:10:25.047 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::RefreshJumpJetOptions(float tonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_RefreshJumpJetOptions::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance, float tonnage)

14:10:25.049 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::RefreshJumpJetOptions(float tonnage)
14:10:25.051 [Info] Writing prefixes
14:10:25.057 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::ResetFilters() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_ResetFilters::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

14:10:25.059 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::ResetFilters()
14:10:25.061 [Info] Writing prefixes
14:10:25.066 [Info] Patching void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabInventoryWidget_SetFilterWeapons::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabInventoryWidget __instance)

14:10:25.068 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabInventoryWidget::SetFiltersWeapons()
14:10:25.070 [Info] Writing prefixes
14:10:25.076 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:25.078 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:25.080 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:25.083 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:25.085 [Info] Writing prefixes
14:10:25.087 [Info] Writing postfixes
14:10:25.092 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

14:10:25.094 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering()
14:10:25.096 [Info] Writing prefixes
14:10:25.102 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::ClearInventory() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ClearInventory::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

14:10:25.104 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::ClearInventory()
14:10:25.106 [Info] Writing prefixes
14:10:25.135 [Info] Patching BattleTech.UI.LanceLoadoutMechItem BattleTech.UI.MechBayMechStorageWidget::CreateLanceItem(BattleTech.MechDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_CreateLanceItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.MechDef def, BattleTech.UI.LanceLoadoutMechItem& __result)

14:10:25.137 [Info] Running ILHook manipulator on BattleTech.UI.LanceLoadoutMechItem BattleTech.UI.MechBayMechStorageWidget::CreateLanceItem(BattleTech.MechDef def)
14:10:25.139 [Info] Writing prefixes
14:10:25.144 [Info] Patching BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetInventoryItem(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_GetInventoryItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, string id, BattleTech.UI.IMechLabDraggableItem& __result)

14:10:25.146 [Info] Running ILHook manipulator on BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetInventoryItem(string id)
14:10:25.148 [Info] Writing prefixes
14:10:25.153 [Info] Patching BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetMechDefByGUID(string GUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_GetMechDefByGUID::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, string GUID, BattleTech.UI.IMechLabDraggableItem& __result)

14:10:25.155 [Info] Running ILHook manipulator on BattleTech.UI.IMechLabDraggableItem BattleTech.UI.MechBayMechStorageWidget::GetMechDefByGUID(string GUID)
14:10:25.157 [Info] Writing prefixes
14:10:25.162 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_InitInventory_Chassis::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters)

14:10:25.164 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.ChassisDef> chassisDefs, bool resetFilters)
14:10:25.166 [Info] Writing prefixes
14:10:25.173 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_InitInventory_MechDefs::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters)

14:10:25.175 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::InitInventory(System.Collections.Generic.List<BattleTech.MechDef> mechDefs, bool resetFilters)
14:10:25.177 [Info] Writing prefixes
14:10:25.183 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnAddItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, Boolean& __result)

14:10:25.185 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:25.187 [Info] Writing prefixes
14:10:25.192 [Info] Patching virtual void BattleTech.UI.MechBayMechStorageWidget::OnButtonClicked(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnButtonClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem& item)

14:10:25.194 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayMechStorageWidget::OnButtonClicked(BattleTech.UI.IMechLabDraggableItem item)
14:10:25.196 [Info] Writing prefixes
14:10:25.200 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnItemGrab::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

14:10:25.203 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnItemGrab(BattleTech.UI.IMechLabDraggableItem item, UnityEngine.EventSystems.PointerEventData eventData)
14:10:25.205 [Info] Writing prefixes
14:10:25.210 [Info] Patching virtual bool BattleTech.UI.MechBayMechStorageWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_OnRemoveItem::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance, BattleTech.UI.IMechLabDraggableItem item, Boolean& __result)

14:10:25.212 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechBayMechStorageWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:25.214 [Info] Writing prefixes
14:10:25.219 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetData(BattleTech.UI.IMechLabDropTarget dropTarget, BattleTech.Data.DataManager dataManager, string itemPrefabName, bool allowRemovingItems, bool useStockFilter, BattleTech.MechLabDraggableItemType inventoryType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetData::Prefix(Boolean& __runOriginal)

14:10:25.222 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetData(BattleTech.UI.IMechLabDropTarget dropTarget, BattleTech.Data.DataManager dataManager, string itemPrefabName, bool allowRemovingItems, bool useStockFilter, BattleTech.MechLabDraggableItemType inventoryType)
14:10:25.224 [Info] Writing prefixes
14:10:25.228 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetSorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)

14:10:25.230 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
14:10:25.232 [Info] Writing prefixes
14:10:25.237 [Info] Patching virtual void UnityEngine.UI.ScrollRect::LateUpdate() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechLabScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)
* static void CustomFilters.MechBayScrolling.Patches.ScrollRect_LateUpdate::Prefix(Boolean& __runOriginal, UnityEngine.UI.ScrollRect __instance)

14:10:25.240 [Info] Running ILHook manipulator on virtual void UnityEngine.UI.ScrollRect::LateUpdate()
14:10:25.242 [Info] Writing prefixes
14:10:25.257 [Info] ### Harmony id=io.kmission.localsettings, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomSettings.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomLocalSettings\CustomLocalSettings.dll
### At 2023-05-07 02.10.25
14:10:25.260 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

14:10:25.262 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
14:10:25.264 [Info] Writing postfixes
14:10:25.275 [Info] Patching virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_ReceiveButtonPress::Postfix(BattleTech.UI.SettingsMenu __instance, String& button, BattleTech.UI.TMProWrapper.LocalizableText& ___currentModuleTitle, BattleTech.UI.ISettingsModule& ____activeModule)

14:10:25.277 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::ReceiveButtonPress(string button)
14:10:25.279 [Info] Writing postfixes
14:10:25.290 [Info] Patching virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.SettingsMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.SettingsMenu __instance)

14:10:25.292 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SettingsMenu::OnAddedToHierarchy()
14:10:25.295 [Info] Writing postfixes
14:10:25.301 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)

14:10:25.304 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
14:10:25.307 [Info] Writing postfixes
14:10:25.322 [Info] ### Harmony id=io.github.denadan.CustomSalvage, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void CustomSalvage.Control::InitNonStatic(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomSalvage\CustomSalvage.dll
### At 2023-05-07 02.10.25
14:10:25.327 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
5 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

14:10:25.329 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:25.332 [Info] Writing prefixes
14:10:25.334 [Info] Writing postfixes
14:10:25.339 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

14:10:25.341 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
14:10:25.343 [Info] Writing postfixes
14:10:25.349 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::Postfix()

14:10:25.352 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
14:10:25.354 [Info] Writing postfixes
14:10:25.358 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::Postfix()

14:10:25.361 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
14:10:25.363 [Info] Writing postfixes
14:10:25.369 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

14:10:25.372 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:25.374 [Info] Writing prefixes
14:10:25.388 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

14:10:25.391 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
14:10:25.393 [Info] Writing prefixes
14:10:25.401 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnScrapClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)

14:10:25.404 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnScrapClicked()
14:10:25.407 [Info] Writing prefixes
14:10:25.413 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisInfoWidget_SetDescriptions::Postfix(BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, TMPro.TextMeshProUGUI ___mechDetails, BattleTech.UI.Tooltips.HBSTooltip ___chassisStorageTooltip, UnityEngine.GameObject ___readyBtnObj, UnityEngine.GameObject ___partsCountObj, BattleTech.UI.MechUnitElementWidget ___mechIcon, TMPro.TextMeshProUGUI ___partsCountText)

14:10:25.415 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::SetDescriptions()
14:10:25.417 [Info] Writing postfixes
14:10:25.424 [Info] Patching void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.MechBayChassisUnitElement_SetData::Postfix(BattleTech.UI.MechBayChassisUnitElement __instance, UnityEngine.UI.Image ___mechImage, TMPro.TextMeshProUGUI ___partsText, TMPro.TextMeshProUGUI ___partsLabelText, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)

14:10:25.426 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.ChassisDef chassisDef, BattleTech.Data.DataManager dataManager, int partsCount, int partsMax, int chassisQuantity)
14:10:25.429 [Info] Writing postfixes
14:10:25.437 [Info] Patching void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomSalvage.SGEventPanel_SetEvent::Postfix(BattleTech.SimGameEventDef evt, BattleTech.UI.SGEventPanel __instance, TMPro.TextMeshProUGUI ___eventDescription, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___optionParent, System.Collections.Generic.List<BattleTech.UI.SGEventOption> ___optionsList)

14:10:25.440 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::SetEvent(BattleTech.SimGameEventDef evt, BattleTech.EventScope scope, BattleTech.SimGameEventTracker tracker, BattleTech.UI.SimGameInterruptManager+EventPopupEntry entry)
14:10:25.442 [Info] Writing postfixes
14:10:25.456 [Info] Patching void BattleTech.SimGameState::AddMechPart(string id) with 2 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.SimGameState_AddMechPart::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance, string id)
* static void CustomComponents.Patches.SimGameState_AddMechPart_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:25.459 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechPart(string id)
14:10:25.460 [Info] Transpiling void BattleTech.SimGameState::AddMechPart(string id)
14:10:25.463 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_AddMechPart_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:25.466 [Info] Writing prefixes
14:10:25.472 [Info] Patching System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomSalvage.SimGameState_GetAllInventoryMechDefs::Prefix(Boolean& __runOriginal, bool showMechParts, System.Collections.Generic.List`1[[BattleTech.ChassisDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.SimGameState __instance)

14:10:25.475 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ChassisDef> BattleTech.SimGameState::GetAllInventoryMechDefs(bool showMechParts)
14:10:25.477 [Info] Writing prefixes
14:10:25.495 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.498 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

14:10:25.500 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
14:10:25.502 [Info] Writing prefixes
14:10:25.507 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.510 [Info] Patching bool BattleTech.SimGameState::DismissPilot(string pilotID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderBackgrounds.Mod+SimGameState_DismissPilot_Patch::Prefix(string pilotID, BattleTech.SimGameState __instance)

14:10:25.513 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::DismissPilot(string pilotID)
14:10:25.515 [Info] Writing prefixes
14:10:25.529 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.532 [Info] Patching void BattleTech.UI.SGHeaderWidget::RefreshCountdown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void HideCareerModeDays.Patches.SGHeaderWidget_RefreshCountdown_Patch::Postfix(BattleTech.UI.SGHeaderWidget __instance)

14:10:25.534 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::RefreshCountdown()
14:10:25.536 [Info] Writing postfixes
14:10:25.558 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.570 [Info] Patching void BattleTech.SimGameState::InitializeDataFromDefs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SimGameState_InitializeDataFromDefs_Patch::Prefix(BattleTech.SimGameState __instance)

14:10:25.573 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitializeDataFromDefs()
14:10:25.575 [Info] Writing prefixes
14:10:25.656 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.658 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)

14:10:25.661 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
14:10:25.664 [Info] Writing prefixes
14:10:25.669 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.672 [Info] Patching void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Prefix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState& ___simState)
1 postfixes:
* static void InnerSphereMap.SGCaptainsQuartersReputationScreen_RefreshWidgets::Postfix(BattleTech.UI.SGCaptainsQuartersReputationScreen& __instance, System.Collections.Generic.List<BattleTech.UI.SGFactionReputationWidget> ___FactionPanelWidgets, BattleTech.SimGameState ___simState)

14:10:25.675 [Info] Running ILHook manipulator on void BattleTech.UI.SGCaptainsQuartersReputationScreen::RefreshWidgets()
14:10:25.677 [Info] Writing prefixes
14:10:25.679 [Info] Writing postfixes
14:10:25.687 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.690 [Info] Patching void BattleTech.StarmapBorders::OnWillRenderObject() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapBorders_OnWillRenderObject::Prefix(BattleTech.StarmapBorders __instance)

14:10:25.692 [Info] Running ILHook manipulator on void BattleTech.StarmapBorders::OnWillRenderObject()
14:10:25.695 [Info] Writing prefixes
14:10:25.700 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.704 [Info] Patching void BattleTech.StarmapRenderer::RefreshSystems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_RefreshSystems::Prefix(BattleTech.StarmapRenderer __instance)
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_RefreshSystems::Postfix(BattleTech.StarmapRenderer __instance)

14:10:25.706 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::RefreshSystems()
14:10:25.709 [Info] Writing prefixes
14:10:25.711 [Info] Writing postfixes
14:10:25.719 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 25 ms
14:10:25.722 [Info] Patching static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_NormalizeToMapSpace_Patch::Prefix(BattleTech.StarmapRenderer __instance, UnityEngine.Vector2 normalizedPos, UnityEngine.Vector3& __result)

14:10:25.724 [Info] Running ILHook manipulator on static UnityEngine.Vector3 BattleTech.StarmapRenderer::NormalizeToMapSpace(UnityEngine.Vector2 normalizedPos)
14:10:25.726 [Info] Writing prefixes
14:10:25.733 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
14:10:25.737 [Info] Patching void BattleTech.StarmapRenderer::Update() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch::Postfix(BattleTech.StarmapRenderer __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:25.740 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::Update()
14:10:25.742 [Info] Transpiling void BattleTech.StarmapRenderer::Update()
14:10:25.750 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<InnerSphereMap.StarmapRenderer_Update_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:25.781 [Info] Writing postfixes
14:10:25.792 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
14:10:25.796 [Info] Patching void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapRenderer_PlaceLogo_Patch::Postfix(BattleTech.StarmapRenderer __instance, BattleTech.FactionValue faction, UnityEngine.GameObject logo)

14:10:25.799 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::PlaceLogo(BattleTech.FactionValue faction, UnityEngine.GameObject logo)
14:10:25.801 [Info] Writing postfixes
14:10:25.808 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
14:10:25.810 [Info] Patching void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGSystemViewPopulator_UpdateRoutedSystem_Patch::Prefix(BattleTech.UI.SGNavigationActiveFactionWidget __instance, System.Collections.Generic.List<string> activeFactions, string OwnerFaction, System.Collections.Generic.List<BattleTech.UI.HBSButton> ___FactionButtons, System.Collections.Generic.List<UnityEngine.UI.Image> ___FactionIcons, BattleTech.SimGameState ___simState)

14:10:25.813 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationActiveFactionWidget::ActivateFactions(System.Collections.Generic.List<string> activeFactions, string OwnerFaction)
14:10:25.815 [Info] Writing prefixes
14:10:25.820 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 28 ms
14:10:25.823 [Info] Patching void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.StarmapRenderer_Update_Patch+StarmapSystemRenderer_SetBlackMarket_Patch::Prefix(BattleTech.StarmapSystemRenderer __instance, Boolean& state)

14:10:25.825 [Info] Running ILHook manipulator on void BattleTech.StarmapSystemRenderer::SetBlackMarket(bool state)
14:10:25.827 [Info] Writing prefixes
14:10:25.832 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:25.835 [Info] PrefixWrapper being created for: CommanderBackgrounds::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
14:10:25.844 [Info] PrefixWrapper created: HXI︳1︳::CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
14:10:25.847 [Info] PrefixWrapper being created for: InnerSphereMap::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
14:10:25.850 [Info] PrefixWrapper created: HXI︳2︳::InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix
14:10:25.852 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:25.855 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)

14:10:25.857 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
14:10:25.859 [Info] Writing prefixes
14:10:25.951 [Info] ### Harmony id=us.frostraptor.IRBTModUtils, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void IRBTModUtils.Mod::Init(string modDirectory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\IRBTModUtils\IRBTModUtils.dll
### At 2023-05-07 02.10.25
14:10:25.955 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:25.958 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
14:10:25.960 [Info] Writing postfixes
14:10:25.964 [Info] Patching virtual float BattleTech.Mech::get_MaxBackwardDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxBackwardDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:25.967 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxBackwardDistance()
14:10:25.969 [Info] Writing postfixes
14:10:25.973 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:25.975 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
14:10:25.977 [Info] Writing postfixes
14:10:25.981 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

14:10:25.983 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:25.985 [Info] Writing postfixes
14:10:25.990 [Info] Patching void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRBTModUtils.Patches.AAR_ObjectiveListItem__Init::Postfix(BattleTech.UI.AAR_ObjectiveListItem __instance, BattleTech.MissionObjectiveResult missionObjectiveResult)

14:10:25.993 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_ObjectiveListItem::Init(BattleTech.MissionObjectiveResult missionObjectiveResult, BattleTech.SimGameState theSim, BattleTech.Contract contract)
14:10:25.995 [Info] Writing postfixes
14:10:26.003 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)

14:10:26.006 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
14:10:26.008 [Info] Writing postfixes
14:10:26.025 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()

14:10:26.027 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:26.029 [Info] Writing prefixes
14:10:26.069 [Info] Patching void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_SubscribeToMessages::Postfix(BattleTech.UI.CombatHUD __instance, bool shouldAdd)

14:10:26.072 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::SubscribeToMessages(bool shouldAdd)
14:10:26.075 [Info] Writing postfixes
14:10:26.086 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
1 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

14:10:26.089 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:26.092 [Info] Writing prefixes
14:10:26.095 [Info] Writing postfixes
14:10:26.108 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()

14:10:26.111 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
14:10:26.113 [Info] Writing prefixes
14:10:26.128 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.130 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
1 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()

14:10:26.133 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
14:10:26.135 [Info] Writing prefixes
14:10:26.138 [Info] Writing postfixes
14:10:26.164 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.167 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::InitializeData(BattleTech.UI.MissionResults mission) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_SalvageScreen_InitializeData::Postfix(BattleTech.UI.AAR_SalvageScreen __instance)

14:10:26.169 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::InitializeData(BattleTech.UI.MissionResults mission)
14:10:26.171 [Info] Writing postfixes
14:10:26.177 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.180 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_CalculateAndAddAvailableSalvage::Postfix(BattleTech.UI.AAR_SalvageScreen __instance, System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> ___AllSalvageControllers)

14:10:26.182 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage()
14:10:26.184 [Info] Writing postfixes
14:10:26.189 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.192 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::OnCompleted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.AAR_SalvageScreen_OnCompleted_storage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance)

14:10:26.194 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::OnCompleted()
14:10:26.197 [Info] Writing prefixes
14:10:26.202 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.206 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked_Storage::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

14:10:26.208 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked()
14:10:26.210 [Info] Writing postfixes
14:10:26.215 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.218 [Info] Patching virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnPointerEnter::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

14:10:26.220 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
14:10:26.223 [Info] Writing postfixes
14:10:26.227 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.230 [Info] Patching virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnPointerExit::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

14:10:26.232 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryItemElement_NotListView::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
14:10:26.234 [Info] Writing postfixes
14:10:26.238 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.242 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)

14:10:26.245 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:26.247 [Info] Writing prefixes
14:10:26.261 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.265 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

14:10:26.268 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:26.270 [Info] Writing prefixes
14:10:26.301 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.304 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.ListElementController_SalvageMechPart_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, BattleTech.UI.InventoryItemElement_NotListView theWidget, BattleTech.MechDef ___mechDef, BattleTech.SalvageDef ___salvageDef)

14:10:26.306 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageMechPart_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:26.308 [Info] Writing postfixes
14:10:26.314 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.317 [Info] Patching void BattleTech.Contract::AddToFinalSalvage(BattleTech.SalvageDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_AddToFinalSalvage::Prefix(BattleTech.Contract __instance, BattleTech.SalvageDef& def)

14:10:26.319 [Info] Running ILHook manipulator on void BattleTech.Contract::AddToFinalSalvage(BattleTech.SalvageDef def)
14:10:26.321 [Info] Writing prefixes
14:10:26.325 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.328 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool LootMagnet.AAR_SalvageScreen_CalculateAndAddAvailableSalvage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance, BattleTech.Contract ___contract, Int32& ___totalSalvageMadeAvailable)
1 postfixes:
* static void LootMagnet.AAR_CalculateAndAddAvailableSalvage::Postfix(BattleTech.UI.AAR_SalvageScreen __instance, System.Collections.Generic.List<BattleTech.UI.ListElementController_BASE_NotListView> ___AllSalvageControllers)

14:10:26.331 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::CalculateAndAddAvailableSalvage()
14:10:26.333 [Info] Writing prefixes
14:10:26.336 [Info] Writing postfixes
14:10:26.341 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.343 [Info] Patching void BattleTech.UI.AAR_SalvageChosen::ConvertToFinalState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LootMagnet.AAR_SalvageChosen_ConvertToFinalState::Postfix(BattleTech.UI.AAR_SalvageChosen __instance, BattleTech.UI.TMProWrapper.LocalizableText ___howManyReceivedText, BattleTech.UI.AAR_SalvageScreen ___parent, BattleTech.SimGameState ___simState, BattleTech.Contract ___contract)

14:10:26.346 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageChosen::ConvertToFinalState()
14:10:26.348 [Info] Writing postfixes
14:10:26.352 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.354 [Info] Patching void BattleTech.UI.AAR_SalvageScreen::OnCompleted() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void LootMagnet.AAR_SalvageScreen_OnCompleted_storage::Prefix(BattleTech.UI.AAR_SalvageScreen __instance)
* static void LootMagnet.AAR_SalvageScreen_OnCompleted::Prefix()

14:10:26.356 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SalvageScreen::OnCompleted()
14:10:26.358 [Info] Writing prefixes
14:10:26.362 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.365 [Info] Patching void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked_Storage::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)
* static void LootMagnet.InventoryItemElement_NotListView_OnButtonClicked::Postfix(BattleTech.UI.InventoryItemElement_NotListView __instance)

14:10:26.367 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement_NotListView::OnButtonClicked()
14:10:26.369 [Info] Writing postfixes
14:10:26.426 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.431 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:26.433 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:26.435 [Info] Writing postfixes
14:10:26.442 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.445 [Info] Patching bool BattleTech.AbstractActor::get_HasBreachingShotAbility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_HasBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

14:10:26.447 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_HasBreachingShotAbility()
14:10:26.449 [Info] Writing postfixes
14:10:26.453 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.455 [Info] Patching bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_IsUsingBreachingShotAbility::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

14:10:26.457 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsUsingBreachingShotAbility(int numWeapons)
14:10:26.459 [Info] Writing postfixes
14:10:26.463 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.465 [Info] Patching virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AbstractActor_AddToTeam::Postfix(BattleTech.AbstractActor __instance)

14:10:26.468 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::AddToTeam(BattleTech.Team team)
14:10:26.470 [Info] Writing postfixes
14:10:26.475 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.478 [Info] Patching bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.AttackSequence_IsBreachingShot::Postfix(BattleTech.AttackDirector+AttackSequence __instance, Boolean& __result)

14:10:26.481 [Info] Running ILHook manipulator on bool BattleTech.AttackDirector+AttackSequence::get_IsBreachingShot()
14:10:26.483 [Info] Writing postfixes
14:10:26.490 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.494 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

14:10:26.497 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:26.499 [Info] Writing prefixes
14:10:26.501 [Info] Writing postfixes
14:10:26.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.517 [Info] Patching void BattleTech.UI.MechDetails::SetDescriptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechDetails_SetDescriptions::Postfix(BattleTech.UI.MechDetails __instance)

14:10:26.519 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetDescriptions()
14:10:26.522 [Info] Writing postfixes
14:10:26.527 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.529 [Info] Patching void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.MechLabStockInfoPopup_StockMechDefLoaded::Postfix(BattleTech.UI.MechLabStockInfoPopup __instance, BattleTech.MechDef def, BattleTech.UI.TMProWrapper.LocalizableText ___descriptionText)

14:10:26.532 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStockInfoPopup::StockMechDefLoaded(string id, BattleTech.MechDef def)
14:10:26.534 [Info] Writing postfixes
14:10:26.539 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.544 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)

14:10:26.547 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
14:10:26.550 [Info] Writing postfixes
14:10:26.572 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.575 [Info] Patching void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SGBarracksServicePanel_SetPilot::Postfix(BattleTech.UI.SGBarracksServicePanel __instance, BattleTech.Pilot p)

14:10:26.577 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksServicePanel::SetPilot(BattleTech.Pilot p)
14:10:26.579 [Info] Writing postfixes
14:10:26.588 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.598 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
2 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:26.601 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:26.602 [Info] Writing prefixes
14:10:26.604 [Info] Writing postfixes
14:10:26.632 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.636 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

14:10:26.638 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
14:10:26.641 [Info] Writing postfixes
14:10:26.663 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 48 ms
14:10:26.667 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

14:10:26.669 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
14:10:26.672 [Info] Writing postfixes
14:10:26.683 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:26.689 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)

14:10:26.692 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
14:10:26.694 [Info] Writing prefixes
14:10:26.731 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:26.735 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

14:10:26.738 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
14:10:26.740 [Info] Writing postfixes
14:10:26.763 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:26.766 [Info] Patching SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_GetPilotRoninIcon::Postfix(BattleTech.SimGameState __instance, BattleTech.Pilot p, SVGImporter.SVGAsset& __result)

14:10:26.768 [Info] Running ILHook manipulator on SVGImporter.SVGAsset BattleTech.SimGameState::GetPilotRoninIcon(BattleTech.Pilot p)
14:10:26.770 [Info] Writing postfixes
14:10:26.775 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:26.810 [Info] Patching void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechAffinity.Patches.SimGameState_SetupRoninTooltip::Postfix(BattleTech.SimGameState __instance, BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)

14:10:26.813 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetupRoninTooltip(BattleTech.UI.Tooltips.HBSTooltip RoninTooltip, BattleTech.Pilot pilot)
14:10:26.815 [Info] Writing postfixes
14:10:26.822 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:26.825 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)

14:10:26.827 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
14:10:26.830 [Info] Writing postfixes
14:10:26.911 [Info] ### Harmony id=MechEngineer.NullableLogger, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Control::Start(string modDirectory, string json), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.26
14:10:26.914 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
6 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

14:10:26.917 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:26.919 [Info] Writing prefixes
14:10:26.921 [Info] Writing postfixes
14:10:26.934 [Info] ### Harmony id=MechEngineer.Features.OrderedStatusEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OrderedStatusEffects.OrderedStatusEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.26
14:10:26.937 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

14:10:26.940 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
14:10:26.942 [Info] Writing postfixes
14:10:26.951 [Info] ### Harmony id=MechEngineer.Features.OverrideTonnage, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideTonnage.OverrideTonnageSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.26
14:10:26.955 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechLabMechInfoWidget_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel ___mechLab, Single& ___currentTonnage, TMPro.TextMeshProUGUI ___totalTonnage, BattleTech.UI.UIColorRefTracker ___totalTonnageColor, TMPro.TextMeshProUGUI ___remainingTonnage, BattleTech.UI.UIColorRefTracker ___remainingTonnageColor)

14:10:26.957 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::CalculateTonnage()
14:10:26.959 [Info] Writing prefixes
14:10:26.967 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(Single& currentValue)

14:10:26.969 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:26.971 [Info] Writing prefixes
14:10:26.974 [Info] Writing postfixes
14:10:26.979 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:26.982 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
14:10:26.984 [Info] Transpiling static void BattleTech.MechValidationRules::ValidateMechTonnage(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
14:10:26.986 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.OverrideTonnage.Patches.MechValidationRules_ValidateMechTonnage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:26.996 [Info] ### Harmony id=MechEngineer.Features.CustomCapacities, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CustomCapacities.CustomCapacitiesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.26
14:10:27.000 [Info] Patching void BattleTech.UI.MechLabMechInfoWidget::RefreshInfo(bool resetOriginalValues) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.CustomCapacities.Patches.MechLabMechInfoWidget_RefreshInfo_Patch::Postfix(BattleTech.UI.MechLabPanel ___mechLab, BattleTech.UI.TMProWrapper.LocalizableText ___remainingTonnage)

14:10:27.002 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabMechInfoWidget::RefreshInfo(bool resetOriginalValues)
14:10:27.004 [Info] Writing postfixes
14:10:27.020 [Info] ### Harmony id=MechEngineer.Features.HeatSinkCapacityStat, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.HeatSinkCapacityStat.HeatSinkCapacityStatSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.024 [Info] Patching void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.CombatHUD_GrantBonusHeatSinksAndUnhittable_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.026 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced)
14:10:27.028 [Info] Transpiling void BattleTech.UI.CombatHUD::GrantBonusHeatSinksAndUnhittable(bool forced)
14:10:27.032 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.CombatHUD_GrantBonusHeatSinksAndUnhittable_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.038 [Info] Patching virtual void BattleTech.Mech::CancelCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.041 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::CancelCreatedEffects()
14:10:27.043 [Info] Transpiling virtual void BattleTech.Mech::CancelCreatedEffects()
14:10:27.047 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_CancelCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.052 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Boolean& __runOriginal, Single& __result)

14:10:27.054 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
14:10:27.057 [Info] Writing prefixes
14:10:27.064 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

14:10:27.067 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:27.070 [Info] Writing postfixes
14:10:27.075 [Info] Patching virtual void BattleTech.Mech::RestartCreatedEffects() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.077 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::RestartCreatedEffects()
14:10:27.079 [Info] Transpiling virtual void BattleTech.Mech::RestartCreatedEffects()
14:10:27.083 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_RestartCreatedEffects_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.091 [Info] ### Harmony id=MechEngineer.Features.Engines, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Engines.EngineSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.095 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.098 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:27.100 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:27.103 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.107 [Info] Writing prefixes
14:10:27.121 [Info] Patching int BattleTech.Mech::CalcJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_CalcJumpHeat_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, float distJumped, Int32& __result)

14:10:27.124 [Info] Running ILHook manipulator on int BattleTech.Mech::CalcJumpHeat(float distJumped)
14:10:27.126 [Info] Writing prefixes
14:10:27.165 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

14:10:27.168 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:27.171 [Info] Writing prefixes
14:10:27.174 [Info] Writing postfixes
14:10:27.181 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, Single& __result)

14:10:27.184 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
14:10:27.186 [Info] Writing prefixes
14:10:27.200 [Info] ### Harmony id=MechEngineer.Features.MoveMultiplierStat, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.MoveMultiplierStat.MoveMultiplierStatSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.205 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

14:10:27.208 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:27.211 [Info] Writing prefixes
14:10:27.215 [Info] Writing postfixes
14:10:27.221 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:27.224 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
14:10:27.226 [Info] Writing postfixes
14:10:27.238 [Info] ### Harmony id=MechEngineer.Features.CompressFloatieMessages, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CompressFloatieMessages.CompressFloatieMessagesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.242 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)

14:10:27.244 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
14:10:27.246 [Info] Writing prefixes
14:10:27.255 [Info] ### Harmony id=MechEngineer.Features.DamageIgnore, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.DamageIgnore.DamageIgnoreSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.259 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)

14:10:27.261 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.264 [Info] Writing prefixes
14:10:27.275 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)

14:10:27.277 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
14:10:27.279 [Info] Writing prefixes
14:10:27.284 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.287 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:27.289 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:27.295 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.308 [Info] ### Harmony id=MechEngineer.Features.PlaceholderEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.PlaceholderEffects.PlaceholderEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.311 [Info] Patching virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.MechComponent_ApplyPassiveEffectToTarget_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.EffectData& effect)

14:10:27.313 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::ApplyPassiveEffectToTarget(BattleTech.EffectData effect, BattleTech.AbstractActor creator, BattleTech.ICombatant target, string effectID)
14:10:27.316 [Info] Writing prefixes
14:10:27.320 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)

14:10:27.323 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
14:10:27.325 [Info] Writing postfixes
14:10:27.334 [Info] ### Harmony id=MechEngineer.Features.CriticalEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.CriticalEffects.CriticalEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.337 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID)

14:10:27.340 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
14:10:27.342 [Info] Writing prefixes
14:10:27.353 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.EffectManager_GetTargetStatCollections_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.EffectData effectData, BattleTech.ICombatant target)

14:10:27.356 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
14:10:27.358 [Info] Writing prefixes
14:10:27.366 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
1 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.368 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.369 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.373 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.376 [Info] Writing prefixes
14:10:27.377 [Info] Writing postfixes
14:10:27.384 [Info] Patching int BattleTech.MechComponent::get_inventorySize() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_inventorySize_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, Int32& __result)

14:10:27.386 [Info] Running ILHook manipulator on int BattleTech.MechComponent::get_inventorySize()
14:10:27.389 [Info] Writing prefixes
14:10:27.393 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)

14:10:27.396 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
14:10:27.398 [Info] Writing prefixes
14:10:27.404 [Info] Patching void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.407 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
14:10:27.409 [Info] Transpiling void BattleTech.Mech::CheckForCrit(BattleTech.WeaponHitInfo hitInfo, BattleTech.ChassisLocations location, BattleTech.Weapon weapon)
14:10:27.415 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_CheckForCrit_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.427 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.430 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
14:10:27.432 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
14:10:27.435 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.445 [Info] ### Harmony id=MechEngineer.Features.AccuracyEffects, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.AccuracyEffects.AccuracyEffectsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.448 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(Boolean& __runOriginal, String& description)

14:10:27.451 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
14:10:27.452 [Info] Writing prefixes
14:10:27.459 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

14:10:27.462 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:27.465 [Info] Writing prefixes
14:10:27.468 [Info] Writing postfixes
14:10:27.475 [Info] Patching float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.ToHit_GetSelfArmMountedModifier_Patch::Prefix(Boolean& __runOriginal, BattleTech.Weapon weapon, Single& __result)

14:10:27.477 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetSelfArmMountedModifier(BattleTech.Weapon weapon)
14:10:27.480 [Info] Writing prefixes
14:10:27.489 [Info] ### Harmony id=MechEngineer.Features.OverrideDescriptions, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideDescriptions.OverrideDescriptionsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.492 [Info] Patching virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.ListElementController_BASE_NotListView_SetComponentTooltipData_Patch::Postfix(BattleTech.UI.ListElementController_BASE_NotListView __instance)

14:10:27.494 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_BASE_NotListView::SetComponentTooltipData(BattleTech.MechComponentDef componentDef)
14:10:27.497 [Info] Writing postfixes
14:10:27.503 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)

14:10:27.505 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
14:10:27.507 [Info] Writing postfixes
14:10:27.513 [Info] Patching BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_CreateMechComponentItem_Patch::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.MechComponentRef componentRef, BattleTech.UI.MechLabItemSlotElement __result)

14:10:27.516 [Info] Running ILHook manipulator on BattleTech.UI.MechLabItemSlotElement BattleTech.UI.MechLabPanel::CreateMechComponentItem(BattleTech.MechComponentRef componentRef, bool copyComponentRef, BattleTech.ChassisLocations mountedLocation, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.UI.InventoryItemElement_NotListView BuiltFromThisItem)
14:10:27.518 [Info] Writing postfixes
14:10:27.524 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:27.527 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
14:10:27.530 [Info] Writing postfixes
14:10:27.538 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_EquipmentSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Equipment __instance, object data)

14:10:27.540 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Equipment::SetData(object data)
14:10:27.542 [Info] Writing postfixes
14:10:27.550 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)

14:10:27.553 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
14:10:27.555 [Info] Writing postfixes
14:10:27.571 [Info] ### Harmony id=MechEngineer.Features.DynamicSlots, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.DynamicSlots.DynamicSlotsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.574 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerEnter_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance)

14:10:27.576 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
14:10:27.578 [Info] Writing prefixes
14:10:27.581 [Info] Patching virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_OnPointerExit_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabItemSlotElement __instance)

14:10:27.583 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabItemSlotElement::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
14:10:27.585 [Info] Writing prefixes
14:10:27.589 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)

14:10:27.591 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
14:10:27.593 [Info] Writing postfixes
14:10:27.599 [Info] Patching bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabPanel_ValidateLoadout_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:27.601 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::ValidateLoadout(bool fullValidation)
14:10:27.603 [Info] Writing postfixes
14:10:27.613 [Info] ### Harmony id=MechEngineer.Features.ShutdownInjuryProtection, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ShutdownInjuryProtection.ShutdownInjuryProtectionSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.617 [Info] Patching virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, string sourceID, int stackItemID)

14:10:27.619 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID)
14:10:27.622 [Info] Writing prefixes
14:10:27.627 [Info] Patching void BattleTech.MechShutdownSequence::CheckForHeatDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.MechShutdownSequence_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechShutdownSequence __instance)

14:10:27.629 [Info] Running ILHook manipulator on void BattleTech.MechShutdownSequence::CheckForHeatDamage()
14:10:27.631 [Info] Writing prefixes
14:10:27.637 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)

14:10:27.639 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
14:10:27.641 [Info] Writing prefixes
14:10:27.651 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
3 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)

14:10:27.654 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:27.656 [Info] Writing prefixes
14:10:27.660 [Info] Writing postfixes
14:10:27.666 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)

14:10:27.669 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
14:10:27.671 [Info] Writing postfixes
14:10:27.679 [Info] ### Harmony id=MechEngineer.Features.MechLabSlots, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.MechLabSlots.MechLabSlotsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.682 [Info] Patching static BattleTech.ChassisLocations CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::MountedLocation(BattleTech.MechComponentRef componentRef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.CCLanceMechEquipmentList_MountedLocation_Patch::Postfix(BattleTech.MechComponentRef componentRef, BattleTech.ChassisLocations& __result)

14:10:27.685 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::MountedLocation(BattleTech.MechComponentRef componentRef)
14:10:27.687 [Info] Writing postfixes
14:10:27.692 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_Awake_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel)

14:10:27.694 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::Awake()
14:10:27.696 [Info] Writing postfixes
14:10:27.701 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
1 postfixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

14:10:27.703 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
14:10:27.706 [Info] Writing prefixes
14:10:27.708 [Info] Writing postfixes
14:10:27.714 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.716 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:27.718 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:27.720 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.757 [Info] Writing postfixes
14:10:27.762 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData)

14:10:27.765 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnDrop(UnityEngine.EventSystems.PointerEventData eventData)
14:10:27.767 [Info] Writing prefixes
14:10:27.771 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.774 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:27.776 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:27.779 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.782 [Info] Writing postfixes
14:10:27.789 [Info] Patching void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_ShowHighlightFrame_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, bool isOriginalLocation, BattleTech.MechComponentRef& cRef)
* static void CustomComponents.Patches.MechLabLocationWidget_ShowHighlightFrame::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef cRef, bool isOriginalLocation, bool canBeAdded)

14:10:27.791 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::ShowHighlightFrame(BattleTech.MechComponentRef cRef, BattleTech.WeaponDef wDef, bool isOriginalLocation, bool canBeAdded)
14:10:27.793 [Info] Writing prefixes
14:10:27.799 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
2 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.801 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:27.803 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:27.806 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.808 [Info] Writing prefixes
14:10:27.811 [Info] Writing postfixes
14:10:27.818 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:27.820 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
14:10:27.822 [Info] Writing postfixes
14:10:27.828 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_RefreshDropHighlights_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item)

14:10:27.831 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshDropHighlights(BattleTech.UI.IMechLabDraggableItem item)
14:10:27.833 [Info] Writing prefixes
14:10:27.843 [Info] ### Harmony id=MechEngineer.Features.InvalidInventory, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.InvalidInventory.InvalidInventorySettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.847 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.850 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
14:10:27.852 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetCantSaveErrorString()
14:10:27.855 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetCantSaveErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.857 [Info] Writing prefixes
14:10:27.865 [Info] Patching Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.867 [Info] Running ILHook manipulator on Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
14:10:27.868 [Info] Transpiling Localize.Text BattleTech.UI.MechLabPanel::GetNonFieldableErrorString()
14:10:27.871 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.InvalidInventory.Patches.MechLabPanel_GetNonFieldableErrorString_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.874 [Info] Writing prefixes
14:10:27.880 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:27.882 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
14:10:27.884 [Info] Writing postfixes
14:10:27.893 [Info] ### Harmony id=MechEngineer.Features.ComponentExplosions, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ComponentExplosions.ComponentExplosionsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.896 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.899 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.900 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.902 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.910 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
2 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.913 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.915 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:27.917 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.920 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.922 [Info] Writing prefixes
14:10:27.925 [Info] Writing postfixes
14:10:27.931 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)

14:10:27.934 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
14:10:27.936 [Info] Writing prefixes
14:10:27.941 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)

14:10:27.944 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
14:10:27.946 [Info] Writing prefixes
14:10:27.960 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:27.963 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
14:10:27.965 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
14:10:27.969 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:27.981 [Info] ### Harmony id=MechEngineer.Features.ArmorStructureChanges, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ArmorStructureChanges.ArmorStructureChangesSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.27
14:10:27.985 [Info] Patching float BattleTech.Mech::get_ArmorMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ArmorMultiplier_Getter_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:27.987 [Info] Running ILHook manipulator on float BattleTech.Mech::get_ArmorMultiplier()
14:10:27.990 [Info] Writing postfixes
14:10:27.995 [Info] Patching float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxArmor_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:27.998 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxArmor(BattleTech.ArmorLocation location)
14:10:28.000 [Info] Writing postfixes
14:10:28.006 [Info] Patching float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_GetMaxStructure_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:28.008 [Info] Running ILHook manipulator on float BattleTech.Mech::GetMaxStructure(BattleTech.ChassisLocations location)
14:10:28.010 [Info] Writing postfixes
14:10:28.018 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)

14:10:28.021 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
14:10:28.023 [Info] Writing prefixes
14:10:28.051 [Info] Patching float BattleTech.Mech::get_StructureMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_StructureMultiplier_Getter_Patch::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:28.054 [Info] Running ILHook manipulator on float BattleTech.Mech::get_StructureMultiplier()
14:10:28.056 [Info] Writing postfixes
14:10:28.062 [Info] Patching BattleTech.MechDef BattleTech.Mech::ToMechDef() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_ToMechDef_Patch::Postfix(BattleTech.Mech __instance, BattleTech.MechDef __result)

14:10:28.064 [Info] Running ILHook manipulator on BattleTech.MechDef BattleTech.Mech::ToMechDef()
14:10:28.066 [Info] Writing postfixes
14:10:28.079 [Info] ### Harmony id=MechEngineer.Features.ArmorMaximizer, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.ArmorMaximizer.ArmorMaximizerSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.082 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnFrontArmorAdd() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnFrontArmorAdd_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

14:10:28.085 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnFrontArmorAdd()
14:10:28.086 [Info] Writing prefixes
14:10:28.091 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnFrontArmorSubtract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnFrontArmorSubtract_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

14:10:28.093 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnFrontArmorSubtract()
14:10:28.095 [Info] Writing prefixes
14:10:28.100 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnRearArmorAdd() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnRearArmorAdd_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

14:10:28.102 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnRearArmorAdd()
14:10:28.104 [Info] Writing prefixes
14:10:28.109 [Info] Patching void BattleTech.UI.MechLabLocationWidget::OnRearArmorSubtract() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_OnRearArmorSubtract_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance)

14:10:28.111 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::OnRearArmorSubtract()
14:10:28.114 [Info] Writing prefixes
14:10:28.118 [Info] Patching void BattleTech.UI.MechLabLocationWidget::RefreshArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_RefreshArmor_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)

14:10:28.120 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::RefreshArmor()
14:10:28.122 [Info] Writing postfixes
14:10:28.128 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.131 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:28.133 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:28.135 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:28.138 [Info] Writing postfixes
14:10:28.146 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

14:10:28.149 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
14:10:28.151 [Info] Writing prefixes
14:10:28.167 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnStripArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem)

14:10:28.169 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripArmor()
14:10:28.171 [Info] Writing prefixes
14:10:28.181 [Info] ### Harmony id=MechEngineer.Features.HardpointFix, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.HardpointFix.HardpointFixSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.185 [Info] Patching static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Prefix(Boolean& __runOriginal, BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentBlankNames_Patch::Postfix(BattleTech.ChassisLocations location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:28.188 [Info] Running ILHook manipulator on static System.Collections.Generic.List<string> BattleTech.MechHardpointRules::GetComponentBlankNames(System.Collections.Generic.List<string> usedPrefabNames, BattleTech.MechDef mechDef, BattleTech.ChassisLocations location)
14:10:28.190 [Info] Writing prefixes
14:10:28.192 [Info] Writing postfixes
14:10:28.201 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(Boolean& __runOriginal, BattleTech.BaseComponentRef componentRef, String& __result)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)

14:10:28.203 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
14:10:28.205 [Info] Writing prefixes
14:10:28.208 [Info] Writing postfixes
14:10:28.213 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechRepresentationSimGame __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

14:10:28.216 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
14:10:28.217 [Info] Writing prefixes
14:10:28.220 [Info] Writing postfixes
14:10:28.265 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

14:10:28.268 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
14:10:28.270 [Info] Writing prefixes
14:10:28.273 [Info] Writing postfixes
14:10:28.302 [Info] ### Harmony id=MechEngineer.Features.AutoFix, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.AutoFix.AutoFixerSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.305 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

14:10:28.308 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
14:10:28.310 [Info] Writing postfixes
14:10:28.316 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

14:10:28.318 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
14:10:28.321 [Info] Writing postfixes
14:10:28.326 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

14:10:28.328 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
14:10:28.330 [Info] Writing postfixes
14:10:28.335 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

14:10:28.337 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
14:10:28.339 [Info] Writing postfixes
14:10:28.344 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)

14:10:28.346 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
14:10:28.348 [Info] Writing postfixes
14:10:28.356 [Info] ### Harmony id=MechEngineer.Features.Globals, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Globals.GlobalsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.360 [Info] Patching void BattleTech.UI.MechBayPanel::CloseMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_CloseMechBay_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

14:10:28.362 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::CloseMechBay()
14:10:28.364 [Info] Writing postfixes
14:10:28.368 [Info] Patching void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Globals.Patches.MechBayPanel_SelectMech_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

14:10:28.371 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::SelectMech(BattleTech.UI.MechBayMechUnitElement mech, bool forceReload)
14:10:28.373 [Info] Writing postfixes
14:10:28.379 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:28.382 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
14:10:28.384 [Info] Writing postfixes
14:10:28.388 [Info] Patching void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.MechLabPanel_LoadMech::Postfix(BattleTech.MechDef newMechDef, BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_LoadMech_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:28.390 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::LoadMech(BattleTech.MechDef newMechDef)
14:10:28.393 [Info] Writing postfixes
14:10:28.402 [Info] ### Harmony id=MechEngineer.Features.TurretMechComponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.TurretMechComponents.TurretMechComponentSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.407 [Info] Patching virtual void BattleTech.Turret::InitStats() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Turret __instance)

14:10:28.410 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
14:10:28.411 [Info] Writing prefixes
14:10:28.427 [Info] ### Harmony id=MechEngineer.Features.TurretLimitedAmmo, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.TurretLimitedAmmo.TurretLimitedAmmoSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.430 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.432 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
14:10:28.434 [Info] Transpiling virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Turret::OnNewRound(int round)
14:10:28.437 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Turret_OnNewRound_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:28.443 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.445 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
14:10:28.447 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
14:10:28.451 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:28.460 [Info] ### Harmony id=MechEngineer.Features.OverrideGhostVFX, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideGhostVFX.OverrideGhostVFXSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.465 [Info] Patching virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.GameRepresentation_PlayVFXAt_Patch::Prefix(Boolean& __runOriginal, string vfxName)

14:10:28.467 [Info] Running ILHook manipulator on virtual UnityEngine.ParticleSystem BattleTech.GameRepresentation::PlayVFXAt(UnityEngine.Transform parentTransform, UnityEngine.Vector3 offset, string vfxName, bool attached, UnityEngine.Vector3 lookAtPos, bool oneShot, float duration)
14:10:28.469 [Info] Writing prefixes
14:10:28.492 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
1 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)

14:10:28.495 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
14:10:28.498 [Info] Writing prefixes
14:10:28.500 [Info] Writing postfixes
14:10:28.514 [Info] ### Harmony id=MechEngineer.Features.OverrideStatTooltips, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.OverrideStatTooltips.OverrideStatTooltipsSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.518 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechBayMechInfoWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

14:10:28.520 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::Awake()
14:10:28.522 [Info] Writing postfixes
14:10:28.528 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)

14:10:28.530 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
14:10:28.533 [Info] Writing postfixes
14:10:28.539 [Info] Patching void BattleTech.UI.MechLabStatBlockWidget::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechLabStatBlockWidget_Awake_Patch::Postfix(BattleTech.UI.LanceStat[] ___mechStats)

14:10:28.542 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabStatBlockWidget::Awake()
14:10:28.544 [Info] Writing postfixes
14:10:28.548 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMeleeStat_Patch::Prefix(Boolean& __runOriginal, Single& currentValue, Single& maxValue)

14:10:28.550 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMeleeStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
14:10:28.552 [Info] Writing prefixes
14:10:28.556 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateChassisMovementStat_Patch::Prefix(Boolean& __runOriginal, Single& currentValue, Single& maxValue)

14:10:28.559 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateChassisMovementStat(BattleTech.ChassisDef chassisDef, Single& currentValue, Single& maxValue)
14:10:28.561 [Info] Writing prefixes
14:10:28.566 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateDurabilityStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:28.568 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateDurabilityStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:28.570 [Info] Writing prefixes
14:10:28.577 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:28.579 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:28.582 [Info] Writing prefixes
14:10:28.588 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:28.590 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:28.592 [Info] Writing prefixes
14:10:28.601 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:28.604 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:28.606 [Info] Writing prefixes
14:10:28.612 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMovementStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:28.615 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMovementStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:28.617 [Info] Writing prefixes
14:10:28.622 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:28.624 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:28.626 [Info] Writing prefixes
14:10:28.632 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)

14:10:28.634 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
14:10:28.636 [Info] Writing postfixes
14:10:28.643 [Info] Patching void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetDurabilityData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:28.646 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetDurabilityData(BattleTech.MechDef def)
14:10:28.648 [Info] Writing postfixes
14:10:28.655 [Info] Patching void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetFirepowerData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:28.658 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetFirepowerData(BattleTech.MechDef def)
14:10:28.660 [Info] Writing postfixes
14:10:28.666 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:28.668 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
14:10:28.670 [Info] Writing postfixes
14:10:28.678 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:28.679 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
14:10:28.682 [Info] Writing postfixes
14:10:28.688 [Info] Patching void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMovementData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:28.691 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMovementData(BattleTech.MechDef def)
14:10:28.693 [Info] Writing postfixes
14:10:28.699 [Info] Patching void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetRangeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:28.701 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetRangeData(BattleTech.MechDef def)
14:10:28.703 [Info] Writing postfixes
14:10:28.709 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)

14:10:28.711 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
14:10:28.713 [Info] Writing postfixes
14:10:28.719 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Stats_SetData_Patch::Postfix(object data, BattleTech.UI.TMProWrapper.LocalizableText ___Title)

14:10:28.722 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Stats::SetData(object data)
14:10:28.724 [Info] Writing postfixes
14:10:28.733 [Info] ### Harmony id=MechEngineer.Features.Performance, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void MechEngineer.Features.Feature<MechEngineer.Features.Performance.PerformanceSettings>+FeatureUtils::PatchCandidates(Type rootType, System.Collections.Generic.List<Type> candidates), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\MechEngineer\MechEngineer.dll
### At 2023-05-07 02.10.28
14:10:28.736 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.738 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
14:10:28.740 [Info] Transpiling virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
14:10:28.746 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:28.752 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)

14:10:28.754 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
14:10:28.756 [Info] Writing prefixes
14:10:28.803 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:28.806 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
14:10:28.807 [Info] Writing postfixes
14:10:28.819 [Info] Patching static BattleTech.Rendering.BTLight+LightStruct[] BattleTech.Rendering.BTLightController::GetLightArray(UnityEngine.Camera camera, bool simGame, UnityEngine.ComputeBuffer cullBuffer, UnityEngine.ComputeBuffer lightMatricies, UnityEngine.Vector4& numLights, bool isPortrait, float maxDistance, float distanceWidth, BattleTech.Rendering.BTLightController+LightSprite[]& outLightSprites, Int32& numSprites) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_GetLightArray_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.Rendering.BTLight> ___lightList)

14:10:28.821 [Info] Running ILHook manipulator on static BattleTech.Rendering.BTLight+LightStruct[] BattleTech.Rendering.BTLightController::GetLightArray(UnityEngine.Camera camera, bool simGame, UnityEngine.ComputeBuffer cullBuffer, UnityEngine.ComputeBuffer lightMatricies, UnityEngine.Vector4& numLights, bool isPortrait, float maxDistance, float distanceWidth, BattleTech.Rendering.BTLightController+LightSprite[]& outLightSprites, Int32& numSprites)
14:10:28.823 [Info] Writing prefixes
14:10:28.842 [Info] Patching static void BattleTech.Rendering.BTLightController::ProcessCommandBufferLegacy(UnityEngine.Rendering.CommandBuffer buf, UnityEngine.Camera camera, bool simGame, bool isPortrait, float maxDistance, float distanceWidth) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_ProcessCommandBufferLegacy_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.Rendering.BTLight> ___lightList)

14:10:28.845 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::ProcessCommandBufferLegacy(UnityEngine.Rendering.CommandBuffer buf, UnityEngine.Camera camera, bool simGame, bool isPortrait, float maxDistance, float distanceWidth)
14:10:28.847 [Info] Writing prefixes
14:10:28.866 [Info] Patching static void BattleTech.Rendering.BTLightController::SortList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLightController_SortList_Patch::Prefix(Boolean& __runOriginal)

14:10:28.869 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::SortList()
14:10:28.871 [Info] Writing prefixes
14:10:28.875 [Info] Patching static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.BTLightController_AddLight_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.877 [Info] Running ILHook manipulator on static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light)
14:10:28.879 [Info] Transpiling static void BattleTech.Rendering.BTLightController::AddLight(BattleTech.Rendering.BTLight light)
14:10:28.882 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.BTLightController_AddLight_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:28.886 [Info] Patching virtual int BattleTech.Rendering.BTLight::CompareTo(object obj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Performance.Patches.BTLight_CompareTo_Patch::Prefix(Boolean& __runOriginal, BattleTech.Rendering.BTLight __instance, object obj, Int32& __result)

14:10:28.889 [Info] Running ILHook manipulator on virtual int BattleTech.Rendering.BTLight::CompareTo(object obj)
14:10:28.891 [Info] Writing prefixes
14:10:28.897 [Info] Patching bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.CombatHUDEvasiveBarPips_TrySetButton_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.899 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color)
14:10:28.901 [Info] Transpiling bool BattleTech.UI.CombatHUDEvasiveBarPips::TrySetButton(int button, BattleTech.UI.ButtonState state, UnityEngine.Color color)
14:10:28.905 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.CombatHUDEvasiveBarPips_TrySetButton_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:28.968 [Info] Patching static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.TweenManager_FilteredOperation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:28.971 [Info] Running ILHook manipulator on static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray)
14:10:28.973 [Info] Transpiling static int DG.Tweening.Core.TweenManager::FilteredOperation(DG.Tweening.Core.Enums.OperationType operationType, DG.Tweening.Core.Enums.FilterType filterType, object id, bool optionalBool, float optionalFloat, object optionalObj, object[] optionalArray)
14:10:28.977 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.TweenManager_FilteredOperation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:29.332 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.335 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

14:10:29.338 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
14:10:29.341 [Info] Writing prefixes
14:10:29.345 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.348 [Info] Patching void BehaviorTree::InitRootNode() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.BehaviourTreeInitRootNodePatch::Postfix(BehaviorTree __instance, BattleTech.AbstractActor ___unit, BehaviorTreeIDEnum ___behaviorTreeIDEnum)

14:10:29.351 [Info] Running ILHook manipulator on void BehaviorTree::InitRootNode()
14:10:29.353 [Info] Writing postfixes
14:10:29.360 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.367 [Info] Patching void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateCompleteLanceConfigurationPrepPatch::Prefix(BattleTech.SimGameState __instance)

14:10:29.369 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CompleteLanceConfigurationPrep(BattleTech.Data.LoadRequest request)
14:10:29.372 [Info] Writing prefixes
14:10:29.408 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.411 [Info] Patching static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideSelectLanceDefFromListPatch::Prefix(Int32& ___MAX_DIFF_DIVERGENCE)

14:10:29.414 [Info] Running ILHook manipulator on static BattleTech.Data.LanceDef_MDD BattleTech.Framework.LanceOverride::SelectLanceDefFromList(System.Collections.Generic.List<BattleTech.Data.LanceDef_MDD> lanceDefRowList, int requestedDifficulty, Int32& curDivergence)
14:10:29.417 [Info] Writing prefixes
14:10:29.424 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.427 [Info] Patching virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.DialogResultPatch::Prefix(BattleTech.Designed.DialogResult __instance, BattleTech.Framework.DialogueRef ___dialogueRef)

14:10:29.430 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.DialogResult::Trigger(MessageCenterMessage inMessage, string triggeringName)
14:10:29.433 [Info] Writing prefixes
14:10:29.440 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.443 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()

14:10:29.445 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:29.448 [Info] Writing prefixes
14:10:29.450 [Info] Writing postfixes
14:10:29.457 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.461 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)

14:10:29.463 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
14:10:29.466 [Info] Writing prefixes
14:10:29.477 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.481 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

14:10:29.483 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
14:10:29.485 [Info] Writing prefixes
14:10:29.487 [Info] Writing postfixes
14:10:29.495 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.498 [Info] Patching void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.ContractOverrideGenerateUnitsPatch::Prefix(BattleTech.Framework.ContractOverride __instance)

14:10:29.501 [Info] Running ILHook manipulator on void BattleTech.Framework.ContractOverride::GenerateUnits(BattleTech.Data.DataManager dataManager, DateTime? currentDate, HBS.Collections.TagSet companyTags)
14:10:29.503 [Info] Writing prefixes
14:10:29.509 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.512 [Info] Patching virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ChunkOverrideCopyPatch::Prefix(BattleTech.Framework.ChunkOverride __instance, BattleTech.Framework.ChunkOverride& __result)

14:10:29.514 [Info] Running ILHook manipulator on virtual BattleTech.Framework.ChunkOverride BattleTech.Framework.ChunkOverride::Copy()
14:10:29.517 [Info] Writing prefixes
14:10:29.522 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.526 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)

14:10:29.528 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
14:10:29.530 [Info] Writing prefixes
14:10:29.545 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.548 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)

14:10:29.550 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
14:10:29.552 [Info] Writing prefixes
14:10:29.554 [Info] Writing postfixes
14:10:29.562 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.565 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)

14:10:29.568 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:29.570 [Info] Writing prefixes
14:10:29.577 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.580 [Info] Patching void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterChunkGameLogicApplyContractOverridePatch::Prefix(BattleTech.EncounterChunkGameLogic __instance, BattleTech.Framework.ChunkOverride chunkOverride)

14:10:29.582 [Info] Running ILHook manipulator on void BattleTech.EncounterChunkGameLogic::ApplyContractOverride(BattleTech.Framework.ChunkOverride chunkOverride, System.Collections.Generic.Dictionary<string, BattleTech.EncounterObjectGameLogic> encounterObjectDictionary)
14:10:29.585 [Info] Writing prefixes
14:10:29.589 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.592 [Info] Patching void BattleTech.EncounterLayerData::OverridePlots() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EncounterLayerDataOverridePlotsPatch::Prefix(BattleTech.EncounterLayerData __instance)

14:10:29.594 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::OverridePlots()
14:10:29.596 [Info] Writing prefixes
14:10:29.601 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.603 [Info] Patching void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Prefix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)
1 postfixes:
* static void MissionControl.Patches.EncounterObjectGameLogicEncounterStartPatch::Postfix(BattleTech.EncounterObjectGameLogic __instance, BattleTech.EncounterObjectStatus status)

14:10:29.606 [Info] Running ILHook manipulator on void BattleTech.EncounterObjectGameLogic::SetState(BattleTech.EncounterObjectStatus status)
14:10:29.608 [Info] Writing prefixes
14:10:29.610 [Info] Writing postfixes
14:10:29.615 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.618 [Info] Patching void ItemRegistry::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ItemRegistryPatch::Postfix(ItemRegistry __instance, System.Collections.Generic.Dictionary<TaggedObjectType, System.Collections.Generic.List<ITaggedItem>> ___itemsByType)

14:10:29.620 [Info] Running ILHook manipulator on void ItemRegistry::.ctor()
14:10:29.622 [Info] Writing postfixes
14:10:29.673 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.676 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)

14:10:29.678 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
14:10:29.680 [Info] Writing prefixes
14:10:29.686 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.690 [Info] Patching BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataExporterPatch::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, MissionControl.DataManager dataManager)

14:10:29.692 [Info] Running ILHook manipulator on BattleTech.MapMetaData BattleTech.MapMetaDataExporter::LoadMapMetaDataV2(BattleTech.MapMetaData existingMapMetaData, string encounterLayerGuid, BattleTech.Data.DataManager dataManager)
14:10:29.694 [Info] Writing prefixes
14:10:29.700 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.702 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

14:10:29.705 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
14:10:29.707 [Info] Writing postfixes
14:10:29.713 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.717 [Info] Patching void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateFilterActiveMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.WeightedList`1[[BattleTech.Data.MapAndEncounters, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)

14:10:29.720 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FilterActiveMaps(BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> activeMaps, System.Collections.Generic.List<BattleTech.Contract> currentContracts)
14:10:29.722 [Info] Writing postfixes
14:10:29.741 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.744 [Info] Patching bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidContractsPatch::Postfix(BattleTech.SimGameState __instance, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)

14:10:29.746 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidContracts(BattleTech.SimGameState+ContractDifficultyRange diffRange, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<BattleTech.Framework.ContractOverride>> potentialContracts)
14:10:29.749 [Info] Writing postfixes
14:10:29.755 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.758 [Info] Patching bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SimGameStateHasValidMapsPatch::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system)

14:10:29.760 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HasValidMaps(BattleTech.StarSystem system, BattleTech.WeightedList<BattleTech.Data.MapAndEncounters> contractMaps)
14:10:29.762 [Info] Writing postfixes
14:10:29.767 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.770 [Info] Patching System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.TeamDelayEnemySpottedVOPatch::Prefix(BattleTech.Team __instance, BattleTech.AbstractActor actor, System.Collections.IEnumerator& __result)

14:10:29.772 [Info] Running ILHook manipulator on System.Collections.IEnumerator BattleTech.Team::DelayEnemySpottedVO(BattleTech.AbstractActor actor)
14:10:29.774 [Info] Writing prefixes
14:10:29.778 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.781 [Info] Patching UnityEngine.Vector3 BattleTech.UnitSpawnPointGameLogic::GetSpawnPosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.UnitSpawnPointGameLogicGetSpawnPositionPatch::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.Vector3& __result, BattleTech.UnitType ___unitType)

14:10:29.783 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UnitSpawnPointGameLogic::GetSpawnPosition()
14:10:29.785 [Info] Writing postfixes
14:10:29.790 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.793 [Info] Patching static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.BehaviourNodeLogAIPatch::Prefix(BehaviorNode __instance, string info)

14:10:29.796 [Info] Running ILHook manipulator on static void BehaviorNode::LogAI(BattleTech.AbstractActor unit, string info, string loggerName)
14:10:29.799 [Info] Writing prefixes
14:10:29.804 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.807 [Info] Patching BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapMetaDataGetCellAtPatch::Prefix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell& __result, BattleTech.Point index, BattleTech.MapTerrainDataCell[,] ___mapTerrainDataCells)

14:10:29.809 [Info] Running ILHook manipulator on BattleTech.MapTerrainDataCell BattleTech.MapMetaData::GetCellAt(BattleTech.Point index)
14:10:29.811 [Info] Writing prefixes
14:10:29.817 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.820 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.UnitSpawnPointGameLogicLoadDropPodPrefabsPatch::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)

14:10:29.822 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::LoadDropPodPrefabs(UnityEngine.ParticleSystem dropPodVfxPrefab, UnityEngine.GameObject dropPodLandedPrefab)
14:10:29.825 [Info] Writing prefixes
14:10:29.830 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.834 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LanceConfiguratorPanelContinueConfirmClickedPatch::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance)

14:10:29.836 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::ContinueConfirmClicked()
14:10:29.838 [Info] Writing postfixes
14:10:29.851 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.853 [Info] Patching void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDRetreatEscMenuOnRetreatConfirmedPatch::Prefix(BattleTech.UI.CombatHUDRetreatEscMenu __instance)

14:10:29.856 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDRetreatEscMenu::OnRetreatConfirmed()
14:10:29.859 [Info] Writing prefixes
14:10:29.867 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.870 [Info] Patching UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.EmotePortraitLoadPortraitPatch::Prefix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)
1 postfixes:
* static void MissionControl.Patches.EmotePortraitLoadPortraitPatch::Postfix(BattleTech.EmotePortrait __instance, UnityEngine.Sprite& __result)

14:10:29.872 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.EmotePortrait::LoadPortrait(bool allowBadPortraits)
14:10:29.875 [Info] Writing prefixes
14:10:29.877 [Info] Writing postfixes
14:10:29.884 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.886 [Info] Patching void BattleTech.EncounterLayerParent::FirstTimeInitialization() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.EncounterLayerParentFirstTimeInitializationPatch::Prefix(BattleTech.EncounterLayerParent __instance)

14:10:29.889 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::FirstTimeInitialization()
14:10:29.891 [Info] Writing prefixes
14:10:29.895 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.898 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)

14:10:29.900 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
14:10:29.902 [Info] Writing prefixes
14:10:29.907 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.910 [Info] Patching void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.CombatHUDMissionEndShowFailurePatch::Prefix(BattleTech.UI.CombatHUDMissionEnd __instance, Boolean& storyMission)

14:10:29.912 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMissionEnd::ShowFailure(bool storyMission)
14:10:29.914 [Info] Writing prefixes
14:10:29.922 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.928 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)

14:10:29.929 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
14:10:29.932 [Info] Writing prefixes
14:10:29.934 [Info] Writing postfixes
14:10:29.951 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.954 [Info] Patching virtual BattleTech.LanceDef BattleTech.LanceDef::Copy() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Prefix(BattleTech.LanceDef __instance)
1 postfixes:
* static void MissionControl.Patches.LanceOverrideCopyPatch::Postfix(BattleTech.LanceDef __instance, BattleTech.LanceDef __result)

14:10:29.956 [Info] Running ILHook manipulator on virtual BattleTech.LanceDef BattleTech.LanceDef::Copy()
14:10:29.958 [Info] Writing prefixes
14:10:29.960 [Info] Writing postfixes
14:10:29.964 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.967 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)

14:10:29.968 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
14:10:29.970 [Info] Writing prefixes
14:10:29.976 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.978 [Info] Patching void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.TurnDirectorOnFirstContactPatch::Postfix(BattleTech.TurnDirector __instance)

14:10:29.980 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnFirstContact(MessageCenterMessage message)
14:10:29.982 [Info] Writing postfixes
14:10:29.985 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:29.988 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.InterpolatorInterpolatePatch::Postfix(String& __result, BattleTech.GameContext context, bool localize)

14:10:29.991 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
14:10:29.993 [Info] Writing postfixes
14:10:29.999 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 49 ms
14:10:30.002 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.PlayerLanceSpawnerGameLogicSpawnUnitsPatch::Postfix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

14:10:30.004 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen)
14:10:30.006 [Info] Writing postfixes
14:10:30.010 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.013 [Info] Patching void BattleTech.UI.SGDialogWidget::Show(string text, BattleTech.GameContext gameContext, BattleTech.CastDef whoIsTalking, BattleTech.CastMemberEmote emotion, BattleTech.UI.SGDialogWidget+OnContinueCallback onContinueCB, BattleTech.UI.SGDialogWidget+OnResponseCallback onResponseCB, System.Collections.Generic.List<BattleTech.SimGameConversationManager+ResponseData> responses, bool endOfConvo, bool changeFromContinueToResponse) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SGDialogWidgetShowPatch::Prefix(BattleTech.UI.SGDialogWidget __instance, String& text, BattleTech.CastDef& whoIsTalking)
1 postfixes:
* static void MissionControl.Patches.SGDialogWidgetShowPatch::Postfix(BattleTech.UI.SGDialogWidget __instance, BattleTech.UI.ConvDialogEntry ___currentEntry)

14:10:30.016 [Info] Running ILHook manipulator on void BattleTech.UI.SGDialogWidget::Show(string text, BattleTech.GameContext gameContext, BattleTech.CastDef whoIsTalking, BattleTech.CastMemberEmote emotion, BattleTech.UI.SGDialogWidget+OnContinueCallback onContinueCB, BattleTech.UI.SGDialogWidget+OnResponseCallback onResponseCB, System.Collections.Generic.List<BattleTech.SimGameConversationManager+ResponseData> responses, bool endOfConvo, bool changeFromContinueToResponse)
14:10:30.017 [Info] Writing prefixes
14:10:30.019 [Info] Writing postfixes
14:10:30.039 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.042 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
2 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)

14:10:30.044 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
14:10:30.046 [Info] Writing prefixes
14:10:30.048 [Info] Writing postfixes
14:10:30.052 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.056 [Info] Patching void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorCheckEnteredCellsForRegionsPatch::Prefix(BattleTech.AbstractActor __instance)

14:10:30.058 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CheckEnteredCellsForRegions(System.Collections.Generic.List<BattleTech.MapEncounterLayerDataCell> occupiedCellList)
14:10:30.060 [Info] Writing prefixes
14:10:30.066 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.070 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)

14:10:30.072 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
14:10:30.074 [Info] Writing prefixes
14:10:30.082 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.085 [Info] Patching virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SmartTriggerResponseEvalutePatch::Prefix(BattleTech.Framework.SmartTriggerResponse __instance)

14:10:30.087 [Info] Running ILHook manipulator on virtual bool BattleTech.Framework.SmartTriggerResponse::Evaluate(MessageCenterMessage message)
14:10:30.089 [Info] Writing prefixes
14:10:30.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.098 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)

14:10:30.100 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
14:10:30.102 [Info] Writing prefixes
14:10:30.119 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.122 [Info] Patching static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LevelLoaderLoadScenePatch::Prefix(BattleTech.LevelLoader __instance, string scene)

14:10:30.125 [Info] Running ILHook manipulator on static bool BattleTech.LevelLoader::LoadScene(string scene, string loadingInterstitialScene)
14:10:30.127 [Info] Writing prefixes
14:10:30.132 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.134 [Info] Patching static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.LoadingCurtainHidePatch::Prefix(BattleTech.UI.LoadingCurtain __instance)

14:10:30.136 [Info] Running ILHook manipulator on static void BattleTech.UI.LoadingCurtain::Hide(bool clearFader)
14:10:30.139 [Info] Writing prefixes
14:10:30.143 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.145 [Info] Patching BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMapPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Data.MapAndEncounters& __result)

14:10:30.148 [Info] Running ILHook manipulator on BattleTech.Data.MapAndEncounters BattleTech.UI.MapModule::get_SelectedMap()
14:10:30.150 [Info] Writing prefixes
14:10:30.154 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.157 [Info] Patching BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.MapModuleSelectedMoodPatch::Prefix(BattleTech.UI.MapModule __instance, BattleTech.Rendering.Mood.BattleMood& __result)

14:10:30.159 [Info] Running ILHook manipulator on BattleTech.Rendering.Mood.BattleMood BattleTech.UI.MapModule::get_SelectedMood()
14:10:30.162 [Info] Writing prefixes
14:10:30.166 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.169 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)

14:10:30.171 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
14:10:30.174 [Info] Writing prefixes
14:10:30.179 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.182 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::LaunchMap() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.SkirmishSettingsBetaLaunchMapPatch::Postfix()

14:10:30.185 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::LaunchMap()
14:10:30.187 [Info] Writing postfixes
14:10:30.240 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.243 [Info] Patching UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.AssetBundleManagerGetAssetFromBundlePatch::Postfix(BattleTech.Assetbundles.AssetBundleManager __instance, string assetName, string bundleName, UnityEngine.GameObject& __result)

14:10:30.245 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Assetbundles.AssetBundleManager::GetAssetFromBundle(string assetName, string bundleName)
14:10:30.247 [Info] Writing postfixes
14:10:30.253 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.256 [Info] Patching void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.GameInstanceLaunchContractFromSavePatch::Postfix(BattleTech.GameInstance __instance, BattleTech.CombatGameState combat)

14:10:30.259 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContractFromSave(BattleTech.CombatGameState combat)
14:10:30.261 [Info] Writing postfixes
14:10:30.266 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.269 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)

14:10:30.271 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
14:10:30.273 [Info] Writing prefixes
14:10:30.277 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.280 [Info] Patching virtual void BattleTech.UI.Briefing::Init() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.BriefingInitPatch::Prefix(BattleTech.UI.Briefing __instance, BattleTech.UI.LoadingSpinnerAndTip_Widget ___spinnerGameTip)

14:10:30.283 [Info] Running ILHook manipulator on virtual void BattleTech.UI.Briefing::Init()
14:10:30.285 [Info] Writing prefixes
14:10:30.298 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.300 [Info] Patching void BattleTech.UI.LoadingSpinnerAndTip_Widget::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MissionControl.Patches.LoadingSpinnerAndTipWidgetInitPatch::Postfix(BattleTech.UI.LoadingSpinnerAndTip_Widget __instance)

14:10:30.302 [Info] Running ILHook manipulator on void BattleTech.UI.LoadingSpinnerAndTip_Widget::Init()
14:10:30.304 [Info] Writing postfixes
14:10:30.308 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 50 ms
14:10:30.311 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateStartContractPatch::Prefix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

14:10:30.313 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
14:10:30.315 [Info] Writing prefixes
14:10:30.328 [Info] ### Harmony id=io.github.mpstark.NavigationComputer, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void NavigationComputer.Main::Init(string modDir, string settings), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\NavigationComputer\NavigationComputer.dll
### At 2023-05-07 02.10.30
14:10:30.332 [Info] Patching virtual void BattleTech.UI.SGNavigationScreen::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.SGNavigationScreen_Update_Patch::Postfix()

14:10:30.334 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationScreen::Update()
14:10:30.336 [Info] Writing postfixes
14:10:30.342 [Info] Patching void BattleTech.UI.SGNavigationScreen::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomController_Navigation myNavRoom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.SGNavigationScreen_Init_Patch::Postfix(BattleTech.UI.SGNavigationScreen __instance, BattleTech.SimGameState simGame)

14:10:30.344 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationScreen::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomController_Navigation myNavRoom)
14:10:30.347 [Info] Writing postfixes
14:10:30.357 [Info] Patching virtual bool BattleTech.UI.SGNavigationScreen::HandleEscapeKeypress() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SGNavigationScreen_HandleEscapeKeypress_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)

14:10:30.360 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SGNavigationScreen::HandleEscapeKeypress()
14:10:30.362 [Info] Writing prefixes
14:10:30.366 [Info] Patching void BattleTech.UI.SGRoomController_Navigation::ExitNavScreen() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SGRoomController_Navigation_ExitNavScreen_Patch::Prefix()

14:10:30.368 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_Navigation::ExitNavScreen()
14:10:30.370 [Info] Writing prefixes
14:10:30.375 [Info] Patching void BattleTech.SimGameState::SetSimRoomState(BattleTech.DropshipLocation state) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.SimGameState_SetSimRoomState_Patch::Prefix(BattleTech.DropshipLocation state)

14:10:30.377 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetSimRoomState(BattleTech.DropshipLocation state)
14:10:30.379 [Info] Writing prefixes
14:10:30.385 [Info] Patching bool BattleTech.Starmap::SetSelectedSystem(BattleTech.StarSystemNode node) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.Starmap_SetSelectedSystem_Patch::Prefix(Boolean& __runOriginal, BattleTech.Starmap __instance, BattleTech.StarSystemNode node)

14:10:30.387 [Info] Running ILHook manipulator on bool BattleTech.Starmap::SetSelectedSystem(BattleTech.StarSystemNode node)
14:10:30.389 [Info] Writing prefixes
14:10:30.393 [Info] Patching BattleTech.StarSystemNode BattleTech.Starmap::GetLocationByUV(UnityEngine.Vector2 pos, UnityEngine.Rect loc, float scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void NavigationComputer.Patches.Starmap_GetLocationByUV_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.StarSystemNode __result)

14:10:30.396 [Info] Running ILHook manipulator on BattleTech.StarSystemNode BattleTech.Starmap::GetLocationByUV(UnityEngine.Vector2 pos, UnityEngine.Rect loc, float scale)
14:10:30.398 [Info] Writing postfixes
14:10:30.403 [Info] Patching void BattleTech.StarmapRenderer::SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer systemRenderer) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NavigationComputer.Patches.StarmapRenderer_SetSelectedSystemRenderer_Patch::Prefix(Boolean& __runOriginal, BattleTech.StarmapRenderer __instance, BattleTech.StarmapSystemRenderer systemRenderer)

14:10:30.406 [Info] Running ILHook manipulator on void BattleTech.StarmapRenderer::SetSelectedSystemRenderer(BattleTech.StarmapSystemRenderer systemRenderer)
14:10:30.408 [Info] Writing prefixes
14:10:30.425 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 52 ms
14:10:30.428 [Info] Patching static void BattleTech.Save.CachedSettings::ClearCachedSettings() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_ClearCachedSettings_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.430 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::ClearCachedSettings()
14:10:30.432 [Info] Transpiling static void BattleTech.Save.CachedSettings::ClearCachedSettings()
14:10:30.435 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_ClearCachedSettings_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.443 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 55 ms
14:10:30.446 [Info] Patching static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SaveSettingsToPlayerPrefs_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.449 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings)
14:10:30.452 [Info] Transpiling static void BattleTech.Save.CachedSettings::SaveSettingsToPlayerPrefs(BattleTech.Save.UserSettings settings)
14:10:30.456 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SaveSettingsToPlayerPrefs_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.467 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 57 ms
14:10:30.470 [Info] Patching static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsGetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.474 [Info] Running ILHook manipulator on static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings()
14:10:30.477 [Info] Transpiling static BattleTech.Save.UserSettings BattleTech.Save.CachedSettings::get_Settings()
14:10:30.481 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsGetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.493 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 59 ms
14:10:30.496 [Info] Patching static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsSetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.499 [Info] Running ILHook manipulator on static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value)
14:10:30.501 [Info] Transpiling static void BattleTech.Save.CachedSettings::set_Settings(BattleTech.Save.UserSettings value)
14:10:30.503 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<NewSaveFolder.Patches.CachedSettings_SettingsSetter_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.508 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 59 ms
14:10:30.511 [Info] Patching void BattleTech.Save.Core.WriteLocation::.ctor(string rootPath, bool usePlatform) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void NewSaveFolder.Patches.WriteLocation_Constructor_Patch::Prefix(String& rootPath, Boolean& usePlatform)

14:10:30.513 [Info] Running ILHook manipulator on void BattleTech.Save.Core.WriteLocation::.ctor(string rootPath, bool usePlatform)
14:10:30.515 [Info] Writing prefixes
14:10:30.526 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 59 ms
14:10:30.529 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)

14:10:30.532 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:30.534 [Info] Writing prefixes
14:10:30.536 [Info] Writing postfixes
14:10:30.549 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 59 ms
14:10:30.552 [Info] Patching virtual void BattleTech.IntroCinematicLauncher::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SkipIntro.Patches.IntroCinematicLauncher_Init_Patch::Postfix()

14:10:30.555 [Info] Running ILHook manipulator on virtual void BattleTech.IntroCinematicLauncher::Init()
14:10:30.557 [Info] Writing postfixes
14:10:30.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 59 ms
14:10:30.566 [Info] Patching void SplashLauncher::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SkipIntro.Patches.SplashLauncher_Update_Patch::Prefix(SplashLauncher __instance)

14:10:30.568 [Info] Running ILHook manipulator on void SplashLauncher::Update()
14:10:30.570 [Info] Writing prefixes
14:10:30.582 [Info] ### Harmony id=ru.kmission.travelinfotooltips, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void TravelInfoTooltips.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\TravelInfoTooltips\TravelInfoTooltips.dll
### At 2023-05-07 02.10.30
14:10:30.585 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::SetupTooltips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TravelInfoTooltips.SGSystemViewPopulator_SetupTooltips::Postfix(BattleTech.UI.SGSystemViewPopulator __instance)

14:10:30.587 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::SetupTooltips()
14:10:30.588 [Info] Writing postfixes
14:10:30.599 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
14:10:30.602 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.604 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
14:10:30.607 [Info] Transpiling void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
14:10:30.610 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.620 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
14:10:30.623 [Info] Patching void BattleTech.PilotDef::SaveGameRequestResource(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.PilotDef_SaveGameRequestResourcesPatch::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.LoadRequest loadRequest)

14:10:30.625 [Info] Running ILHook manipulator on void BattleTech.PilotDef::SaveGameRequestResource(BattleTech.Data.LoadRequest loadRequest)
14:10:30.627 [Info] Writing postfixes
14:10:30.632 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 62 ms
14:10:30.635 [Info] Patching UnityEngine.Texture2D BattleTech.Portraits.RenderedPortraitResult::get_Item(BattleTech.Portraits.PortraitManager+PortraitSizes size) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.RenderedPortraitResult_GetItemPatch::Postfix(BattleTech.Portraits.RenderedPortraitResult __instance, UnityEngine.Texture2D& __result)

14:10:30.638 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.Portraits.RenderedPortraitResult::get_Item(BattleTech.Portraits.PortraitManager+PortraitSizes size)
14:10:30.641 [Info] Writing postfixes
14:10:30.649 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
14:10:30.652 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.654 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
14:10:30.657 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
14:10:30.660 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.667 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
14:10:30.671 [Info] Patching virtual void SGBarracksMWCustomizationPopup::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.SGBarracksMWCustomizationPopup_SavePatch::Postfix(SGBarracksMWCustomizationPopup& __instance)

14:10:30.674 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::Save()
14:10:30.676 [Info] Writing postfixes
14:10:30.686 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 64 ms
14:10:30.689 [Info] Patching void BattleTech.UI.SGCharacterCreationPortraitCustomization::LoadPortraitSettings(BattleTech.Portraits.PortraitSettings portraitSettingsData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderPortraitLoader.SGBarracksMWCustomizationPopup_LoadPortraitSettingsPatch::Prefix(SGBarracksMWCustomizationPopup& __instance, BattleTech.Portraits.PortraitSettings& portraitSettingsData)

14:10:30.691 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationPortraitCustomization::LoadPortraitSettings(BattleTech.Portraits.PortraitSettings portraitSettingsData)
14:10:30.693 [Info] Writing prefixes
14:10:30.701 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 67 ms
14:10:30.704 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:30.706 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
14:10:30.708 [Info] Transpiling void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
14:10:30.711 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:30.717 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 67 ms
14:10:30.720 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::LoadOptions() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderPortraitLoader.SGCharacterCreationNamePanel_LoadOptions_Patch::Prefix()
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationNamePanel_LoadOptions_Patch::Postfix(BattleTech.UI.SGCharacterCreationNamePanel& __instance)

14:10:30.722 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::LoadOptions()
14:10:30.724 [Info] Writing prefixes
14:10:30.726 [Info] Writing postfixes
14:10:30.730 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 67 ms
14:10:30.733 [Info] Patching BattleTech.Gender BattleTech.UI.SGCharacterCreationNamePanel::get_gender() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CommanderPortraitLoader.SGCharacterCreationNamePanel_get_gender_Patch::Prefix(BattleTech.UI.SGCharacterCreationNamePanel& __instance, BattleTech.Gender& __result)
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationNamePanel_get_gender_Patch::Postfix(BattleTech.UI.SGCharacterCreationNamePanel& __instance, BattleTech.Gender& __result)

14:10:30.735 [Info] Running ILHook manipulator on BattleTech.Gender BattleTech.UI.SGCharacterCreationNamePanel::get_gender()
14:10:30.737 [Info] Writing prefixes
14:10:30.739 [Info] Writing postfixes
14:10:30.744 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 67 ms
14:10:30.747 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)

14:10:30.750 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
14:10:30.751 [Info] Writing postfixes
14:10:30.766 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 67 ms
14:10:30.769 [Info] Patching void BattleTech.SpawnableUnit::Init(BattleTech.PilotableActorDef unitDef, BattleTech.PilotDef pilotDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CommanderPortraitLoader.SpawnableUnit_Init_Patch::Prefix(BattleTech.SpawnableUnit& __instance, BattleTech.PilotDef pilotDef)

14:10:30.772 [Info] Running ILHook manipulator on void BattleTech.SpawnableUnit::Init(BattleTech.PilotableActorDef unitDef, BattleTech.PilotDef pilotDef)
14:10:30.775 [Info] Writing prefixes
14:10:30.782 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 67 ms
14:10:30.784 [Info] Patching static BattleTech.VersionManifest BattleTech.VersionManifestUtilities::LoadDefaultManifest() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CommanderPortraitLoader.VersionManifestUtilitiesPatch::Postfix(BattleTech.VersionManifest& __result)

14:10:30.787 [Info] Running ILHook manipulator on static BattleTech.VersionManifest BattleTech.VersionManifestUtilities::LoadDefaultManifest()
14:10:30.789 [Info] Writing postfixes
14:10:31.308 [Info] ### Harmony id=io.mission.customlocalization, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomTranslation.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomLocalization\CustomLocalization.dll
### At 2023-05-07 02.10.31
14:10:31.311 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)

14:10:31.314 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
14:10:31.316 [Info] Writing postfixes
14:10:31.322 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.Interpolator_Interpolate::Prefix(String& template, BattleTech.GameContext context)
1 postfixes:
* static void MissionControl.Patches.InterpolatorInterpolatePatch::Postfix(String& __result, BattleTech.GameContext context, bool localize)

14:10:31.325 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::Interpolate(string template, BattleTech.GameContext context, bool localize)
14:10:31.327 [Info] Writing prefixes
14:10:31.329 [Info] Writing postfixes
14:10:31.335 [Info] Patching virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.CSVStringsProvider_LoadCultureFromReader::Postfix(BattleTech.CSVStringsProvider __instance)

14:10:31.337 [Info] Running ILHook manipulator on virtual void BattleTech.CSVStringsProvider::LoadCultureFromReader(CSVReader reader)
14:10:31.340 [Info] Writing postfixes
14:10:31.350 [Info] Patching void System.IO.StreamReader::.ctor(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.StreamReader_Constructor::Prefix(System.IO.StreamReader __instance, String& path)

14:10:31.352 [Info] Running ILHook manipulator on void System.IO.StreamReader::.ctor(string path)
14:10:31.354 [Info] Writing prefixes
14:10:31.359 [Info] Patching void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.DataLoader_CallHandler::Prefix(String& path, System.Action<string, System.IO.Stream> handler)

14:10:31.361 [Info] Running ILHook manipulator on void HBS.Data.DataLoader::CallHandler(string path, System.Action<string, System.IO.Stream> handler)
14:10:31.364 [Info] Writing prefixes
14:10:31.370 [Info] Patching virtual void Localize.InterpolatedText::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.InterpolatedText_Append::Prefix(String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.InterpolatedText_Append::Postfix(Localize.InterpolatedText __instance)

14:10:31.372 [Info] Running ILHook manipulator on virtual void Localize.InterpolatedText::Append(string text, object[] args)
14:10:31.375 [Info] Writing prefixes
14:10:31.377 [Info] Writing postfixes
14:10:31.384 [Info] Patching virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ShipModuleUpgrade_FromJSON::Postfix(BattleTech.ShipModuleUpgrade __instance, string json)

14:10:31.387 [Info] Running ILHook manipulator on virtual void BattleTech.ShipModuleUpgrade::FromJSON(string json)
14:10:31.389 [Info] Writing postfixes
14:10:31.394 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)

14:10:31.396 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
14:10:31.399 [Info] Writing prefixes
14:10:31.405 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechValidationRulesValidate_ValidateMech_Patch::Postfix(System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> __result, BattleTech.MechValidationLevel validationLevel, BattleTech.MechDef mechDef)
* static void MechEngineer.Features.InvalidInventory.Patches.MechValidationRules_ValidateMechDef_Patch::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomTranslation.MechValidationRules_ValidateMechDef::Postfix(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:31.407 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.MechValidationType, System.Collections.Generic.List<Localize.Text>> BattleTech.MechValidationRules::ValidateMechDef(BattleTech.MechValidationLevel validationLevel, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.WorkOrderEntry_MechLab baseWorkOrder)
14:10:31.410 [Info] Writing postfixes
14:10:31.416 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:31.419 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
14:10:31.420 [Info] Writing postfixes
14:10:31.425 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
1 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)

14:10:31.428 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
14:10:31.430 [Info] Writing prefixes
14:10:31.432 [Info] Writing postfixes
14:10:31.438 [Info] Patching void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Prefix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text& description)
1 postfixes:
* static void CustomTranslation.CombatHUDStatusStackItem_SetDescription::Postfix(BattleTech.UI.CombatHUDStatusStackItem __instance, Localize.Text description, BattleTech.UI.TMProWrapper.LocalizableText ___Text)

14:10:31.441 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusStackItem::SetDescription(Localize.Text description)
14:10:31.443 [Info] Writing prefixes
14:10:31.445 [Info] Writing postfixes
14:10:31.452 [Info] Patching TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.FontLocTable_ConvertFontForCulture::Prefix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)
1 postfixes:
* static void CustomTranslation.FontLocTable_ConvertFontForCulture::Postfix(Localize.FontLocTable __instance, Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont, TMPro.TMP_FontAsset& __result)

14:10:31.455 [Info] Running ILHook manipulator on TMPro.TMP_FontAsset Localize.FontLocTable::ConvertFontForCulture(Localize.Strings+Culture curCulture, TMPro.TMP_FontAsset curFont)
14:10:31.457 [Info] Writing prefixes
14:10:31.459 [Info] Writing postfixes
14:10:31.465 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

14:10:31.467 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
14:10:31.469 [Info] Writing prefixes
14:10:31.475 [Info] Patching void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.FloatieMessage_Constructor::Prefix(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)

14:10:31.477 [Info] Running ILHook manipulator on void BattleTech.FloatieMessage::.ctor(string attackerGuid, string targetGuid, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, float vX, float vY, float vZ)
14:10:31.479 [Info] Writing prefixes
14:10:31.485 [Info] Patching void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatieAnchor_AddFloatie::Prefix(BattleTech.UI.CombatHUDFloatieAnchor __instance, Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)

14:10:31.487 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieAnchor::AddFloatie(Localize.Text text, float fontSize, BattleTech.FloatieMessage+MessageNature nature, UnityEngine.Vector3 worldPos)
14:10:31.490 [Info] Writing prefixes
14:10:31.496 [Info] Patching void BattleTech.UnityGameInstance::Reset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.UnityGameInstance_Reset::Postfix(BattleTech.UnityGameInstance __instance)

14:10:31.499 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::Reset()
14:10:31.501 [Info] Writing postfixes
14:10:31.509 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
3 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

14:10:31.512 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
14:10:31.514 [Info] Writing prefixes
14:10:31.516 [Info] Writing postfixes
14:10:31.521 [Info] Patching void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.ModDefsDatabase_FinishedLoadingMods::Postfix(object __instance)

14:10:31.524 [Info] Running ILHook manipulator on void ModTek.Features.Manifest.BTRL.BetterBTRL::RefreshTypedEntries()
14:10:31.527 [Info] Writing postfixes
14:10:32.026 [Info] Patching void BattleTech.UI.LanguageSelect::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.LanguageSelect_Save::Postfix(BattleTech.UI.LanguageSelect __instance)

14:10:32.028 [Info] Running ILHook manipulator on void BattleTech.UI.LanguageSelect::Save()
14:10:32.031 [Info] Writing postfixes
14:10:32.036 [Info] Patching virtual void Localize.Text::Append(string text, object[] args) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTranslation.Text_Append::Prefix(Localize.Text __instance, String& text, Object[]& args)
1 postfixes:
* static void CustomTranslation.Text_Append::Postfix(Localize.Text __instance)

14:10:32.038 [Info] Running ILHook manipulator on virtual void Localize.Text::Append(string text, object[] args)
14:10:32.041 [Info] Writing prefixes
14:10:32.043 [Info] Writing postfixes
14:10:32.047 [Info] Patching string BattleTech.DescriptionDef::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_UINameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

14:10:32.049 [Info] Running ILHook manipulator on string BattleTech.DescriptionDef::get_UIName()
14:10:32.051 [Info] Writing postfixes
14:10:32.054 [Info] Patching string BattleTech.BaseDescriptionDef::get_Name() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_NameGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

14:10:32.057 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Name()
14:10:32.059 [Info] Writing postfixes
14:10:32.063 [Info] Patching string BattleTech.BaseDescriptionDef::get_Details() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTranslation.BaseDescriptionDef_DetailsGet::Postfix(BattleTech.DescriptionDef __instance, String& __result)

14:10:32.065 [Info] Running ILHook manipulator on string BattleTech.BaseDescriptionDef::get_Details()
14:10:32.067 [Info] Writing postfixes
14:10:32.078 [Info] ### Harmony id=io.kmission.custompilotdecorator, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPilotDecorator.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomPilotDecorator\CustomPilotDecorator.dll
### At 2023-05-07 02.10.32
14:10:32.082 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

14:10:32.084 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
14:10:32.086 [Info] Writing postfixes
14:10:32.092 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:32.095 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:32.097 [Info] Writing postfixes
14:10:32.105 [Info] Patching void BattleTech.UI.SGBarracksRosterSlot::Refresh() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Prefix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon)
2 postfixes:
* static void MechAffinity.Patches.SGBarracksRosterSlot_Refresh_Patch::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.UI.UIColorRefTracker ___pilotTypeBackground, SVGImporter.SVGImage ___roninIcon, BattleTech.UI.Tooltips.HBSTooltip ___RoninTooltip)
* static void CustomPilotDecorator.SGBarracksRosterSlot_Refresh::Postfix(BattleTech.UI.SGBarracksRosterSlot __instance, BattleTech.Pilot& ___pilot, UnityEngine.GameObject& ___AbilitiesObject, System.Collections.Generic.List`1[[SVGImporter.SVGImage, Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___abilities, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___activeAbilityObjs, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___emptyAbilityObjs, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.HBSTooltip, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AbilityReferences, SVGImporter.SVGImage& ___roninIcon, BattleTech.UI.TMProWrapper.LocalizableText& ___callsign)

14:10:32.108 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksRosterSlot::Refresh()
14:10:32.110 [Info] Writing prefixes
14:10:32.112 [Info] Writing postfixes
14:10:32.125 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:32.127 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
14:10:32.129 [Info] Writing postfixes
14:10:32.136 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:32.139 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
14:10:32.141 [Info] Writing postfixes
14:10:32.147 [Info] Patching void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechPilotPortraits_Init::Postfix(BattleTech.UI.LanceMechPilotPortraits __instance, BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)

14:10:32.150 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechPilotPortraits::Init(BattleTech.MechDef mechDef, BattleTech.PilotDef pilotDef, BattleTech.Data.DataManager dm)
14:10:32.152 [Info] Writing postfixes
14:10:32.157 [Info] Patching void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_Init::Postfix(BattleTech.UI.LanceMechSlot __instance, BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)

14:10:32.160 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::Init(BattleTech.MechDef mechDef, BattleTech.UI.LanceConfigurator LC, int availableCBills, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechSlotSelected mechCB)
14:10:32.162 [Info] Writing postfixes
14:10:32.169 [Info] Patching void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechSlot __instance, bool isRandom)

14:10:32.172 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechSlot::SetRandomOverlay(bool isRandom)
14:10:32.175 [Info] Writing postfixes
14:10:32.180 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_Init::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)

14:10:32.183 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::Init(BattleTech.PilotDef pilot, BattleTech.UI.LanceConfigurator LC, bool inSelectionList, bool isFavorite, BattleTech.UI.OnMechWarriorSlotSelected pilotCB)
14:10:32.185 [Info] Writing postfixes
14:10:32.193 [Info] Patching void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.LanceMechWarriorSlot_SetRandomOverlay::Postfix(BattleTech.UI.LanceMechWarriorSlot __instance, bool isRandom)

14:10:32.195 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechWarriorSlot::SetRandomOverlay(bool isRandom)
14:10:32.197 [Info] Writing postfixes
14:10:32.204 [Info] Patching virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.ListElementController_SalvageFullMech_NotListView_RefreshInfoOnWidget::Postfix(BattleTech.UI.ListElementController_SalvageFullMech_NotListView __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:32.206 [Info] Running ILHook manipulator on virtual void BattleTech.UI.ListElementController_SalvageFullMech_NotListView::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement_NotListView theWidget)
14:10:32.208 [Info] Writing postfixes
14:10:32.217 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

14:10:32.220 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
14:10:32.223 [Info] Writing postfixes
14:10:32.232 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif2::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)

14:10:32.234 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.ChassisDef chassisDef, bool inMaintenance, bool allowDrag)
14:10:32.236 [Info] Writing postfixes
14:10:32.242 [Info] Patching void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.MechUnitElementWidget_SetIcon::Postfix(BattleTech.UI.MechUnitElementWidget __instance, string icon)

14:10:32.244 [Info] Running ILHook manipulator on void BattleTech.UI.MechUnitElementWidget::SetIcon(string icon)
14:10:32.246 [Info] Writing postfixes
14:10:32.252 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.Debug.TooltipPrefab_Chassis_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, BattleTech.UI.TMProWrapper.LocalizableText ___jumpjetHPText)
* static void CustomPilotDecorator.TooltipPrefab_Chassis_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Chassis __instance, object data)

14:10:32.254 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Chassis::SetData(object data)
14:10:32.257 [Info] Writing postfixes
14:10:32.265 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

14:10:32.268 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
14:10:32.270 [Info] Writing postfixes
14:10:32.279 [Info] Patching void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitPreviewPanel_SetData::Postfix(BattleTech.UI.PortraitPreviewPanel __instance, BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)

14:10:32.282 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitPreviewPanel::SetData(BattleTech.PilotDef pilot, BattleTech.Data.DataManager dataManager)
14:10:32.284 [Info] Writing postfixes
14:10:32.295 [Info] Patching void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.PortraitRenderPanel_Render::Postfix(BattleTech.UI.PortraitRenderPanel __instance, BattleTech.Portraits.PortraitSettings portraitSettings)

14:10:32.298 [Info] Running ILHook manipulator on void BattleTech.UI.PortraitRenderPanel::Render(BattleTech.Portraits.PortraitSettings portraitSettings)
14:10:32.300 [Info] Writing postfixes
14:10:32.306 [Info] Patching void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGCharacterCreationWidget_UpdateSummary::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance)

14:10:32.308 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationWidget::UpdateSummary()
14:10:32.310 [Info] Writing postfixes
14:10:32.316 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SGBarracksDossierPanel_SetPilot_Gif::Postfix(BattleTech.UI.SGBarracksDossierPanel __instance, BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)

14:10:32.318 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::SetPilot(BattleTech.Pilot p, BattleTech.UI.SGBarracksMWDetailPanel details, bool isDissmissable, bool isThumb)
14:10:32.320 [Info] Writing postfixes
14:10:32.337 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.SG_HiringHall_DetailPanel_DisplayPilot::Postfix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

14:10:32.340 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::DisplayPilot(BattleTech.Pilot p)
14:10:32.342 [Info] Writing postfixes
14:10:32.346 [Info] Patching void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPilotDecorator.CombatHUDPortrait_ResetDisplayedActor::Postfix(BattleTech.UI.CombatHUDPortrait __instance)

14:10:32.349 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPortrait::ResetDisplayedActor()
14:10:32.350 [Info] Writing postfixes
14:10:32.357 [Info] Patching UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.SpriteLoadRequest_SpriteFromDisk::Prefix(BattleTech.Data.DataManager+SpriteLoadRequest __instance, string assetPath, UnityEngine.Sprite& __result)

14:10:32.359 [Info] Running ILHook manipulator on UnityEngine.Sprite BattleTech.Data.DataManager+SpriteLoadRequest::SpriteFromDisk(string assetPath)
14:10:32.361 [Info] Writing prefixes
14:10:32.367 [Info] Patching void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPilotDecorator.TextureManager_ProcessCompletedRequest::Prefix(BattleTech.Data.TextureManager __instance, BattleTech.Data.TextureManager+TextureLoadRequest completed)

14:10:32.370 [Info] Running ILHook manipulator on void BattleTech.Data.TextureManager::ProcessCompletedRequest(BattleTech.Data.TextureManager+TextureLoadRequest completed)
14:10:32.372 [Info] Writing prefixes
14:10:32.400 [Info] ### Harmony id=io.kmission.customunitdecorator, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnitDecorator.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnitDecorator\CustomUnitDecorator.dll
### At 2023-05-07 02.10.32
14:10:32.403 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetAlertIcon(bool shouldShow, BattleTech.UI.UIColor color) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.MechBayMechUnitElement_SetAlertIcon::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, bool shouldShow, BattleTech.UI.UIColor color)

14:10:32.405 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetAlertIcon(bool shouldShow, BattleTech.UI.UIColor color)
14:10:32.408 [Info] Writing postfixes
14:10:32.412 [Info] Patching virtual bool BattleTech.MechComponentDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.MechComponentDef __instance, uint loadWeight, Boolean& __result)

14:10:32.414 [Info] Running ILHook manipulator on virtual bool BattleTech.MechComponentDef::DependenciesLoaded(uint loadWeight)
14:10:32.416 [Info] Writing postfixes
14:10:32.421 [Info] Patching virtual void BattleTech.MechComponentDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.MechComponentDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:32.424 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponentDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:32.426 [Info] Writing postfixes
14:10:32.431 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnitDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)

14:10:32.434 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
14:10:32.436 [Info] Writing postfixes
14:10:32.451 [Info] ### Harmony id=ru.kmission.customunitspawn, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnitSpawn.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnitSpawn\CustomUnitSpawn.dll
### At 2023-05-07 02.10.32
14:10:32.454 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::RequestLance_Pre(int requestedDifficulty, BattleTech.Contract contract, int ___lanceDifficultyAdjustment)
* static void CustomUnitSpawn.LanceOverride_RequestLance::Prefix(BattleTech.Framework.LanceOverride __instance, BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)

14:10:32.457 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLance(BattleTech.Data.MetadataDatabase mdd, int requestedDifficulty, DateTime? currentDate, HBS.Collections.TagSet companyTags, BattleTech.Contract contract)
14:10:32.459 [Info] Writing prefixes
14:10:32.464 [Info] Patching void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.LanceOverrideRequestLanceCompletePatch::Prefix(BattleTech.Framework.LanceOverride __instance)
* static void CustomUnitSpawn.LanceOverride_RequestLanceComplete::Prefix(BattleTech.Framework.LanceOverride __instance, BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)

14:10:32.466 [Info] Running ILHook manipulator on void BattleTech.Framework.LanceOverride::RequestLanceComplete(BattleTech.Data.MetadataDatabase mdd, DateTime? currentDate, HBS.Collections.TagSet companyTags)
14:10:32.469 [Info] Writing prefixes
14:10:32.475 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

14:10:32.477 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
14:10:32.484 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags, System.Collections.Generic.List`1[[BattleTech.Data.UnitDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:32.487 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
14:10:32.489 [Info] Writing postfixes
14:10:32.495 [IL] Generated patch (System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> DMD<BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs>?1575161600::BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)):
.locals init (
    BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0 V_0
    System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> V_1
    System.Boolean V_2
)
IL_0000: newobj System.Void BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::.ctor()
IL_0005: stloc.0
IL_0006: ldloc.0
IL_0007: ldarg.0
IL_0008: stfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_000d: ldloc.0
IL_000e: ldarg.s currentDate
IL_0010: stfld System.Nullable`1<System.DateTime> BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::currentDate
IL_0015: ldloc.0
IL_0016: ldarg.s companyTags
IL_0018: stfld HBS.Collections.TagSet BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::companyTags
IL_001d: ldloc.0
IL_001e: ldfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0023: ldc.i4.5
IL_0024: ldarg.1
IL_0025: ldarg.2
IL_0026: ldstr "UnitDef"
IL_002b: ldstr ""
IL_0030: ldarg.3
IL_0031: ldstr "UnitDefID"
IL_0036: call System.Collections.Generic.List`1<DataBaseType> BattleTech.Data.TagSetQueryExtensions::GetMatchingDataByTagSet<BattleTech.Data.UnitDef_MDD>(BattleTech.Data.MetadataDatabase,BattleTech.Data.TagSetType,HBS.Collections.TagSet,HBS.Collections.TagSet,System.String,System.String,System.Boolean,System.String)
IL_003b: dup
IL_003c: ldloc.0
IL_003d: ldftn System.Boolean BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::<GetMatchingUnitDefs>b__0(BattleTech.Data.UnitDef_MDD)
IL_0043: newobj System.Void System.Predicate`1<BattleTech.Data.UnitDef_MDD>::.ctor(System.Object,System.IntPtr)
IL_0048: callvirt System.Int32 System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>::RemoveAll(System.Predicate`1<T>)
IL_004d: pop
IL_004e: br IL_0053
IL_0053: stloc V_1
IL_0057: ldc.i4.1
IL_0058: stloc V_2
IL_005c: ldarg mdd
IL_0060: ldarg requiredTags
IL_0064: ldarg excludedTags
IL_0068: ldarg checkOwnership
IL_006c: ldarg currentDate
IL_0070: ldarg companyTags
IL_0074: ldloca V_1
IL_0078: call System.Void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet,System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>&)
IL_007d: ldloc V_1
IL_0081: ret

14:10:32.515 [Info] ### Harmony id=ru.mission.customvoices, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomVoices.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomVoices\CustomVoices.dll
### At 2023-05-07 02.10.32
14:10:32.519 [Info] Patching void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Briefing_SetStartButtonActive::Prefix(BattleTech.UI.Briefing __instance, bool isActive)

14:10:32.521 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::SetStartButtonActive(bool isActive)
14:10:32.524 [Info] Writing prefixes
14:10:32.528 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

14:10:32.530 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
14:10:32.533 [Info] Writing prefixes
14:10:32.539 [Info] Patching virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWCustomizationPopup_LoadTextSelectorOptions::Prefix(SGBarracksMWCustomizationPopup __instance, BattleTech.UI.HorizontalScrollSelectorText& ___voiceSelector, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___voiceIdMap)

14:10:32.541 [Info] Running ILHook manipulator on virtual void SGBarracksMWCustomizationPopup::LoadTextSelectorOptions()
14:10:32.543 [Info] Writing prefixes
14:10:32.552 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

14:10:32.554 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
14:10:32.557 [Info] Writing postfixes
14:10:32.563 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksMWDetailPanel_CustomizePilot::Prefix(BattleTech.UI.SGBarracksMWDetailPanel __instance, BattleTech.Pilot ___curPilot, BattleTech.UI.SGBarracksWidget ___barracks, BattleTech.UI.SGBarracksDossierPanel ___dossier)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:32.566 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
14:10:32.568 [Info] Transpiling void BattleTech.UI.SGBarracksMWDetailPanel::CustomizePilot()
14:10:32.570 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksMWDetailPanel_CustomizePilotPatch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:32.573 [Info] Writing prefixes
14:10:32.580 [Info] Patching void BattleTech.UI.SGCharacterCreationNamePanel::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.SGCharacterCreationNamePanel_Awake::Postfix(BattleTech.UI.SGCharacterCreationNamePanel __instance)

14:10:32.583 [Info] Running ILHook manipulator on void BattleTech.UI.SGCharacterCreationNamePanel::Awake()
14:10:32.585 [Info] Writing postfixes
14:10:32.590 [Info] Patching void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SetSwitchById::Postfix(WwiseManager __instance, uint switchGroup, uint switchId, AkGameObj sourceObject)

14:10:32.592 [Info] Running ILHook manipulator on void WwiseManager::SetSwitchById(uint switchGroup, uint switchId, AkGameObj sourceObject)
14:10:32.594 [Info] Writing postfixes
14:10:32.599 [Info] Patching void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.Pilot_Init::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)

14:10:32.602 [Info] Running ILHook manipulator on void BattleTech.Pilot::Init(BattleTech.CombatGameState Combat, BattleTech.AbstractActor pilotedActor)
14:10:32.604 [Info] Writing prefixes
14:10:32.610 [Info] Patching void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:32.612 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
14:10:32.615 [Info] Transpiling void BattleTech.UI.SGBarracksDossierPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
14:10:32.617 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:32.621 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomVoices.SGBarracksDossierPanel_PlayPilotSelectionVO_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:32.627 [Info] Patching static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SGBarracksDossierPanel_PlayVO::Prefix(string voice, Boolean& __result)

14:10:32.630 [Info] Running ILHook manipulator on static bool BattleTech.UI.SGBarracksDossierPanel::PlayVO(string voice)
14:10:32.633 [Info] Writing prefixes
14:10:32.640 [Info] Patching void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.SG_HiringHall_DetailPanel_PlayPilotSelectionVO::Prefix(BattleTech.UI.SG_HiringHall_DetailPanel __instance, BattleTech.Pilot p)

14:10:32.643 [Info] Running ILHook manipulator on void BattleTech.UI.SG_HiringHall_DetailPanel::PlayPilotSelectionVO(BattleTech.Pilot p)
14:10:32.645 [Info] Writing prefixes
14:10:32.652 [Info] Patching static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_InterruptPilotVOForTeam::Postfix(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)

14:10:32.655 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::InterruptPilotVOForTeam(BattleTech.Team team, BattleTech.AbstractActor actorToIgnore)
14:10:32.658 [Info] Writing postfixes
14:10:32.663 [Info] Patching void BattleTech.PilotRepresentation::LoadSoundbanks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PilotRepresentation__LoadSoundbanks__Patch::Prefix(BattleTech.PilotRepresentation& __instance, Boolean& ___startedVOStatic)

14:10:32.666 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::LoadSoundbanks()
14:10:32.669 [Info] Writing prefixes
14:10:32.675 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

14:10:32.678 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
14:10:32.680 [Info] Writing postfixes
14:10:32.688 [Info] Patching static void BattleTech.AudioEventManager::LoadAudioSettings() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSoundBankDefs.AudioEventManager_LoadAudioSettings::Postfix()
* static void CustomVoices.AudioEventManager_LoadAudioSettings::Postfix()

14:10:32.691 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::LoadAudioSettings()
14:10:32.692 [Info] Writing postfixes
14:10:32.697 [Info] Patching static void BattleTech.AudioEventManager::SaveAudioSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioEventManager_SaveAudioSettings::Postfix()

14:10:32.699 [Info] Running ILHook manipulator on static void BattleTech.AudioEventManager::SaveAudioSettings()
14:10:32.701 [Info] Writing postfixes
14:10:32.705 [Info] Patching void WwiseManager::SuspendSoundEngine(bool processAudio) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_SuspendSoundEngine::Postfix(WwiseManager __instance)

14:10:32.707 [Info] Running ILHook manipulator on void WwiseManager::SuspendSoundEngine(bool processAudio)
14:10:32.710 [Info] Writing postfixes
14:10:32.715 [Info] Patching uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_PostEventById::Postfix(WwiseManager __instance, uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie, System.Collections.Generic.Dictionary<string, uint> ___guidIdMap, uint __result)

14:10:32.718 [Info] Running ILHook manipulator on uint WwiseManager::PostEventById(uint eventId, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
14:10:32.720 [Info] Writing postfixes
14:10:32.725 [Info] Patching static AKRESULT AkSoundEngine::RenderAudio() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AkSoundEngine_RenderAudio::Postfix(AKRESULT __result)

14:10:32.728 [Info] Running ILHook manipulator on static AKRESULT AkSoundEngine::RenderAudio()
14:10:32.730 [Info] Writing postfixes
14:10:32.735 [Info] Patching void WwiseManager::WakeupSoundEngine() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.WwiseManager_WakeupSoundEngine::Postfix()

14:10:32.737 [Info] Running ILHook manipulator on void WwiseManager::WakeupSoundEngine()
14:10:32.739 [Info] Writing postfixes
14:10:32.744 [Info] Patching void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomVoices.AudioSettingsModule_ApplyUpdatedSlider::Postfix(BattleTech.UI.AudioSettingsModule __instance, string val, float ___currentVolumeMaster, float ___currentVolumeMusic, float ___currentVolumeVoice, float ___currentVolumeSFX, float ___currentVolumeAmbience, float ___currentVolumeCinematic)

14:10:32.747 [Info] Running ILHook manipulator on void BattleTech.UI.AudioSettingsModule::ApplyUpdatedSlider(string val)
14:10:32.749 [Info] Writing postfixes
14:10:32.756 [Info] Patching static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.AudioEventManager_SetMusicState::Prefix(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic, Boolean& __result)

14:10:32.759 [Info] Running ILHook manipulator on static bool BattleTech.AudioEventManager::SetMusicState(AudioState_Music_State newMusicState, AudioSwitch_Mission_Status newMissionStatus, AudioState_Player_State newPlayerState, bool stopOldMusic)
14:10:32.761 [Info] Writing prefixes
14:10:32.767 [Info] Patching void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomVoices.PlayPilotVOPatch::Prefix(BattleTech.PilotRepresentation __instance, Boolean& ___startedVOStatic, AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:32.770 [Info] Running ILHook manipulator on void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
14:10:32.772 [Info] Transpiling void BattleTech.PilotRepresentation::PlayPilotVO(AudioSwitch_dialog_lines_pilots VOEnumValue, int priority, AkCallbackManager+EventCallback callback, object in_cookie)
14:10:32.774 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CommanderPortraitLoader.PilotRepresentation_PlayPilotVO_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:32.780 [Info] Writing prefixes
14:10:32.845 [Info] ### Harmony id=io.mission.customammocategories.private, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomAmmoCategoriesPrivate.Core::Init(), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategoriesPrivate.dll
### At 2023-05-07 02.10.32
14:10:32.849 [Info] Patching static void ModTek.Features.Manifest.Mods.ModDefsDatabase::FinishedLoadingMods() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPrivate.Core::PrintHarmonySummary_postfix()

14:10:32.851 [Info] Running ILHook manipulator on static void ModTek.Features.Manifest.Mods.ModDefsDatabase::FinishedLoadingMods()
14:10:32.853 [Info] Writing postfixes
14:10:33.105 [Info] ### Harmony id=Sheepy.BattleTechMod.AttackImprovementMod, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Sheepy.BattleTechMod.BattleModModule::Patch(System.Reflection.MethodBase patched, HarmonyLib.HarmonyMethod prefix, HarmonyLib.HarmonyMethod postfix, HarmonyLib.HarmonyMethod transpiler), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\AttackImprovementMod.dll
### At 2023-05-07 02.10.33
14:10:33.108 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

14:10:33.111 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
14:10:33.113 [Info] Writing postfixes
14:10:33.118 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()

14:10:33.120 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
14:10:33.123 [Info] Writing postfixes
14:10:33.130 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
2 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)

14:10:33.133 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:33.135 [Info] Writing prefixes
14:10:33.137 [Info] Writing postfixes
14:10:33.150 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)

14:10:33.153 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
14:10:33.155 [Info] Writing prefixes
14:10:33.157 [Info] Writing postfixes
14:10:33.161 [Info] ### Harmony id=io.mission.modrepuation, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CACMain.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomAmmoCategories\CustomAmmoCategories.dll
### At 2023-05-07 02.10.33
14:10:33.168 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.171 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
14:10:33.173 [Info] Transpiling void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
14:10:33.177 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.186 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GetIndividualHits(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.ClusteredShotEnabler::Prefix(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage, BattleTech.AttackDirector+AttackSequence __instance)

14:10:33.188 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GetIndividualHits(BattleTech.WeaponHitInfo& hitInfo, int groupIdx, int weaponIdx, BattleTech.Weapon weapon, float toHitChance, float prevDodgedDamage)
14:10:33.191 [Info] Writing prefixes
14:10:33.203 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

14:10:33.205 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
14:10:33.208 [Info] Writing postfixes
14:10:33.214 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)

14:10:33.217 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:33.219 [Info] Writing prefixes
14:10:33.236 [Info] Patching virtual void BallisticEffect::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool WeaponRealizer.BallisticEffectOnCompleteMultifirePatch::Prefix(Int32& ___hitIndex, BallisticEffect __instance)

14:10:33.239 [Info] Running ILHook manipulator on virtual void BallisticEffect::OnComplete()
14:10:33.242 [Info] Writing prefixes
14:10:33.248 [Info] Patching virtual void LaserEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void WeaponRealizer.LaserEffectOnCompleteMultifirePatch::Postfix(Int32& ___hitIndex, LaserEffect __instance)

14:10:33.250 [Info] Running ILHook manipulator on virtual void LaserEffect::OnComplete()
14:10:33.252 [Info] Writing postfixes
14:10:33.258 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CleverGirlAIDamagePrediction.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.AbstractActor __instance)

14:10:33.261 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnPhaseBegin(int round, int phase)
14:10:33.263 [Info] Writing postfixes
14:10:33.269 [Info] Patching static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrderForTarget::Prefix(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary)

14:10:33.271 [Info] Running ILHook manipulator on static float AttackEvaluator::MakeAttackOrderForTarget(BattleTech.AbstractActor unit, BattleTech.ICombatant target, int enemyUnitIndex, bool isStationary, BehaviorTreeResults& order)
14:10:33.274 [Info] Writing prefixes
14:10:33.301 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)

14:10:33.304 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
14:10:33.306 [Info] Writing postfixes
14:10:33.321 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerDown::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

14:10:33.324 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
14:10:33.326 [Info] Writing prefixes
14:10:33.332 [Info] Patching virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_OnPointerUp::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, UnityEngine.EventSystems.PointerEventData eventData)

14:10:33.335 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDWeaponSlot::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
14:10:33.337 [Info] Writing prefixes
14:10:33.343 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

14:10:33.346 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshHighlighted()
14:10:33.348 [Info] Writing prefixes
14:10:33.354 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshNonHighlighted::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance)

14:10:33.357 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshNonHighlighted()
14:10:33.360 [Info] Writing prefixes
14:10:33.374 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

14:10:33.376 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
14:10:33.378 [Info] Writing prefixes
14:10:33.380 [Info] Writing postfixes
14:10:33.386 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

14:10:33.388 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
14:10:33.391 [Info] Writing prefixes
14:10:33.468 [Info] Patching float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_GetAdjustedDamage::Postfix(BattleTech.AbstractActor __instance, float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging, Single& __result)

14:10:33.470 [Info] Running ILHook manipulator on float BattleTech.AbstractActor::GetAdjustedDamage(float incomingDamage, BattleTech.WeaponCategoryValue weaponCategoryValue, BattleTech.DesignMaskDef designMask, BattleTech.LineOfFireLevel lofLevel, bool doLogging)
14:10:33.472 [Info] Writing postfixes
14:10:33.483 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

14:10:33.485 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
14:10:33.487 [Info] Writing prefixes
14:10:33.504 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

14:10:33.506 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:33.509 [Info] Writing prefixes
14:10:33.511 [Info] Writing postfixes
14:10:33.519 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

14:10:33.521 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:33.523 [Info] Writing prefixes
14:10:33.530 [Info] Patching BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_GetPriorityDesignMask::Postfix(BattleTech.MapMetaData __instance, BattleTech.MapTerrainDataCell cell, BattleTech.DesignMaskDef& __result)

14:10:33.532 [Info] Running ILHook manipulator on BattleTech.DesignMaskDef BattleTech.MapMetaData::GetPriorityDesignMask(BattleTech.MapTerrainDataCell cell)
14:10:33.534 [Info] Writing postfixes
14:10:33.540 [Info] Patching AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetAudioSurfaceType::Postfix(BattleTech.MapTerrainDataCell __instance, AudioSwitch_surface_type& __result)

14:10:33.541 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.MapTerrainDataCell::GetAudioSurfaceType()
14:10:33.543 [Info] Writing postfixes
14:10:33.548 [Info] Patching string BattleTech.MapTerrainDataCell::GetVFXNameModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapTerrainDataCell_GetVFXNameModifier::Postfix(BattleTech.MapTerrainDataCell __instance, String& __result)

14:10:33.550 [Info] Running ILHook manipulator on string BattleTech.MapTerrainDataCell::GetVFXNameModifier()
14:10:33.552 [Info] Writing postfixes
14:10:33.557 [Info] Patching void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_LoadData::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)

14:10:33.560 [Info] Running ILHook manipulator on void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream, BattleTech.Data.DataManager dataManager)
14:10:33.561 [Info] Writing postfixes
14:10:33.571 [Info] Patching virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaData_Load::Postfix(BattleTech.MapMetaData __instance, HBS.Util.SerializationStream stream)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.573 [Info] Running ILHook manipulator on virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
14:10:33.575 [Info] Transpiling virtual void BattleTech.MapMetaData::Load(HBS.Util.SerializationStream stream)
14:10:33.579 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaData_Load::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.582 [Info] Writing postfixes
14:10:33.589 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

14:10:33.592 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
14:10:33.594 [Info] Writing postfixes
14:10:33.602 [Info] Patching void BattleTech.Rendering.Trees.TreeContainer::GatherTrees() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TreeContainer_GatherTrees::Postfix(BattleTech.Rendering.Trees.TreeContainer __instance)

14:10:33.604 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.TreeContainer::GatherTrees()
14:10:33.606 [Info] Writing postfixes
14:10:33.619 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionVFX::Postfix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

14:10:33.621 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionVFX()
14:10:33.623 [Info] Writing postfixes
14:10:33.629 [Info] Patching virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DestructibleUrbanFlimsy_PlayDestructionAudio::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance)

14:10:33.632 [Info] Running ILHook manipulator on virtual void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::PlayDestructionAudio()
14:10:33.634 [Info] Writing prefixes
14:10:33.640 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

14:10:33.643 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
14:10:33.645 [Info] Writing postfixes
14:10:33.653 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
2 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

14:10:33.656 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
14:10:33.658 [Info] Writing prefixes
14:10:33.660 [Info] Writing postfixes
14:10:33.666 [Info] Patching void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Postfix(BattleTech.MapMetaDataExporter __instance, UnityEngine.Terrain terrain, bool force)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.669 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
14:10:33.670 [Info] Transpiling void BattleTech.MapMetaDataExporter::GenerateTerrainData(UnityEngine.Terrain terrain, bool force)
14:10:33.674 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MapMetaDataExporter_GenerateTerrainData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.677 [Info] Writing postfixes
14:10:33.684 [Info] Patching BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfo::Prefix(BattleTech.AttackDirector+AttackSequence __instance, BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, Boolean& indirectFire, float dodgedDamage, BattleTech.WeaponHitInfo& __result)

14:10:33.687 [Info] Running ILHook manipulator on BattleTech.WeaponHitInfo BattleTech.AttackDirector+AttackSequence::GenerateHitInfo(BattleTech.Weapon weapon, int groupIdx, int weaponIdx, int numberOfShots, bool indirectFire, float dodgedDamage)
14:10:33.689 [Info] Writing prefixes
14:10:33.699 [Info] Patching float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.ToHit_GetEvasivePipsModifier::Prefix(BattleTech.ToHit __instance, int evasivePips, BattleTech.Weapon weapon, Single& __result)

14:10:33.702 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetEvasivePipsModifier(int evasivePips, BattleTech.Weapon weapon)
14:10:33.704 [Info] Writing prefixes
14:10:33.711 [Info] Patching static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.714 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
14:10:33.717 [Info] Transpiling static bool AIUtil::UnitHasLOFToTargetFromPosition(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, BattleTech.CombatGameState combat, UnityEngine.Vector3 attackerPosition)
14:10:33.720 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.727 [Info] Patching static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.730 [Info] Running ILHook manipulator on static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
14:10:33.733 [Info] Transpiling static bool AIUtil::UnitHasLOFToUnit(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.CombatGameState combat)
14:10:33.736 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIUtil_UnitHasLOFToUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.744 [Info] Patching static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.747 [Info] Running ILHook manipulator on static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
14:10:33.750 [Info] Transpiling static float BattleTech.AIRoleAssignment::EvaluateSniper(BattleTech.AbstractActor unit)
14:10:33.753 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AIRoleAssignment_EvaluateSniper::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.758 [Info] Patching BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.760 [Info] Running ILHook manipulator on BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
14:10:33.763 [Info] Transpiling BattleTech.Weapon BattleTech.AbstractActor::GetLongestRangeWeapon(bool enabledWeaponsOnly, bool indirectFireOnly)
14:10:33.765 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_GetLongestRangeWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.771 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.774 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
14:10:33.776 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
14:10:33.780 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.787 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.789 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
14:10:33.791 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasLOFToTargetUnit(BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
14:10:33.794 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.799 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.801 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
14:10:33.803 [Info] Transpiling float BattleTech.HostileDamageFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, UnityEngine.Vector3 shootingPosition, UnityEngine.Quaternion shootingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping, bool useHypotheticalEvasiveForTarget)
14:10:33.806 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HostileDamageFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.814 [Info] Patching static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.816 [Info] Running ILHook manipulator on static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
14:10:33.819 [Info] Transpiling static BattleTech.Weapon BattleTech.MultiAttack::FindWeaponToHitTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target)
14:10:33.822 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_FindWeaponToHitTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.828 [Info] Patching static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Postfix(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.830 [Info] Running ILHook manipulator on static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
14:10:33.832 [Info] Transpiling static float BattleTech.MultiAttack::GetExpectedDamageForMultiTargetWeapon(BattleTech.AbstractActor attackerUnit, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, bool targetIsEvasive, BattleTech.Weapon weapon, int numTargets)
14:10:33.835 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_GetExpectedDamageForMultiTargetWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.837 [Info] Writing postfixes
14:10:33.843 [Info] Patching static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.845 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
14:10:33.847 [Info] Transpiling static System.Collections.Generic.List<BattleTech.Weapon> BattleTech.MultiAttack::PartitionWeaponListToKillTarget(BattleTech.AbstractActor attacker, System.Collections.Generic.List<BattleTech.Weapon> weapons, BattleTech.ICombatant target, float overkillThresholdFrac)
14:10:33.853 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_PartitionWeaponListToKillTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.862 [Info] Patching static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.864 [Info] Running ILHook manipulator on static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
14:10:33.866 [Info] Transpiling static bool BattleTech.MultiAttack::ValidateMultiAttackOrder(MultiTargetAttackOrderInfo order, BattleTech.AbstractActor unit)
14:10:33.870 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.MultiAttack_ValidateMultiAttackOrder::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.878 [Info] Patching virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.880 [Info] Running ILHook manipulator on virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
14:10:33.883 [Info] Transpiling virtual void BattleTech.PreferExposedAlonePositionalFactor::InitEvaluationForPhaseForUnit(BattleTech.AbstractActor unit)
14:10:33.887 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferExposedAlonePositionalFactor_InitEvaluationForPhaseForUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.895 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.898 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:10:33.900 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:10:33.903 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.909 [Info] Patching float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.911 [Info] Running ILHook manipulator on float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
14:10:33.913 [Info] Transpiling float BattleTech.PreferLethalDamageToRearArcFromHostileFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive, bool targetIsJumping)
14:10:33.916 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferLethalDamageToRearArcFromHostileFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.924 [Info] Patching float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.926 [Info] Running ILHook manipulator on float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
14:10:33.928 [Info] Transpiling float BattleTech.PreferNotLethalPositionFactor::expectedDamageForShooting(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, BattleTech.MoveType moveType)
14:10:33.930 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferNotLethalPositionFactor_expectedDamageForShooting::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.940 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.942 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:33.944 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:33.949 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.953 [Info] Writing postfixes
14:10:33.963 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.966 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
14:10:33.968 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::UpdateToolTipsFiring(BattleTech.ICombatant target)
14:10:33.972 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_UpdateToolTipsFiring::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.984 [Info] Patching void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:33.986 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
14:10:33.989 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponTickMarks::GetValidSlots(System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> weaponSlots, float dist, bool hasLOF)
14:10:33.993 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponTickMarks_GetValidSlots::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:33.999 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.002 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
14:10:34.004 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
14:10:34.006 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.009 [Info] Writing postfixes
14:10:34.015 [Info] Patching bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Postfix(LOFCache __instance, BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.018 [Info] Running ILHook manipulator on bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
14:10:34.020 [Info] Transpiling bool LOFCache::UnitHasLOFToTarget(BattleTech.AbstractActor shootingUnit, BattleTech.ICombatant targetUnit, BattleTech.Weapon weapon)
14:10:34.022 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.LOFCache_UnitHasLOFToTarget::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.025 [Info] Writing postfixes
14:10:34.030 [Info] Patching static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Prefix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_GetLocationDictionary::Postfix(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)

14:10:34.033 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, float> BattleTech.AIAttackEvaluator::GetLocationDictionary(UnityEngine.Vector3 attackerPosition, BattleTech.Mech m, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
14:10:34.035 [Info] Writing prefixes
14:10:34.037 [Info] Writing postfixes
14:10:34.042 [Info] Patching static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Prefix(BattleTech.Weapon w)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AIAttackEvaluator_evaluateWeaponAttackOnMech::Postfix()

14:10:34.044 [Info] Running ILHook manipulator on static void BattleTech.AIAttackEvaluator::evaluateWeaponAttackOnMech(float expectedDamage, BattleTech.Weapon w, BattleTech.DamageExpectationRecord& damageExpectationRecord, UnityEngine.Vector3 attackerPosition, BattleTech.Mech targetMech, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation)
14:10:34.046 [Info] Writing prefixes
14:10:34.048 [Info] Writing postfixes
14:10:34.062 [Info] Patching static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DamageOrderUtility_ApplyDamageToAllLocations::Prefix(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)

14:10:34.064 [Info] Running ILHook manipulator on static void BattleTech.DamageOrderUtility::ApplyDamageToAllLocations(string owningActorGUID, int sequenceGUID, int rootSequenceGUID, BattleTech.ICombatant target, int minDamage, int maxDamage, BattleTech.AttackDirection attackDirection, BattleTech.DamageType damageType)
14:10:34.067 [Info] Writing prefixes
14:10:34.078 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:34.080 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
14:10:34.082 [Info] Writing postfixes
14:10:34.090 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackSequenceFire::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message, System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> ___sortedWeapons, int[][] ___numberOfShots, BattleTech.WeaponHitInfo?[][] ___weaponHitInfo)

14:10:34.093 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceFire(MessageCenterMessage message)
14:10:34.095 [Info] Writing prefixes
14:10:34.109 [Info] Patching float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponHitInfo_ConsolidateInstability::Postfix(BattleTech.WeaponHitInfo& __instance, string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier, Single& __result)

14:10:34.111 [Info] Running ILHook manipulator on float BattleTech.WeaponHitInfo::ConsolidateInstability(string targetGUID, float instability, float glancingMultiplier, float normalMultiplier, float solidMultiplier)
14:10:34.113 [Info] Writing postfixes
14:10:34.119 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)

14:10:34.121 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
14:10:34.124 [Info] Writing prefixes
14:10:34.191 [Info] Patching bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.MechLabPanel_MechCanUseAmmo_Patch::Prefix(Boolean& __runOriginal, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechLabPanel_MechCanUseAmmo::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.AmmunitionBoxDef ammoBoxDef, Boolean& __result)

14:10:34.194 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabPanel::MechCanUseAmmo(BattleTech.AmmunitionBoxDef ammoBoxDef)
14:10:34.196 [Info] Writing prefixes
14:10:34.198 [Info] Writing postfixes
14:10:34.203 [Info] Patching void BattleTech.AttackDirector+AttackSequence::Cleanup() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_Cleanup::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

14:10:34.205 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::Cleanup()
14:10:34.207 [Info] Writing postfixes
14:10:34.213 [Info] Patching void BattleTech.CombatGameState::RebuildAllLists() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_RebuildAllLists::Postfix(BattleTech.CombatGameState __instance)

14:10:34.215 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::RebuildAllLists()
14:10:34.217 [Info] Writing postfixes
14:10:34.222 [Info] Patching void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Weapon_SetAmmoBoxes::Prefix(BattleTech.Weapon __instance, System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)

14:10:34.224 [Info] Running ILHook manipulator on void BattleTech.Weapon::SetAmmoBoxes(System.Collections.Generic.List<BattleTech.AmmunitionBox> ammoBoxes)
14:10:34.226 [Info] Writing prefixes
14:10:34.232 [Info] Patching static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MechValidationRules_ValidateMechHasAppropriateAmmo::Prefix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)

14:10:34.234 [Info] Running ILHook manipulator on static void BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[[BattleTech.MechValidationType, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& errorMessages)
14:10:34.236 [Info] Writing prefixes
14:10:34.244 [Info] Patching void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRepresentation_PlayWeaponEffect::Prefix(BattleTech.WeaponRepresentation __instance, BattleTech.WeaponHitInfo hitInfo)

14:10:34.246 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::PlayWeaponEffect(BattleTech.WeaponHitInfo hitInfo)
14:10:34.248 [Info] Writing prefixes
14:10:34.252 [Info] Patching void BattleTech.WeaponRepresentation::ResetWeaponEffect() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.WeaponRepresentation_ResetWeaponEffect::Postfix(BattleTech.WeaponRepresentation __instance)

14:10:34.254 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::ResetWeaponEffect()
14:10:34.256 [Info] Writing postfixes
14:10:34.260 [Info] Patching static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatGameState_ShutdownCombatState::Postfix(BattleTech.CombatGameState __instance)

14:10:34.263 [Info] Running ILHook manipulator on static void BattleTech.CombatGameState::ShutdownCombatState(bool andPoolAllUI)
14:10:34.265 [Info] Writing postfixes
14:10:34.270 [Info] Patching virtual void MissileEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)

14:10:34.272 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
14:10:34.274 [Info] Writing prefixes
14:10:34.280 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Prefix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo weaponHitInfo)

14:10:34.283 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::AddExpectedMessages(BattleTech.WeaponHitInfo weaponHitInfo)
14:10:34.285 [Info] Writing prefixes
14:10:34.290 [Info] Patching BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_CreateAttackSequence::Postfix(BattleTech.AttackDirector __instance, int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack, BattleTech.AttackDirector+AttackSequence& __result)

14:10:34.293 [Info] Running ILHook manipulator on BattleTech.AttackDirector+AttackSequence BattleTech.AttackDirector::CreateAttackSequence(int stackItemUID, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, int attackSequenceIdx, System.Collections.Generic.List<BattleTech.Weapon> selectedWeapons, BattleTech.MeleeAttackType meleeAttackType, int calledShotLocation, bool isMoraleAttack)
14:10:34.294 [Info] Writing postfixes
14:10:34.300 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

14:10:34.302 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
14:10:34.304 [Info] Writing postfixes
14:10:34.310 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

14:10:34.312 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
14:10:34.314 [Info] Writing postfixes
14:10:34.324 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:34.326 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:34.328 [Info] Writing postfixes
14:10:34.333 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

14:10:34.336 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
14:10:34.337 [Info] Writing postfixes
14:10:34.345 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.PilotableActorRepresentation_ReturnToNeutralFacing::Prefix(BattleTech.PilotableActorRepresentation __instance, bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

14:10:34.348 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::FaceTarget(bool isParellelSequence, BattleTech.ICombatant target, float twistTime, int stackItemUID, int sequenceId, bool isMelee, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
14:10:34.350 [Info] Writing prefixes
14:10:34.355 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)

14:10:34.357 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
14:10:34.359 [Info] Writing prefixes
14:10:34.364 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.366 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
14:10:34.368 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
14:10:34.371 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.377 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.379 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:34.381 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:34.384 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.390 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

14:10:34.392 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
14:10:34.394 [Info] Writing prefixes
14:10:34.400 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

14:10:34.404 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
14:10:34.405 [Info] Writing prefixes
14:10:34.413 [Info] Patching virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_HasLOFToTargetUnitAtTargetPosition::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable, Boolean& __state)

14:10:34.415 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasLOFToTargetUnitAtTargetPosition(BattleTech.ICombatant targetUnit, float maxRange, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool isIndirectFireCapable)
14:10:34.417 [Info] Writing prefixes
14:10:34.419 [Info] Writing postfixes
14:10:34.426 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatSelectionHandler_TrySelectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, bool manualSelection)

14:10:34.428 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::TrySelectActor(BattleTech.AbstractActor actor, bool manualSelection)
14:10:34.430 [Info] Writing prefixes
14:10:34.444 [Info] Patching void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUD_OnAttackEnd::Postfix(BattleTech.UI.CombatHUD __instance, MessageCenterMessage message)

14:10:34.446 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnAttackEnd(MessageCenterMessage message)
14:10:34.448 [Info] Writing postfixes
14:10:34.453 [Info] Patching virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnitTerrainAttack::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly, bool __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.455 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
14:10:34.457 [Info] Transpiling virtual bool BattleTech.AbstractActor::HasIndirectLOFToTargetUnit(UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, BattleTech.ICombatant targetUnit, bool enabledWeaponsOnly)
14:10:34.459 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActor_HasIndirectLOFToTargetUnit::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.461 [Info] Writing prefixes
14:10:34.467 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_ShowLineToTarget::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)

14:10:34.469 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::ShowLineToTarget(BattleTech.AbstractActor selectedActor, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, BattleTech.AbstractActor targetedActor, bool isMelee)
14:10:34.471 [Info] Writing prefixes
14:10:34.477 [Info] Patching bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.FiringPreviewManager_HasLOS::Postfix(BattleTech.FiringPreviewManager __instance, BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies, Boolean& __result)

14:10:34.479 [Info] Running ILHook manipulator on bool BattleTech.FiringPreviewManager::HasLOS(BattleTech.AbstractActor attacker, BattleTech.ICombatant target, UnityEngine.Vector3 position, System.Collections.Generic.List<BattleTech.AbstractActor> allies)
14:10:34.481 [Info] Writing postfixes
14:10:34.487 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

14:10:34.489 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
14:10:34.491 [Info] Writing postfixes
14:10:34.495 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)

14:10:34.497 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:34.499 [Info] Writing prefixes
14:10:34.501 [Info] Writing postfixes
14:10:34.512 [Info] Patching virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.SelectionStateCommandTargetSinglePoint_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateCommandTargetSinglePoint __instance, UnityEngine.Vector3 worldPos)

14:10:34.514 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateCommandTargetSinglePoint::ProcessMousePos(UnityEngine.Vector3 worldPos)
14:10:34.516 [Info] Writing postfixes
14:10:34.522 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDActionButton_ActivateCommandAbility::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string teamGUID, UnityEngine.Vector3 targetPosition)

14:10:34.525 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateCommandAbility(string teamGUID, UnityEngine.Vector3 targetPosition)
14:10:34.526 [Info] Writing postfixes
14:10:34.532 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:34.534 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
14:10:34.536 [Info] Writing postfixes
14:10:34.546 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:34.548 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
14:10:34.550 [Info] Writing postfixes
14:10:34.555 [Info] Patching static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.558 [Info] Running ILHook manipulator on static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
14:10:34.559 [Info] Transpiling static System.Collections.Generic.List<System.Collections.Generic.List<BattleTech.Weapon>> AttackEvaluator::MakeWeaponSetsForEvasive(System.Collections.Generic.List<BattleTech.Weapon> potentialWeapons, float toHitFrac, BattleTech.ICombatant target, UnityEngine.Vector3 shooterPosition)
14:10:34.562 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackEvaluator_MakeWeaponSetsForEvasive::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.569 [Info] Patching void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_CalcAlphaStrikesRem_Patch::Prefix(BattleTech.AbstractActor __instance)

14:10:34.571 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::CalcAndSetAlphaStrikesRemaining()
14:10:34.573 [Info] Writing prefixes
14:10:34.584 [Info] Patching void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.586 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
14:10:34.588 [Info] Transpiling void BattleTech.AttackDirector::ResolveSequenceAmmoDepletion(string VOQueueId, BattleTech.AttackDirector+AttackSequence sequence)
14:10:34.592 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AttackDirector_ResolveSequenceAmmoDepletion::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.597 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.599 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
14:10:34.601 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToMech(BattleTech.Mech targetMech)
14:10:34.603 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToMech::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.610 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.612 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
14:10:34.614 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToTurret(BattleTech.Turret targetTurret)
14:10:34.617 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToTurret::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.623 [Info] Patching void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.625 [Info] Running ILHook manipulator on void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
14:10:34.627 [Info] Transpiling void BattleTech.PoorlyMaintainedEffect::ApplyEffectsToVehicle(BattleTech.Vehicle targetVehicle)
14:10:34.629 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PoorlyMaintainedEffect_ApplyEffectsToVehicle::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.636 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.638 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:34.640 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:34.644 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.652 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 0 postfixes, 2 transpilers, 0 finalizers
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.654 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:34.656 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:34.659 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.660 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.668 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.670 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
14:10:34.672 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::ShowTextColor(UnityEngine.Color color, UnityEngine.Color damageColor, UnityEngine.Color hitChanceColor, bool allowAmmoWarnings)
14:10:34.674 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_ShowTextColor::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.679 [Info] Patching void BattleTech.Weapon::EnableWeapon() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.681 [Info] Running ILHook manipulator on void BattleTech.Weapon::EnableWeapon()
14:10:34.683 [Info] Transpiling void BattleTech.Weapon::EnableWeapon()
14:10:34.685 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_EnableWeapon::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.688 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.690 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
14:10:34.692 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
14:10:34.694 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.698 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

14:10:34.700 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
14:10:34.702 [Info] Writing prefixes
14:10:34.704 [Info] Writing postfixes
14:10:34.709 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init0::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, Localize.Text title, bool isPrimary, bool useOnPointer)

14:10:34.711 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(Localize.Text title, bool isPrimary, bool useOnPointer)
14:10:34.713 [Info] Writing postfixes
14:10:34.718 [Info] Patching void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_Init1::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)

14:10:34.720 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDObjectiveItem::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDObjectivesList objectivesList, BattleTech.UI.CombatHUDObjectiveStatusNotify notify, BattleTech.Framework.ObjectiveGameLogic objective)
14:10:34.722 [Info] Writing postfixes
14:10:34.733 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

14:10:34.735 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
14:10:34.737 [Info] Writing postfixes
14:10:34.742 [Info] Patching virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDObjectiveItem_OnPointerExit::Postfix(BattleTech.UI.CombatHUDObjectiveItem __instance)

14:10:34.744 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDObjectiveItem::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
14:10:34.746 [Info] Writing postfixes
14:10:34.749 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)

14:10:34.751 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
14:10:34.753 [Info] Writing postfixes
14:10:34.757 [Info] Patching void BattleTech.VehicleDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

14:10:34.760 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
14:10:34.762 [Info] Writing postfixes
14:10:34.765 [Info] Patching void BattleTech.TurretDef::Refresh() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.TurretDef_Refresh::Postfix(BattleTech.TurretDef __instance)

14:10:34.767 [Info] Running ILHook manipulator on void BattleTech.TurretDef::Refresh()
14:10:34.769 [Info] Writing postfixes
14:10:34.773 [Info] Patching void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.WeaponRangeIndicators_SetAllWeaponsArc_Debug::Prefix(BattleTech.UI.WeaponRangeIndicators __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& weapons, Int32[]& ___MultWeaponShaderVectorInts, Int32[]& ___MultWeaponShaderStrengthInts, Int32& ___MultiWeaponNumberInt)

14:10:34.776 [Info] Running ILHook manipulator on void BattleTech.UI.WeaponRangeIndicators::SetAllWeaponsArc(System.Collections.Generic.List<BattleTech.Weapon> weapons)
14:10:34.777 [Info] Writing prefixes
14:10:34.787 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::OnAddToStack() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionStateMove_OnAddToStack_Debug::Prefix(BattleTech.UI.SelectionStateMove __instance)

14:10:34.789 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::OnAddToStack()
14:10:34.792 [Info] Writing prefixes
14:10:34.800 [Info] Patching void BattleTech.CameraControl::UpdatePlayerControl() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Prefix(Boolean& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.802 [Info] Running ILHook manipulator on void BattleTech.CameraControl::UpdatePlayerControl()
14:10:34.805 [Info] Transpiling void BattleTech.CameraControl::UpdatePlayerControl()
14:10:34.814 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CameraControl_UpdatePlayerControl::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.818 [Info] Writing prefixes
14:10:34.836 [Info] Patching void BattleTech.UI.CombatSelectionHandler::ProcessInput() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:34.837 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::ProcessInput()
14:10:34.840 [Info] Transpiling void BattleTech.UI.CombatSelectionHandler::ProcessInput()
14:10:34.848 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatSelectionHandler_ProcessInput::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:34.857 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

14:10:34.859 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
14:10:34.861 [Info] Writing postfixes
14:10:34.924 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
3 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

14:10:34.930 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
14:10:34.931 [Info] Writing prefixes
14:10:34.933 [Info] Writing postfixes
14:10:34.940 [Info] Patching void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.AttackSequence_SortSelectedWeapons::Postfix(BattleTech.AttackDirector+AttackSequence __instance, System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___sortedWeapons)

14:10:34.942 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::SortSelectedWeapons()
14:10:34.944 [Info] Writing postfixes
14:10:34.952 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)

14:10:34.954 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
14:10:34.956 [Info] Writing postfixes
14:10:34.969 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ResetSortedWeaponList::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List`1[[BattleTech.Weapon, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sortedWeaponsList)

14:10:34.972 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetSortedWeaponList()
14:10:34.975 [Info] Writing prefixes
14:10:34.977 [Info] Writing postfixes
14:10:35.034 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.037 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:35.039 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:35.041 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.043 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.045 [Info] Writing postfixes
14:10:35.053 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

14:10:35.056 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
14:10:35.058 [Info] Writing postfixes
14:10:35.066 [Info] Patching virtual void BattleTech.UI.UIModule::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.UIModule_OnAddedToHierarchy::Postfix(BattleTech.UI.UIModule __instance)

14:10:35.068 [Info] Running ILHook manipulator on virtual void BattleTech.UI.UIModule::OnAddedToHierarchy()
14:10:35.070 [Info] Writing postfixes
14:10:35.074 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

14:10:35.077 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
14:10:35.079 [Info] Writing postfixes
14:10:35.087 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

14:10:35.089 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
14:10:35.091 [Info] Writing prefixes
14:10:35.098 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

14:10:35.100 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
14:10:35.102 [Info] Writing prefixes
14:10:35.108 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

14:10:35.110 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
14:10:35.112 [Info] Writing prefixes
14:10:35.114 [Info] Writing postfixes
14:10:35.121 [Info] Patching uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WwiseManager_PostEventByName::Prefix(WwiseManager __instance, string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)

14:10:35.123 [Info] Running ILHook manipulator on uint WwiseManager::PostEventByName(string eventName, AkGameObj sourceObject, AkCallbackManager+EventCallback callback, object in_pCookie)
14:10:35.126 [Info] Writing prefixes
14:10:35.132 [Info] Patching float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AttackSequence_GetRandomNumberCycle::Prefix(BattleTech.AttackDirector+AttackSequence __instance, int groupIndex, int weaponIndex, Int32[][]& ___randomCacheValuesUsed, Single[][][]& ___randomCache)

14:10:35.134 [Info] Running ILHook manipulator on float BattleTech.AttackDirector+AttackSequence::GetRandomNumber(int groupIndex, int weaponIndex)
14:10:35.136 [Info] Writing prefixes
14:10:35.142 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()

14:10:35.145 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:35.146 [Info] Writing prefixes
14:10:35.148 [Info] Writing postfixes
14:10:35.161 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatString::Prefix(BattleTech.SimGameState __instance, string id, string type, bool damaged)

14:10:35.163 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, string type, bool damaged)
14:10:35.165 [Info] Writing prefixes
14:10:35.170 [Info] Patching void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SimGameState_AddItemStatType::Prefix(BattleTech.SimGameState __instance, string id, Type type, bool damaged)

14:10:35.172 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddItemStat(string id, Type type, bool damaged)
14:10:35.174 [Info] Writing prefixes
14:10:35.180 [Info] Patching void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.StringDataLoadRequest_OnLoadedWithText::Prefix(BattleTech.VersionManifestEntry ___manifestEntry, String& text)
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Prefix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, string text, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionDef_OnLoadedWithJSON::Postfix(BattleTech.Data.DataManager+FileLoadRequest __instance, BattleTech.Data.DataManager ___dataManager, String& __state)

14:10:35.182 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+StringDataLoadRequest<BattleTech.WeaponDef>::OnLoadedWithText(string text)
14:10:35.184 [Info] Writing prefixes
14:10:35.185 [Info] Writing postfixes
14:10:35.190 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
1 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)

14:10:35.192 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
14:10:35.194 [Info] Writing prefixes
14:10:35.196 [Info] Writing postfixes
14:10:35.201 [Info] Patching System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Shop_GetAllInventoryShopItems::Postfix(BattleTech.Shop __instance, System.Collections.Generic.List`1[[BattleTech.ShopDefItem, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:35.203 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ShopDefItem> BattleTech.Shop::GetAllInventoryShopItems()
14:10:35.205 [Info] Writing postfixes
14:10:35.215 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SG_Shop_Screen_AddShopInventory::Prefix(BattleTech.UI.SG_Shop_Screen __instance, BattleTech.Shop shop, bool ___isInBuyingState, BattleTech.Data.DataManager ___dm)
1 postfixes:
* static void BattletechPerformanceFix.ShopTabLagFix::OnlySortAtEnd(BattleTech.UI.SG_Shop_Screen __instance)

14:10:35.217 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopInventory(BattleTech.Shop shop)
14:10:35.219 [Info] Writing prefixes
14:10:35.221 [Info] Writing postfixes
14:10:35.227 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
1 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)

14:10:35.229 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
14:10:35.231 [Info] Writing prefixes
14:10:35.233 [Info] Writing postfixes
14:10:35.241 [Info] Patching virtual void BattleTech.AmmunitionBox::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AmmunitionBox_InitStats::Postfix(BattleTech.AmmunitionBox __instance)

14:10:35.244 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::InitStats()
14:10:35.245 [Info] Writing postfixes
14:10:35.250 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.GameInstanceLaunchContractPatch::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract)
* static void CustAmmoCategories.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance)

14:10:35.252 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract)
14:10:35.254 [Info] Writing prefixes
14:10:35.258 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

14:10:35.260 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
14:10:35.262 [Info] Writing prefixes
14:10:35.269 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.LanceMechEquipmentList_SetLoadout::Prefix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.MechDef& ___activeMech, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___allComponents, BattleTech.Data.DataManager ___dataManager, BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location, BattleTech.UI.UIColor& __state)
1 postfixes:
* static void CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.TMProWrapper.LocalizableText headerLabel)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.271 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
14:10:35.273 [Info] Transpiling void BattleTech.UI.LanceMechEquipmentList::SetLoadout(BattleTech.UI.TMProWrapper.LocalizableText headerLabel, BattleTech.UI.UIColorRefTracker headerColor, UnityEngine.Transform layoutParent, BattleTech.ChassisLocations location)
14:10:35.276 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.LanceMechEquipmentList_SetLoadout_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.278 [Info] Writing prefixes
14:10:35.280 [Info] Writing postfixes
14:10:35.285 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::SetIconAndText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.DynamicSlots.Patches.MechLabItemSlotElement_SetIconAndText_Patch::Postfix(BattleTech.MechComponentRef ___componentRef, SVGImporter.SVGImage ___icon, BattleTech.UI.TMProWrapper.LocalizableText ___nameText, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextA, BattleTech.UI.TMProWrapper.LocalizableText ___bonusTextB)
* static void CustAmmoCategories.SharedVisibilityCache_RebuildCache::Postfix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.UI.TMProWrapper.LocalizableText& ___nameText)

14:10:35.287 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::SetIconAndText()
14:10:35.289 [Info] Writing postfixes
14:10:35.301 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
3 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:35.304 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:35.306 [Info] Writing prefixes
14:10:35.308 [Info] Writing postfixes
14:10:35.335 [Info] Patching BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_AddHistoryEvent::Postfix(BattleTech.StatCollection __instance, string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)

14:10:35.337 [Info] Running ILHook manipulator on BattleTech.StatHistory+Event BattleTech.StatCollection::AddHistoryEvent(string statName, string sourceID, int stackItemUID, BattleTech.StatCollection+StatOperation operation, BattleTech.Variant modValue, int modIndex)
14:10:35.339 [Info] Writing postfixes
14:10:35.344 [Info] Patching bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.StatCollection_RemoveHistoryEvent::Postfix(BattleTech.StatCollection __instance, BattleTech.Statistic stat, int eventUID, bool skipLogging)

14:10:35.346 [Info] Running ILHook manipulator on bool BattleTech.StatCollection::RemoveHistoryEvent(BattleTech.Statistic stat, int eventUID, bool skipLogging)
14:10:35.347 [Info] Writing postfixes
14:10:35.352 [Info] Patching void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
1 postfixes:
* static void CustAmmoCategories.CombatHUD_ShowCalledShotPopUp::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)

14:10:35.354 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::ShowCalledShotPopUp(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
14:10:35.355 [Info] Writing prefixes
14:10:35.357 [Info] Writing postfixes
14:10:35.360 [Info] Patching BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAttackDirection::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.AbstractActor target, BattleTech.AttackDirection& __result)

14:10:35.362 [Info] Running ILHook manipulator on BattleTech.AttackDirection BattleTech.HitLocation::GetAttackDirection(BattleTech.AbstractActor attacker, BattleTech.ICombatant target)
14:10:35.364 [Info] Writing postfixes
14:10:35.368 [Info] Patching virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SelectionStateFire_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

14:10:35.370 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateFire::get_NeedsCalledShot()
14:10:35.372 [Info] Writing postfixes
14:10:35.376 [Info] Patching void BattleTech.UI.UIManager::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomVoices.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)
* static void CustAmmoCategories.UIManager_Awake::Postfix(BattleTech.UI.UIManager __instance)

14:10:35.378 [Info] Running ILHook manipulator on void BattleTech.UI.UIManager::Awake()
14:10:35.380 [Info] Writing postfixes
14:10:35.385 [Info] Patching void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Briefing_InitializeContractComplete::Prefix(BattleTech.UI.Briefing __instance, MessageCenterMessage message)

14:10:35.387 [Info] Running ILHook manipulator on void BattleTech.UI.Briefing::InitializeContractComplete(MessageCenterMessage message)
14:10:35.389 [Info] Writing prefixes
14:10:35.396 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

14:10:35.398 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
14:10:35.400 [Info] Writing postfixes
14:10:35.403 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_InitData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)

14:10:35.405 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::InitData(BattleTech.UnitResult result, BattleTech.SimGameState theSimGame, BattleTech.Data.DataManager dataMan, BattleTech.Contract theContract)
14:10:35.407 [Info] Writing postfixes
14:10:35.412 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)

14:10:35.414 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
14:10:35.416 [Info] Writing postfixes
14:10:35.423 [Info] Patching virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_EjectPilot::Postfix(BattleTech.AbstractActor __instance)

14:10:35.426 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::EjectPilot(string sourceID, int stackItemID, BattleTech.DeathMethod deathMethod, bool isSilent)
14:10:35.427 [Info] Writing postfixes
14:10:35.432 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

14:10:35.434 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
14:10:35.436 [Info] Writing prefixes
14:10:35.437 [Info] Writing postfixes
14:10:35.443 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledMech::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

14:10:35.445 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledMech()
14:10:35.447 [Info] Writing prefixes
14:10:35.451 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AAR_UnitStatusWidget_AddKilledVehicle::Prefix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData)

14:10:35.453 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::AddKilledVehicle()
14:10:35.455 [Info] Writing prefixes
14:10:35.463 [Info] Patching static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Prefix(BattleTech.SimGameResultAction action, object additionalObject)
1 postfixes:
* static void CustAmmoCategories.SimGameState_ApplyEventAction::Postfix(BattleTech.SimGameResultAction action, object additionalObject)

14:10:35.465 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplyEventAction(BattleTech.SimGameResultAction action, object additionalObject)
14:10:35.467 [Info] Writing prefixes
14:10:35.469 [Info] Writing postfixes
14:10:35.521 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

14:10:35.524 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
14:10:35.526 [Info] Writing postfixes
14:10:35.534 [Info] Patching bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SimGameEventTracker_CheckRoll::Postfix(BattleTech.SimGameEventTracker __instance, bool incrementOnFailure, float randomRoll, Boolean& __result)

14:10:35.536 [Info] Running ILHook manipulator on bool BattleTech.SimGameEventTracker::CheckRoll(bool incrementOnFailure, float randomRoll)
14:10:35.538 [Info] Writing postfixes
14:10:35.544 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)

14:10:35.546 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
14:10:35.548 [Info] Writing postfixes
14:10:35.556 [Info] Patching void BattleTech.SGTravelManager::HandleNextTravelStep() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.558 [Info] Running ILHook manipulator on void BattleTech.SGTravelManager::HandleNextTravelStep()
14:10:35.560 [Info] Transpiling void BattleTech.SGTravelManager::HandleNextTravelStep()
14:10:35.563 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.SGTravelManager_HandleNextTravelStep::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.570 [Info] Patching void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.572 [Info] Running ILHook manipulator on void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
14:10:35.575 [Info] Transpiling void BattleTech.Starmap::OnPathfindingComplete(AStar+AStarResult result)
14:10:35.578 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategories.Starmap_OnPathfindingComplete::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.586 [Info] Patching virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_Init::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.UI.CombatHUD HUD)

14:10:35.588 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEvasiveBarPips::Init(BattleTech.UI.CombatHUD HUD)
14:10:35.590 [Info] Writing postfixes
14:10:35.596 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

14:10:35.598 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
14:10:35.600 [Info] Writing postfixes
14:10:35.661 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
3 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

14:10:35.663 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:35.665 [Info] Writing prefixes
14:10:35.667 [Info] Writing postfixes
14:10:35.677 [Info] Patching void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance)
* static void CustAmmoCategories.DataManager_PrewarmComplete::Postfix(BattleTech.Data.DataManager __instance, BattleTech.Data.LoadRequest batch)

14:10:35.680 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PrewarmComplete(BattleTech.Data.LoadRequest batch)
14:10:35.681 [Info] Writing postfixes
14:10:35.685 [Info] Patching void BattleTech.Data.SVGCache::Clear() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.SVGCache_Clear::Prefix(BattleTech.Data.SVGCache __instance)

14:10:35.687 [Info] Running ILHook manipulator on void BattleTech.Data.SVGCache::Clear()
14:10:35.689 [Info] Writing prefixes
14:10:35.695 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)

14:10:35.697 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
14:10:35.699 [Info] Writing postfixes
14:10:35.707 [Info] Patching void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_SetCompanyCrest::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState ___simState)

14:10:35.709 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::SetCompanyCrest(string crestId)
14:10:35.711 [Info] Writing postfixes
14:10:35.715 [Info] Patching void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.SGHeaderWidget_Init::Postfix(BattleTech.UI.SGHeaderWidget __instance, BattleTech.SimGameState simGame)

14:10:35.717 [Info] Running ILHook manipulator on void BattleTech.UI.SGHeaderWidget::Init(BattleTech.SimGameState simGame)
14:10:35.719 [Info] Writing postfixes
14:10:35.723 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

14:10:35.726 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
14:10:35.728 [Info] Writing postfixes
14:10:35.735 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

14:10:35.737 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
14:10:35.739 [Info] Writing postfixes
14:10:35.748 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

14:10:35.750 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
14:10:35.752 [Info] Writing postfixes
14:10:35.758 [Info] Patching UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.EncounterLayerData_GetEncounterBoundaryTexture::Postfix(BattleTech.EncounterLayerData __instance, UnityEngine.Texture2D& __result)

14:10:35.760 [Info] Running ILHook manipulator on UnityEngine.Texture2D BattleTech.EncounterLayerData::GetEncounterBoundaryTexture()
14:10:35.762 [Info] Writing postfixes
14:10:35.771 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

14:10:35.774 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
14:10:35.776 [Info] Writing postfixes
14:10:35.783 [Info] Patching bool BattleTech.Weapon::get_CanFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_CanFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

14:10:35.785 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_CanFire()
14:10:35.787 [Info] Writing postfixes
14:10:35.792 [Info] Patching void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DefendXUnitsObjective_Tick::Prefix(BattleTech.Designed.DefendXUnitsObjective __instance, MessageCenterMessage message)

14:10:35.794 [Info] Running ILHook manipulator on void BattleTech.Designed.DefendXUnitsObjective::Tick(MessageCenterMessage message)
14:10:35.796 [Info] Writing prefixes
14:10:35.802 [Info] Patching void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.TimerObjective_AdvanceTimer::Prefix(BattleTech.Designed.TimerObjective __instance, MessageCenterMessage message)

14:10:35.804 [Info] Running ILHook manipulator on void BattleTech.Designed.TimerObjective::AdvanceTimer(MessageCenterMessage message)
14:10:35.806 [Info] Writing prefixes
14:10:35.811 [Info] Patching void BattleTech.TurnDirector::FinishBeginRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.TurnDirector_FinishBeginRound::Postfix(BattleTech.TurnDirector __instance)

14:10:35.813 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::FinishBeginRound()
14:10:35.815 [Info] Writing postfixes
14:10:35.821 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

14:10:35.823 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
14:10:35.825 [Info] Writing postfixes
14:10:35.834 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CombatHUDWeaponSlot_UpdateTooltipStrings::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target)

14:10:35.836 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateTooltipStrings(BattleTech.ICombatant target)
14:10:35.838 [Info] Writing prefixes
14:10:35.843 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)

14:10:35.845 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:35.847 [Info] Writing prefixes
14:10:35.850 [Info] Writing postfixes
14:10:35.856 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)

14:10:35.859 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
14:10:35.861 [Info] Writing prefixes
14:10:35.862 [Info] Writing postfixes
14:10:35.868 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

14:10:35.870 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
14:10:35.872 [Info] Writing prefixes
14:10:35.884 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.886 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:35.889 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:35.892 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.894 [Info] Writing postfixes
14:10:35.901 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.903 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:35.906 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:35.909 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.911 [Info] Writing postfixes
14:10:35.919 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.921 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:35.924 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:35.926 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.928 [Info] Writing postfixes
14:10:35.933 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)

14:10:35.936 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:35.938 [Info] Writing prefixes
14:10:35.944 [Info] Patching bool BattleTech.Weapon::get_HasAmmo() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.JammingRealizer::Postfix(BattleTech.Weapon __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:35.946 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_HasAmmo()
14:10:35.948 [Info] Transpiling bool BattleTech.Weapon::get_HasAmmo()
14:10:35.950 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_HasAmmo::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:35.952 [Info] Writing postfixes
14:10:35.956 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:35.959 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:35.961 [Info] Writing prefixes
14:10:35.963 [Info] Writing postfixes
14:10:35.971 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Prefix(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Mech::Postfix(BattleTech.Weapon __instance, BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)

14:10:35.973 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Mech parent, BattleTech.CombatGameState combat, BattleTech.MechComponentRef mcRef, string UID)
14:10:35.975 [Info] Writing prefixes
14:10:35.978 [Info] Writing postfixes
14:10:36.042 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Vehicle::Postfix(BattleTech.Weapon __instance, BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)

14:10:36.044 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Vehicle parent, BattleTech.CombatGameState combat, BattleTech.VehicleComponentRef vcRef, string UID)
14:10:36.046 [Info] Writing postfixes
14:10:36.051 [Info] Patching void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.Weapon_Constructor_Turret::Postfix(BattleTech.Weapon __instance, BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)

14:10:36.054 [Info] Running ILHook manipulator on void BattleTech.Weapon::.ctor(BattleTech.Turret parent, BattleTech.CombatGameState combat, BattleTech.TurretComponentRef tcRef, string UID)
14:10:36.055 [Info] Writing postfixes
14:10:36.060 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

14:10:36.062 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
14:10:36.064 [Info] Writing postfixes
14:10:36.069 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_DisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon value)

14:10:36.071 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::set_DisplayedWeapon(BattleTech.Weapon value)
14:10:36.073 [Info] Writing postfixes
14:10:36.078 [Info] Patching void BattleTech.AbstractActor::InitAbilities(bool ModifyStats) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CombatHUDWeaponSlot_InitAbilities::Postfix(BattleTech.AbstractActor __instance)

14:10:36.080 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbilities(bool ModifyStats)
14:10:36.082 [Info] Writing postfixes
14:10:36.092 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

14:10:36.094 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
14:10:36.096 [Info] Writing prefixes
14:10:36.098 [Info] Writing postfixes
14:10:36.104 [Info] Patching virtual void WeaponEffect::PlayPreFire() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayPrefireSound::Prefix(WeaponEffect __instance, String& __state)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayPreFire::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategories.WeaponEffect_PlayPrefireSound::Postfix(WeaponEffect __instance, String& __state)

14:10:36.106 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayPreFire()
14:10:36.108 [Info] Writing prefixes
14:10:36.110 [Info] Writing postfixes
14:10:36.116 [Info] Patching virtual void WeaponEffect::PlayImpact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpact::Prefix(WeaponEffect __instance)

14:10:36.118 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpact()
14:10:36.120 [Info] Writing prefixes
14:10:36.128 [Info] Patching virtual void WeaponEffect::PlayImpactAudio() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_PlayImpactAudio::Prefix(WeaponEffect __instance)

14:10:36.130 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayImpactAudio()
14:10:36.132 [Info] Writing prefixes
14:10:36.138 [Info] Patching virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Prefix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_OnImpact::Postfix(WeaponEffect __instance, Single& hitDamage, Single& structureDamage, int ___hitIndex)

14:10:36.140 [Info] Running ILHook manipulator on virtual void WeaponEffect::OnImpact(float hitDamage, float structureDamage)
14:10:36.142 [Info] Writing prefixes
14:10:36.144 [Info] Writing postfixes
14:10:36.149 [Info] Patching virtual void MissileEffect::PlayProjectile() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.MissileEffect_PlayProjectile::Prefix(MissileEffect __instance)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Prefix(MissileEffect __instance)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayProjectileAMS::Postfix(MissileEffect __instance, int ___hitIndex)

14:10:36.151 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayProjectile()
14:10:36.153 [Info] Writing prefixes
14:10:36.154 [Info] Writing postfixes
14:10:36.160 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)

14:10:36.162 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
14:10:36.164 [Info] Writing prefixes
14:10:36.172 [Info] Patching void MissileEffect::GenerateMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateMissilePath::Prefix(MissileEffect __instance)

14:10:36.174 [Info] Running ILHook manipulator on void MissileEffect::GenerateMissilePath()
14:10:36.176 [Info] Writing prefixes
14:10:36.184 [Info] Patching void MissileEffect::GenerateIndirectMissilePath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_GenerateIndirectMissilePath::Prefix(MissileEffect __instance)

14:10:36.186 [Info] Running ILHook manipulator on void MissileEffect::GenerateIndirectMissilePath()
14:10:36.188 [Info] Writing prefixes
14:10:36.196 [Info] Patching virtual void MissileEffect::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_Update::Postfix(MissileEffect __instance)

14:10:36.198 [Info] Running ILHook manipulator on virtual void MissileEffect::Update()
14:10:36.200 [Info] Writing postfixes
14:10:36.206 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_GenerateHitInfoAMS::Postfix(BattleTech.AttackDirector+AttackSequence __instance)

14:10:36.208 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateToHitInfo()
14:10:36.210 [Info] Writing postfixes
14:10:36.217 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:36.219 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:36.221 [Info] Writing prefixes
14:10:36.223 [Info] Writing postfixes
14:10:36.230 [Info] Patching void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MessageCoordinator_Debug::Postfix(BattleTech.AttackDirectorHelpers.MessageCoordinator __instance, BattleTech.WeaponHitInfo?[][] allHitInfo)

14:10:36.233 [Info] Running ILHook manipulator on void BattleTech.AttackDirectorHelpers.MessageCoordinator::Initialize(BattleTech.AttackDirector+AttackSequence attackSequence, BattleTech.WeaponHitInfo?[][] allHitInfo)
14:10:36.235 [Info] Writing postfixes
14:10:36.241 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

14:10:36.244 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
14:10:36.246 [Info] Writing prefixes
14:10:36.247 [Info] Writing postfixes
14:10:36.264 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)

14:10:36.266 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
14:10:36.268 [Info] Writing prefixes
14:10:36.279 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)

14:10:36.282 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
14:10:36.284 [Info] Writing prefixes
14:10:36.293 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)

14:10:36.295 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
14:10:36.297 [Info] Writing postfixes
14:10:36.304 [Info] Patching void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.ClusteredShotRandomCacheEnabler::Prefix(BattleTech.AttackDirector+AttackSequence __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:36.306 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
14:10:36.308 [Info] Transpiling void BattleTech.AttackDirector+AttackSequence::GenerateRandomCache()
14:10:36.311 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> WeaponRealizer.ClusteredShotRandomCacheEnabler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:36.313 [Info] Writing prefixes
14:10:36.318 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:36.321 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:36.322 [Info] Writing postfixes
14:10:36.329 [Info] Patching static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AmmoCategoryEnumeration_GetAmmoCategoryByName::Postfix(string name, BattleTech.AmmoCategoryValue& __result)

14:10:36.331 [Info] Running ILHook manipulator on static BattleTech.AmmoCategoryValue BattleTech.AmmoCategoryEnumeration::GetAmmoCategoryByName(string name)
14:10:36.333 [Info] Writing postfixes
14:10:36.338 [Info] Patching virtual bool BattleTech.Mech::get_CanSprint() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_CanSprint::Postfix(BattleTech.Mech __instance, Boolean& __result)

14:10:36.339 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_CanSprint()
14:10:36.342 [Info] Writing postfixes
14:10:36.345 [Info] Patching void BattleTech.UI.CombatHUD::HandleMissionComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUD_HandleMissionComplete::Prefix(BattleTech.UI.CombatHUD __instance)

14:10:36.346 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::HandleMissionComplete()
14:10:36.348 [Info] Writing prefixes
14:10:36.352 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)

14:10:36.354 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
14:10:36.356 [Info] Writing postfixes
14:10:36.360 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)

14:10:36.362 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
14:10:36.364 [Info] Writing prefixes
14:10:36.369 [Info] Patching void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.WeaponRepresentation_Init::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
* static void CustAmmoCategoriesPatches.WeaponRepresentation_InitAMS::Postfix(BattleTech.WeaponRepresentation __instance, BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)

14:10:36.371 [Info] Running ILHook manipulator on void BattleTech.WeaponRepresentation::Init(BattleTech.Weapon weapon, UnityEngine.Transform parentTransform, bool isParented, string parentDisplayName, int mountedLocation)
14:10:36.373 [Info] Writing postfixes
14:10:36.381 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

14:10:36.383 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
14:10:36.385 [Info] Writing prefixes
14:10:36.391 [Info] Patching int BattleTech.Mech::get_AdjustedHeatsinkCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_HeatSinkCapacity::Postfix(BattleTech.Mech __instance, Int32& __result)

14:10:36.393 [Info] Running ILHook manipulator on int BattleTech.Mech::get_AdjustedHeatsinkCapacity()
14:10:36.395 [Info] Writing postfixes
14:10:36.401 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)

14:10:36.403 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
14:10:36.406 [Info] Writing prefixes
14:10:36.413 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Mech_OnNewRound::Postfix(BattleTech.Mech __instance, int round)

14:10:36.415 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Mech::OnNewRound(int round)
14:10:36.417 [Info] Writing postfixes
14:10:36.421 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)

14:10:36.423 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
14:10:36.425 [Info] Writing prefixes
14:10:36.429 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)

14:10:36.431 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
14:10:36.433 [Info] Writing prefixes
14:10:36.437 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)

14:10:36.439 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
14:10:36.441 [Info] Writing prefixes
14:10:36.445 [Info] Patching void BattleTech.Mech::AddSprintHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddSprintHeat::Prefix(BattleTech.Mech __instance)

14:10:36.447 [Info] Running ILHook manipulator on void BattleTech.Mech::AddSprintHeat()
14:10:36.449 [Info] Writing prefixes
14:10:36.453 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)

14:10:36.455 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
14:10:36.457 [Info] Writing prefixes
14:10:36.461 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)

14:10:36.463 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
14:10:36.464 [Info] Writing prefixes
14:10:36.469 [Info] Patching void BattleTech.Mech::AddEnvironmentHeat() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEnvironmentHeat::Prefix(BattleTech.Mech __instance)

14:10:36.471 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEnvironmentHeat()
14:10:36.473 [Info] Writing prefixes
14:10:36.478 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:36.480 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
14:10:36.483 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
14:10:36.486 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:36.491 [Info] Patching BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.Mech_GetHeatSequence::Prefix(BattleTech.Mech __instance, int rootSequenceGUID, Boolean& performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)

14:10:36.493 [Info] Running ILHook manipulator on BattleTech.MechHeatSequence BattleTech.Mech::GetHeatSequence(int rootSequenceGUID, bool performHeatSinkStep, bool applyStartupHeatSinks, string instigatorID)
14:10:36.495 [Info] Writing prefixes
14:10:36.499 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)

14:10:36.501 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
14:10:36.503 [Info] Writing postfixes
14:10:36.508 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForVisibility::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

14:10:36.510 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForVisibility()
14:10:36.512 [Info] Writing postfixes
14:10:36.516 [Info] Patching bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirectionIndicator_ShouldShowArcsForTarget::Postfix(BattleTech.UI.AttackDirectionIndicator __instance, Boolean& __result)

14:10:36.518 [Info] Running ILHook manipulator on bool BattleTech.UI.AttackDirectionIndicator::get_ShouldShowArcsForTarget()
14:10:36.520 [Info] Writing postfixes
14:10:36.525 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:36.527 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
14:10:36.529 [Info] Writing postfixes
14:10:36.536 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
3 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:36.539 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:36.541 [Info] Writing prefixes
14:10:36.543 [Info] Writing postfixes
14:10:36.551 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Prefix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpact::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
* static bool CustAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactWD::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactDBG::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceImpactAOE::Postfix(BattleTech.AttackDirector+AttackSequence __instance, CustAmmoCategories.CustomAmmoCategoriesPatches.ImpactAOEState& __state, MessageCenterMessage& message)

14:10:36.553 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceImpact(MessageCenterMessage message)
14:10:36.555 [Info] Writing prefixes
14:10:36.557 [Info] Writing postfixes
14:10:36.572 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSticky() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_UpdateSticky::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:36.574 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSticky()
14:10:36.576 [Info] Writing prefixes
14:10:36.578 [Info] Writing postfixes
14:10:36.582 [Info] Patching virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Init::Prefix(BattleTech.AbstractActor __instance)

14:10:36.584 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::Init(UnityEngine.Vector3 position, float facing, bool checksEncounterCells)
14:10:36.585 [Info] Writing prefixes
14:10:36.590 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)

14:10:36.592 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
14:10:36.594 [Info] Writing prefixes
14:10:36.599 [Info] Patching virtual void BattleTech.Turret::InitStats() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.TurretMechComponents.Patches.Turret_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Turret __instance)
* static void CustAmmoCategoriesPatches.Turret_InitStats::Prefix(BattleTech.Turret __instance)

14:10:36.601 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitStats()
14:10:36.603 [Info] Writing prefixes
14:10:36.612 [Info] Patching void BattleTech.AbstractActor::ReapplyDesignMasks() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_ReapplyDesignMasks::Prefix(BattleTech.AbstractActor __instance)

14:10:36.614 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ReapplyDesignMasks()
14:10:36.616 [Info] Writing prefixes
14:10:36.620 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

14:10:36.622 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewMoveIndicators(BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
14:10:36.624 [Info] Writing prefixes
14:10:36.627 [Info] Writing postfixes
14:10:36.633 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDStatusPanel_ShowPreviewStatuses::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor, BattleTech.MoveType moveType)

14:10:36.635 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowPreviewStatuses(BattleTech.AbstractActor actor, BattleTech.MapTerrainDataCell cell, BattleTech.MoveType moveType, UnityEngine.Vector3 worldPos)
14:10:36.637 [Info] Writing prefixes
14:10:36.638 [Info] Writing postfixes
14:10:36.643 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

14:10:36.645 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
14:10:36.647 [Info] Writing prefixes
14:10:36.649 [Info] Writing postfixes
14:10:36.653 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

14:10:36.655 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
14:10:36.657 [Info] Writing prefixes
14:10:36.659 [Info] Writing postfixes
14:10:36.663 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

14:10:36.665 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
14:10:36.666 [Info] Writing prefixes
14:10:36.668 [Info] Writing postfixes
14:10:36.673 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

14:10:36.675 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
14:10:36.676 [Info] Writing prefixes
14:10:36.678 [Info] Writing postfixes
14:10:36.696 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
1 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)

14:10:36.699 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
14:10:36.703 [Info] Writing prefixes
14:10:36.706 [Info] Writing postfixes
14:10:36.712 [Info] Patching void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID)
1 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_ApplyDesignMaskStickyEffect::Postfix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef mask, int stackItemUID)

14:10:36.715 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ApplyDesignMaskStickyEffect(BattleTech.DesignMaskDef mask, int stackItemUID)
14:10:36.718 [Info] Writing prefixes
14:10:36.721 [Info] Writing postfixes
14:10:36.727 [Info] Patching virtual void BattleTech.DesignMaskDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.DesignMaskDef_fromJSON::Prefix(BattleTech.VehicleChassisDef __instance, String& json)

14:10:36.730 [Info] Running ILHook manipulator on virtual void BattleTech.DesignMaskDef::FromJSON(string json)
14:10:36.732 [Info] Writing prefixes
14:10:36.737 [Info] Patching void BattleTech.TurnDirector::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_Update::Prefix(BattleTech.TurnDirector __instance, bool ___needsToEndRound)

14:10:36.739 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::Update()
14:10:36.742 [Info] Writing prefixes
14:10:36.750 [Info] Patching bool BattleTech.TurnDirector::CanAdvanceTurns() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.TurnDirector_CanAdvanceTurns::Postfix(BattleTech.TurnDirector __instance, Boolean& __result)

14:10:36.753 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::CanAdvanceTurns()
14:10:36.755 [Info] Writing postfixes
14:10:36.763 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

14:10:36.766 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
14:10:36.768 [Info] Writing postfixes
14:10:36.791 [Info] Patching void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ElementManager_RefreshCommandBufferInt::Prefix(BattleTech.Rendering.UI.ElementManager __instance, UnityEngine.Rendering.CommandBuffer& ____uiCommandBuffer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIBleep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___bleepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UISweep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.BTUIDecal, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___sweepDecalContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UICreep, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___creepContainer, System.Collections.Generic.List`1[[BattleTech.Rendering.UI.UIMovementDot, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___dotContainer, UnityEngine.Matrix4x4[]& ___normalTrs, UnityEngine.Matrix4x4[]& ___forestTrs, UnityEngine.Matrix4x4[]& ___waterTrs, UnityEngine.Matrix4x4[]& ___roughTrs, UnityEngine.Matrix4x4[]& ___roadTrs, UnityEngine.Matrix4x4[]& ___specialTrs, UnityEngine.Matrix4x4[]& ___dangerousTrs, Int32& ___log100Count)

14:10:36.794 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.ElementManager::RefreshCommandBufferInt()
14:10:36.796 [Info] Writing prefixes
14:10:36.874 [Info] Patching void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_FireShells::Postfix(MissileEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, bool isIndirect)

14:10:36.876 [Info] Running ILHook manipulator on void MissileEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex, bool isIndirect)
14:10:36.878 [Info] Writing postfixes
14:10:36.884 [Info] Patching void WeaponEffect::PublishWeaponCompleteMessage() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Prefix(WeaponEffect __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.WeaponEffect_PublishWeaponCompleteMessage::Postfix(WeaponEffect __instance)

14:10:36.886 [Info] Running ILHook manipulator on void WeaponEffect::PublishWeaponCompleteMessage()
14:10:36.888 [Info] Writing prefixes
14:10:36.890 [Info] Writing postfixes
14:10:36.895 [Info] Patching void MissileLauncherEffect::SetupMissiles() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileLauncherEffect_SetupMissiles::Postfix(MissileLauncherEffect __instance, bool ___isIndirect)

14:10:36.897 [Info] Running ILHook manipulator on void MissileLauncherEffect::SetupMissiles()
14:10:36.898 [Info] Writing postfixes
14:10:36.905 [Info] Patching virtual void MissileLauncherEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_Update::Prefix(MissileLauncherEffect __instance)

14:10:36.907 [Info] Running ILHook manipulator on virtual void MissileLauncherEffect::Update()
14:10:36.909 [Info] Writing prefixes
14:10:36.914 [Info] Patching virtual void WeaponEffect::InitProjectile() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_InitProjectile::Postfix(WeaponEffect __instance)

14:10:36.917 [Info] Running ILHook manipulator on virtual void WeaponEffect::InitProjectile()
14:10:36.919 [Info] Writing postfixes
14:10:36.927 [Info] Patching void MissileLauncherEffect::ClearMissiles() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_ClearMissiles::Prefix(MissileLauncherEffect __instance)

14:10:36.929 [Info] Running ILHook manipulator on void MissileLauncherEffect::ClearMissiles()
14:10:36.931 [Info] Writing prefixes
14:10:36.936 [Info] Patching virtual void MissileEffect::OnComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MissileEffect_OnComplete::Postfix(MissileEffect __instance)

14:10:36.937 [Info] Running ILHook manipulator on virtual void MissileEffect::OnComplete()
14:10:36.939 [Info] Writing postfixes
14:10:36.944 [Info] Patching virtual void WeaponEffect::DestroyFlimsyObjects() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_DestroyFlimsyObjects::Prefix(WeaponEffect __instance)
* static bool CustAmmoCategoriesPatches.MissileEffect_DestroyFlimsyObjects::Prefix(MissileEffect __instance, int ___hitIndex)

14:10:36.946 [Info] Running ILHook manipulator on virtual void WeaponEffect::DestroyFlimsyObjects()
14:10:36.948 [Info] Writing prefixes
14:10:36.953 [Info] Patching virtual void MissileEffect::PlayImpact() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_PlayImpactScorch::Postfix(WeaponEffect __instance)
* static void CustAmmoCategoriesPatches.MissileEffect_PlayImpact::Postfix(MissileEffect __instance, int ___hitIndex)

14:10:36.955 [Info] Running ILHook manipulator on virtual void MissileEffect::PlayImpact()
14:10:36.958 [Info] Writing postfixes
14:10:36.967 [Info] Patching void MissileEffect::SpawnImpactExplosion(string explosionName) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName)
* static bool CustAmmoCategoriesPatches.MissileEffect_SpawnImpactExplosion::Prefix(MissileEffect __instance, string explosionName, int ___hitIndex, AkGameObj ___projectileAudioObject, UnityEngine.Vector3 ___endPos, UnityEngine.Vector3 ___preFireEndPos, bool ___isSRM)

14:10:36.969 [Info] Running ILHook manipulator on void MissileEffect::SpawnImpactExplosion(string explosionName)
14:10:36.972 [Info] Writing prefixes
14:10:36.980 [Info] Patching void MissileLauncherEffect::FireNextMissile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MissileLauncherEffect_FireNextMissile::Prefix(MissileLauncherEffect __instance, int ___hitIndex, Int32& ___emitterIndex, AkGameObj ___parentAudioObject)

14:10:36.982 [Info] Running ILHook manipulator on void MissileLauncherEffect::FireNextMissile()
14:10:36.985 [Info] Writing prefixes
14:10:36.991 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

14:10:36.993 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
14:10:36.995 [Info] Writing postfixes
14:10:37.001 [Info] Patching void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.ActorMovementSequence_CompleteOrders::Prefix(BattleTech.ActorMovementSequence __instance, System.Collections.Generic.List`1[[BattleTech.WayPoint, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& waypoints, UnityEngine.Vector3& finalHeading, bool sprinting, BattleTech.ICombatant& meleeTarget)

14:10:37.004 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::SetWaypoints(System.Collections.Generic.List<BattleTech.WayPoint> waypoints, UnityEngine.Vector3 finalHeading, bool sprinting, BattleTech.ICombatant meleeTarget)
14:10:37.006 [Info] Writing prefixes
14:10:37.016 [Info] Patching void BattleTech.ActorMovementSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_Update::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:37.018 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Update()
14:10:37.021 [Info] Writing postfixes
14:10:37.031 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:37.033 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
14:10:37.035 [Info] Writing postfixes
14:10:37.045 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:37.047 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
14:10:37.050 [Info] Writing postfixes
14:10:37.056 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

14:10:37.058 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
14:10:37.060 [Info] Writing prefixes
14:10:37.065 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:37.067 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
14:10:37.069 [Info] Writing postfixes
14:10:37.074 [Info] Patching virtual void BattleTech.MechJumpSequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechJumpSequence_CompleteOrders::Postfix(BattleTech.MechJumpSequence __instance)

14:10:37.077 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::CompleteOrders()
14:10:37.079 [Info] Writing postfixes
14:10:37.084 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

14:10:37.087 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
14:10:37.089 [Info] Writing postfixes
14:10:37.094 [Info] Patching void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.SGEventPanel_Init::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameState sim)

14:10:37.096 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Init(BattleTech.SimGameState sim)
14:10:37.098 [Info] Writing prefixes
14:10:37.104 [Info] Patching void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_OnOptionSelected::Prefix(BattleTech.UI.SGEventPanel __instance, BattleTech.SimGameEventOption option)

14:10:37.106 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::OnOptionSelected(BattleTech.SimGameEventOption option)
14:10:37.108 [Info] Writing prefixes
14:10:37.114 [Info] Patching void BattleTech.UI.SGEventPanel::Dismiss() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.SGEventPanel_Dismiss::Prefix(BattleTech.UI.SGEventPanel __instance)

14:10:37.116 [Info] Running ILHook manipulator on void BattleTech.UI.SGEventPanel::Dismiss()
14:10:37.118 [Info] Writing prefixes
14:10:37.122 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:37.125 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
14:10:37.127 [Info] Writing postfixes
14:10:37.132 [Info] Patching virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.CombatHUDInfoSidePanel_Update::Prefix(BattleTech.UI.CombatHUDInfoSidePanel __instance, Boolean& ___shownForSingleFrame)

14:10:37.134 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDInfoSidePanel::Update()
14:10:37.136 [Info] Writing prefixes
14:10:37.143 [Info] Patching void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_OnActorHovered::Postfix(BattleTech.UI.CombatHUD __instance)

14:10:37.145 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorHovered(MessageCenterMessage message)
14:10:37.147 [Info] Writing postfixes
14:10:37.151 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedHeatInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

14:10:37.153 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedHeatInfo()
14:10:37.155 [Info] Writing postfixes
14:10:37.159 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUD_RefreshPredictedStabilityInfo::Postfix(BattleTech.UI.CombatHUDActorInfo __instance)

14:10:37.160 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::RefreshPredictedStabilityInfo()
14:10:37.162 [Info] Writing postfixes
14:10:37.168 [Info] Patching void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.MoveStatusPreview_DisplayPreviewStatus::Prefix(BattleTech.UI.MoveStatusPreview __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)

14:10:37.171 [Info] Running ILHook manipulator on void BattleTech.UI.MoveStatusPreview::DisplayPreviewStatus(BattleTech.AbstractActor actor, UnityEngine.Vector3 worldPos, BattleTech.MoveType moveType)
14:10:37.172 [Info] Writing prefixes
14:10:37.182 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:37.184 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Vehicle target)
14:10:37.186 [Info] Writing postfixes
14:10:37.191 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

14:10:37.193 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
14:10:37.195 [Info] Writing postfixes
14:10:37.203 [Info] Patching BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier, BattleTech.VehicleChassisLocations& __result)

14:10:37.205 [Info] Running ILHook manipulator on BattleTech.VehicleChassisLocations BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Vehicle target, float randomRoll, BattleTech.VehicleChassisLocations bonusLocation, float bonusChanceMultiplier)
14:10:37.207 [Info] Writing postfixes
14:10:37.211 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

14:10:37.213 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
14:10:37.215 [Info] Writing postfixes
14:10:37.220 [Info] Patching virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_DependenciesLoaded::Prefix(BattleTech.WeaponDef __instance, uint loadWeight, Boolean& __result, BattleTech.Data.DataManager ___dataManager)

14:10:37.222 [Info] Running ILHook manipulator on virtual bool BattleTech.WeaponDef::DependenciesLoaded(uint loadWeight)
14:10:37.224 [Info] Writing prefixes
14:10:37.229 [Info] Patching virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.WeaponDef_GatherDependencies::Prefix(BattleTech.WeaponDef __instance, BattleTech.Data.DataManager& ___dataManager, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:37.231 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:37.233 [Info] Writing prefixes
14:10:37.238 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

14:10:37.240 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
14:10:37.242 [Info] Writing prefixes
14:10:37.244 [Info] Writing postfixes
14:10:37.247 [Info] Patching int BattleTech.Weapon::get_CurrentAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_CurrentAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

14:10:37.249 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_CurrentAmmo()
14:10:37.251 [Info] Writing prefixes
14:10:37.255 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:37.258 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:37.260 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:37.262 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:37.264 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:37.266 [Info] Writing postfixes
14:10:37.273 [Info] Patching bool BattleTech.AbstractActor::get_IsTargetMarked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AbstractActor_IsTargetMarked::Prefix(BattleTech.AbstractActor __instance, Boolean& __result)

14:10:37.275 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::get_IsTargetMarked()
14:10:37.277 [Info] Writing prefixes
14:10:37.281 [Info] Patching Localize.Text BattleTech.MechComponent::get_UIName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_UIName::Postfix(BattleTech.MechComponent __instance, Localize.Text& __result)

14:10:37.283 [Info] Running ILHook manipulator on Localize.Text BattleTech.MechComponent::get_UIName()
14:10:37.285 [Info] Writing postfixes
14:10:37.289 [Info] Patching float BattleTech.Weapon::get_DamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_DamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.291 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_DamagePerShot()
14:10:37.293 [Info] Writing postfixes
14:10:37.298 [Info] Patching void BattleTech.Weapon::ResetWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ResetWeapon::Postfix(BattleTech.Weapon __instance)

14:10:37.300 [Info] Running ILHook manipulator on void BattleTech.Weapon::ResetWeapon()
14:10:37.302 [Info] Writing postfixes
14:10:37.307 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)

14:10:37.309 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
14:10:37.311 [Info] Writing postfixes
14:10:37.315 [Info] Patching int BattleTech.Weapon::get_InternalAmmo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Weapon_InternalAmmo::Prefix(BattleTech.Weapon __instance, Int32& __result)

14:10:37.317 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_InternalAmmo()
14:10:37.318 [Info] Writing prefixes
14:10:37.322 [Info] Patching float BattleTech.Weapon::get_StructureDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_StructureDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.324 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_StructureDamagePerShot()
14:10:37.326 [Info] Writing postfixes
14:10:37.329 [Info] Patching float BattleTech.Weapon::get_HeatDamagePerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatDamagePerShot::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.331 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatDamagePerShot()
14:10:37.332 [Info] Writing postfixes
14:10:37.336 [Info] Patching int BattleTech.Weapon::get_ShotsWhenFired() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShotsWhenFired::Postfix(BattleTech.Weapon __instance, Int32& __result)

14:10:37.337 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ShotsWhenFired()
14:10:37.339 [Info] Writing postfixes
14:10:37.345 [Info] Patching int BattleTech.Weapon::get_ProjectilesPerShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ProjectilesPerShot::Postfix(BattleTech.Weapon __instance, Int32& __result)

14:10:37.347 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_ProjectilesPerShot()
14:10:37.348 [Info] Writing postfixes
14:10:37.430 [Info] Patching float BattleTech.Weapon::get_ClusteringModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ClusteringModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.434 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ClusteringModifier()
14:10:37.437 [Info] Writing postfixes
14:10:37.444 [Info] Patching float BattleTech.Weapon::get_CriticalChanceMultiplier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_CriticalChanceMultiplier::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.447 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_CriticalChanceMultiplier()
14:10:37.451 [Info] Writing postfixes
14:10:37.455 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)

14:10:37.458 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
14:10:37.461 [Info] Writing postfixes
14:10:37.469 [Info] Patching float BattleTech.Weapon::get_AccuracyModifier() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AccuracyModifier::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.471 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_AccuracyModifier()
14:10:37.473 [Info] Writing postfixes
14:10:37.480 [Info] Patching float BattleTech.Weapon::get_MinRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MinRange::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.483 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MinRange()
14:10:37.486 [Info] Writing postfixes
14:10:37.490 [Info] Patching float BattleTech.Weapon::get_MaxRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MaxRange::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.493 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MaxRange()
14:10:37.496 [Info] Writing postfixes
14:10:37.500 [Info] Patching float BattleTech.Weapon::get_ShortRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_ShortRange::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.503 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_ShortRange()
14:10:37.504 [Info] Writing postfixes
14:10:37.509 [Info] Patching float BattleTech.Weapon::get_MediumRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_MediumRange::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.511 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_MediumRange()
14:10:37.513 [Info] Writing postfixes
14:10:37.517 [Info] Patching float BattleTech.Weapon::get_LongRange() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_LongRange::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.519 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_LongRange()
14:10:37.521 [Info] Writing postfixes
14:10:37.525 [Info] Patching float BattleTech.Weapon::get_HeatGenerated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_HeatGenerated::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.527 [Info] Running ILHook manipulator on float BattleTech.Weapon::get_HeatGenerated()
14:10:37.529 [Info] Writing postfixes
14:10:37.534 [Info] Patching int BattleTech.Weapon::get_RefireModifier() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void WeaponRealizer.DamageAltersWeaponRefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)
* static void CustAmmoCategoriesPatches.Weapon_RefireModifier::Postfix(BattleTech.Weapon __instance, Int32& __result)

14:10:37.536 [Info] Running ILHook manipulator on int BattleTech.Weapon::get_RefireModifier()
14:10:37.537 [Info] Writing postfixes
14:10:37.541 [Info] Patching bool BattleTech.Weapon::get_IndirectFireCapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_IndirectFireCapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

14:10:37.543 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IndirectFireCapable()
14:10:37.545 [Info] Writing postfixes
14:10:37.549 [Info] Patching bool BattleTech.Weapon::get_AOECapable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_AOECapable::Postfix(BattleTech.Weapon __instance, Boolean& __result)

14:10:37.551 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_AOECapable()
14:10:37.553 [Info] Writing postfixes
14:10:37.557 [Info] Patching float BattleTech.Weapon::Instability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_Instability::Postfix(BattleTech.Weapon __instance, Single& __result)

14:10:37.559 [Info] Running ILHook manipulator on float BattleTech.Weapon::Instability()
14:10:37.561 [Info] Writing postfixes
14:10:37.565 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

14:10:37.566 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
14:10:37.568 [Info] Writing prefixes
14:10:37.570 [Info] Writing postfixes
14:10:37.576 [Info] Patching int BattleTech.Weapon::DecrementAmmo(int stackItemUID) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategories+Weapon_DecrementAmmo::Prefix(BattleTech.Weapon __instance, int stackItemUID, Int32& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:37.579 [Info] Running ILHook manipulator on int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
14:10:37.581 [Info] Transpiling int BattleTech.Weapon::DecrementAmmo(int stackItemUID)
14:10:37.583 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.TurretLimitedAmmo.Patches.Weapon_DecrementAmmo_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:37.585 [Info] Writing prefixes
14:10:37.592 [Info] Patching virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:37.594 [Info] Running ILHook manipulator on virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
14:10:37.596 [Info] Transpiling virtual BehaviorTreeResults DoAnyMovesYieldLOFToAnyHostileNode::Tick()
14:10:37.600 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.DoAnyMovesYieldLOFToAnyHostileNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:37.608 [Info] Patching virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:37.610 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
14:10:37.612 [Info] Transpiling virtual BehaviorTreeResults HighestPriorityMoveCandidateIsAttackNode::Tick()
14:10:37.615 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.HighestPriorityMoveCandidateIsAttackNode_Tick::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:37.625 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.DynamicTreesHelper::OnInsert(object __instance, UnityEngine.Matrix4x4& trs, UnityEngine.Vector3& pos, UnityEngine.Quaternion rot, UnityEngine.Vector3& scale)

14:10:37.627 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::Insert(UnityEngine.Matrix4x4 trs, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, UnityEngine.Vector3 scale)
14:10:37.629 [Info] Writing postfixes
14:10:37.635 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupFullArray()

14:10:37.645 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupFullArray()
14:10:37.647 [Info] Writing prefixes
14:10:37.654 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::SetupComputeBuffer()

14:10:37.656 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::SetupComputeBuffer()
14:10:37.658 [Info] Writing prefixes
14:10:37.663 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateCombinedMesh()

14:10:37.665 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateCombinedMesh()
14:10:37.667 [Info] Writing prefixes
14:10:37.680 [Info] Patching void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.DynamicTreesHelper::GenerateMesh()

14:10:37.683 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.QuadTreeData::GenerateMesh()
14:10:37.685 [Info] Writing prefixes
14:10:37.691 [Info] Patching virtual BehaviorTreeResults BraceNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.BraceNode_Tick::Prefix(LeafBehaviorNode __instance, String& ___name, BehaviorTree& ___tree, BattleTech.AbstractActor ___unit, BehaviorNodeState& ___currentState, BehaviorTreeResults& __result)

14:10:37.693 [Info] Running ILHook manipulator on virtual BehaviorTreeResults BraceNode::Tick()
14:10:37.695 [Info] Writing prefixes
14:10:37.785 [Info] ### Harmony id=io.mission.activatablecomponents, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomActivatableEquipment.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomActivatableEquipment\CustomActivatableEquipment.dll
### At 2023-05-07 02.10.37
14:10:37.792 [Info] Patching BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AITeam_GetUnitThatCanReachECM::Prefix(AITeam __instance, System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits, BattleTech.AbstractActor& __result)

14:10:37.794 [Info] Running ILHook manipulator on BattleTech.AbstractActor AITeam::GetUnitThatCanReachECM(System.Collections.Generic.List<BattleTech.AbstractActor> unusedUnits)
14:10:37.796 [Info] Writing prefixes
14:10:37.802 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

14:10:37.804 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
14:10:37.806 [Info] Writing prefixes
14:10:37.808 [Info] Writing postfixes
14:10:37.813 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

14:10:37.815 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
14:10:37.817 [Info] Writing prefixes
14:10:37.819 [Info] Writing postfixes
14:10:37.823 [Info] Patching void BattleTech.TurnDirector::BeginNewPhase(int newPhase) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.TurnDirector_BeginNewPhase::Postfix(BattleTech.TurnDirector __instance, int newPhase)

14:10:37.825 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewPhase(int newPhase)
14:10:37.827 [Info] Writing postfixes
14:10:37.834 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)

14:10:37.836 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
14:10:37.838 [Info] Writing prefixes
14:10:37.846 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)

14:10:37.849 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:37.851 [Info] Writing prefixes
14:10:37.857 [Info] Patching BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_DesiredAuraProjectionState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState& __result, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD)

14:10:37.860 [Info] Running ILHook manipulator on BattleTech.UI.ButtonState BattleTech.UI.CombatAuraReticle::get_DesiredAuraProjectionState()
14:10:37.861 [Info] Writing prefixes
14:10:37.867 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshAuraRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.UI.ButtonState auraProjectionState, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange)

14:10:37.870 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshAuraRange(BattleTech.UI.ButtonState auraProjectionState)
14:10:37.871 [Info] Writing prefixes
14:10:37.877 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeRange::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool showActiveProbe, BattleTech.AbstractActor& ___owner, Single& ___currentAPRange)

14:10:37.879 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeRange(bool showActiveProbe)
14:10:37.881 [Info] Writing prefixes
14:10:37.887 [Info] Patching bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeState::Prefix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform, Boolean& __result)

14:10:37.889 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatAuraReticle::RefreshActiveProbeState()
14:10:37.891 [Info] Writing prefixes
14:10:37.896 [Info] Patching void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatAuraReticle_RefreshActiveProbeColor::Prefix(BattleTech.UI.CombatAuraReticle __instance, bool isBright, BattleTech.AbstractActor& ___owner, BattleTech.UI.CombatHUD& ___HUD, Boolean& ___currentAPIsBright)

14:10:37.898 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::RefreshActiveProbeColor(bool isBright)
14:10:37.900 [Info] Writing prefixes
14:10:37.905 [Info] Patching void BattleTech.UI.CombatAuraReticle::UpdatePosition() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.CombatAuraReticle_UpdatePosition::Postfix(BattleTech.UI.CombatAuraReticle __instance, BattleTech.AbstractActor& ___owner, Single& ___currentAuraRange, BattleTech.UI.CombatHUD& ___HUD, UnityEngine.Transform& ___thisTransform)

14:10:37.907 [Info] Running ILHook manipulator on void BattleTech.UI.CombatAuraReticle::UpdatePosition()
14:10:37.909 [Info] Writing postfixes
14:10:37.914 [Info] Patching virtual void BattleTech.UI.CombatHUD::Update() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUD_Update::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategoriesPatches.CombatHUD_DirectionIndicators::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomActivatablePatches.CombatHUD_Update_HideReticlesHotKey::Postfix(BattleTech.UI.CombatHUD __instance)

14:10:37.916 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUD::Update()
14:10:37.918 [Info] Writing postfixes
14:10:37.925 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

14:10:37.927 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
14:10:37.929 [Info] Writing postfixes
14:10:37.933 [Info] Patching void BattleTech.UI.CombatHUDButtonBase::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomVoices.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomActivatablePatches.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

14:10:37.935 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDButtonBase::OnClick()
14:10:37.937 [Info] Writing prefixes
14:10:37.941 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:37.944 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
14:10:37.945 [Info] Writing postfixes
14:10:37.952 [Info] Patching virtual bool BattleTech.UI.SelectionState::get_CanDeselect() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_CanDeselect::Prefix(BattleTech.UI.SelectionState __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatablePatches.SelectionState_CanDeselect::Postfix(BattleTech.UI.SelectionState __instance, Boolean& __result)

14:10:37.954 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionState::get_CanDeselect()
14:10:37.956 [Info] Writing prefixes
14:10:37.958 [Info] Writing postfixes
14:10:37.962 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:37.964 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
14:10:37.966 [Info] Writing postfixes
14:10:37.972 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

14:10:37.974 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:37.976 [Info] Writing prefixes
14:10:37.978 [Info] Writing postfixes
14:10:37.985 [Info] Patching float BattleTech.Mech::GetHeatSinkDissipation() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_GetHeatSinkDissipation_Patch::Prefix(Boolean& __runOriginal, Single& __result)
1 postfixes:
* static void CustomActivatablePatches.Mech_GetHeatSinkDissipation::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:37.988 [Info] Running ILHook manipulator on float BattleTech.Mech::GetHeatSinkDissipation()
14:10:37.990 [Info] Writing prefixes
14:10:37.992 [Info] Writing postfixes
14:10:37.997 [Info] Patching void BattleTech.Mech::ApplyHeatSinks(int stackID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_ApplyHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)
1 postfixes:
* static void CustomActivatablePatches.Mech_ApplyHeatSinks::Postfix(BattleTech.Mech __instance, int stackID)

14:10:37.999 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeatSinks(int stackID)
14:10:38.001 [Info] Writing prefixes
14:10:38.002 [Info] Writing postfixes
14:10:38.007 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

14:10:38.009 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
14:10:38.011 [Info] Writing postfixes
14:10:38.017 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)

14:10:38.020 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:38.021 [Info] Writing postfixes
14:10:38.028 [Info] Patching virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStandInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

14:10:38.030 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStandInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:38.032 [Info] Writing prefixes
14:10:38.036 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)

14:10:38.038 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:38.040 [Info] Writing prefixes
14:10:38.045 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

14:10:38.047 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
14:10:38.050 [Info] Writing prefixes
14:10:38.056 [Info] Patching void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_GenerateFallSequence::Prefix(BattleTech.Mech __instance, int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)

14:10:38.058 [Info] Running ILHook manipulator on void BattleTech.Mech::GenerateFallSequence(int previousStackID, string sourceID, UnityEngine.Vector2 attackDirection, BattleTech.SequenceFinished fallSequenceCompletedCallback)
14:10:38.061 [Info] Writing prefixes
14:10:38.066 [Info] Patching virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.MechComponent_RestartCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)

14:10:38.069 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::RestartPassiveEffects(bool performAuraRefresh)
14:10:38.071 [Info] Writing prefixes
14:10:38.077 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

14:10:38.081 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
14:10:38.083 [Info] Writing prefixes
14:10:38.111 [Info] Patching int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.Performance.Patches.AbstractActor_StealthPipsPreviewFromActorMovement_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Int32& __result)
* static bool CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Prefix::Prefix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_StealthPipsPreviewFromActorMovement_Postfix::Postfix(BattleTech.AbstractActor __instance, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos, Int32& __result)

14:10:38.114 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::StealthPipsPreviewFromActorMovement(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPos)
14:10:38.116 [Info] Writing prefixes
14:10:38.119 [Info] Writing postfixes
14:10:38.129 [Info] Patching void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> codeInstructions, System.Reflection.Emit.ILGenerator ilGenerator)

14:10:38.132 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
14:10:38.135 [Info] Transpiling void BattleTech.UI.CombatHUDNumFlagHex::UpdateStealthState()
14:10:38.139 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomActivatablePatches.CombatHUDNumFlagHex_UpdateStealthState::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> codeInstructions, System.Reflection.Emit.ILGenerator ilGenerator)
14:10:38.147 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatHUDStatusPanel_PreviewDesignMasks::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, System.Collections.Generic.List<BattleTech.WayPoint> waypoints)

14:10:38.150 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::PreviewDesignMasks(System.Collections.Generic.List<BattleTech.WayPoint> waypoints)
14:10:38.153 [Info] Writing prefixes
14:10:38.168 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMoveBase_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

14:10:38.171 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::ProcessMousePos(UnityEngine.Vector3 worldPos)
14:10:38.173 [Info] Writing prefixes
14:10:38.179 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
1 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)

14:10:38.181 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
14:10:38.184 [Info] Writing prefixes
14:10:38.186 [Info] Writing postfixes
14:10:38.193 [Info] Patching void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.CombatMovementReticle_UpdateReticle::Prefix(BattleTech.UI.CombatMovementReticle __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked)

14:10:38.195 [Info] Running ILHook manipulator on void BattleTech.UI.CombatMovementReticle::UpdateReticle(BattleTech.AbstractActor actor, UnityEngine.Vector3 mousePos, bool isJump, bool isMelee, bool isTargetLocked, bool updateAllUI)
14:10:38.197 [Info] Writing prefixes
14:10:38.208 [Info] Patching void BattleTech.AuraCache::ResetForFullRebuild() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ResetForFullRebuild_Disable::Prefix(BattleTech.AuraCache __instance)

14:10:38.210 [Info] Running ILHook manipulator on void BattleTech.AuraCache::ResetForFullRebuild()
14:10:38.212 [Info] Writing prefixes
14:10:38.216 [Info] Patching bool BattleTech.AuraCache::HasAlreadyChecked(string guid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_HasAlreadyChecked_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

14:10:38.218 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::HasAlreadyChecked(string guid)
14:10:38.220 [Info] Writing prefixes
14:10:38.224 [Info] Patching void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraAdded::Prefix(BattleTech.AbstractActor __instance)

14:10:38.225 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraAdded(MessageCenterMessage message)
14:10:38.227 [Info] Writing prefixes
14:10:38.234 [Info] Patching void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnAuraRemoved::Prefix(BattleTech.AbstractActor __instance)

14:10:38.236 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnAuraRemoved(MessageCenterMessage message)
14:10:38.238 [Info] Writing prefixes
14:10:38.244 [Info] Patching static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAllAuras_Disable::Prefix()

14:10:38.246 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAllAuras(System.Collections.Generic.List<BattleTech.AbstractActor> actors, bool forceUpdate)
14:10:38.248 [Info] Writing prefixes
14:10:38.254 [Info] Patching static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAurasToActor_Disable::Prefix()

14:10:38.256 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::UpdateAurasToActor(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPosition, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
14:10:38.258 [Info] Writing prefixes
14:10:38.262 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()

14:10:38.264 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
14:10:38.266 [Info] Writing prefixes
14:10:38.272 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Ability_Disable::Prefix()

14:10:38.274 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.Ability auraAbility, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
14:10:38.275 [Info] Writing prefixes
14:10:38.282 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()

14:10:38.284 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
14:10:38.286 [Info] Writing prefixes
14:10:38.291 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

14:10:38.293 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
14:10:38.294 [Info] Writing prefixes
14:10:38.300 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Ability_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

14:10:38.302 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.Ability auraAbility, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
14:10:38.303 [Info] Writing prefixes
14:10:38.307 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

14:10:38.309 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
14:10:38.311 [Info] Writing prefixes
14:10:38.315 [Info] Patching bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AddEffectIfNotPresent_Disable::Prefix()

14:10:38.317 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AddEffectIfNotPresent(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& existingEffectIDs, BattleTech.EffectTriggerType triggerSource)
14:10:38.319 [Info] Writing prefixes
14:10:38.323 [Info] Patching bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RemoveEffectIfPresent_Disable::Prefix()

14:10:38.325 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::RemoveEffectIfPresent(BattleTech.AbstractActor fromActor, string effectCreatorId, BattleTech.EffectData effect, System.Collections.Generic.List<BattleTech.Effect> existingEffects, BattleTech.EffectTriggerType triggerSource)
14:10:38.326 [Info] Writing prefixes
14:10:38.331 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAuraFrom_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

14:10:38.333 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAuraFrom(BattleTech.AbstractActor fromActor)
14:10:38.335 [Info] Writing prefixes
14:10:38.339 [Info] Patching bool BattleTech.AuraCache::IsAffectedByAnyAura() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_IsAffectedByAnyAura_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)

14:10:38.340 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::IsAffectedByAnyAura()
14:10:38.342 [Info] Writing prefixes
14:10:38.346 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:38.348 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewAurasAffectingMe(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
14:10:38.349 [Info] Writing prefixes
14:10:38.355 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAurasFromActorAffectingMe_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:38.356 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAurasFromActorAffectingMe(BattleTech.AbstractActor auraActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
14:10:38.359 [Info] Writing prefixes
14:10:38.364 [Info] Patching System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffectingOthers_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:38.366 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<BattleTech.EffectData>> BattleTech.AuraCache::PreviewMyAurasAffectingOthers(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition, System.Collections.Generic.List<BattleTech.AbstractActor> blacklistActors)
14:10:38.368 [Info] Writing prefixes
14:10:38.373 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyAurasAffecting_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:38.375 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewMyAurasAffecting(BattleTech.AbstractActor otherActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
14:10:38.377 [Info] Writing prefixes
14:10:38.382 [Info] Patching int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewMyGhostSpottedCount_Disable::Prefix(BattleTech.AuraCache __instance, Int32& __result)

14:10:38.384 [Info] Running ILHook manipulator on int BattleTech.AuraCache::PreviewMyGhostSpottedCount(BattleTech.AbstractActor movingActor, UnityEngine.Vector3 previewPosition)
14:10:38.386 [Info] Writing prefixes
14:10:38.391 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraA_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:38.393 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor auraActor, BattleTech.Ability auraAbility, float distSquared)
14:10:38.395 [Info] Writing prefixes
14:10:38.400 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:38.402 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
14:10:38.403 [Info] Writing prefixes
14:10:38.407 [Info] Patching static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_RefreshECMStates_Disable::Prefix(BattleTech.AuraCache __instance)

14:10:38.409 [Info] Running ILHook manipulator on static void BattleTech.AuraCache::RefreshECMStates(System.Collections.Generic.List<BattleTech.AbstractActor> actors, BattleTech.EffectTriggerType triggerSource)
14:10:38.411 [Info] Writing prefixes
14:10:38.417 [Info] Patching BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_GetBestECMState_Disable::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor& __result)

14:10:38.419 [Info] Running ILHook manipulator on BattleTech.AbstractActor BattleTech.AuraCache::GetBestECMState(System.Collections.Generic.List<BattleTech.AbstractActor> potentialActors)
14:10:38.421 [Info] Writing prefixes
14:10:38.430 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)

14:10:38.433 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
14:10:38.435 [Info] Writing postfixes
14:10:38.443 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_RefreshDisplayedEquipment::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDEquipmentSlot> ___EquipmentSlots, BattleTech.AbstractActor ___displayedActor)

14:10:38.445 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedEquipment()
14:10:38.447 [Info] Writing postfixes
14:10:38.454 [Info] Patching void BattleTech.TurnDirector::BeginNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.TurnDirector_BeginNewRound::Prefix(BattleTech.TurnDirector __instance, int round)
1 postfixes:
* static void CustomActivatableEquipment.TurnDirector_BeginNewRound::Postfix(BattleTech.TurnDirector __instance)

14:10:38.455 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::BeginNewRound(int round)
14:10:38.457 [Info] Writing prefixes
14:10:38.459 [Info] Writing postfixes
14:10:38.463 [Info] Patching virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDSidePanelHoverElement_OnPointerClick::Postfix(BattleTech.UI.CombatHUDSidePanelHoverElement __instance)

14:10:38.465 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDSidePanelHoverElement::OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
14:10:38.467 [Info] Writing postfixes
14:10:38.470 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)

14:10:38.472 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
14:10:38.473 [Info] Writing postfixes
14:10:38.477 [Info] Patching bool BattleTech.UI.CombatHUDActionButton::TryActivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_IsActive::Postfix(BattleTech.UI.CombatHUDActionButton __instance, Boolean& __result)

14:10:38.478 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDActionButton::TryActivate()
14:10:38.480 [Info] Writing postfixes
14:10:38.485 [Info] Patching bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.CombatHUDEquipmentSlot_ProcessPressedButtons::Prefix(BattleTech.UI.CombatSelectionHandler __instance)

14:10:38.487 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatSelectionHandler::ProcessPressedButtons()
14:10:38.490 [Info] Writing prefixes
14:10:38.494 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

14:10:38.497 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
14:10:38.499 [Info] Writing postfixes
14:10:38.504 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_ResetDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

14:10:38.507 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetDisplayedWeapons()
14:10:38.509 [Info] Writing postfixes
14:10:38.514 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

14:10:38.517 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
14:10:38.519 [Info] Writing prefixes
14:10:38.521 [Info] Writing postfixes
14:10:38.526 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

14:10:38.528 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
14:10:38.530 [Info] Writing postfixes
14:10:38.534 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.CombatTargetingReticle_Create::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)

14:10:38.536 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::Init(BattleTech.CombatGameState combat, BattleTech.UI.CombatHUD HUD)
14:10:38.538 [Info] Writing postfixes
14:10:38.546 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

14:10:38.548 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
14:10:38.550 [Info] Writing prefixes
14:10:38.554 [Info] Patching void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_ProcessAddedMark::Postfix(BattleTech.AbstractActor __instance)

14:10:38.556 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ProcessAddedMark(BattleTech.Effect effect)
14:10:38.559 [Info] Writing postfixes
14:10:38.563 [Info] Patching void BattleTech.AbstractActor::set_DistMovedThisRound(float value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_DistMovedThisRound_set::Postfix(BattleTech.AbstractActor __instance, float value)

14:10:38.565 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::set_DistMovedThisRound(float value)
14:10:38.567 [Info] Writing postfixes
14:10:38.572 [Info] Patching virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_OnEffectEnd::Postfix(BattleTech.AbstractActor __instance)

14:10:38.574 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnEffectEnd(BattleTech.Effect effect)
14:10:38.576 [Info] Writing postfixes
14:10:38.583 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.CombatHUDInWorldElementMgrAddInWorldActorElementsPatch::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant)
1 postfixes:
* static void CustomActivatableEquipment.CombatAuraReticle_Init_Aura::Postfix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, BattleTech.ICombatant combatant, System.Collections.Generic.List`1[[BattleTech.UI.CombatAuraReticle, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___AuraReticles, BattleTech.UI.CombatHUD ___HUD)

14:10:38.585 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddInWorldActorElements(BattleTech.ICombatant combatant)
14:10:38.587 [Info] Writing prefixes
14:10:38.588 [Info] Writing postfixes
14:10:38.596 [Info] Patching void BattleTech.AbstractActor::EvaluateStealthState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatableEquipment.AbstractActor_EvaluateStealthState::Prefix(BattleTech.AbstractActor __instance)

14:10:38.599 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::EvaluateStealthState()
14:10:38.602 [Info] Writing prefixes
14:10:38.609 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:38.612 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
14:10:38.614 [Info] Writing postfixes
14:10:38.621 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)

14:10:38.623 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
14:10:38.625 [Info] Writing postfixes
14:10:38.694 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)

14:10:38.696 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
14:10:38.698 [Info] Writing postfixes
14:10:38.705 [Info] Patching void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAuras_Disable::Prefix()
* static bool CustomActivatableEquipment.AuraCache_UpdateAurasComponents::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)

14:10:38.708 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAuras(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, float distSquared, BattleTech.EffectTriggerType triggerSource, bool forceUpdate)
14:10:38.710 [Info] Writing prefixes
14:10:38.716 [Info] Patching bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_ShouldAffectThisActor_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_ShouldAffectThisActor::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

14:10:38.718 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::ShouldAffectThisActor(BattleTech.AbstractActor fromActor, BattleTech.EffectData effect, BattleTech.EffectTriggerType triggerSource)
14:10:38.720 [Info] Writing prefixes
14:10:38.722 [Info] Writing postfixes
14:10:38.728 [Info] Patching void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_UpdateAura_Component_Disable::Prefix()
* static bool CustomActivatableEquipment.AuraCache_UpdateAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)

14:10:38.731 [Info] Running ILHook manipulator on void BattleTech.AuraCache::UpdateAura(BattleTech.AbstractActor fromActor, BattleTech.AbstractActor movingActor, UnityEngine.Vector3 movingActorPos, BattleTech.MechComponent auraComponent, float distSquared, BattleTech.EffectTriggerType triggerSource, bool skipECMCheck)
14:10:38.733 [Info] Writing prefixes
14:10:38.739 [Info] Patching System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.AuraCache_PreviewAuraC_Disable::Prefix(BattleTech.AuraCache __instance, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static bool CustomActivatableEquipment.AuraCache_PreviewAura::Prefix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared, System.Collections.Generic.List`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:38.741 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.EffectData> BattleTech.AuraCache::PreviewAura(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, float distSquared)
14:10:38.743 [Info] Writing prefixes
14:10:38.748 [Info] Patching bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AuraCache_AuraConditionsPassed_Component_Disable::Prefix(BattleTech.AuraCache __instance, Boolean& __result)
1 postfixes:
* static void CustomActivatableEquipment.AuraCache_AuraConditionsPassed::Postfix(BattleTech.AuraCache __instance, BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource, Boolean& __result)

14:10:38.750 [Info] Running ILHook manipulator on bool BattleTech.AuraCache::AuraConditionsPassed(BattleTech.AbstractActor fromActor, BattleTech.MechComponent auraComponent, BattleTech.EffectData effectData, float distSquared, BattleTech.EffectTriggerType triggerSource)
14:10:38.753 [Info] Writing prefixes
14:10:38.754 [Info] Writing postfixes
14:10:38.765 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:38.768 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
14:10:38.770 [Info] Writing postfixes
14:10:38.778 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)

14:10:38.780 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
14:10:38.782 [Info] Writing postfixes
14:10:38.787 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.AccuracyEffects.Patches.CombatHUDWeaponSlot_AddToolTipDetail_Patch::Prefix(Boolean& __runOriginal, String& description)
1 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponSlot_AddToolTipDetail::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, string description, int modifier)

14:10:38.789 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::AddToolTipDetail(string description, int modifier)
14:10:38.790 [Info] Writing prefixes
14:10:38.793 [Info] Writing postfixes
14:10:38.798 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

14:10:38.800 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:38.802 [Info] Writing prefixes
14:10:38.804 [Info] Writing postfixes
14:10:38.812 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_Init::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

14:10:38.814 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
14:10:38.816 [Info] Writing postfixes
14:10:38.823 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_DisplayedActor::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, BattleTech.AbstractActor value)
* static void CustomActivatableEquipment.CombatHUDWeaponPanel_SetState::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance)

14:10:38.826 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::set_DisplayedActor(BattleTech.AbstractActor value)
14:10:38.828 [Info] Writing postfixes
14:10:38.832 [Info] Patching virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomActivatablePatches.Turret_InitGameRep_ECMREmove::Postfix(BattleTech.Turret __instance)
* static void CustomActivatableEquipment.Turret_InitGameRep_Aura::Postfix(BattleTech.Turret __instance, UnityEngine.Transform parentTransform)
* static void CustomActivatableEquipment.Turret_InitGameRep::Postfix(BattleTech.Turret __instance)

14:10:38.835 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::InitGameRep(UnityEngine.Transform parentTransform)
14:10:38.836 [Info] Writing postfixes
14:10:38.843 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

14:10:38.845 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
14:10:38.847 [Info] Writing postfixes
14:10:38.855 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
2 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

14:10:38.858 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
14:10:38.860 [Info] Writing prefixes
14:10:38.861 [Info] Writing postfixes
14:10:38.871 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 3 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
3 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:38.873 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:38.876 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:38.878 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:38.880 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:38.882 [Info] Writing prefixes
14:10:38.884 [Info] Writing postfixes
14:10:38.890 [Info] Patching virtual void BattleTech.MechComponent::InitPassiveSelfEffects() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Prefix(BattleTech.MechComponent __instance)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_InitPassiveSelfEffects::Postfix(BattleTech.MechComponent __instance)

14:10:38.893 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitPassiveSelfEffects()
14:10:38.895 [Info] Writing prefixes
14:10:38.896 [Info] Writing postfixes
14:10:38.902 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)

14:10:38.904 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
14:10:38.906 [Info] Writing postfixes
14:10:38.911 [Info] Patching void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.PlaceholderEffects.Patches.StatisticEffect_initStatisiticEffect_Patch::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target)
* static void CustomActivatableEquipment.StatisticEffect_initStatisiticEffect::Postfix(BattleTech.StatisticEffect __instance, BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)

14:10:38.913 [Info] Running ILHook manipulator on void BattleTech.StatisticEffect::initStatisiticEffect(BattleTech.ICombatant target, BattleTech.EffectData effectData, BattleTech.StatCollection targetStatCollection)
14:10:38.915 [Info] Writing postfixes
14:10:38.919 [Info] Patching System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.EffectManager_GetTargetStatCollections_Patch::Prefix(Boolean& __runOriginal, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, BattleTech.EffectData effectData, BattleTech.ICombatant target)
1 postfixes:
* static void CustomActivatableEquipment.EffectManager_GetTargetStatCollections::Postfix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target, System.Collections.Generic.List`1[[BattleTech.StatCollection, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:38.921 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.StatCollection> BattleTech.EffectManager::GetTargetStatCollections(BattleTech.EffectData effectData, BattleTech.ICombatant target)
14:10:38.923 [Info] Writing prefixes
14:10:38.925 [Info] Writing postfixes
14:10:38.930 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)

14:10:38.933 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
14:10:38.935 [Info] Writing prefixes
14:10:38.946 [Info] Patching void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_InitAbstractActor::Prefix(BattleTech.AbstractActor __instance)

14:10:38.948 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::InitAbstractActor(string guid, string spawnerId, BattleTech.CombatGameState combat)
14:10:38.950 [Info] Writing prefixes
14:10:38.960 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectBegin::Postfix(BattleTech.StatisticEffect __instance)

14:10:38.962 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectBegin(bool skipLogging)
14:10:38.964 [Info] Writing prefixes
14:10:38.966 [Info] Writing postfixes
14:10:38.970 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectPhaseBegin::Postfix(BattleTech.StatisticEffect __instance)

14:10:38.972 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectPhaseBegin()
14:10:38.973 [Info] Writing prefixes
14:10:38.975 [Info] Writing postfixes
14:10:38.979 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectTakeDamage::Postfix(BattleTech.StatisticEffect __instance)

14:10:38.980 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectTakeDamage(BattleTech.AbstractActor attacker, BattleTech.AbstractActor target)
14:10:38.982 [Info] Writing prefixes
14:10:38.984 [Info] Writing postfixes
14:10:38.988 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectEnd::Postfix(BattleTech.StatisticEffect __instance)

14:10:38.989 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectEnd(bool expired, bool skipLogging)
14:10:38.991 [Info] Writing prefixes
14:10:38.993 [Info] Writing postfixes
14:10:38.997 [Info] Patching virtual void BattleTech.StatisticEffect::OnEffectActivationEnd() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Prefix(BattleTech.StatisticEffect __instance, Boolean& __state)
2 postfixes:
* static void CustAmmoCategoriesPatches.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance, Boolean& __state)
* static void CustomActivatableEquipment.StatisticEffect_OnEffectActivationEnd::Postfix(BattleTech.StatisticEffect __instance)

14:10:39.000 [Info] Running ILHook manipulator on virtual void BattleTech.StatisticEffect::OnEffectActivationEnd()
14:10:39.001 [Info] Writing prefixes
14:10:39.003 [Info] Writing postfixes
14:10:39.007 [Info] Patching int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.StatCollection_ModifyStatistic::Prefix(BattleTech.StatCollection __instance, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant)
1 postfixes:
* static void MechEngineer.Features.OrderedStatusEffects.Patches.StatCollection_ModifyStatistic_Patch::Postfix(BattleTech.StatCollection __instance, string statName, int __result)

14:10:39.009 [Info] Running ILHook manipulator on int BattleTech.StatCollection::ModifyStatistic(string sourceID, int stackItemUID, string statName, BattleTech.StatCollection+StatOperation op, BattleTech.Variant variant, int modIndex, bool skipLogging)
14:10:39.012 [Info] Writing prefixes
14:10:39.014 [Info] Writing postfixes
14:10:39.018 [Info] Patching virtual void BattleTech.MechComponent::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.MechComponent_InitStatsWeapon::Postfix(BattleTech.MechComponent __instance)
* static void CustomActivatableEquipment.MechComponent_InitStats::Postfix(BattleTech.MechComponent __instance)

14:10:39.021 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::InitStats()
14:10:39.022 [Info] Writing postfixes
14:10:39.026 [Info] Patching virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, bool performAuraRefresh)
* static bool CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Prefix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_CancelCreatedEffects::Postfix(BattleTech.MechComponent __instance, System.Collections.Generic.HashSet`1[[BattleTech.EffectData, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state)

14:10:39.029 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::CancelCreatedEffects(bool performAuraRefresh)
14:10:39.031 [Info] Writing prefixes
14:10:39.033 [Info] Writing postfixes
14:10:39.037 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

14:10:39.039 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
14:10:39.041 [Info] Writing prefixes
14:10:39.047 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
4 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

14:10:39.050 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:39.052 [Info] Writing prefixes
14:10:39.054 [Info] Writing postfixes
14:10:39.064 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:39.067 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:39.068 [Info] Writing postfixes
14:10:39.075 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:39.078 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:39.080 [Info] Writing postfixes
14:10:39.085 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:39.088 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:39.090 [Info] Writing postfixes
14:10:39.096 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)

14:10:39.099 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
14:10:39.101 [Info] Writing postfixes
14:10:39.111 [Info] Patching void BattleTech.UI.InventoryItemElement::SetData(BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.InventoryItemElement_SetData::Prefix(BattleTech.UI.InventoryItemElement __instance, BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback)

14:10:39.113 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryItemElement::SetData(BattleTech.UI.InventoryDataObject_BASE controller, BattleTech.UI.IMechLabDropTarget dropParent, int quantity, bool isStoreItem, UnityEngine.Events.UnityAction<BattleTech.UI.InventoryItemElement> callback)
14:10:39.115 [Info] Writing prefixes
14:10:39.122 [Info] Patching void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechBayMechUnitElement_SetData::Prefix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
1 postfixes:
* static void CustomPilotDecorator.MechBayMechUnitElement_SetData_Gif::Postfix(BattleTech.UI.MechBayMechUnitElement __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)

14:10:39.125 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechUnitElement::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, int baySlot, BattleTech.MechDef mechDef, bool inMaintenance, bool isFieldable, bool hasFieldableWarnings, bool allowInteraction, bool blockRaycast, bool buttonEnabled)
14:10:39.127 [Info] Writing prefixes
14:10:39.129 [Info] Writing postfixes
14:10:39.135 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.MechLabLocationWidget_OnAddItem_Patch::Postfix(BattleTech.UI.IMechLabDraggableItem item, System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void CustAmmoCategories.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnAddItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:39.138 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:39.140 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:39.142 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_OnAddItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:39.145 [Info] Writing postfixes
14:10:39.151 [Info] Patching void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout) with 0 prefixes, 5 postfixes, 1 transpilers, 0 finalizers
5 postfixes:
* static void CustomComponents.MechLabLocationWidget_SetData_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.MechLabItemSlotElement> ___localInventory)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance, int ___maxSlots, BattleTech.LocationLoadoutDef& loadout)
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabLocationWidget_SetData_Patch::Postfix(BattleTech.UI.MechLabLocationWidget __instance)
* static void CustAmmoCategories.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
* static void CustomActivatableEquipment.MechLabLocationWidget_SetData::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.LocationLoadoutDef loadout, System.Collections.Generic.List`1[[BattleTech.UI.MechLabItemSlotElement, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___localInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:39.153 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:39.155 [Info] Transpiling void BattleTech.UI.MechLabLocationWidget::SetData(BattleTech.LocationLoadoutDef loadout)
14:10:39.159 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.MechLabSlots.Patches.MechLabLocationWidget_SetData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:39.161 [Info] Writing postfixes
14:10:39.170 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetData(BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechBayMechInfoWidget_SetData::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton)

14:10:39.173 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetData(BattleTech.SimGameState sim, BattleTech.UI.MechBayPanel mechBay, BattleTech.Data.DataManager dataManager, BattleTech.UI.MechBayMechUnitElement mechElement, bool useNoMechOverlay, bool useRepairButton)
14:10:39.175 [Info] Writing prefixes
14:10:39.183 [Info] Patching virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
* static void CustomActivatableEquipment.MechLabLocationWidget_OnRemoveItem::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:39.185 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:39.187 [Info] Transpiling virtual bool BattleTech.UI.MechLabLocationWidget::OnRemoveItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:39.189 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.MechLabLocationWidget_OnRemoveItem_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:39.192 [Info] Writing postfixes
14:10:39.196 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::ClearData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.MechComponent_ClearData::Postfix(BattleTech.UI.MechLabItemSlotElement __instance)

14:10:39.199 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::ClearData()
14:10:39.201 [Info] Writing postfixes
14:10:39.206 [Info] Patching static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.MechValidationRules_GetMechFieldableWarnings::Prefix(BattleTech.UI.MechLabItemSlotElement __instance, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
1 postfixes:
* static void CustomTranslation.MechValidationRules_GetMechFieldableWarnings::Postfix(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Collections.Generic.List`1[[Localize.Text, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:39.208 [Info] Running ILHook manipulator on static System.Collections.Generic.List<Localize.Text> BattleTech.MechValidationRules::GetMechFieldableWarnings(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef)
14:10:39.211 [Info] Writing prefixes
14:10:39.212 [Info] Writing postfixes
14:10:39.219 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
2 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

14:10:39.221 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
14:10:39.223 [Info] Writing prefixes
14:10:39.225 [Info] Writing postfixes
14:10:39.229 [Info] Patching void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentListItem_SetComponentRef::Postfix(BattleTech.UI.LanceMechEquipmentListItem __instance, BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)

14:10:39.231 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentListItem::SetComponentRef(BattleTech.MechComponentRef componentRef, BattleTech.MechDef mechDef)
14:10:39.233 [Info] Writing postfixes
14:10:39.241 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)

14:10:39.243 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
14:10:39.245 [Info] Writing prefixes
14:10:39.280 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
4 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)

14:10:39.283 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:39.285 [Info] Writing prefixes
14:10:39.287 [Info] Writing postfixes
14:10:39.315 [Info] Patching void BattleTech.AbstractActor::AssignAmmoToWeapons() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.AbstractActor_AssignAmmoToWeapons::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_AssignAmmoToWeapons::Postfix(BattleTech.AbstractActor __instance)

14:10:39.316 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::AssignAmmoToWeapons()
14:10:39.319 [Info] Writing prefixes
14:10:39.320 [Info] Writing postfixes
14:10:39.324 [Info] Patching virtual void BattleTech.ActorDef::SetGuid(string newGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.ActorDef_SetGuid::Postfix(BattleTech.ActorDef __instance)

14:10:39.326 [Info] Running ILHook manipulator on virtual void BattleTech.ActorDef::SetGuid(string newGuid)
14:10:39.328 [Info] Writing postfixes
14:10:39.333 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
2 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)

14:10:39.335 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
14:10:39.337 [Info] Writing prefixes
14:10:39.339 [Info] Writing postfixes
14:10:39.346 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)

14:10:39.348 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
14:10:39.350 [Info] Writing prefixes
14:10:39.355 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:39.358 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:39.360 [Info] Writing prefixes
14:10:39.362 [Info] Writing postfixes
14:10:39.368 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

14:10:39.370 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
14:10:39.372 [Info] Writing prefixes
14:10:39.374 [Info] Writing postfixes
14:10:39.378 [Info] Patching void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddAbsoluteInstability_Patch::Postfix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

14:10:39.380 [Info] Running ILHook manipulator on void BattleTech.Mech::AddAbsoluteInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
14:10:39.382 [Info] Writing postfixes
14:10:39.386 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

14:10:39.388 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
14:10:39.390 [Info] Writing postfixes
14:10:39.395 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:39.397 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:39.399 [Info] Writing prefixes
14:10:39.401 [Info] Writing postfixes
14:10:39.407 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:39.409 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:39.410 [Info] Writing prefixes
14:10:39.412 [Info] Writing postfixes
14:10:39.417 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:39.419 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:39.421 [Info] Writing prefixes
14:10:39.423 [Info] Writing postfixes
14:10:39.429 [Info] Patching virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.AreAnyHostilesInWeaponRangeNode_Tick::Prefix(BehaviorNode __instance, BehaviorTreeResults& __result, BehaviorTree& ___tree, BattleTech.AbstractActor& ___unit)

14:10:39.431 [Info] Running ILHook manipulator on virtual BehaviorTreeResults AreAnyHostilesInWeaponRangeNode::Tick()
14:10:39.433 [Info] Writing prefixes
14:10:39.449 [Info] ### Harmony id=io.mission.custommaps, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomMaps.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomMaps\CustomMaps.dll
### At 2023-05-07 02.10.39
14:10:39.452 [Info] Patching void DestructibleObject::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructibleObject_Start::Prefix(DestructibleObject __instance)

14:10:39.454 [Info] Running ILHook manipulator on void DestructibleObject::Start()
14:10:39.457 [Info] Writing prefixes
14:10:39.460 [Info] Patching void DestructibleObject::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructibleObject_OnEnable::Prefix(DestructibleObject __instance)

14:10:39.462 [Info] Running ILHook manipulator on void DestructibleObject::OnEnable()
14:10:39.464 [Info] Writing prefixes
14:10:39.469 [Info] Patching void DestructionConstants::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructionConstants_OnEnable::Prefix(DestructionConstants __instance)

14:10:39.471 [Info] Running ILHook manipulator on void DestructionConstants::OnEnable()
14:10:39.473 [Info] Writing prefixes
14:10:39.478 [Info] Patching void DestructionConstants::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.DestructionConstants_LateUpdate::Prefix(DestructionConstants __instance)

14:10:39.481 [Info] Running ILHook manipulator on void DestructionConstants::LateUpdate()
14:10:39.483 [Info] Writing prefixes
14:10:39.489 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
5 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)

14:10:39.492 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:39.495 [Info] Writing prefixes
14:10:39.497 [Info] Writing postfixes
14:10:39.577 [Info] Patching void BattleTech.Rendering.TerrainClipRoot::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.TerrainClipRoot_Start::Prefix(BattleTech.Rendering.TerrainClipRoot __instance)

14:10:39.580 [Info] Running ILHook manipulator on void BattleTech.Rendering.TerrainClipRoot::Start()
14:10:39.582 [Info] Writing prefixes
14:10:39.593 [Info] Patching void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ModTek.Features.LoadAtBattleStart.Patches.Contract_RequestConversations_Patch::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustAmmoCategories.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomActivatableEquipment.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)
* static void CustomMaps.Patches.Contract_RequestConversations::Postfix(BattleTech.Contract __instance, BattleTech.Data.LoadRequest loadRequest)

14:10:39.596 [Info] Running ILHook manipulator on void BattleTech.Contract::RequestConversations(BattleTech.Data.LoadRequest loadRequest)
14:10:39.598 [Info] Writing postfixes
14:10:39.602 [Info] Patching void BattleTech.Contract::AllDependenciesReady() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.Contract_AllDependenciesReady::Prefix(BattleTech.Contract __instance)

14:10:39.604 [Info] Running ILHook manipulator on void BattleTech.Contract::AllDependenciesReady()
14:10:39.606 [Info] Writing prefixes
14:10:39.611 [Info] Patching void BattleTech.Contract::.ctor(string mapName, string mapPath, string encounterLayerGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.GameInstance game, BattleTech.Framework.ContractOverride contractOverride, BattleTech.GameContext baseContext, bool fromSim, int difficulty, int initialContractValue, int? playerOneMoraleOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.Contract_Constructor::Prefix(string mapName, string mapPath, String& encounterLayerGuid, BattleTech.GameInstance game)

14:10:39.613 [Info] Running ILHook manipulator on void BattleTech.Contract::.ctor(string mapName, string mapPath, string encounterLayerGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.GameInstance game, BattleTech.Framework.ContractOverride contractOverride, BattleTech.GameContext baseContext, bool fromSim, int difficulty, int initialContractValue, int? playerOneMoraleOverride)
14:10:39.615 [Info] Writing prefixes
14:10:39.626 [Info] Patching void BattleTech.LevelLoader::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.LevelLoader_Start::Prefix(BattleTech.LevelLoader __instance)

14:10:39.629 [Info] Running ILHook manipulator on void BattleTech.LevelLoader::Start()
14:10:39.630 [Info] Writing prefixes
14:10:39.635 [Info] Patching void BattleTech.LevelLoadRequestListener::BundlesLoaded(BattleTech.Data.LoadRequest request) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.LevelLoadRequestListener_BundlesLoaded::Prefix(BattleTech.LevelLoadRequestListener __instance, BattleTech.Data.LoadRequest request)

14:10:39.637 [Info] Running ILHook manipulator on void BattleTech.LevelLoadRequestListener::BundlesLoaded(BattleTech.Data.LoadRequest request)
14:10:39.639 [Info] Writing prefixes
14:10:39.645 [Info] Patching void BattleTech.LevelLoadRequestListener::OnRequestLevelLoad(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.LevelLoadRequestListener_OnRequestLevelLoad::Prefix(BattleTech.LevelLoadRequestListener __instance, MessageCenterMessage message)

14:10:39.647 [Info] Running ILHook manipulator on void BattleTech.LevelLoadRequestListener::OnRequestLevelLoad(MessageCenterMessage message)
14:10:39.649 [Info] Writing prefixes
14:10:39.656 [Info] Patching void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.RenderTrees_InitQuadTree::Prefix(BattleTech.Rendering.Trees.RenderTrees __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.RenderTrees_InitQuadTree::Postfix(BattleTech.Rendering.Trees.RenderTrees __instance)

14:10:39.658 [Info] Running ILHook manipulator on void BattleTech.Rendering.Trees.RenderTrees::InitQuadTree()
14:10:39.661 [Info] Writing prefixes
14:10:39.663 [Info] Writing postfixes
14:10:39.675 [Info] Patching void BattleTech.MapMetaDataExporter::LoadMapMetaDataOnly(BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.MapMetaDataExporter_LoadMapMetaDataOnly::Prefix(BattleTech.MapMetaDataExporter __instance, BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager)

14:10:39.677 [Info] Running ILHook manipulator on void BattleTech.MapMetaDataExporter::LoadMapMetaDataOnly(BattleTech.MapMetaData existingMapMetaData, BattleTech.Data.DataManager dataManager)
14:10:39.679 [Info] Writing prefixes
14:10:39.684 [Info] Patching void BattleTech.EncounterLayerData::ReattachReferences() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.EncounterLayerData_ReattachReferences::Prefix(BattleTech.EncounterLayerData __instance)

14:10:39.687 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::ReattachReferences()
14:10:39.689 [Info] Writing prefixes
14:10:39.695 [Info] Patching bool BattleTech.InclineMeshData::LoadFromPath(string path) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.InclineMeshData_LoadFromPath::Prefix(BattleTech.InclineMeshData __instance, String& path)

14:10:39.697 [Info] Running ILHook manipulator on bool BattleTech.InclineMeshData::LoadFromPath(string path)
14:10:39.699 [Info] Writing prefixes
14:10:39.706 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.PlayerLanceSpawnerGameLogic_SpawnUnits::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance, bool offScreen)
1 postfixes:
* static void MissionControl.Patches.PlayerLanceSpawnerGameLogicSpawnUnitsPatch::Postfix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

14:10:39.708 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::SpawnUnits(bool offScreen)
14:10:39.711 [Info] Writing prefixes
14:10:39.713 [Info] Writing postfixes
14:10:39.717 [Info] Patching void BattleTech.EncounterLayerData::LoadRaycastInfo(HBS.Util.SerializationStream stream) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomMaps.Patches.EncounterLayerData_LoadRaycastInfo::Prefix(BattleTech.EncounterLayerData __instance, HBS.Util.SerializationStream& stream)

14:10:39.720 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerData::LoadRaycastInfo(HBS.Util.SerializationStream stream)
14:10:39.722 [Info] Writing prefixes
14:10:39.728 [Info] Patching static BattleTech.MapMetaData BattleTech.MapMetaData::LoadMapMetaData(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomMaps.Patches.MapMetaData_LoadMapMetaData::Prefix(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager, String& __state, BattleTech.MapMetaData& __result)
1 postfixes:
* static void CustomMaps.Patches.MapMetaData_LoadMapMetaData::Postfix(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager, String& __state, BattleTech.MapMetaData& __result)

14:10:39.731 [Info] Running ILHook manipulator on static BattleTech.MapMetaData BattleTech.MapMetaData::LoadMapMetaData(BattleTech.Contract contract, BattleTech.Data.DataManager dataManager)
14:10:39.732 [Info] Writing prefixes
14:10:39.734 [Info] Writing postfixes
14:10:39.802 [Info] ### Harmony id=io.mission.customunits, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomUnits.Core::Init(string directory, string settingsJson), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomUnits.dll
### At 2023-05-07 02.10.39
14:10:39.807 [Info] ### Harmony id=io.mission.customdeploy, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomDeploy.Core::Init(string directory, bool debugLog), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomUnits\CustomDeploy.dll
### At 2023-05-07 02.10.39
14:10:39.811 [Info] Patching void BattleTech.FollowActorCameraSequence::CheckForFinished() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.FollowActorCameraSequence_CheckForFinished::Prefix(BattleTech.FollowActorCameraSequence __instance)

14:10:39.813 [Info] Running ILHook manipulator on void BattleTech.FollowActorCameraSequence::CheckForFinished()
14:10:39.814 [Info] Writing prefixes
14:10:39.820 [Info] Patching System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_DangerousLocationCellsList::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, System.Collections.Generic.List`1[[BattleTech.MapTerrainDataCell, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:39.822 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MapTerrainDataCell> BattleTech.UnitSpawnPointGameLogic::get_DangerousLocationCellsList()
14:10:39.824 [Info] Writing prefixes
14:10:39.831 [Info] Patching float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.UnitSpawnPointGameLogic_GetEvaluationAtPositionOrientation::Prefix(BattleTech.InfluenceMapEvaluator __instance, UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode, Single& __result)

14:10:39.833 [Info] Running ILHook manipulator on float BattleTech.InfluenceMapEvaluator::GetEvaluationAtPositionOrientation(UnityEngine.Vector3 pos, int rotationIndex, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
14:10:39.835 [Info] Writing prefixes
14:10:39.844 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_GetStringFromObjectDispatch::Prefix(String& __result, object obj, string expr)

14:10:39.846 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::GetStringFromObjectDispatch(object obj, string expr)
14:10:39.848 [Info] Writing prefixes
14:10:39.856 [Info] Patching static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Interpolator_LookupStringFromObjectAndMaybeDispatch::Prefix(String& __result, object obj, string expr, Boolean& dispatchLocalize)

14:10:39.858 [Info] Running ILHook manipulator on static string BattleTech.StringInterpolation.Interpolator::LookupStringFromObjectAndMaybeDispatch(object obj, string expr, Boolean& dispatchLocalize)
14:10:39.860 [Info] Writing prefixes
14:10:39.865 [Info] Patching void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.HeapSnapshotCollector_CollectStaticFields::Prefix(UnityHeapCrawler.HeapSnapshotCollector __instance)

14:10:39.868 [Info] Running ILHook manipulator on void UnityHeapCrawler.HeapSnapshotCollector::CollectStaticFields()
14:10:39.870 [Info] Writing prefixes
14:10:39.879 [Info] Patching static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AssemblyUtil_FindMethods::Prefix(System.Reflection.MethodInfo[]& __result, System.Reflection.Assembly assembly, string methodName, string typeName)

14:10:39.881 [Info] Running ILHook manipulator on static System.Reflection.MethodInfo[] BattleTech.ModSupport.Utils.AssemblyUtil::FindMethods(System.Reflection.Assembly assembly, string methodName, string typeName)
14:10:39.883 [Info] Writing prefixes
14:10:39.892 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_unit::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.SpawnableUnit spawnableUnit)

14:10:39.895 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.SpawnableUnit spawnableUnit)
14:10:39.896 [Info] Writing postfixes
14:10:39.902 [Info] Patching void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.LanceConfiguration_AddUnits::Prefix(BattleTech.LanceConfiguration __instance, System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)

14:10:39.905 [Info] Running ILHook manipulator on void BattleTech.LanceConfiguration::AddUnits(System.Collections.Generic.IEnumerable<BattleTech.SpawnableUnit> units)
14:10:39.906 [Info] Writing prefixes
14:10:39.912 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.UnitSpawnPointGameLogic_OverrideSpawn_logic::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.UnitSpawnPointGameLogic logic)

14:10:39.914 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::OverrideSpawn(BattleTech.UnitSpawnPointGameLogic logic)
14:10:39.916 [Info] Writing postfixes
14:10:39.920 [Info] Patching static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.AkTriggerBase_GetAllDerivedTypes::Prefix(System.Collections.Generic.Dictionary`2[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:39.922 [Info] Running ILHook manipulator on static System.Collections.Generic.Dictionary<uint, string> AkTriggerBase::GetAllDerivedTypes()
14:10:39.924 [Info] Writing prefixes
14:10:39.929 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:39.931 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:39.933 [Info] Writing prefixes
14:10:39.938 [Info] Patching bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomDeploy.LoadRequest_TryCreateAndAddLoadRequest::Postfix(BattleTech.Data.LoadRequest __instance, BattleTech.BattleTechResourceType resourceType, string resourceId, bool __result)

14:10:39.939 [Info] Running ILHook manipulator on bool BattleTech.Data.LoadRequest::TryCreateAndAddLoadRequest(BattleTech.Data.LoadTracker& tracker, BattleTech.BattleTechResourceType resourceType, string resourceId, bool? filterByOwnership)
14:10:39.941 [Info] Writing postfixes
14:10:39.948 [Info] Patching virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomDeploy.MainMenu_OnAddedToHierarchy::Postfix(BattleTech.UI.MainMenu __instance)

14:10:39.950 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::OnAddedToHierarchy()
14:10:39.952 [Info] Writing postfixes
14:10:39.959 [Info] Patching string BattleTech.StarSystem::GetLastPilotAddedToHiringName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.StarSystem_GetLastPilotAddedToHiringName::Prefix(BattleTech.StarSystem __instance, String& __result)

14:10:39.961 [Info] Running ILHook manipulator on string BattleTech.StarSystem::GetLastPilotAddedToHiringName()
14:10:39.963 [Info] Writing prefixes
14:10:39.968 [Info] Patching bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.SimGameState_AddPilotToHiringHall::Prefix(BattleTech.SimGameState __instance, string pilotDefID, string starSystemID, Boolean& __result)

14:10:39.970 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddPilotToHiringHall(string pilotDefID, string starSystemID)
14:10:39.971 [Info] Writing prefixes
14:10:39.976 [Info] Patching void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.StarSystem_AddAvailablePilot::Prefix(BattleTech.StarSystem __instance, BattleTech.PilotDef def, bool isRonin)

14:10:39.979 [Info] Running ILHook manipulator on void BattleTech.StarSystem::AddAvailablePilot(BattleTech.PilotDef def, bool isRonin)
14:10:39.981 [Info] Writing prefixes
14:10:39.986 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

14:10:39.988 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
14:10:39.990 [Info] Writing prefixes
14:10:39.996 [Info] Patching void BattleTech.Data.DataManager::UpdateRequests() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.DataManager_UpdateRequests::Prefix(BattleTech.Data.DataManager __instance)

14:10:39.998 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::UpdateRequests()
14:10:40.000 [Info] Writing prefixes
14:10:40.007 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)

14:10:40.009 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:10:40.011 [Info] Writing prefixes
14:10:40.017 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomDeploy.CombatHUDHeatDisplay_UpdateOverheatWarnings::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, Boolean& overHeated, Boolean& shutDown)

14:10:40.020 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::UpdateOverheatWarnings(bool overHeated, bool shutDown)
14:10:40.022 [Info] Writing prefixes
14:10:40.028 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)

14:10:40.030 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
14:10:40.032 [Info] Writing postfixes
14:10:40.037 [Info] Patching static void Utilities::BuildExtensionMethodCacheForType(Type type) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Utilities_BuildExtensionMethodCacheForType::Prefix(Type type)

14:10:40.040 [Info] Running ILHook manipulator on static void Utilities::BuildExtensionMethodCacheForType(Type type)
14:10:40.042 [Info] Writing prefixes
14:10:40.051 [Info] Patching System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Briefing_BuildSimGameResults::Prefix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride, System.Collections.Generic.List`1[[BattleTech.ResultDescriptionEntry, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:40.054 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ResultDescriptionEntry> BattleTech.SimGameState::BuildSimGameResults(BattleTech.SimGameEventResult[] resultsList, BattleTech.GameContext context, SimGameStatDescDef+DescriptionTense? tenseOverride, BattleTech.Pilot pilotOverride)
14:10:40.056 [Info] Writing prefixes
14:10:40.082 [Info] Patching static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr) with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomUnits.PatchingDebug::GetOriginalMethod_Finalizer(Exception __exception, HarmonyLib.HarmonyMethod attr)

14:10:40.086 [Info] Running ILHook manipulator on static System.Reflection.MethodBase HarmonyLib.PatchTools::GetOriginalMethod(HarmonyLib.HarmonyMethod attr)
14:10:40.088 [Info] Writing finalizers
14:10:40.106 [Info] Patching void BattleTech.UI.MechBayMechStorageWidget::SetSorting() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_SetSorting::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance)
* static bool SortByTonnage.MechBayMechStorageWidget_SetSorting_Patch::Prefix(BattleTech.UI.MechBayMechStorageWidget __instance)

14:10:40.108 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechStorageWidget::SetSorting()
14:10:40.111 [Info] Writing prefixes
14:10:40.115 [Info] Patching void BattleTech.SimGameState::_OnDefsLoadComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState__OnDefsLoadComplete_Patch::Postfix(BattleTech.SimGameState __instance)

14:10:40.117 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnDefsLoadComplete()
14:10:40.119 [Info] Writing prefixes
14:10:40.121 [Info] Writing postfixes
14:10:40.127 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
3 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

14:10:40.130 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
14:10:40.132 [Info] Writing prefixes
14:10:40.134 [Info] Writing postfixes
14:10:40.144 [Info] Patching void BattleTech.SimGameState::ReadyMech(int baySlot, string id) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.Patches.SimGameState_ReadyMech_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.SimGameState_ReadyMech_Patch::Postfix(int baySlot, string id, BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:40.146 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
14:10:40.148 [Info] Transpiling void BattleTech.SimGameState::ReadyMech(int baySlot, string id)
14:10:40.151 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Patches.SimGameState_ReadyMech_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:40.153 [Info] Writing prefixes
14:10:40.155 [Info] Writing postfixes
14:10:40.162 [Info] Patching void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_RemoveMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, BattleTech.SimGameState __instance)

14:10:40.165 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveMech(int idx, BattleTech.MechDef mech, bool active)
14:10:40.167 [Info] Writing postfixes
14:10:40.173 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

14:10:40.175 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
14:10:40.177 [Info] Writing postfixes
14:10:40.183 [Info] Patching bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapInativeMech_Patch::Postfix(string id, bool pay, BattleTech.SimGameState __instance)

14:10:40.185 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapInactiveMech(string id, bool pay)
14:10:40.187 [Info] Writing postfixes
14:10:40.193 [Info] Patching void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_StripMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

14:10:40.195 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StripMech(int baySlot, BattleTech.MechDef def)
14:10:40.197 [Info] Writing postfixes
14:10:40.202 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

14:10:40.204 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
14:10:40.205 [Info] Writing postfixes
14:10:40.210 [Info] Patching void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

14:10:40.212 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
14:10:40.214 [Info] Writing prefixes
14:10:40.220 [Info] Patching void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool SortByTonnage.SimGamestate_Cancel_ML_ReadyMech_Patch::Prefix(BattleTech.WorkOrderEntry_ReadyMech order, BattleTech.SimGameState __instance)

14:10:40.222 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Cancel_ML_ReadyMech(BattleTech.WorkOrderEntry_ReadyMech order)
14:10:40.225 [Info] Writing prefixes
14:10:40.232 [Info] Patching void BattleTech.UI.MechBayPanel::OnMechLabClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechBayPanel_OnMechLabClosed_Patch::Prefix(BattleTech.UI.MechBayPanel __instance)

14:10:40.234 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnMechLabClosed()
14:10:40.237 [Info] Writing prefixes
14:10:40.244 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmCancelWorkOrder_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

14:10:40.246 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmCancelWorkOrder()
14:10:40.249 [Info] Writing prefixes
14:10:40.252 [Info] Writing postfixes
14:10:40.256 [Info] Patching void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_ConfirmScrapMech_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

14:10:40.259 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::ConfirmScrapMech()
14:10:40.261 [Info] Writing prefixes
14:10:40.263 [Info] Writing postfixes
14:10:40.269 [Info] Patching void BattleTech.UI.MechPlacementPopup::OnConfirmClicked() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Prefix()
1 postfixes:
* static void SortByTonnage.MechPlacementPopup_OnConfirmClicked_Patch::Postfix(BattleTech.UI.MechPlacementPopup __instance)

14:10:40.271 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::OnConfirmClicked()
14:10:40.273 [Info] Writing prefixes
14:10:40.274 [Info] Writing postfixes
14:10:40.280 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

14:10:40.283 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
14:10:40.285 [Info] Writing postfixes
14:10:40.289 [Info] Patching void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechSpin.Patches.MechRepresentationSimGame_Init_Patch::Postfix(BattleTech.MechRepresentationSimGame __instance)

14:10:40.291 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::Init(BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, UnityEngine.Transform parentTransform, BattleTech.HeraldryDef heraldryDef)
14:10:40.293 [Info] Writing postfixes
14:10:40.298 [Info] Patching void BattleTech.MouseRotation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechSpin.Patches.MouseRotation_Update::Prefix(BattleTech.MouseRotation __instance)

14:10:40.300 [Info] Running ILHook manipulator on void BattleTech.MouseRotation::Update()
14:10:40.301 [Info] Writing prefixes
14:10:40.307 [Info] Patching void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.TurretRepresentationInitPatch::Postfix(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented, BattleTech.TurretRepresentation __instance)

14:10:40.309 [Info] Running ILHook manipulator on void BattleTech.TurretRepresentation::Init(BattleTech.Turret turret, UnityEngine.Transform parentTransform, bool isParented)
14:10:40.311 [Info] Writing postfixes
14:10:40.316 [Info] Patching void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void MechResizer.GameRepresentationInitPatch::Postfix(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented, BattleTech.VehicleRepresentation __instance)

14:10:40.318 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::Init(BattleTech.Vehicle vehicle, UnityEngine.Transform parentTransform, bool isParented)
14:10:40.320 [Info] Writing postfixes
14:10:40.325 [Info] Patching virtual void WeaponEffect::PlayProjectile() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MechResizer.WeaponEffectPlayProjectilePatch::Prefix(WeaponEffect __instance)

14:10:40.327 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayProjectile()
14:10:40.328 [Info] Writing prefixes
14:10:40.335 [Info] Patching void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LoadRequest_CompleteLoadTracker::Postfix(BattleTech.Data.LoadRequest __instance, object tracker, bool loadSuccess)

14:10:40.337 [Info] Running ILHook manipulator on void BattleTech.Data.LoadRequest::CompleteLoadTracker(BattleTech.Data.LoadTracker tracker, bool loadSuccess)
14:10:40.339 [Info] Writing postfixes
14:10:40.344 [Info] Patching void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AttackDirector_PerformAttack::Prefix(BattleTech.AttackDirector __instance, BattleTech.AttackDirector+AttackSequence sequence)

14:10:40.346 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::PerformAttack(BattleTech.AttackDirector+AttackSequence sequence)
14:10:40.348 [Info] Writing prefixes
14:10:40.354 [Info] Patching virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_OnAudioEvent::Prefix(BattleTech.VehicleRepresentation __instance, string audioEvent)

14:10:40.356 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::OnAudioEvent(string audioEvent)
14:10:40.358 [Info] Writing prefixes
14:10:40.363 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStartAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStartAudio::Prefix(BattleTech.VehicleRepresentation __instance)

14:10:40.365 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStartAudio()
14:10:40.367 [Info] Writing prefixes
14:10:40.372 [Info] Patching void BattleTech.VehicleRepresentation::PlayEngineStopAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_PlayEngineStopAudio::Prefix(BattleTech.VehicleRepresentation __instance)

14:10:40.375 [Info] Running ILHook manipulator on void BattleTech.VehicleRepresentation::PlayEngineStopAudio()
14:10:40.377 [Info] Writing prefixes
14:10:40.452 [Info] Patching virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BTDebug.PilotableActorRepresentationPatch::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel& newLevel)
3 postfixes:
* static void MechEngineer.Features.OverrideGhostVFX.Patches.PilotableActorRepresentation_OnPlayerVisibilityChanged_Patch::Postfix(BattleTech.PilotableActorRepresentation __instance)
* static void CustomActivatableEquipment.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)
* static void CustomUnits.PilotableActorRepresentation_OnPlayerVisibilityChanged::Postfix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newLevel)

14:10:40.454 [Info] Running ILHook manipulator on virtual void BattleTech.PilotableActorRepresentation::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
14:10:40.456 [Info] Writing prefixes
14:10:40.458 [Info] Writing postfixes
14:10:40.468 [Info] Patching UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_GetAttachTransform::Prefix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, UnityEngine.Transform& __result)

14:10:40.471 [Info] Running ILHook manipulator on UnityEngine.Transform BattleTech.Vehicle::GetAttachTransform(BattleTech.VehicleChassisLocations location)
14:10:40.473 [Info] Writing prefixes
14:10:40.478 [Info] Patching virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Vehicle_IsTargetPositionInFiringArc::Prefix(BattleTech.Vehicle __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

14:10:40.481 [Info] Running ILHook manipulator on virtual bool BattleTech.Vehicle::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
14:10:40.483 [Info] Writing prefixes
14:10:40.488 [Info] Patching virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_IsTargetPositionInFiringArc::Prefix(BattleTech.Mech __instance, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition, Boolean& __result)

14:10:40.491 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::IsTargetPositionInFiringArc(BattleTech.ICombatant targetUnit, UnityEngine.Vector3 attackPosition, UnityEngine.Quaternion attackRotation, UnityEngine.Vector3 targetPosition)
14:10:40.493 [Info] Writing prefixes
14:10:40.500 [Info] Patching virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_HandleDeath::Postfix(BattleTech.AbstractActor __instance)

14:10:40.502 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::HandleDeath(string attackerGUID)
14:10:40.504 [Info] Writing postfixes
14:10:40.510 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:40.512 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:40.514 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:40.517 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:40.519 [Info] Writing postfixes
14:10:40.527 [Info] Patching void BattleTech.SimGameState::StartContract(BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.SimGameStateStartContractPatch::Prefix(BattleTech.SimGameState __instance, BattleTech.Contract contract)
1 postfixes:
* static void CustomUnits.SimGameState_StartContract::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract contract)

14:10:40.530 [Info] Running ILHook manipulator on void BattleTech.SimGameState::StartContract(BattleTech.Contract contract)
14:10:40.531 [Info] Writing prefixes
14:10:40.534 [Info] Writing postfixes
14:10:40.539 [Info] Patching static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet& requiredTags, HBS.Collections.TagSet& excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
1 postfixes:
* static void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags, System.Collections.Generic.List`1[[BattleTech.Data.UnitDef_MDD, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:40.541 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.Data.UnitDef_MDD> BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase mdd, HBS.Collections.TagSet requiredTags, HBS.Collections.TagSet excludedTags, bool checkOwnership, DateTime? currentDate, HBS.Collections.TagSet companyTags)
14:10:40.544 [Info] Writing prefixes
14:10:40.546 [Info] Writing postfixes
14:10:40.548 [IL] Generated patch (System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> DMD<BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs>?477284352::BattleTech.Data.TagSetQueryExtensions::GetMatchingUnitDefs(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)):
.locals init (
    BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0 V_0
    System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD> V_1
    System.Boolean V_2
)
IL_0000: ldc.i4.1
IL_0001: stloc V_2
IL_0005: ldarg mdd
IL_0009: ldarga requiredTags
IL_000d: ldarga excludedTags
IL_0011: ldarg checkOwnership
IL_0015: ldarg currentDate
IL_0019: ldarg companyTags
IL_001d: call System.Boolean CustomUnits.TagSetQueryExtensions_GetMatchingUnitDefs::Prefix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet&,HBS.Collections.TagSet&,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet)
IL_0022: ldloc V_2
IL_0026: and
IL_0027: stloc V_2
IL_002b: ldloc V_2
IL_002f: brfalse IL_0087
IL_0034: newobj System.Void BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::.ctor()
IL_0039: stloc.0
IL_003a: ldloc.0
IL_003b: ldarg.0
IL_003c: stfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0041: ldloc.0
IL_0042: ldarg.s currentDate
IL_0044: stfld System.Nullable`1<System.DateTime> BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::currentDate
IL_0049: ldloc.0
IL_004a: ldarg.s companyTags
IL_004c: stfld HBS.Collections.TagSet BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::companyTags
IL_0051: ldloc.0
IL_0052: ldfld BattleTech.Data.MetadataDatabase BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::mdd
IL_0057: ldc.i4.5
IL_0058: ldarg.1
IL_0059: ldarg.2
IL_005a: ldstr "UnitDef"
IL_005f: ldstr ""
IL_0064: ldarg.3
IL_0065: ldstr "UnitDefID"
IL_006a: call System.Collections.Generic.List`1<DataBaseType> BattleTech.Data.TagSetQueryExtensions::GetMatchingDataByTagSet<BattleTech.Data.UnitDef_MDD>(BattleTech.Data.MetadataDatabase,BattleTech.Data.TagSetType,HBS.Collections.TagSet,HBS.Collections.TagSet,System.String,System.String,System.Boolean,System.String)
IL_006f: dup
IL_0070: ldloc.0
IL_0071: ldftn System.Boolean BattleTech.Data.TagSetQueryExtensions/<>c__DisplayClass5_0::<GetMatchingUnitDefs>b__0(BattleTech.Data.UnitDef_MDD)
IL_0077: newobj System.Void System.Predicate`1<BattleTech.Data.UnitDef_MDD>::.ctor(System.Object,System.IntPtr)
IL_007c: callvirt System.Int32 System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>::RemoveAll(System.Predicate`1<T>)
IL_0081: pop
IL_0082: br IL_008b
IL_0087: ldloc V_1
IL_008b: stloc V_1
IL_008f: ldarg mdd
IL_0093: ldarg requiredTags
IL_0097: ldarg excludedTags
IL_009b: ldarg checkOwnership
IL_009f: ldarg currentDate
IL_00a3: ldarg companyTags
IL_00a7: ldloca V_1
IL_00ab: call System.Void CustomUnitSpawn.TagSetQueryExtensions_GetMatchingUnitDefs::postfix(BattleTech.Data.MetadataDatabase,HBS.Collections.TagSet,HBS.Collections.TagSet,System.Boolean,System.Nullable`1<System.DateTime>,HBS.Collections.TagSet,System.Collections.Generic.List`1<BattleTech.Data.UnitDef_MDD>&)
IL_00b0: ldloc V_1
IL_00b4: ret

14:10:40.554 [Info] Patching void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector__SendTurnActorActivateMessage::Postfix(BattleTech.TurnDirector __instance, int turnActorIndex)

14:10:40.556 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::_SendTurnActorActivateMessage(int turnActorIndex)
14:10:40.558 [Info] Writing postfixes
14:10:40.566 [Info] Patching UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDInWorldScalingActorInfo_GetWorldPos::Postfix(BattleTech.UI.CombatHUDInWorldScalingActorInfo __instance, UnityEngine.Vector3& __result)

14:10:40.568 [Info] Running ILHook manipulator on UnityEngine.Vector3 BattleTech.UI.CombatHUDInWorldScalingActorInfo::GetWorldPos()
14:10:40.570 [Info] Writing postfixes
14:10:40.576 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

14:10:40.578 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
14:10:40.580 [Info] Writing postfixes
14:10:40.586 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
2 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

14:10:40.588 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:40.590 [Info] Writing prefixes
14:10:40.592 [Info] Writing postfixes
14:10:40.601 [Info] Patching void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceContractDetailsWidget_PopulateContract::Postfix(BattleTech.UI.LanceContractDetailsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

14:10:40.604 [Info] Running ILHook manipulator on void BattleTech.UI.LanceContractDetailsWidget::PopulateContract(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.Contract contract)
14:10:40.605 [Info] Writing postfixes
14:10:40.621 [Info] Patching void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SGContractsWidget_PopulateContract::Postfix(BattleTech.UI.SGContractsWidget __instance, BattleTech.Contract contract, BattleTech.UI.TMProWrapper.LocalizableText ___ContractDescriptionField)

14:10:40.624 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::PopulateContract(BattleTech.Contract contract, Action onNegotiated)
14:10:40.626 [Info] Writing postfixes
14:10:40.650 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

14:10:40.653 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
14:10:40.655 [Info] Writing postfixes
14:10:40.661 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerEnter::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, UnityEngine.EventSystems.PointerEventData data)

14:10:40.664 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerEnter(UnityEngine.EventSystems.PointerEventData data)
14:10:40.666 [Info] Writing prefixes
14:10:40.673 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

14:10:40.675 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
14:10:40.678 [Info] Writing postfixes
14:10:40.686 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_Init::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD HUD)

14:10:40.688 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::Init(BattleTech.UI.CombatHUD HUD)
14:10:40.690 [Info] Writing postfixes
14:10:40.696 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_UpdateMechDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

14:10:40.698 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::UpdateMechDisplay()
14:10:40.701 [Info] Writing prefixes
14:10:40.703 [Info] Writing postfixes
14:10:40.712 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.AttackDirection& ___shownAttackDirection, BattleTech.Mech ___displayedMech, BattleTech.Vehicle ___displayedVehicle)
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShownAttackDirection::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD, BattleTech.AttackDirection& value, BattleTech.Mech ___displayedMech, BattleTech.AttackDirection& ___shownAttackDirection)

14:10:40.715 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::set_ShownAttackDirection(BattleTech.AttackDirection value)
14:10:40.717 [Info] Writing prefixes
14:10:40.720 [Info] Writing postfixes
14:10:40.727 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDCalledShotPopUp_ShowMechDisplay::Prefix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

14:10:40.730 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowMechDisplay()
14:10:40.733 [Info] Writing prefixes
14:10:40.738 [Info] Patching void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDCalledShotPopUp_ShowVehicleDisplay::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance)

14:10:40.741 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDCalledShotPopUp::ShowVehicleDisplay()
14:10:40.744 [Info] Writing postfixes
14:10:40.750 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_ShowMechDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

14:10:40.752 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::ShowMechDisplay()
14:10:40.754 [Info] Writing postfixes
14:10:40.760 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showVehicleDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

14:10:40.762 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showVehicleDisplay()
14:10:40.764 [Info] Writing postfixes
14:10:40.770 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showBuildingDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

14:10:40.772 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showBuildingDisplay()
14:10:40.774 [Info] Writing postfixes
14:10:40.779 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_showTurretDisplay::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance)

14:10:40.781 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::showTurretDisplay()
14:10:40.784 [Info] Writing postfixes
14:10:40.789 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDTargetingComputer_UpdateStructureAndArmor::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)

14:10:40.791 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::UpdateStructureAndArmor()
14:10:40.793 [Info] Writing prefixes
14:10:40.799 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_RefreshHoverInfoSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:40.802 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshHoverInfo()
14:10:40.804 [Info] Writing prefixes
14:10:40.816 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.Mech value)

14:10:40.818 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMech(BattleTech.Mech value)
14:10:40.820 [Info] Writing prefixes
14:10:40.826 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)

14:10:40.828 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
14:10:40.830 [Info] Writing prefixes
14:10:40.839 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedMechDefSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.MechDef value)

14:10:40.842 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedMechDef(BattleTech.MechDef value)
14:10:40.844 [Info] Writing prefixes
14:10:40.848 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_DisplayedChassisDef::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ChassisDef value)

14:10:40.850 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::set_DisplayedChassisDef(BattleTech.ChassisDef value)
14:10:40.852 [Info] Writing prefixes
14:10:40.857 [Info] Patching void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDVehicleArmorReadout_Init::Postfix(BattleTech.UI.HUDVehicleArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)

14:10:40.859 [Info] Running ILHook manipulator on void BattleTech.UI.HUDVehicleArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool usedForCalledShots)
14:10:40.861 [Info] Writing postfixes
14:10:40.867 [Info] Patching void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.GameRepresentation_SetHighlightAlpha::Prefix(BattleTech.GameRepresentation __instance, float alpha)

14:10:40.869 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightAlpha(float alpha)
14:10:40.871 [Info] Writing prefixes
14:10:40.876 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

14:10:40.878 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
14:10:40.880 [Info] Writing postfixes
14:10:40.885 [Info] Patching void BattleTech.UI.MechLabPanel::InitWidgets() with 3 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabScrolling.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance)
3 postfixes:
* static void CustomFilters.MechLabFiltering.Patches.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void MechEngineer.Features.MechLabSlots.Patches.MechLabPanel_InitWidgets_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_InitWidgets::Postfix(BattleTech.UI.MechLabPanel __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:40.887 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:40.889 [Info] Transpiling void BattleTech.UI.MechLabPanel::InitWidgets()
14:10:40.891 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomFilters.MechLabShopPooling.MechLabPanel_InitWidgets::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:40.893 [Info] Writing prefixes
14:10:40.895 [Info] Writing postfixes
14:10:40.901 [Info] Patching void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)
1 postfixes:
* static void CustomUnits.MechLabPanel_OnRequestResourcesComplete::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.Data.LoadRequest request)

14:10:40.903 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnRequestResourcesComplete(BattleTech.Data.LoadRequest request)
14:10:40.905 [Info] Writing prefixes
14:10:40.906 [Info] Writing postfixes
14:10:40.911 [Info] Patching void BattleTech.UI.MechLabPanel::ConfirmRevertMech() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Prefix(BattleTech.UI.MechLabPanel __instance)
1 postfixes:
* static void CustomUnits.MechLabPanel_ConfirmRevertMech::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:40.914 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ConfirmRevertMech()
14:10:40.915 [Info] Writing prefixes
14:10:40.917 [Info] Writing postfixes
14:10:40.923 [Info] Patching void BattleTech.UI.MechLabPanel::ExitMechLab() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomComponents.Patches.MechLabPanel_ExitMechLab::Postfix()
* static void MechEngineer.Features.Globals.Patches.MechLabPanel_ExitMechLab_Patch::Postfix(BattleTech.UI.MechLabPanel __instance)
* static void CustomUnits.MechLabPanel_ExitMechLab::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:40.925 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ExitMechLab()
14:10:40.927 [Info] Writing postfixes
14:10:40.931 [Info] Patching void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryWeapon_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryWeapon_NotListView __instance)

14:10:40.933 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryWeapon_NotListView::.ctor()
14:10:40.935 [Info] Writing postfixes
14:10:40.939 [Info] Patching void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ListElementController_InventoryGear_NotListView_Constructor::Postfix(BattleTech.UI.ListElementController_InventoryGear_NotListView __instance)

14:10:40.941 [Info] Running ILHook manipulator on void BattleTech.UI.ListElementController_InventoryGear_NotListView::.ctor()
14:10:40.943 [Info] Writing postfixes
14:10:40.947 [Info] Patching void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechLabPanel_ShowDropErrorMessage::Postfix(BattleTech.UI.MechLabPanel __instance, Localize.Text msg)

14:10:40.949 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ShowDropErrorMessage(Localize.Text msg)
14:10:40.951 [Info] Writing postfixes
14:10:40.956 [Info] Patching int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_GetBayRowFromSlot::Prefix(BattleTech.UI.MechBayPanel __instance, Int32& slot)

14:10:40.958 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayPanel::GetBayRowFromSlot(int slot)
14:10:40.960 [Info] Writing prefixes
14:10:40.964 [Info] Patching void BattleTech.UI.MechBayPanel::ViewMechStorage() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewMechStorage::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, BattleTech.SimGameState ___sim)

14:10:40.966 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewMechStorage()
14:10:40.968 [Info] Writing postfixes
14:10:40.974 [Info] Patching void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_Init::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.SimGameState sim)
1 postfixes:
* static void MechSpin.Patches.MechBayPanel_Init_Patch::Postfix(BattleTech.UI.MechBayPanel __instance)

14:10:40.976 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::Init(BattleTech.SimGameState sim)
14:10:40.978 [Info] Writing prefixes
14:10:40.980 [Info] Writing postfixes
14:10:40.985 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

14:10:40.987 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
14:10:40.989 [Info] Writing prefixes
14:10:40.994 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, Boolean& locked, Single& minTonnage, Single& maxTonnage)

14:10:40.997 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetData(BattleTech.UI.LanceConfiguratorPanel LC, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataManager, bool useDragAndDrop, bool locked, float minTonnage, float maxTonnage)
14:10:40.999 [Info] Writing prefixes
14:10:41.005 [Info] Patching void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
1 postfixes:
* static void CustomUnits.LanceLoadoutSlot_SetLockedData::Postfix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)

14:10:41.008 [Info] Running ILHook manipulator on void BattleTech.UI.LanceLoadoutSlot::SetLockedData(BattleTech.UI.IMechLabDraggableItem forcedMech, BattleTech.UI.IMechLabDraggableItem forcedPilot, bool shouldBeLocked)
14:10:41.010 [Info] Writing prefixes
14:10:41.013 [Info] Writing postfixes
14:10:41.019 [Info] Patching void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_SaveLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration config, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

14:10:41.021 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SaveLastLance(BattleTech.LanceConfiguration config)
14:10:41.023 [Info] Writing prefixes
14:10:41.028 [Info] Patching virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceLoadoutSlot_OnAddItem::Prefix(BattleTech.UI.LanceLoadoutSlot __instance, BattleTech.UI.IMechLabDraggableItem item, bool validate, bool __result, BattleTech.UI.LanceConfiguratorPanel ___LC)

14:10:41.030 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.LanceLoadoutSlot::OnAddItem(BattleTech.UI.IMechLabDraggableItem item, bool validate)
14:10:41.032 [Info] Writing prefixes
14:10:41.039 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

14:10:41.042 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
14:10:41.044 [Info] Writing prefixes
14:10:41.045 [Info] Writing postfixes
14:10:41.051 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

14:10:41.053 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
14:10:41.056 [Info] Writing prefixes
14:10:41.058 [Info] Writing postfixes
14:10:41.070 [Info] Patching float BattleTech.Mech::get_MoveMultiplier() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_MoveMultiplier::Prefix(BattleTech.Mech __instance, Single& __result)
2 postfixes:
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_MoveMultiplier_Patch::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MoveMultiplier::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:41.072 [Info] Running ILHook manipulator on float BattleTech.Mech::get_MoveMultiplier()
14:10:41.074 [Info] Writing prefixes
14:10:41.076 [Info] Writing postfixes
14:10:41.081 [Info] Patching void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LogMechKillInflicted::Prefix(BattleTech.Pilot __instance, int stackID, string sourceID)

14:10:41.083 [Info] Running ILHook manipulator on void BattleTech.Pilot::LogMechKillInflicted(int stackID, string sourceID)
14:10:41.085 [Info] Writing prefixes
14:10:41.089 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
4 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)

14:10:41.091 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
14:10:41.093 [Info] Writing prefixes
14:10:41.096 [Info] Writing postfixes
14:10:41.102 [Info] Patching void BattleTech.Rendering.MechMeshMerge::GenerateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_GenerateCache::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

14:10:41.104 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::GenerateCache()
14:10:41.106 [Info] Writing prefixes
14:10:41.126 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnDestroy::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

14:10:41.128 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnDestroy()
14:10:41.130 [Info] Writing prefixes
14:10:41.139 [Info] Patching void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_BuildCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

14:10:41.142 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::BuildCombinedMesh()
14:10:41.144 [Info] Writing prefixes
14:10:41.160 [Info] Patching void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_RefreshCombinedMesh::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

14:10:41.162 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::RefreshCombinedMesh(bool damaged)
14:10:41.164 [Info] Writing prefixes
14:10:41.170 [Info] Patching void BattleTech.Rendering.MechMeshMerge::OnEnable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_OnEnable::Prefix(BattleTech.Rendering.MechMeshMerge __instance)

14:10:41.172 [Info] Running ILHook manipulator on void BattleTech.Rendering.MechMeshMerge::OnEnable()
14:10:41.174 [Info] Writing prefixes
14:10:41.181 [Info] Patching virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_ContractInitialize::Postfix(BattleTech.UnitSpawnPointGameLogic __instance)

14:10:41.183 [Info] Running ILHook manipulator on virtual void BattleTech.UnitSpawnPointGameLogic::ContractInitialize()
14:10:41.185 [Info] Writing postfixes
14:10:41.192 [Info] Patching static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorFactory_CreateMech::Prefix(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

14:10:41.194 [Info] Running ILHook manipulator on static BattleTech.Mech BattleTech.ActorFactory::CreateMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
14:10:41.196 [Info] Writing prefixes
14:10:41.200 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

14:10:41.202 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
14:10:41.204 [Info] Writing prefixes
14:10:41.211 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)

14:10:41.213 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
14:10:41.215 [Info] Writing postfixes
14:10:41.219 [Info] Patching static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorFactory_CreateVehicle::Postfix(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Vehicle& __result)

14:10:41.222 [Info] Running ILHook manipulator on static BattleTech.Vehicle BattleTech.ActorFactory::CreateVehicle(BattleTech.VehicleDef vDef, BattleTech.PilotDef pilot, HBS.Collections.TagSet additionalTags, BattleTech.CombatGameState combat, string uniqueId, string spawnerId, BattleTech.HeraldryDef customHeraldryDef)
14:10:41.223 [Info] Writing postfixes
14:10:41.228 [Info] Patching void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDestructibleObject_Collapse::Prefix(MechDestructibleObject __instance, UnityEngine.Vector3 forceDirection, float forceMagnitude, UnityEngine.Rigidbody[]& ___destroyedRigidbodies)

14:10:41.230 [Info] Running ILHook manipulator on void MechDestructibleObject::Collapse(UnityEngine.Vector3 forceDirection, float forceMagnitude)
14:10:41.231 [Info] Writing prefixes
14:10:41.237 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_TryShow::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance, BattleTech.MechRepresentationSimGame mechRep)

14:10:41.240 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::TryShow(BattleTech.MechRepresentationSimGame mechRep)
14:10:41.242 [Info] Writing prefixes
14:10:41.246 [Info] Patching void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechPaintPatternSelectorWidget_OnValueChanged::Prefix(BattleTech.UI.MechPaintPatternSelectorWidget __instance)

14:10:41.248 [Info] Running ILHook manipulator on void BattleTech.UI.MechPaintPatternSelectorWidget::OnValueChanged()
14:10:41.250 [Info] Writing prefixes
14:10:41.254 [Info] Patching void BattleTech.UI.MechLabPanel::RefreshPaintSelector() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechLabPanel_RefreshPaintSelector::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechPaintPatternSelectorWidget ___paintSelector)

14:10:41.256 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::RefreshPaintSelector()
14:10:41.258 [Info] Writing prefixes
14:10:41.263 [Info] Patching UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechMeshMerge_childrenRenderers::Prefix(BattleTech.Rendering.MechMeshMerge __instance, Boolean& __state, UnityEngine.SkinnedMeshRenderer[]& ____childrenRenderers, UnityEngine.GameObject& ___visibleObject, UnityEngine.SkinnedMeshRenderer[]& __result)

14:10:41.265 [Info] Running ILHook manipulator on UnityEngine.SkinnedMeshRenderer[] BattleTech.Rendering.MechMeshMerge::get_childrenRenderers()
14:10:41.266 [Info] Writing prefixes
14:10:41.270 [Info] Patching void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Renderer_sharedMaterial_set::Prefix(UnityEngine.Renderer __instance, UnityEngine.Material value)

14:10:41.272 [Info] Running ILHook manipulator on void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material value)
14:10:41.274 [Info] Writing prefixes
14:10:41.278 [Info] Patching void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmorStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)
1 postfixes:
* static void CustomUnits.Mech_ApplyArmorStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo& hitInfo)

14:10:41.280 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmorStatDamage(BattleTech.ArmorLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
14:10:41.281 [Info] Writing prefixes
14:10:41.284 [Info] Writing postfixes
14:10:41.288 [Info] Patching void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_SetNeedsInjury::Prefix(BattleTech.Pilot __instance, BattleTech.InjuryReason reason)

14:10:41.290 [Info] Running ILHook manipulator on void BattleTech.Pilot::SetNeedsInjury(BattleTech.InjuryReason reason)
14:10:41.292 [Info] Writing prefixes
14:10:41.297 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMech::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.Mech mech, BattleTech.ArmorLocation location)

14:10:41.299 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.Mech mech, BattleTech.ArmorLocation location)
14:10:41.302 [Info] Writing prefixes
14:10:41.304 [Info] Writing postfixes
14:10:41.310 [Info] Patching void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_setToolTipInfoMechDef::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.MechDef mech, BattleTech.ArmorLocation location)

14:10:41.313 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTrayArmorHover::setToolTipInfo(BattleTech.MechDef mech, BattleTech.ArmorLocation location)
14:10:41.315 [Info] Writing prefixes
14:10:41.318 [Info] Writing postfixes
14:10:41.325 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.ArmorLocation value)
1 postfixes:
* static void CustomUnits.CombatHUDAttackModeSelector_DisplayedLocation::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, BattleTech.ArmorLocation value)

14:10:41.327 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::set_DisplayedLocation(BattleTech.ArmorLocation value)
14:10:41.329 [Info] Writing prefixes
14:10:41.332 [Info] Writing postfixes
14:10:41.339 [Info] Patching void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Prefix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackStackSequence_OnAttackBegin::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)
* static void CustomUnits.AttackStackSequence_OnAttackBeginSquad::Postfix(BattleTech.AttackStackSequence __instance, MessageCenterMessage message)

14:10:41.341 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::OnAttackBegin(MessageCenterMessage message)
14:10:41.344 [Info] Writing prefixes
14:10:41.346 [Info] Writing postfixes
14:10:41.354 [Info] Patching static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetLongArmorLocation::Postfix(BattleTech.ArmorLocation location, Localize.Text& __result)

14:10:41.356 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetLongArmorLocation(BattleTech.ArmorLocation location)
14:10:41.358 [Info] Writing postfixes
14:10:41.365 [Info] Patching static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetAbbreviatedChassisLocation::Postfix(BattleTech.ChassisLocations location, Localize.Text& __result)

14:10:41.367 [Info] Running ILHook manipulator on static Localize.Text BattleTech.Mech::GetAbbreviatedChassisLocation(BattleTech.ChassisLocations location)
14:10:41.369 [Info] Writing postfixes
14:10:41.376 [Info] Patching virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Prefix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance, bool ___usedForCalledShots)
1 postfixes:
* static void CustomUnits.CombatHUDMechTrayArmorHover_OnPointerClick::Postfix(BattleTech.UI.CombatHUDMechTrayArmorHover __instance)

14:10:41.378 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDMechTrayArmorHover::OnPointerClick(UnityEngine.EventSystems.PointerEventData data)
14:10:41.380 [Info] Writing prefixes
14:10:41.382 [Info] Writing postfixes
14:10:41.389 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:41.391 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
14:10:41.394 [Info] Writing prefixes
14:10:41.396 [Info] Writing postfixes
14:10:41.407 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:41.410 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
14:10:41.412 [Info] Writing postfixes
14:10:41.492 [Info] Patching void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Prefix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)
1 postfixes:
* static void CustomUnits.CombatGameConstants_BuildClusterTables::Postfix(BattleTech.CombatGameConstants __instance, BattleTech.CombatGameState combat)

14:10:41.494 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::BuildClusterTables(BattleTech.CombatGameState combat)
14:10:41.496 [Info] Writing prefixes
14:10:41.498 [Info] Writing postfixes
14:10:41.509 [Info] Patching void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.Mech_NukeStructureLocationZombie::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_NukeStructureLocation::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
1 postfixes:
* static void CustomUnits.Mech_NukeStructureLocation::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)

14:10:41.512 [Info] Running ILHook manipulator on void BattleTech.Mech::NukeStructureLocation(BattleTech.WeaponHitInfo hitInfo, int hitLoc, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.DamageType damageType)
14:10:41.514 [Info] Writing prefixes
14:10:41.516 [Info] Writing postfixes
14:10:41.522 [Info] Patching static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechStructureRules_GetDependentLocation::Postfix(BattleTech.ChassisLocations location, BattleTech.ChassisLocations& __result)

14:10:41.524 [Info] Running ILHook manipulator on static BattleTech.ChassisLocations BattleTech.MechStructureRules::GetDependentLocation(BattleTech.ChassisLocations location)
14:10:41.526 [Info] Writing postfixes
14:10:41.530 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

14:10:41.532 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
14:10:41.534 [Info] Writing prefixes
14:10:41.536 [Info] Writing postfixes
14:10:41.541 [Info] Patching bool BattleTech.Mech::get_IsLegged() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsLegged::Postfix(BattleTech.Mech __instance, Boolean& __result)

14:10:41.543 [Info] Running ILHook manipulator on bool BattleTech.Mech::get_IsLegged()
14:10:41.545 [Info] Writing postfixes
14:10:41.550 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:41.552 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
14:10:41.554 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
14:10:41.556 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:41.558 [Info] Writing postfixes
14:10:41.565 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)

14:10:41.567 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:41.569 [Info] Writing prefixes
14:10:41.571 [Info] Writing postfixes
14:10:41.584 [Info] Patching bool BattleTech.MechDef::get_IsDestroyed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsDestroyed::Postfix(BattleTech.MechDef __instance, Boolean& __result)

14:10:41.586 [Info] Running ILHook manipulator on bool BattleTech.MechDef::get_IsDestroyed()
14:10:41.588 [Info] Writing postfixes
14:10:41.592 [Info] Patching void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyLegStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

14:10:41.594 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyLegStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
14:10:41.596 [Info] Writing prefixes
14:10:41.602 [Info] Patching void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyArmStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

14:10:41.604 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyArmStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
14:10:41.606 [Info] Writing prefixes
14:10:41.611 [Info] Patching void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.Mech_ApplyHeadStructureEffects_Patch::Prefix(Boolean& __runOriginal)
* static bool CustomActivatableEquipment.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
* static bool CustomUnits.Mech_ApplyHeadStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)

14:10:41.613 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyHeadStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, BattleTech.WeaponHitInfo hitInfo)
14:10:41.615 [Info] Writing prefixes
14:10:41.621 [Info] Patching void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplySideTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

14:10:41.623 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplySideTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
14:10:41.625 [Info] Writing prefixes
14:10:41.630 [Info] Patching void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_ApplyCenterTorsoStructureEffects::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)

14:10:41.632 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyCenterTorsoStructureEffects(BattleTech.ChassisLocations location, BattleTech.LocationDamageLevel oldDamageLevel, BattleTech.LocationDamageLevel newDamageLevel, string sourceID, int stackItemUID)
14:10:41.634 [Info] Writing prefixes
14:10:41.641 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:41.643 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:41.645 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:41.648 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:41.650 [Info] Writing prefixes
14:10:41.652 [Info] Writing postfixes
14:10:41.660 [Info] Patching virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Prefix(BattleTech.Mech __instance, BattleTech.AttackDirection attackDirection, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_EvaluateExpectedArmorFromAttackDirection::Postfix()

14:10:41.663 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::EvaluateExpectedArmorFromAttackDirection(BattleTech.AttackDirection attackDirection)
14:10:41.665 [Info] Writing prefixes
14:10:41.667 [Info] Writing postfixes
14:10:41.672 [Info] Patching void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Prefix(BattleTech.UI.CombatDebugHUD __instance)
1 postfixes:
* static void CustomUnits.Mech_RunHitDiagnostics::Postfix()

14:10:41.675 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::RunHitDiagnostics()
14:10:41.676 [Info] Writing prefixes
14:10:41.678 [Info] Writing postfixes
14:10:41.684 [Info] Patching System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
1 postfixes:
* static void CustomUnits.HitLocation_GetPossibleHitLocations::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackerPosition, BattleTech.Mech target, System.Collections.Generic.List`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:41.687 [Info] Running ILHook manipulator on System.Collections.Generic.List<int> BattleTech.HitLocation::GetPossibleHitLocations(UnityEngine.Vector3 attackerPosition, BattleTech.Mech target)
14:10:41.688 [Info] Writing prefixes
14:10:41.690 [Info] Writing postfixes
14:10:41.697 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)

14:10:41.700 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation calledShotLocation, float bonusChanceMultiplier)
14:10:41.702 [Info] Writing prefixes
14:10:41.704 [Info] Writing postfixes
14:10:41.711 [Info] Patching BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HitLocation_GetAdjacentHitLocation::Prefix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier, BattleTech.ArmorLocation& __result)
1 postfixes:
* static void CustomUnits.HitLocation_GetAdjacentHitLocation::Postfix(BattleTech.HitLocation __instance, UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)

14:10:41.714 [Info] Running ILHook manipulator on BattleTech.ArmorLocation BattleTech.HitLocation::GetAdjacentHitLocation(UnityEngine.Vector3 attackPosition, BattleTech.Mech target, float randomRoll, BattleTech.ArmorLocation previousHitLocation, float originalMultiplier, float adjacentMultiplier, BattleTech.ArmorLocation bonusLocation, float bonusChanceMultiplier)
14:10:41.716 [Info] Writing prefixes
14:10:41.718 [Info] Writing postfixes
14:10:41.725 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)

14:10:41.727 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
14:10:41.734 [Info] Writing prefixes
14:10:41.737 [Info] Writing postfixes
14:10:41.745 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeIn::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

14:10:41.748 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeIn(float length)
14:10:41.750 [Info] Writing prefixes
14:10:41.753 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_FadeOut::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, float length)

14:10:41.755 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::FadeOut(float length)
14:10:41.756 [Info] Writing prefixes
14:10:41.760 [Info] Patching void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MissionControl.Patches.LanceSpawnerGameLogicOnUnitSpawnCompletePatch::Prefix(BattleTech.LanceSpawnerGameLogic __instance)
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_OnUnitSpawnComplete::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

14:10:41.762 [Info] Running ILHook manipulator on void BattleTech.LanceSpawnerGameLogic::OnUnitSpawnComplete()
14:10:41.764 [Info] Writing prefixes
14:10:41.766 [Info] Writing postfixes
14:10:41.771 [Info] Patching System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.LanceSpawnerGameLogic_GetRealMissionObjectiveResults::Postfix(BattleTech.Contract __instance, BattleTech.TeamController teamController, System.Collections.Generic.List`1[[BattleTech.MissionObjectiveResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:41.773 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.MissionObjectiveResult> BattleTech.Contract::GetRealMissionObjectiveResults(BattleTech.TeamController teamController)
14:10:41.775 [Info] Writing postfixes
14:10:41.783 [Info] Patching bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HostilityMatrix_IsFriendly::Prefix(BattleTech.HostilityMatrix __instance, BattleTech.Team teamOne, BattleTech.Team teamTwo, Boolean& __result)

14:10:41.785 [Info] Running ILHook manipulator on bool BattleTech.HostilityMatrix::IsFriendly(BattleTech.Team teamOne, BattleTech.Team teamTwo)
14:10:41.788 [Info] Writing prefixes
14:10:41.792 [Info] Patching virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateJump_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

14:10:41.794 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateJump::ProcessLeftClick(UnityEngine.Vector3 worldPos)
14:10:41.796 [Info] Writing prefixes
14:10:41.801 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)

14:10:41.803 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
14:10:41.805 [Info] Writing prefixes
14:10:41.810 [Info] Patching void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, MessageCenterMessage message, String& ____teamId, BattleTech.Team& ____team)

14:10:41.812 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::DespawnActor(MessageCenterMessage message)
14:10:41.814 [Info] Writing postfixes
14:10:41.818 [Info] Patching virtual void BattleTech.Mech::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_HandleDeath::Postfix(BattleTech.Mech __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

14:10:41.820 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::HandleDeath(string attackerGUID)
14:10:41.822 [Info] Writing postfixes
14:10:41.827 [Info] Patching virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_HandleDeath::Postfix(BattleTech.Vehicle __instance, string attackerGUID, String& ____teamId, BattleTech.Team& ____team)

14:10:41.829 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::HandleDeath(string attackerGUID)
14:10:41.830 [Info] Writing postfixes
14:10:41.834 [Info] Patching virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.OccupyRegionObjective_UpdateCounts::Postfix(BattleTech.Designed.OccupyRegionObjective __instance)

14:10:41.837 [Info] Running ILHook manipulator on virtual void BattleTech.Designed.OccupyRegionObjective::UpdateCounts()
14:10:41.839 [Info] Writing postfixes
14:10:41.844 [Info] Patching virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ObjectiveGameLogic_ActivateObjectiveConvoy::Prefix(BattleTech.Framework.ObjectiveGameLogic __instance)
1 postfixes:
* static void MissionControl.Patches.ObjectiveGameLogicActivateObjectivePatch::Postfix(BattleTech.Framework.ObjectiveGameLogic __instance)

14:10:41.847 [Info] Running ILHook manipulator on virtual void BattleTech.Framework.ObjectiveGameLogic::ActivateObjective()
14:10:41.848 [Info] Writing prefixes
14:10:41.850 [Info] Writing postfixes
14:10:41.855 [Info] Patching float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetTerrainModifiedCost::Postfix(BattleTech.PathNodeGrid __instance, BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable, BattleTech.AbstractActor ___owningActor, BattleTech.CombatGameState ___combat, Single& __result)

14:10:41.857 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetTerrainModifiedCost(BattleTech.PathNode from, BattleTech.PathNode to, float distanceAvailable)
14:10:41.859 [Info] Writing postfixes
14:10:41.865 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

14:10:41.867 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
14:10:41.870 [Info] Writing postfixes
14:10:41.880 [Info] Patching virtual void BattleTech.MechJumpSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_OnAdded::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:41.882 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnAdded()
14:10:41.884 [Info] Writing postfixes
14:10:41.900 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
1 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

14:10:41.902 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
14:10:41.904 [Info] Writing prefixes
14:10:41.905 [Info] Writing postfixes
14:10:41.912 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardDelta::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 delta)

14:10:41.914 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardDelta(UnityEngine.Vector3 delta)
14:10:41.916 [Info] Writing postfixes
14:10:41.923 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)

14:10:41.925 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
14:10:41.927 [Info] Writing prefixes
14:10:41.937 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
4 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:41.940 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
14:10:41.942 [Info] Writing prefixes
14:10:41.944 [Info] Writing postfixes
14:10:41.952 [Info] Patching void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechJumpSequence_Constructor::Prefix(BattleTech.MechJumpSequence __instance, UnityEngine.Vector3& finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)

14:10:41.954 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Init(UnityEngine.Vector3 finalPos, UnityEngine.Quaternion finalHeading, BattleTech.ICombatant dfaTarget)
14:10:41.956 [Info] Writing prefixes
14:10:41.962 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

14:10:41.964 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
14:10:41.966 [Info] Writing prefixes
14:10:41.971 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

14:10:41.973 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
14:10:41.975 [Info] Writing prefixes
14:10:41.979 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

14:10:41.981 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
14:10:41.983 [Info] Writing prefixes
14:10:41.987 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

14:10:41.989 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
14:10:41.991 [Info] Writing prefixes
14:10:41.996 [Info] Patching void BattleTech.ActorMovementSequence::set_DamageParam(float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_DamageParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)

14:10:41.999 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_DamageParam(float value)
14:10:42.001 [Info] Writing prefixes
14:10:42.005 [Info] Patching void BattleTech.MechJumpSequence::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechJumpSequence_UpdateSquad::Postfix(BattleTech.MechJumpSequence __instance, bool ___HasStarted, float ___t)

14:10:42.007 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::Update()
14:10:42.008 [Info] Writing postfixes
14:10:42.015 [Info] Patching float BattleTech.Mech::get_JumpDistance() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_JumpDistance_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, Single& __result)
1 postfixes:
* static void CustomUnits.Mech_JumpDistance::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:42.017 [Info] Running ILHook manipulator on float BattleTech.Mech::get_JumpDistance()
14:10:42.019 [Info] Writing prefixes
14:10:42.021 [Info] Writing postfixes
14:10:42.025 [Info] Patching void BattleTech.MechJumpSequence::CompleteJump() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechJumpSequence_CompleteJump::Prefix(BattleTech.MechJumpSequence __instance, Boolean& __state)
3 postfixes:
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAuraFloatie::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomActivatableEquipment.MechJumpSequence_CompleteJumpAura::Postfix(BattleTech.MechJumpSequence __instance)
* static void CustomUnits.MechJumpSequence_CompleteJump::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __state)

14:10:42.027 [Info] Running ILHook manipulator on void BattleTech.MechJumpSequence::CompleteJump()
14:10:42.029 [Info] Writing prefixes
14:10:42.031 [Info] Writing postfixes
14:10:42.035 [Info] Patching virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_RefreshSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, bool forceUpdate, Boolean& __result)
1 postfixes:
* static void CustomAmmoCategoriesPatches.PilotableActorRepresentation_RefreshSurfaceType::Postfix(BattleTech.PilotableActorRepresentation __instance)

14:10:42.038 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotableActorRepresentation::RefreshSurfaceType(bool forceUpdate)
14:10:42.039 [Info] Writing prefixes
14:10:42.041 [Info] Writing postfixes
14:10:42.048 [Info] Patching virtual void BattleTech.MechRepresentation::LateUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:42.050 [Info] Running ILHook manipulator on virtual void BattleTech.MechRepresentation::LateUpdate()
14:10:42.051 [Info] Transpiling virtual void BattleTech.MechRepresentation::LateUpdate()
14:10:42.056 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechRepresentation_LateUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:42.065 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_OnAdded::Prefix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType& ___moveType)

14:10:42.068 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnAdded()
14:10:42.070 [Info] Writing prefixes
14:10:42.082 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadDamageState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentationSimGame_LoadDamageState::Prefix(BattleTech.MechRepresentationSimGame __instance)

14:10:42.085 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadDamageState()
14:10:42.087 [Info] Writing prefixes
14:10:42.091 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:42.093 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
14:10:42.095 [Info] Writing postfixes
14:10:42.099 [Info] Patching int BattleTech.AbstractActor::get_WorkingJumpjets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AbstractActor_WorkingJumpjets::Postfix(BattleTech.AbstractActor __instance, Int32& __result)
* static void CustomUnits.Mech_WorkingJumpjets::Postfix(BattleTech.Mech __instance, Int32& __result)

14:10:42.101 [Info] Running ILHook manipulator on int BattleTech.AbstractActor::get_WorkingJumpjets()
14:10:42.103 [Info] Writing postfixes
14:10:42.108 [Info] Patching System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateJump_GetAllDFATargets::Postfix(BattleTech.UI.SelectionStateJump __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:42.110 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateJump::GetAllDFATargets()
14:10:42.112 [Info] Writing postfixes
14:10:42.120 [Info] Patching virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanDFATargetFromPosition::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, Boolean& __result)

14:10:42.123 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::CanDFATargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position)
14:10:42.125 [Info] Writing postfixes
14:10:42.130 [Info] Patching virtual int BattleTech.AbstractActor::get_GuardLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GuardLevel::Postfix(BattleTech.Mech __instance, Int32& __result)

14:10:42.132 [Info] Running ILHook manipulator on virtual int BattleTech.AbstractActor::get_GuardLevel()
14:10:42.134 [Info] Writing postfixes
14:10:42.140 [Info] Patching bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_CanEngageTarget::Postfix(BattleTech.Mech __instance, BattleTech.ICombatant target, String& debugMsg, Boolean& __result)

14:10:42.143 [Info] Running ILHook manipulator on bool BattleTech.Mech::CanEngageTarget(BattleTech.ICombatant target, String& debugMsg)
14:10:42.145 [Info] Writing postfixes
14:10:42.151 [Info] Patching void BattleTech.MechDisplacementSequence::ApplyDamage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDisplacementSequence_ApplyDamage::Prefix(BattleTech.MechDisplacementSequence __instance)

14:10:42.153 [Info] Running ILHook manipulator on void BattleTech.MechDisplacementSequence::ApplyDamage()
14:10:42.155 [Info] Writing prefixes
14:10:42.166 [Info] Patching void BattleTech.Rendering.UI.UICreep::RefreshCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_RefreshCache::Prefix(BattleTech.Rendering.UI.UICreep __instance, UnityEngine.Bounds& ___creepBounds)

14:10:42.168 [Info] Running ILHook manipulator on void BattleTech.Rendering.UI.UICreep::RefreshCache()
14:10:42.170 [Info] Writing prefixes
14:10:42.179 [Info] Patching void BattleTech.MechRepresentation::SetLoadAnimation() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetLoadAnimation::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.182 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetLoadAnimation()
14:10:42.184 [Info] Writing prefixes
14:10:42.189 [Info] Patching void BattleTech.MechRepresentation::UpdateHeatSetting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateHeatSetting::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.191 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateHeatSetting()
14:10:42.192 [Info] Writing prefixes
14:10:42.197 [Info] Patching void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_UpdateLegDamageAnimFlags::Prefix(BattleTech.MechRepresentation __instance, BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)

14:10:42.198 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::UpdateLegDamageAnimFlags(BattleTech.LocationDamageLevel leftLegDamage, BattleTech.LocationDamageLevel rightLegDamage)
14:10:42.200 [Info] Writing prefixes
14:10:42.204 [Info] Patching void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerMeleeTransition::Prefix(BattleTech.MechRepresentation __instance, bool meleeIn)

14:10:42.207 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerMeleeTransition(bool meleeIn)
14:10:42.209 [Info] Writing prefixes
14:10:42.212 [Info] Patching void BattleTech.MechRepresentation::ClearLoadState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ClearLoadState::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.214 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ClearLoadState()
14:10:42.216 [Info] Writing prefixes
14:10:42.220 [Info] Patching void BattleTech.MechRepresentation::PlayComponentCritVFX(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayComponentCritVFX::Prefix(BattleTech.MechRepresentation __instance, int location)

14:10:42.222 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayComponentCritVFX(int location)
14:10:42.224 [Info] Writing prefixes
14:10:42.228 [Info] Patching void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayDeathFloatie::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod)

14:10:42.230 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayDeathFloatie(BattleTech.DeathMethod deathMethod)
14:10:42.232 [Info] Writing prefixes
14:10:42.237 [Info] Patching void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetMeleeIdleState::Prefix(BattleTech.MechRepresentation __instance, bool isMelee)

14:10:42.238 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetMeleeIdleState(bool isMelee)
14:10:42.240 [Info] Writing prefixes
14:10:42.244 [Info] Patching void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleRandomIdles::Prefix(BattleTech.MechRepresentation __instance, bool shouldIdle)

14:10:42.245 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleRandomIdles(bool shouldIdle)
14:10:42.247 [Info] Writing prefixes
14:10:42.252 [Info] Patching void BattleTech.MechRepresentation::SetIdleAnimState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetIdleAnimState::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.254 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetIdleAnimState()
14:10:42.256 [Info] Writing prefixes
14:10:42.261 [Info] Patching void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayImpactAnimSimple::Prefix(BattleTech.MechRepresentation __instance, BattleTech.AttackDirection attackDirection, float totalDamage)

14:10:42.264 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayImpactAnimSimple(BattleTech.AttackDirection attackDirection, float totalDamage)
14:10:42.266 [Info] Writing prefixes
14:10:42.272 [Info] Patching void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_SetUnsteadyAnim::Prefix(BattleTech.MechRepresentation __instance, bool isUnsteady)

14:10:42.274 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::SetUnsteadyAnim(bool isUnsteady)
14:10:42.276 [Info] Writing prefixes
14:10:42.279 [Info] Patching void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ForceKnockdown::Prefix(BattleTech.MechRepresentation __instance, UnityEngine.Vector2 attackDirection)

14:10:42.282 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ForceKnockdown(UnityEngine.Vector2 attackDirection)
14:10:42.283 [Info] Writing prefixes
14:10:42.288 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.290 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetAudio()
14:10:42.292 [Info] Writing prefixes
14:10:42.296 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetAudio() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetAudio::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.298 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetAudio()
14:10:42.300 [Info] Writing prefixes
14:10:42.305 [Info] Patching void BattleTech.MechRepresentation::StartJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StartJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.306 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StartJumpjetEffect()
14:10:42.308 [Info] Writing prefixes
14:10:42.313 [Info] Patching void BattleTech.MechRepresentation::StopJumpjetEffect() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_StopJumpjetEffect::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.314 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::StopJumpjetEffect()
14:10:42.316 [Info] Writing prefixes
14:10:42.320 [Info] Patching void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_ToggleHeadlights::Prefix(BattleTech.MechRepresentation __instance, bool headlightsActive)

14:10:42.322 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::ToggleHeadlights(bool headlightsActive)
14:10:42.324 [Info] Writing prefixes
14:10:42.408 [Info] Patching void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_HandleDeathOnLoad::Prefix(BattleTech.MechRepresentation __instance, BattleTech.DeathMethod deathMethod, int location)

14:10:42.410 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::HandleDeathOnLoad(BattleTech.DeathMethod deathMethod, int location)
14:10:42.413 [Info] Writing prefixes
14:10:42.419 [Info] Patching void BattleTech.MechRepresentation::PlayAlliesReportDeathVO() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_PlayAlliesReportDeathVO::Prefix(BattleTech.MechRepresentation __instance)

14:10:42.422 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::PlayAlliesReportDeathVO()
14:10:42.424 [Info] Writing prefixes
14:10:42.431 [Info] Patching void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechRepresentation_TriggerFootFall::Prefix(BattleTech.MechRepresentation __instance, int leftFoot)

14:10:42.433 [Info] Running ILHook manipulator on void BattleTech.MechRepresentation::TriggerFootFall(int leftFoot)
14:10:42.435 [Info] Writing prefixes
14:10:42.446 [Info] Patching void BattleTech.ActorMovementSequence::PlayMeleeAnim() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Prefix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_PlayMeleeAnim::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __state, bool ___playedMelee, BattleTech.ICombatant ___meleeTarget)

14:10:42.449 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::PlayMeleeAnim()
14:10:42.451 [Info] Writing prefixes
14:10:42.453 [Info] Writing postfixes
14:10:42.460 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateCache() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateCache::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

14:10:42.462 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateCache()
14:10:42.464 [Info] Writing prefixes
14:10:42.471 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::UpdateProperties() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_UpdateProperties::Prefix(BattleTech.Rendering.PropertyBlockManager __instance)

14:10:42.474 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::UpdateProperties()
14:10:42.476 [Info] Writing prefixes
14:10:42.483 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_AddProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)

14:10:42.486 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::AddProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& newProperty)
14:10:42.488 [Info] Writing prefixes
14:10:42.493 [Info] Patching void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PropertyBlockManager_RemoveProperty::Prefix(BattleTech.Rendering.PropertyBlockManager __instance, BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)

14:10:42.496 [Info] Running ILHook manipulator on void BattleTech.Rendering.PropertyBlockManager::RemoveProperty(BattleTech.Rendering.PropertyBlockManager+PropertySetting& oldProperty)
14:10:42.498 [Info] Writing prefixes
14:10:42.503 [Info] Patching virtual void BattleTech.VehicleRepresentation::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleRepresentation_Update::Prefix(BattleTech.VehicleRepresentation __instance)

14:10:42.505 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleRepresentation::Update()
14:10:42.506 [Info] Writing prefixes
14:10:42.511 [Info] Patching virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:42.513 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
14:10:42.515 [Info] Transpiling virtual void BattleTech.MechDef::InitFromSave(BattleTech.Data.DataManager newManager)
14:10:42.517 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_InitFromSave::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:42.522 [Info] Patching void BattleTech.MechDef::Refresh() with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.MechDef_Refresh::Postfix(BattleTech.MechDef __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:42.524 [Info] Running ILHook manipulator on void BattleTech.MechDef::Refresh()
14:10:42.526 [Info] Transpiling void BattleTech.MechDef::Refresh()
14:10:42.528 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_Refresh::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:42.530 [Info] Writing postfixes
14:10:42.534 [Info] Patching void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.SorterMechInventory.Patches.MechDef_SetInventory_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponentRef[]& newInventory)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:42.536 [Info] Running ILHook manipulator on void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
14:10:42.538 [Info] Transpiling void BattleTech.MechDef::SetInventory(BattleTech.MechComponentRef[] newInventory)
14:10:42.540 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_SetInventory::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:42.542 [Info] Writing prefixes
14:10:42.546 [Info] Patching virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_GatherDependencies::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:42.548 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:42.550 [Info] Writing prefixes
14:10:42.557 [Info] Patching void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_RequestInventoryPrefabs::Prefix(BattleTech.VehicleDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:42.560 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:42.562 [Info] Writing prefixes
14:10:42.570 [Info] Patching virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_GatherDependencies::Postfix(BattleTech.VehicleChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:42.572 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:42.574 [Info] Writing postfixes
14:10:42.583 [Info] Patching virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_DependenciesLoaded::Postfix(BattleTech.VehicleChassisDef __instance, uint loadWeight, Boolean& __result)

14:10:42.585 [Info] Running ILHook manipulator on virtual bool BattleTech.VehicleChassisDef::DependenciesLoaded(uint loadWeight)
14:10:42.587 [Info] Writing postfixes
14:10:42.593 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:42.596 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:42.598 [Info] Writing postfixes
14:10:42.604 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:42.606 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:42.608 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:42.611 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:42.613 [Info] Writing postfixes
14:10:42.619 [Info] Patching virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight)
1 postfixes:
* static void CustomUnits.MechDef_DependenciesLoaded::Postfix(BattleTech.MechDef __instance, uint loadWeight, Boolean& __result)

14:10:42.621 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDef::DependenciesLoaded(uint loadWeight)
14:10:42.623 [Info] Writing prefixes
14:10:42.625 [Info] Writing postfixes
14:10:42.632 [Info] Patching void BattleTech.Contract::BeginRequestResources(bool generateUnits) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MissionControl.Patches.ContractBeginPatch::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_BeginRequestResources::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractBeginRequestResourcesPatch::Postfix(BattleTech.Contract __instance, bool generateUnits)

14:10:42.634 [Info] Running ILHook manipulator on void BattleTech.Contract::BeginRequestResources(bool generateUnits)
14:10:42.636 [Info] Writing prefixes
14:10:42.638 [Info] Writing postfixes
14:10:42.647 [Info] Patching virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ChassisDef_DependenciesLoaded::Prefix(BattleTech.ChassisDef __instance, uint loadWeight, Boolean& __result, BattleTech.MechComponentRef[]& ___fixedEquipment)

14:10:42.649 [Info] Running ILHook manipulator on virtual bool BattleTech.ChassisDef::DependenciesLoaded(uint loadWeight)
14:10:42.650 [Info] Writing prefixes
14:10:42.658 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

14:10:42.660 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
14:10:42.663 [Info] Writing postfixes
14:10:42.668 [Info] Patching void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDActionButton_ExecuteClick::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUD_OnActorSelected::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

14:10:42.670 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnActorSelected(BattleTech.AbstractActor actor)
14:10:42.673 [Info] Writing postfixes
14:10:42.679 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)

14:10:42.681 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
14:10:42.684 [Info] Writing prefixes
14:10:42.691 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

14:10:42.694 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
14:10:42.696 [Info] Writing prefixes
14:10:42.700 [Info] Writing postfixes
14:10:42.709 [Info] Patching void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbstractActor_OnPlayerVisibilityChanged::Prefix(BattleTech.AbstractActor __instance, BattleTech.VisibilityLevel& newLevel)

14:10:42.712 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnPlayerVisibilityChanged(BattleTech.VisibilityLevel newLevel)
14:10:42.714 [Info] Writing prefixes
14:10:42.721 [Info] Patching void BattleTech.PathingManager::removeDeadPaths() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingManager_removeDeadPaths::Prefix(BattleTech.PathingManager __instance)

14:10:42.724 [Info] Running ILHook manipulator on void BattleTech.PathingManager::removeDeadPaths()
14:10:42.726 [Info] Writing prefixes
14:10:42.735 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)

14:10:42.737 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
14:10:42.739 [Info] Writing prefixes
14:10:42.747 [Info] Patching virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)
* static void CustomUnits.AbstractActor_VisibilityToTargetUnit::Postfix(BattleTech.AbstractActor __instance, BattleTech.ICombatant targetUnit, BattleTech.VisibilityLevel& __result)

14:10:42.749 [Info] Running ILHook manipulator on virtual BattleTech.VisibilityLevel BattleTech.AbstractActor::VisibilityToTargetUnit(BattleTech.ICombatant targetUnit)
14:10:42.752 [Info] Writing postfixes
14:10:42.757 [Info] Patching void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SharedVisibilityCache_RebuildCache::Prefix(BattleTech.SharedVisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

14:10:42.760 [Info] Running ILHook manipulator on void BattleTech.SharedVisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
14:10:42.762 [Info] Writing prefixes
14:10:42.771 [Info] Patching void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_RebuildCache::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

14:10:42.774 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::RebuildCache(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
14:10:42.776 [Info] Writing prefixes
14:10:42.782 [Info] Patching void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_UpdateCacheReciprocal::Prefix(BattleTech.VisibilityCache __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allLivingCombatants)

14:10:42.784 [Info] Running ILHook manipulator on void BattleTech.VisibilityCache::UpdateCacheReciprocal(System.Collections.Generic.List<BattleTech.ICombatant> allLivingCombatants)
14:10:42.787 [Info] Writing prefixes
14:10:42.797 [Info] Patching BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCache_getSharedValue::Prefix(BattleTech.VisibilityCache __instance, BattleTech.ICombatant target, BattleTech.VisibilityLevelAndAttribution& __result)

14:10:42.800 [Info] Running ILHook manipulator on BattleTech.VisibilityLevelAndAttribution BattleTech.SharedVisibilityCache::getSharedValue(BattleTech.ICombatant target)
14:10:42.802 [Info] Writing prefixes
14:10:42.824 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyContact() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyContact::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

14:10:42.827 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyContact()
14:10:42.829 [Info] Writing prefixes
14:10:42.834 [Info] Patching bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VisibilityCacheBase_HasAnyVisibility::Prefix(BattleTech.VisibilityCacheBase __instance, Boolean& __result)

14:10:42.837 [Info] Running ILHook manipulator on bool BattleTech.VisibilityCacheBase::get_HasAnyVisibility()
14:10:42.840 [Info] Writing prefixes
14:10:42.845 [Info] Patching BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMechAlign::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech& __result)
* static void CustomUnits.UnitSpawnPointGameLogic_SpawnMech::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef, BattleTech.Mech __result)

14:10:42.848 [Info] Running ILHook manipulator on BattleTech.Mech BattleTech.UnitSpawnPointGameLogic::SpawnMech(BattleTech.MechDef mDef, BattleTech.PilotDef pilot, BattleTech.Team team, Lance lance, BattleTech.HeraldryDef customHeraldryDef)
14:10:42.851 [Info] Writing postfixes
14:10:42.856 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_ShowWeaponsUpTo::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_ShowWeaponsUpTo::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, int topIndex)

14:10:42.859 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ShowWeaponsUpTo(int topIndex)
14:10:42.862 [Info] Writing prefixes
14:10:42.865 [Info] Writing postfixes
14:10:42.874 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)

14:10:42.877 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
14:10:42.881 [Info] Writing prefixes
14:10:42.891 [Info] Patching virtual void BattleTech.Mech::InitStats() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ArmorStructureChanges.Patches.Mech_InitStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_InitStats::Postfix(BattleTech.Mech __instance)

14:10:42.894 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitStats()
14:10:42.896 [Info] Writing prefixes
14:10:42.899 [Info] Writing postfixes
14:10:42.920 [Info] Patching void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_OnUnitSpawn::Prefix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_OnUnitSpawn::Postfix(FogOfWar.FogOfWarSystem __instance, MessageCenterMessage message, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

14:10:42.922 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::OnUnitSpawn(MessageCenterMessage message)
14:10:42.925 [Info] Writing prefixes
14:10:42.928 [Info] Writing postfixes
14:10:42.932 [Info] Patching void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_AddViewer::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers)
1 postfixes:
* static void CustomUnits.FogOfWarSystem_AddViewer::Postfix(FogOfWar.FogOfWarSystem __instance, System.Collections.Generic.List<BattleTech.AbstractActor> ___viewers, System.Collections.Generic.List<FogOfWarRevealatron> ___revealatrons)

14:10:42.935 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::AddViewer(BattleTech.AbstractActor unit)
14:10:42.937 [Info] Writing prefixes
14:10:42.939 [Info] Writing postfixes
14:10:42.945 [Info] Patching void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatSelectionHandler_DeselectActor::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

14:10:42.947 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::DeselectActor(BattleTech.AbstractActor actor)
14:10:42.950 [Info] Writing prefixes
14:10:42.955 [Info] Patching void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.FogOfWarSystem_WipeToValue::Prefix(FogOfWar.FogOfWarSystem __instance, BattleTech.FogOfWarState& fowState)

14:10:42.957 [Info] Running ILHook manipulator on void FogOfWar.FogOfWarSystem::WipeToValue(BattleTech.FogOfWarState fowState)
14:10:42.960 [Info] Writing prefixes
14:10:42.965 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
1 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()

14:10:42.968 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
14:10:42.970 [Info] Writing prefixes
14:10:42.972 [Info] Writing postfixes
14:10:42.978 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants0::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:42.980 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, string lanceGuid)
14:10:42.983 [Info] Writing postfixes
14:10:42.988 [Info] Patching static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ObjectiveGameLogic_GetTaggedCombatants1::Postfix(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:42.991 [Info] Running ILHook manipulator on static System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.Framework.ObjectiveGameLogic::GetTaggedCombatants(BattleTech.CombatGameState combatGameState, HBS.Collections.TagSet requiredTags)
14:10:42.993 [Info] Writing postfixes
14:10:42.998 [Info] Patching void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_DEBUG_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation& aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)

14:10:43.001 [Info] Running ILHook manipulator on void BattleTech.Mech::DEBUG_DamageLocation(BattleTech.ArmorLocation aLoc, float totalDamage, BattleTech.AbstractActor attacker, BattleTech.DamageType damageType, string attackerGUID)
14:10:43.003 [Info] Writing prefixes
14:10:43.013 [Info] Patching BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AITeam_getInvocationForCurrentUnit::Prefix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)
1 postfixes:
* static void CustomUnits.AITeam_getInvocationForCurrentUnit::Postfix(AITeam __instance, BattleTech.AbstractActor ___currentUnit, BattleTech.InvocationMessage& __result)

14:10:43.016 [Info] Running ILHook manipulator on BattleTech.InvocationMessage AITeam::getInvocationForCurrentUnit()
14:10:43.019 [Info] Writing prefixes
14:10:43.022 [Info] Writing postfixes
14:10:43.043 [Info] Patching void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDActorInfo_UpdateItemVisibility::Prefix(BattleTech.UI.CombatHUDActorInfo __instance)

14:10:43.046 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorInfo::UpdateItemVisibility()
14:10:43.048 [Info] Writing prefixes
14:10:43.059 [Info] Patching virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PlayerLanceSpawnerGameLogic_OnEnterActive::Prefix(BattleTech.PlayerLanceSpawnerGameLogic __instance)

14:10:43.062 [Info] Running ILHook manipulator on virtual void BattleTech.PlayerLanceSpawnerGameLogic::OnEnterActive()
14:10:43.064 [Info] Writing prefixes
14:10:43.069 [Info] Patching void BattleTech.ActorMovementSequence::UpdateSpline() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_UpdateSplineSquad::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CustomUnits.ActorMovementSequence_UpdateSplineAnim::Postfix(BattleTech.ActorMovementSequence __instance, UnityEngine.Vector3 ___Forward, float ___t)

14:10:43.071 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::UpdateSpline()
14:10:43.073 [Info] Writing prefixes
14:10:43.076 [Info] Writing postfixes
14:10:43.082 [Info] Patching void BattleTech.ActorMovementSequence::set_TurnParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_TurnParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_TurnParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

14:10:43.092 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_TurnParam(float value)
14:10:43.094 [Info] Writing prefixes
14:10:43.098 [Info] Patching void BattleTech.ActorMovementSequence::set_ForwardParam(float value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_ForwardParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, float value)
* static bool CustomUnits.ActorMovementSequence_ForwardParam::Prefix(BattleTech.ActorMovementSequence __instance, float value)

14:10:43.101 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_ForwardParam(float value)
14:10:43.104 [Info] Writing prefixes
14:10:43.109 [Info] Patching void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_IsMovingParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_IsMovingParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

14:10:43.111 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_IsMovingParam(bool value)
14:10:43.113 [Info] Writing prefixes
14:10:43.118 [Info] Patching void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.ActorMovementSequence_BeginMovementParamSquad::Prefix(BattleTech.ActorMovementSequence __instance, bool value)
* static bool CustomUnits.ActorMovementSequence_BeginMovementParam::Prefix(BattleTech.ActorMovementSequence __instance, bool value)

14:10:43.121 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::set_BeginMovementParam(bool value)
14:10:43.123 [Info] Writing prefixes
14:10:43.128 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init_fakeTurret::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)
1 postfixes:
* static void CustomUnits.CombatHUDTargetingComputer_Init::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD HUD)

14:10:43.131 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::Init(BattleTech.UI.CombatHUD HUD)
14:10:43.133 [Info] Writing prefixes
14:10:43.135 [Info] Writing postfixes
14:10:43.142 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_DisplayedTurret_set::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.Turret value)

14:10:43.144 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::set_DisplayedTurret(BattleTech.Turret value)
14:10:43.146 [Info] Writing prefixes
14:10:43.151 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_UpdateTurretStructureAndArmor::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance)

14:10:43.153 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::UpdateTurretStructureAndArmor()
14:10:43.155 [Info] Writing prefixes
14:10:43.160 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_OnActorTakeDamage::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, MessageCenterMessage message)

14:10:43.163 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::OnActorTakeDamage(MessageCenterMessage message)
14:10:43.166 [Info] Writing prefixes
14:10:43.170 [Info] Patching void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDTurretArmorReadout_Init::Prefix(BattleTech.UI.HUDTurretArmorReadout __instance, BattleTech.UI.CombatHUD HUD)

14:10:43.173 [Info] Running ILHook manipulator on void BattleTech.UI.HUDTurretArmorReadout::Init(BattleTech.UI.CombatHUD HUD)
14:10:43.175 [Info] Writing prefixes
14:10:43.179 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)

14:10:43.181 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
14:10:43.183 [Info] Writing postfixes
14:10:43.187 [Info] Patching void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDTargetingComputer_RefreshActorInfo::Prefix(BattleTech.UI.CombatHUDTargetingComputer __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.CombatHUDTargetingComputer_RefreshActorInfo::Postfix(BattleTech.UI.CombatHUDTargetingComputer __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:43.189 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDTargetingComputer::RefreshActorInfo()
14:10:43.191 [Info] Writing prefixes
14:10:43.193 [Info] Writing postfixes
14:10:43.198 [Info] Patching float BattleTech.Mech::get_WalkSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_WalkSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:43.200 [Info] Running ILHook manipulator on float BattleTech.Mech::get_WalkSpeed()
14:10:43.202 [Info] Writing postfixes
14:10:43.205 [Info] Patching float BattleTech.Mech::get_RunSpeed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_RunSpeed::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:43.207 [Info] Running ILHook manipulator on float BattleTech.Mech::get_RunSpeed()
14:10:43.209 [Info] Writing postfixes
14:10:43.212 [Info] Patching BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_propertyBlock::Prefix(BattleTech.GameRepresentation __instance, BattleTech.Rendering.PropertyBlockManager& __result)

14:10:43.214 [Info] Running ILHook manipulator on BattleTech.Rendering.PropertyBlockManager BattleTech.GameRepresentation::get_propertyBlock()
14:10:43.216 [Info] Writing prefixes
14:10:43.220 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargetable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.222 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargetable()
14:10:43.224 [Info] Writing prefixes
14:10:43.228 [Info] Patching void BattleTech.GameRepresentation::set_IsTargetable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargetable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

14:10:43.230 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargetable(bool value)
14:10:43.232 [Info] Writing prefixes
14:10:43.235 [Info] Patching bool BattleTech.GameRepresentation::get_IsTargeted() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.237 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsTargeted()
14:10:43.239 [Info] Writing prefixes
14:10:43.243 [Info] Patching void BattleTech.GameRepresentation::set_IsTargeted(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsTargeted_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

14:10:43.245 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsTargeted(bool value)
14:10:43.247 [Info] Writing prefixes
14:10:43.249 [Info] Patching bool BattleTech.GameRepresentation::get_IsAvailable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.251 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsAvailable()
14:10:43.253 [Info] Writing prefixes
14:10:43.257 [Info] Patching void BattleTech.GameRepresentation::set_IsAvailable(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsAvailable_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

14:10:43.259 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsAvailable(bool value)
14:10:43.261 [Info] Writing prefixes
14:10:43.264 [Info] Patching bool BattleTech.GameRepresentation::get_IsSelected() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.267 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsSelected()
14:10:43.269 [Info] Writing prefixes
14:10:43.273 [Info] Patching void BattleTech.GameRepresentation::set_IsSelected(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsSelected_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

14:10:43.275 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsSelected(bool value)
14:10:43.278 [Info] Writing prefixes
14:10:43.282 [Info] Patching bool BattleTech.GameRepresentation::get_IsHovered() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.284 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsHovered()
14:10:43.286 [Info] Writing prefixes
14:10:43.290 [Info] Patching void BattleTech.GameRepresentation::set_IsHovered(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsHovered_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

14:10:43.292 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsHovered(bool value)
14:10:43.294 [Info] Writing prefixes
14:10:43.298 [Info] Patching bool BattleTech.GameRepresentation::get_IsDead() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_get::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.300 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_IsDead()
14:10:43.302 [Info] Writing prefixes
14:10:43.306 [Info] Patching void BattleTech.GameRepresentation::set_IsDead(bool value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_IsDead_set::Prefix(BattleTech.GameRepresentation __instance, bool value)

14:10:43.308 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::set_IsDead(bool value)
14:10:43.310 [Info] Writing prefixes
14:10:43.314 [Info] Patching bool BattleTech.GameRepresentation::get_VisibleToPlayer() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_VisibleToPlayer::Prefix(BattleTech.GameRepresentation __instance, Boolean& __result)

14:10:43.316 [Info] Running ILHook manipulator on bool BattleTech.GameRepresentation::get_VisibleToPlayer()
14:10:43.318 [Info] Writing prefixes
14:10:43.322 [Info] Patching void BattleTech.GameRepresentation::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_Awake::Prefix(BattleTech.GameRepresentation __instance)

14:10:43.324 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::Awake()
14:10:43.326 [Info] Writing prefixes
14:10:43.330 [Info] Patching void BattleTech.GameRepresentation::OnDestroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_OnDestroy::Prefix(BattleTech.GameRepresentation __instance)

14:10:43.332 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::OnDestroy()
14:10:43.333 [Info] Writing prefixes
14:10:43.338 [Info] Patching void BattleTech.GameRepresentation::InitHighlighting() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_InitHighlighting::Prefix(BattleTech.GameRepresentation __instance)

14:10:43.340 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::InitHighlighting()
14:10:43.342 [Info] Writing prefixes
14:10:43.347 [Info] Patching void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_SetHighlightColor::Prefix(BattleTech.GameRepresentation __instance, BattleTech.CombatGameState combat, BattleTech.Team team)

14:10:43.349 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::SetHighlightColor(BattleTech.CombatGameState combat, BattleTech.Team team)
14:10:43.352 [Info] Writing prefixes
14:10:43.357 [Info] Patching void BattleTech.GameRepresentation::FadeIn(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeIn::Prefix(BattleTech.GameRepresentation __instance, float length)

14:10:43.359 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeIn(float length)
14:10:43.361 [Info] Writing prefixes
14:10:43.364 [Info] Patching void BattleTech.GameRepresentation::FadeOut(float length) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_FadeOut::Prefix(BattleTech.GameRepresentation __instance, float length)

14:10:43.366 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::FadeOut(float length)
14:10:43.368 [Info] Writing prefixes
14:10:43.372 [Info] Patching void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopManualPersistentVFX::Prefix(BattleTech.GameRepresentation __instance, string vfxName)

14:10:43.374 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopManualPersistentVFX(string vfxName)
14:10:43.375 [Info] Writing prefixes
14:10:43.381 [Info] Patching void BattleTech.GameRepresentation::PauseAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_PauseAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

14:10:43.384 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::PauseAllPersistentVFX()
14:10:43.385 [Info] Writing prefixes
14:10:43.391 [Info] Patching void BattleTech.GameRepresentation::ResumeAllPersistentVFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_ResumeAllPersistentVFX::Prefix(BattleTech.GameRepresentation __instance)

14:10:43.393 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::ResumeAllPersistentVFX()
14:10:43.395 [Info] Writing prefixes
14:10:43.399 [Info] Patching void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameRepresentation_StopAllPersistentVFXAttachedToLocation::Prefix(BattleTech.GameRepresentation __instance, int location)

14:10:43.402 [Info] Running ILHook manipulator on void BattleTech.GameRepresentation::StopAllPersistentVFXAttachedToLocation(int location)
14:10:43.403 [Info] Writing prefixes
14:10:43.409 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

14:10:43.411 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
14:10:43.413 [Info] Writing prefixes
14:10:43.414 [Info] Writing postfixes
14:10:43.418 [Info] Patching static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Prefix(Boolean& __runOriginal, BattleTech.BaseComponentRef componentRef, String& __result)
2 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechHardpointRules_GetComponentPrefabName_Patch::Postfix(BattleTech.BaseComponentRef componentRef, String& __result)
* static void CustomUnits.MechHardpointRules_GetComponentPrefabName::Postfix(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames, String& __result)

14:10:43.421 [Info] Running ILHook manipulator on static string BattleTech.MechHardpointRules::GetComponentPrefabName(BattleTech.HardpointDataDef hardpointDataDef, BattleTech.BaseComponentRef componentRef, string prefabBase, string location, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& usedPrefabNames)
14:10:43.423 [Info] Writing prefixes
14:10:43.424 [Info] Writing postfixes
14:10:43.429 [Info] Patching void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_RequestInventoryPrefabs::Prefix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)
1 postfixes:
* static void CustomUnits.MechDef_RequestInventoryPrefabs::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight, BattleTech.MechComponentRef[] ___inventory)

14:10:43.431 [Info] Running ILHook manipulator on void BattleTech.MechDef::RequestInventoryPrefabs(BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint loadWeight)
14:10:43.433 [Info] Writing prefixes
14:10:43.435 [Info] Writing postfixes
14:10:43.439 [Info] Patching bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_InventoryPrefabsLoaded::Prefix(BattleTech.MechDef __instance, uint loadWeight, BattleTech.MechComponentRef[] ___inventory, Boolean& __result)

14:10:43.441 [Info] Running ILHook manipulator on bool BattleTech.MechDef::InventoryPrefabsLoaded(uint loadWeight)
14:10:43.443 [Info] Writing prefixes
14:10:43.449 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
4 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:43.452 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:43.454 [Info] Writing prefixes
14:10:43.456 [Info] Writing postfixes
14:10:43.463 [Info] Patching virtual void WeaponEffect::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeaponEffect_UpdatePrefire::Prefix(WeaponEffect __instance, Single& ___preFireRate, BattleTech.CombatGameState ___Combat, Single& ___t)

14:10:43.465 [Info] Running ILHook manipulator on virtual void WeaponEffect::Update()
14:10:43.467 [Info] Writing prefixes
14:10:43.473 [Info] Patching virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)
* static bool CustomUnits.WeaponEffect_Fire::Prefix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex)
1 postfixes:
* static void CustAmmoCategories.CustomAmmoCategoriesPatches.WeaponEffect_Fire::Postfix(WeaponEffect __instance, BattleTech.WeaponHitInfo& hitInfo, int hitIndex, int emitterIndex, UnityEngine.Vector3& __state)

14:10:43.476 [Info] Running ILHook manipulator on virtual void WeaponEffect::Fire(BattleTech.WeaponHitInfo hitInfo, int hitIndex, int emitterIndex)
14:10:43.478 [Info] Writing prefixes
14:10:43.481 [Info] Writing postfixes
14:10:43.487 [Info] Patching virtual void WeaponEffect::PlayMuzzleFlash() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.WeaponEffect_PlayMuzzleFlash::Postfix(WeaponEffect __instance)

14:10:43.489 [Info] Running ILHook manipulator on virtual void WeaponEffect::PlayMuzzleFlash()
14:10:43.492 [Info] Writing postfixes
14:10:43.498 [Info] Patching virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ComponentRepresentation_Init::Prefix(BattleTech.ComponentRepresentation __instance, BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)

14:10:43.501 [Info] Running ILHook manipulator on virtual void BattleTech.ComponentRepresentation::Init(BattleTech.ICombatant actor, UnityEngine.Transform parentTransform, bool isParented, bool leaveMyParentTransformOutOfThis, string parentDisplayName)
14:10:43.503 [Info] Writing prefixes
14:10:43.508 [Info] Patching virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_InitGameRep::Prefix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName, BattleTech.CombatGameState ___combat)
1 postfixes:
* static void CustomUnits.Weapon_InitGameRep::Postfix(BattleTech.Weapon __instance, string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)

14:10:43.511 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitGameRep(string prefabName, UnityEngine.Transform parentBone, string parentDisplayName)
14:10:43.513 [Info] Writing prefixes
14:10:43.515 [Info] Writing postfixes
14:10:43.527 [Info] Patching bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DataManager_Exists::Prefix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, String& id)
1 postfixes:
* static void CustomUnits.DataManager_Exists::Postfix(BattleTech.Data.DataManager __instance, BattleTech.BattleTechResourceType resourceType, string id, Boolean& __result)

14:10:43.605 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager::Exists(BattleTech.BattleTechResourceType resourceType, string id)
14:10:43.608 [Info] Writing prefixes
14:10:43.610 [Info] Writing postfixes
14:10:43.648 [Info] Patching void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_RequestResource::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& id)

14:10:43.651 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager+DependencyLoadRequest::RequestResource(BattleTech.BattleTechResourceType type, string id)
14:10:43.653 [Info] Writing prefixes
14:10:43.658 [Info] Patching bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.DependencyLoadRequest_Contains::Prefix(BattleTech.Data.DataManager+DependencyLoadRequest __instance, BattleTech.BattleTechResourceType type, String& resourceId)

14:10:43.661 [Info] Running ILHook manipulator on bool BattleTech.Data.DataManager+DependencyLoadRequest::Contains(BattleTech.BattleTechResourceType type, string resourceId)
14:10:43.663 [Info] Writing prefixes
14:10:43.668 [Info] Patching void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DataManager_PoolGameObject::Prefix(BattleTech.Data.DataManager __instance, String& id, UnityEngine.GameObject gameObj)

14:10:43.670 [Info] Running ILHook manipulator on void BattleTech.Data.DataManager::PoolGameObject(string id, UnityEngine.GameObject gameObj)
14:10:43.672 [Info] Writing prefixes
14:10:43.677 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)

14:10:43.679 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
14:10:43.681 [Info] Writing prefixes
14:10:43.687 [Info] Patching virtual void BattleTech.EncounterLayerParent::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.EncounterLayerParent_Update::Postfix(BattleTech.EncounterLayerParent __instance)

14:10:43.689 [Info] Running ILHook manipulator on virtual void BattleTech.EncounterLayerParent::Awake()
14:10:43.691 [Info] Writing postfixes
14:10:43.698 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:43.700 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
14:10:43.702 [Info] Writing prefixes
14:10:43.722 [Info] Patching void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BTDebug.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void MissionControl.Patches.EncounterLayerParentInitializeContractPatch::Prefix(BattleTech.EncounterLayerParent __instance)
2 postfixes:
* static void CustomUnits.CombatGameState_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)
* static void CustomUnits.EncounterLayerParent_InitializeContract::Postfix(BattleTech.EncounterLayerParent __instance, MessageCenterMessage message)

14:10:43.725 [Info] Running ILHook manipulator on void BattleTech.EncounterLayerParent::InitializeContract(MessageCenterMessage message)
14:10:43.727 [Info] Writing prefixes
14:10:43.729 [Info] Writing postfixes
14:10:43.738 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
6 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

14:10:43.740 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:43.743 [Info] Writing prefixes
14:10:43.745 [Info] Writing postfixes
14:10:43.761 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

14:10:43.763 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
14:10:43.765 [Info] Writing prefixes
14:10:43.792 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
5 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:43.795 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:43.797 [Info] Writing prefixes
14:10:43.799 [Info] Writing postfixes
14:10:43.827 [Info] Patching void BattleTech.SimGameState::FillContractLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_FillContractLance::Prefix(BattleTech.SimGameState __instance)

14:10:43.830 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FillContractLance()
14:10:43.831 [Info] Writing prefixes
14:10:43.838 [Info] Patching void BattleTech.SimGameState::OnLanceConfiguratorAccept() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_OnLanceConfiguratorAccept::Prefix(BattleTech.SimGameState __instance)

14:10:43.840 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnLanceConfiguratorAccept()
14:10:43.843 [Info] Writing prefixes
14:10:43.848 [Info] Patching BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_GetLastLance::Prefix(BattleTech.SimGameState __instance, BattleTech.LanceConfiguration& __result, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)

14:10:43.850 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.SimGameState::GetLastLance()
14:10:43.852 [Info] Writing prefixes
14:10:43.859 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:43.862 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
14:10:43.864 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
14:10:43.866 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:43.869 [Info] Writing prefixes
14:10:43.871 [Info] Writing postfixes
14:10:43.877 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets)
1 postfixes:
* static void CustomUnits.AAR_SkirmishResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults, Int32& ___numUnits, Int32& ___numOpponentUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState, BattleTech.Data.DataManager& ___dm)

14:10:43.879 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::InitializeSkirmishData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Data.DataManager dataMan, BattleTech.Contract contract)
14:10:43.881 [Info] Writing prefixes
14:10:43.883 [Info] Writing postfixes
14:10:43.890 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract)

14:10:43.893 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
14:10:43.894 [Info] Writing prefixes
14:10:43.900 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowMyResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___PlayerUnitResults)

14:10:43.901 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowMyResults()
14:10:43.903 [Info] Writing prefixes
14:10:43.908 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLanceTonnage::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText)

14:10:43.911 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLanceTonnage()
14:10:43.912 [Info] Writing prefixes
14:10:43.919 [Info] Patching bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_ValidateLance::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Boolean& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Localize.Text& ___lanceErrorText, BattleTech.UI.LanceHeaderWidget& ___headerWidget)

14:10:43.922 [Info] Running ILHook manipulator on bool BattleTech.UI.LanceConfiguratorPanel::ValidateLance()
14:10:43.923 [Info] Writing prefixes
14:10:43.931 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustAmmoCategories.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static bool CustomUnits.LanceConfiguratorPanel_OnConfirmClicked::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)

14:10:43.933 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnConfirmClicked()
14:10:43.935 [Info] Writing prefixes
14:10:43.944 [Info] Patching void BattleTech.SimGameState::ResolveCompleteContract() with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void MechAffinity.Patches.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Prefix(BattleTech.SimGameState __instance)
* static bool CustomUnits.SimGameState_ResolveCompleteContract::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void MissionControl.Patches.SimGameStateResolveCompleteContractPatch::Postfix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:43.947 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ResolveCompleteContract()
14:10:43.949 [Info] Transpiling void BattleTech.SimGameState::ResolveCompleteContract()
14:10:43.952 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.SimGameState_ResolveCompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:43.957 [Info] Writing prefixes
14:10:43.959 [Info] Writing postfixes
14:10:43.979 [Info] Patching void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AAR_SkirmishResult_Screen_ShowOpponentResults::Prefix(BattleTech.UI.LancePreviewPanel __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___OpponentUnitResults)

14:10:43.981 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_SkirmishResult_Screen::ShowOpponentResults()
14:10:43.983 [Info] Writing prefixes
14:10:43.990 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_LoadLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration config, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget)

14:10:43.992 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::LoadLanceConfiguration(BattleTech.LanceConfiguration config)
14:10:43.994 [Info] Writing prefixes
14:10:43.996 [Info] Writing postfixes
14:10:44.003 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result)
1 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

14:10:44.005 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
14:10:44.007 [Info] Writing prefixes
14:10:44.009 [Info] Writing postfixes
14:10:44.016 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

14:10:44.018 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
14:10:44.020 [Info] Writing prefixes
14:10:44.026 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

14:10:44.028 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
14:10:44.030 [Info] Writing prefixes
14:10:44.035 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits)

14:10:44.037 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
14:10:44.039 [Info] Writing prefixes
14:10:44.048 [Info] Patching virtual void BattleTech.ApplicationConstants::FromJSON(string json) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ModTek.Features.CustomSVGAssets.Patches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustAmmoCategoriesPatches.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)
* static void CustomUnits.ApplicationConstants_FromJSON::Postfix(BattleTech.ApplicationConstants __instance)

14:10:44.050 [Info] Running ILHook manipulator on virtual void BattleTech.ApplicationConstants::FromJSON(string json)
14:10:44.052 [Info] Writing postfixes
14:10:44.057 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:44.059 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
14:10:44.061 [Info] Writing prefixes
14:10:44.063 [Info] Writing postfixes
14:10:44.071 [Info] Patching void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUD_updateHUDElements::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.AbstractActor actor)

14:10:44.073 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::updateHUDElements(BattleTech.AbstractActor actor)
14:10:44.075 [Info] Writing postfixes
14:10:44.081 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorSelected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:44.083 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorSelected(MessageCenterMessage message)
14:10:44.085 [Info] Writing postfixes
14:10:44.090 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnActorDeselected::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:44.093 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnActorDeselected(string GUID)
14:10:44.094 [Info] Writing postfixes
14:10:44.098 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayInvoked::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:44.101 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayInvoked(MessageCenterMessage message)
14:10:44.103 [Info] Writing postfixes
14:10:44.107 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_OnCommandTrayDismissed::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:44.109 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::OnCommandTrayDismissed(MessageCenterMessage message)
14:10:44.111 [Info] Writing postfixes
14:10:44.116 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

14:10:44.119 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
14:10:44.121 [Info] Writing postfixes
14:10:44.133 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)

14:10:44.135 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
14:10:44.137 [Info] Writing postfixes
14:10:44.143 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Enabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

14:10:44.145 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Enabled_OnEnter()
14:10:44.147 [Info] Writing postfixes
14:10:44.151 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Selected_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

14:10:44.153 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Selected_OnEnter()
14:10:44.155 [Info] Writing postfixes
14:10:44.158 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Highlighted_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

14:10:44.160 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Highlighted_OnEnter()
14:10:44.162 [Info] Writing postfixes
14:10:44.165 [Info] Patching virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HBSDOTweenToggle_Disabled_OnEnter::Postfix(BattleTech.UI.HBSDOTweenToggle __instance)

14:10:44.168 [Info] Running ILHook manipulator on virtual void BattleTech.UI.HBSDOTweenToggle::Disabled_OnEnter()
14:10:44.170 [Info] Writing postfixes
14:10:44.175 [Info] Patching static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ShortcutExtensions_DOScale::Prefix(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)

14:10:44.177 [Info] Running ILHook manipulator on static DG.Tweening.Tweener DG.Tweening.ShortcutExtensions::DOScale(UnityEngine.Transform target, UnityEngine.Vector3 endValue, float duration)
14:10:44.179 [Info] Writing prefixes
14:10:44.189 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD)

14:10:44.192 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
14:10:44.194 [Info] Writing prefixes
14:10:44.198 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerEnter::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

14:10:44.200 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
14:10:44.202 [Info] Writing postfixes
14:10:44.206 [Info] Patching virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDButtonBase_OnPointerExit::Postfix(BattleTech.UI.CombatHUDButtonBase __instance, UnityEngine.EventSystems.PointerEventData eventData)

14:10:44.208 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDButtonBase::OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData)
14:10:44.209 [Info] Writing postfixes
14:10:44.214 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)

14:10:44.216 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
14:10:44.218 [Info] Writing prefixes
14:10:44.219 [Info] Writing postfixes
14:10:44.227 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_InitAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_InitAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:44.229 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::InitAbilityButtons(BattleTech.AbstractActor actor)
14:10:44.231 [Info] Writing prefixes
14:10:44.233 [Info] Writing postfixes
14:10:44.239 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshActionHotKeys::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

14:10:44.241 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshActionHotKeys()
14:10:44.243 [Info] Writing prefixes
14:10:44.247 [Info] Patching bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionState_ProcessDoneWithMechButton::Prefix(BattleTech.UI.SelectionState __instance, string button, Boolean& __result)

14:10:44.249 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionState::ProcessDoneWithMechButton(string button)
14:10:44.251 [Info] Writing prefixes
14:10:44.258 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
1 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)

14:10:44.260 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
14:10:44.262 [Info] Writing prefixes
14:10:44.264 [Info] Writing postfixes
14:10:44.276 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDActionButton_ExecuteClick::Prefix(BattleTech.UI.CombatHUDActionButton __instance)
* static bool CustomUnits.CombatHUDActionButton_ExecuteClickAbilities::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

14:10:44.278 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ExecuteClick()
14:10:44.280 [Info] Writing prefixes
14:10:44.285 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:44.287 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
14:10:44.289 [Info] Writing prefixes
14:10:44.290 [Info] Writing postfixes
14:10:44.296 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

14:10:44.298 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
14:10:44.300 [Info] Writing prefixes
14:10:44.302 [Info] Writing postfixes
14:10:44.306 [Info] Patching System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.WeightedFactor_CollectMasksForCellAndPathNode::Prefix(BattleTech.WeightedFactor __instance, BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:44.309 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.DesignMaskDef> BattleTech.WeightedFactor::CollectMasksForCellAndPathNode(BattleTech.CombatGameState combat, BattleTech.MapTerrainDataCell cell, BattleTech.PathNode pathNode)
14:10:44.311 [Info] Writing prefixes
14:10:44.316 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_OnLanceConfiguratorClosed::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance)

14:10:44.318 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::OnLanceConfiguratorClosed()
14:10:44.320 [Info] Writing prefixes
14:10:44.324 [Info] Patching void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Prefix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_Constructor::Postfix(UnityEngine.Animator& ___actorAnim, BattleTech.PilotableActorRepresentation& ___actorRep, Single& ___desiredAngle, BattleTech.ActorTwistSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)

14:10:44.405 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::.ctor(BattleTech.AbstractActor actor, UnityEngine.Vector3 lookAt, bool isLookVector, bool isBodyRotation, float twistDuration, int stackItemUID, int sequenceId, BattleTech.GameRepresentation+RotationCompleteDelegate completeDelegate)
14:10:44.408 [Info] Writing prefixes
14:10:44.410 [Info] Writing postfixes
14:10:44.418 [Info] Patching void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_InitDistanceClamp::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.AbstractActor actor, UnityEngine.Transform xform)

14:10:44.420 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::Init(BattleTech.AbstractActor actor, UnityEngine.Transform xform)
14:10:44.423 [Info] Writing postfixes
14:10:44.437 [Info] Patching virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
2 postfixes:
* static void CustomActivatablePatches.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, UnityEngine.Vector3 worldPos)
* static void CustomUnits.SelectionStateMove_ProcessMousePos::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

14:10:44.439 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMove::ProcessMousePos(UnityEngine.Vector3 worldPos)
14:10:44.442 [Info] Writing prefixes
14:10:44.445 [Info] Writing postfixes
14:10:44.453 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

14:10:44.455 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
14:10:44.457 [Info] Writing prefixes
14:10:44.460 [Info] Writing postfixes
14:10:44.466 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMove_UpdateMousePosUI::Postfix(BattleTech.UI.SelectionStateMove __instance)

14:10:44.469 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::OnInactivate()
14:10:44.471 [Info] Writing postfixes
14:10:44.476 [Info] Patching virtual float BattleTech.Mech::get_MaxWalkDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxWalkDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxWalkDistance::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:44.479 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxWalkDistance()
14:10:44.481 [Info] Writing postfixes
14:10:44.486 [Info] Patching virtual float BattleTech.Mech::get_MaxSprintDistance() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRBTModUtils.Patches.Mech_MaxSprintDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)
* static void CustomUnits.Mech_MaxSprintDistance::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:44.488 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxSprintDistance()
14:10:44.490 [Info] Writing postfixes
14:10:44.495 [Info] Patching virtual float BattleTech.Vehicle::get_MaxWalkDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxWalkDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

14:10:44.497 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxWalkDistance()
14:10:44.499 [Info] Writing postfixes
14:10:44.504 [Info] Patching virtual float BattleTech.Vehicle::get_MaxSprintDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_MaxSprintDistance::Postfix(BattleTech.Vehicle __instance, Single& __result)

14:10:44.506 [Info] Running ILHook manipulator on virtual float BattleTech.Vehicle::get_MaxSprintDistance()
14:10:44.508 [Info] Writing postfixes
14:10:44.513 [Info] Patching bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.JumpPathing_IsValidLandingSpot::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)
* static void CustomUnits.JumpPathing_JumpPathing::Postfix(BattleTech.JumpPathing __instance, UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, Boolean& __result)

14:10:44.515 [Info] Running ILHook manipulator on bool BattleTech.JumpPathing::IsValidLandingSpot(UnityEngine.Vector3 worldPos, System.Collections.Generic.List<BattleTech.AbstractActor> allActors)
14:10:44.517 [Info] Writing postfixes
14:10:44.524 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:44.527 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
14:10:44.529 [Info] Writing postfixes
14:10:44.536 [Info] Patching virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_InitNaval::Prefix(BattleTech.Mech __instance, UnityEngine.Vector3& position, float facing, bool checkEncounterCells)

14:10:44.539 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
14:10:44.541 [Info] Writing prefixes
14:10:44.553 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)

14:10:44.556 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
14:10:44.558 [Info] Writing prefixes
14:10:44.564 [Info] Patching void BattleTech.ActorMovementSequence::CompleteMove() with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_CompleteMove::Prefix(BattleTech.ActorMovementSequence __instance)
5 postfixes:
* static void MechEngineer.Features.Performance.Patches.ActorMovementSequence_CompleteMove_Patch::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAuraFloatie::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatableEquipment.ActorMovementSequence_CompleteMoveAura::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomUnits.ActorMovementSequence_CompleteMovePartial::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:44.567 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::CompleteMove()
14:10:44.570 [Info] Writing prefixes
14:10:44.573 [Info] Writing postfixes
14:10:44.582 [Info] Patching void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.Pathing_ResetPathGridIfTouching::Prefix(BattleTech.Pathing __instance, System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
* static void CustomUnits.Pathing_ResetPathGridIfTouchingPartial::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor actor)

14:10:44.584 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGridIfTouching(System.Collections.Generic.List<UnityEngine.Rect> Rectangles, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor)
14:10:44.587 [Info] Writing prefixes
14:10:44.594 [Info] Patching void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Pathing_UpdateCurrentPath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

14:10:44.596 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateCurrentPath(bool calledFromUI)
14:10:44.598 [Info] Writing postfixes
14:10:44.604 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
1 postfixes:
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

14:10:44.606 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
14:10:44.608 [Info] Writing prefixes
14:10:44.611 [Info] Writing postfixes
14:10:44.616 [Info] Patching virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomUnits.SelectionStateMove_ProcessLeftClick::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3 worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
* static bool CustomUnits.SelectionStateMove_ProcessLeftClickPosPartial::Prefix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos, Boolean& __result)
1 postfixes:
* static void CustomUnits.SelectionStateMove_ProcessLeftClickClamp::Postfix(BattleTech.UI.SelectionStateMove __instance, UnityEngine.Vector3& worldPos)

14:10:44.619 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMove::ProcessLeftClick(UnityEngine.Vector3 worldPos)
14:10:44.620 [Info] Writing prefixes
14:10:44.622 [Info] Writing postfixes
14:10:44.628 [Info] Patching void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pathing_LockToRotateInPlace::Prefix(BattleTech.Pathing __instance, bool calledFromUI)

14:10:44.630 [Info] Running ILHook manipulator on void BattleTech.Pathing::LockToRotateInPlace(bool calledFromUI)
14:10:44.632 [Info] Writing prefixes
14:10:44.637 [Info] Patching virtual void BattleTech.UI.SelectionState::OnAddToStack() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_OnAddToStack::Postfix(BattleTech.UI.SelectionState __instance)

14:10:44.639 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionState::OnAddToStack()
14:10:44.641 [Info] Writing postfixes
14:10:44.645 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_CanBackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance, Boolean& __result)

14:10:44.647 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoveBase::get_CanBackOut()
14:10:44.648 [Info] Writing postfixes
14:10:44.652 [Info] Patching void BattleTech.JumpPathing::UpdateCurrentPath() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Prefix(BattleTech.JumpPathing __instance, Single& __state)
1 postfixes:
* static void CustomUnits.JumpPathing_UpdateCurrentPath::Postfix(BattleTech.JumpPathing __instance, Single& __state)

14:10:44.654 [Info] Running ILHook manipulator on void BattleTech.JumpPathing::UpdateCurrentPath()
14:10:44.656 [Info] Writing prefixes
14:10:44.658 [Info] Writing postfixes
14:10:44.662 [Info] Patching virtual void BattleTech.UI.SelectionStateMoveBase::BackOut() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SelectionStateMoveBase_BackOut::Postfix(BattleTech.UI.SelectionStateMoveBase __instance)

14:10:44.664 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SelectionStateMoveBase::BackOut()
14:10:44.665 [Info] Writing postfixes
14:10:44.669 [Info] Patching AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_CurrentSurfaceType::Prefix(BattleTech.PilotableActorRepresentation __instance, AudioSwitch_surface_type& __result)

14:10:44.672 [Info] Running ILHook manipulator on AudioSwitch_surface_type BattleTech.PilotableActorRepresentation::get_CurrentSurfaceType()
14:10:44.673 [Info] Writing prefixes
14:10:44.678 [Info] Patching bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_BlipDisplayed::Prefix(BattleTech.PilotableActorRepresentation __instance, Boolean& __result)

14:10:44.680 [Info] Running ILHook manipulator on bool BattleTech.PilotableActorRepresentation::get_BlipDisplayed()
14:10:44.681 [Info] Writing prefixes
14:10:44.686 [Info] Patching void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_Init::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)

14:10:44.688 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::Init(BattleTech.AbstractActor unit, UnityEngine.Transform parentTransform, bool isParented)
14:10:44.690 [Info] Writing prefixes
14:10:44.697 [Info] Patching void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_InitPaintScheme::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.HeraldryDef heraldryDef, string teamGUID)

14:10:44.699 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::InitPaintScheme(BattleTech.HeraldryDef heraldryDef, string teamGUID)
14:10:44.701 [Info] Writing prefixes
14:10:44.710 [Info] Patching void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, BattleTech.VisibilityLevel newVisibility, bool showUI)

14:10:44.712 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetForcedPlayerVisibilityLevel(BattleTech.VisibilityLevel newVisibility, bool showUI)
14:10:44.714 [Info] Writing prefixes
14:10:44.719 [Info] Patching void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_ClearForcedPlayerVisibilityLevel::Prefix(BattleTech.PilotableActorRepresentation __instance, System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)

14:10:44.722 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::ClearForcedPlayerVisibilityLevel(System.Collections.Generic.List<BattleTech.ICombatant> allCombatants)
14:10:44.724 [Info] Writing prefixes
14:10:44.728 [Info] Patching void BattleTech.PilotableActorRepresentation::PlayEjectFX() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_PlayEjectFX::Prefix(BattleTech.PilotableActorRepresentation __instance)

14:10:44.730 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::PlayEjectFX()
14:10:44.732 [Info] Writing prefixes
14:10:44.736 [Info] Patching void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PilotableActorRepresentation_SetBlipPositionRotation::Prefix(BattleTech.PilotableActorRepresentation __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

14:10:44.739 [Info] Running ILHook manipulator on void BattleTech.PilotableActorRepresentation::SetBlipPositionRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
14:10:44.741 [Info] Writing prefixes
14:10:44.744 [Info] Patching virtual void BattleTech.PilotDef::FromJSON(string json) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_FromJSON::Postfix(BattleTech.PilotDef __instance)

14:10:44.747 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::FromJSON(string json)
14:10:44.748 [Info] Writing postfixes
14:10:44.752 [Info] Patching void BattleTech.PilotDef::PostDeserialzation() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotDef_PostDeserialzation::Postfix(BattleTech.PilotDef __instance)

14:10:44.754 [Info] Running ILHook manipulator on void BattleTech.PilotDef::PostDeserialzation()
14:10:44.756 [Info] Writing postfixes
14:10:44.760 [Info] Patching BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CommanderPortraitLoader.SGCharacterCreationWidget_CreatePilotPatch::Postfix(BattleTech.UI.SGCharacterCreationWidget& __instance, BattleTech.Pilot& __result)
* static void CustomVoices.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)
* static void CustomUnits.SGCharacterCreationWidget_CreatePilot::Postfix(BattleTech.UI.SGCharacterCreationWidget __instance, BattleTech.Pilot& __result)

14:10:44.763 [Info] Running ILHook manipulator on BattleTech.Pilot BattleTech.UI.SGCharacterCreationWidget::CreatePilot()
14:10:44.764 [Info] Writing postfixes
14:10:44.772 [Info] Patching void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomUnits.SimGameState_FirstTimeInitializeDataFromDefs::Postfix(BattleTech.SimGameState __instance)

14:10:44.774 [Info] Running ILHook manipulator on void BattleTech.SimGameState::FirstTimeInitializeDataFromDefs()
14:10:44.776 [Info] Writing prefixes
14:10:44.778 [Info] Writing postfixes
14:10:44.796 [Info] Patching void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_OnCareerModeCharacterCreationComplete::Prefix(BattleTech.SimGameState __instance, BattleTech.Pilot& p)

14:10:44.798 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnCareerModeCharacterCreationComplete(BattleTech.Pilot p)
14:10:44.800 [Info] Writing prefixes
14:10:44.805 [Info] Patching System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PilotGenerator_GeneratePilots::Postfix(BattleTech.PilotGenerator __instance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:44.807 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PilotDef> BattleTech.PilotGenerator::GeneratePilots(int numPilots, int systemDifficulty, float roninChance, System.Collections.Generic.List`1[[BattleTech.PilotDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& roninList)
14:10:44.809 [Info] Writing postfixes
14:10:44.815 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

14:10:44.817 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
14:10:44.819 [Info] Writing prefixes
14:10:44.824 [Info] Patching virtual bool BattleTech.AbstractActor::get_IsShutDown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AbstractActor_IsShutDown::Postfix(BattleTech.AbstractActor __instance, Boolean& __result)

14:10:44.826 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActor::get_IsShutDown()
14:10:44.828 [Info] Writing postfixes
14:10:44.833 [Info] Patching static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByType::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
* static bool CustomUnits.SelectionState_GetNewSelectionStateByTypeShutdown::Prefix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)
1 postfixes:
* static void CustomActivatableEquipment.SelectionState_GetNewSelectionStateByType::Postfix(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor, BattleTech.UI.SelectionState& __result)

14:10:44.835 [Info] Running ILHook manipulator on static BattleTech.UI.SelectionState BattleTech.UI.SelectionState::GetNewSelectionStateByType(BattleTech.UI.SelectionType type, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDActionButton FromButton, BattleTech.AbstractActor actor)
14:10:44.837 [Info] Writing prefixes
14:10:44.840 [Info] Writing postfixes
14:10:44.846 [Info] Patching void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ToggleAbilityState::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

14:10:44.848 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActionButton::ToggleAbilityState()
14:10:44.850 [Info] Writing prefixes
14:10:44.855 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDActionButton_ActivateAbility::Prefix(BattleTech.UI.CombatHUDActionButton __instance)

14:10:44.857 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility()
14:10:44.859 [Info] Writing prefixes
14:10:44.865 [Info] Patching virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomPilotDecorator.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomAmmoCategoriesPatches.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)
* static void CustomUnits.PilotDef_DependenciesLoaded::Postfix(BattleTech.PilotDef __instance, uint loadWeight, Boolean& __result)

14:10:44.867 [Info] Running ILHook manipulator on virtual bool BattleTech.PilotDef::DependenciesLoaded(uint loadWeight)
14:10:44.869 [Info] Writing postfixes
14:10:44.874 [Info] Patching virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomPilotDecorator.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomAmmoCategoriesPatches.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.PilotDef_GatherDependencies::Postfix(BattleTech.PilotDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:44.876 [Info] Running ILHook manipulator on virtual void BattleTech.PilotDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:44.878 [Info] Writing postfixes
14:10:44.883 [Info] Patching void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)
* static void CustomUnits.Pilot_InitAbilities::Postfix(BattleTech.Pilot __instance, bool ModifyStats, bool FromSave, System.Collections.Generic.List<BattleTech.AbilityStateInfo> ___SerializedAbilityStates)

14:10:44.886 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitAbilities(bool ModifyStats, bool FromSave)
14:10:44.888 [Info] Writing postfixes
14:10:44.894 [Info] Patching static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetTerrainCost::Prefix(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType, Single& __result)

14:10:44.897 [Info] Running ILHook manipulator on static float BattleTech.PathNodeGrid::GetTerrainCost(BattleTech.MapTerrainDataCell cell, BattleTech.AbstractActor unit, BattleTech.MoveType moveType)
14:10:44.899 [Info] Writing prefixes
14:10:44.906 [Info] Patching BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_GetPathNode::Prefix(BattleTech.PathNodeGrid __instance, int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors, BattleTech.PathNode& __result, BattleTech.PathNode[,]& ___pathNodes, BattleTech.MapTerrainDataCell& ___gpnCell, BattleTech.CombatGameState& ___combat, BattleTech.AbstractActor& ___owningActor)

14:10:44.909 [Info] Running ILHook manipulator on BattleTech.PathNode BattleTech.PathNodeGrid::GetPathNode(int x, int z, int angle, BattleTech.PathNode from, System.Collections.Generic.List<BattleTech.AbstractActor> collisionTestActors)
14:10:44.911 [Info] Writing prefixes
14:10:44.917 [Info] Patching void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_LethalInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

14:10:44.919 [Info] Running ILHook manipulator on void BattleTech.Pilot::LethalInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, bool isLethal, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:44.921 [Info] Writing prefixes
14:10:44.926 [Info] Patching void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_MaxInjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

14:10:44.929 [Info] Running ILHook manipulator on void BattleTech.Pilot::MaxInjurePilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:44.931 [Info] Writing prefixes
14:10:44.935 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance)
2 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

14:10:44.937 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:44.939 [Info] Writing prefixes
14:10:44.941 [Info] Writing postfixes
14:10:44.947 [Info] Patching void MessageCenter::PublishMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MessageCenter_PublishMessage_SuppressFloaties::Prefix(MessageCenter __instance, MessageCenterMessage message)
* static void CustomUnits.MessageCenter_PublishMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message)

14:10:44.950 [Info] Running ILHook manipulator on void MessageCenter::PublishMessage(MessageCenterMessage message)
14:10:44.951 [Info] Writing prefixes
14:10:44.956 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 2 prefixes, 4 postfixes, 2 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
4 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:44.958 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:44.960 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:44.963 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:44.965 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:44.967 [Info] Writing prefixes
14:10:44.969 [Info] Writing postfixes
14:10:44.976 [Info] Patching void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Pilot_KillPilot::Prefix(BattleTech.Pilot __instance, BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

14:10:44.978 [Info] Running ILHook manipulator on void BattleTech.Pilot::KillPilot(BattleTech.CombatGameConstants constants, string sourceID, int stackItemUID, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:44.980 [Info] Writing prefixes
14:10:44.984 [Info] Patching float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetCurrentStructureSquad::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, Single& __result)

14:10:44.987 [Info] Running ILHook manipulator on float BattleTech.Mech::GetCurrentStructure(BattleTech.ChassisLocations location)
14:10:44.989 [Info] Writing postfixes
14:10:44.992 [Info] Patching string BattleTech.Pilot::get_InjuryReasonDescription() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Pilot_InjuryReasonDescription_Patch::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomActivatablePatches.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)
* static void CustomUnits.Pilot_InjuryReasonDescription::Postfix(BattleTech.Pilot __instance, String& __result)

14:10:44.995 [Info] Running ILHook manipulator on string BattleTech.Pilot::get_InjuryReasonDescription()
14:10:44.997 [Info] Writing postfixes
14:10:45.001 [Info] Patching virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_NullWidgets::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

14:10:45.003 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_MechBay::NullWidgets()
14:10:45.005 [Info] Writing prefixes
14:10:45.010 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::RemoveMech() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SGRoomController_MechBay_RemoveMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechRepresentationSimGame ___loadedMech)

14:10:45.013 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::RemoveMech()
14:10:45.015 [Info] Writing prefixes
14:10:45.020 [Info] Patching void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SGRoomController_MechBay_LoadMech::Prefix(BattleTech.UI.SGRoomController_MechBay __instance, BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force, BattleTech.MechDef& ___loadedMechDef)

14:10:45.022 [Info] Running ILHook manipulator on void BattleTech.UI.SGRoomController_MechBay::LoadMech(BattleTech.MechDef mechDef, float fadeDuration, bool useCameraFit, bool force)
14:10:45.024 [Info] Writing prefixes
14:10:45.029 [Info] Patching void BattleTech.UI.MechBayPanel::ViewBays() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)

14:10:45.031 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::ViewBays()
14:10:45.033 [Info] Writing postfixes
14:10:45.038 [Info] Patching void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechPlacementPopup_SetData::Prefix(BattleTech.UI.MechPlacementPopup __instance, BattleTech.UI.MechBayRowGroupWidget ___rowGroupWidget, BattleTech.SimGameState sim)

14:10:45.040 [Info] Running ILHook manipulator on void BattleTech.UI.MechPlacementPopup::SetData(BattleTech.SimGameState sim, BattleTech.MechDef newMech)
14:10:45.042 [Info] Writing prefixes
14:10:45.048 [Info] Patching void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayRowGroupWidget_SetData::Prefix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim, BattleTech.UI.MechBayRowWidget[]& ___bays)
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_SetData::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)

14:10:45.051 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayRowGroupWidget::SetData(BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.SimGameState sim)
14:10:45.053 [Info] Writing prefixes
14:10:45.056 [Info] Writing postfixes
14:10:45.065 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_strings::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& startingMechs)

14:10:45.068 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<string> startingMechs)
14:10:45.070 [Info] Writing prefixes
14:10:45.077 [Info] Patching void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Prefix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
1 postfixes:
* static void CustomUnits.SimGameState_AddFromShopDefItem::Postfix(BattleTech.SimGameState __instance, BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)

14:10:45.079 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFromShopDefItem(BattleTech.ShopDefItem item, bool useCount, int cost, BattleTech.SimGamePurchaseMessage+TransactionType transactionType)
14:10:45.081 [Info] Writing prefixes
14:10:45.083 [Info] Writing postfixes
14:10:45.090 [Info] Patching void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SimGameState_AddMechs_MechDefs::Prefix(BattleTech.SimGameState __instance, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& startingMechs)

14:10:45.093 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMechs(System.Collections.Generic.List<BattleTech.MechDef> startingMechs)
14:10:45.095 [Info] Writing prefixes
14:10:45.098 [Info] Patching int BattleTech.SimGameState::GetFirstFreeMechBay() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.SimGameState_GetFirstFreeMechBay::Postfix(BattleTech.SimGameState __instance, Int32& __result)

14:10:45.101 [Info] Running ILHook manipulator on int BattleTech.SimGameState::GetFirstFreeMechBay()
14:10:45.103 [Info] Writing postfixes
14:10:45.107 [Info] Patching int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayRowGroupWidget_GetFirstFreeBaySlot::Postfix(BattleTech.UI.MechBayRowGroupWidget __instance, Int32& __result)

14:10:45.109 [Info] Running ILHook manipulator on int BattleTech.UI.MechBayRowGroupWidget::GetFirstFreeBaySlot()
14:10:45.111 [Info] Writing postfixes
14:10:45.117 [Info] Patching void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static bool CustomUnits.SimGameState_AddMech::Prefix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.StatCollection ___companyStats, BattleTech.UI.SimGameInterruptManager ___interruptQueue)
3 postfixes:
* static void CustAmmoCategories.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance)
* static void CustomActivatableEquipment.SimGameState_AddMech::Postfix(BattleTech.SimGameState __instance, int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
* static void SortByTonnage.SimGameState_AddMech_Patch::Postfix(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader, BattleTech.SimGameState __instance)

14:10:45.119 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddMech(int idx, BattleTech.MechDef mech, bool active, bool forcePlacement, bool displayMechPopup, string mechAddedHeader)
14:10:45.122 [Info] Writing prefixes
14:10:45.124 [Info] Writing postfixes
14:10:45.133 [Info] Patching void BattleTech.MechRepresentationSimGame::LoadWeapons() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechRepresentationSimGame __instance)
* static bool CustomUnits.MechRepresentationSimGame_LoadWeapons::Prefix(BattleTech.MechRepresentationSimGame __instance, BattleTech.Data.DataManager ___dataManager)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.MechRepresentationSimGame_LoadWeapons_Patch::Postfix()

14:10:45.136 [Info] Running ILHook manipulator on void BattleTech.MechRepresentationSimGame::LoadWeapons()
14:10:45.139 [Info] Writing prefixes
14:10:45.141 [Info] Writing postfixes
14:10:45.148 [Info] Patching void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomSalvage.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement, BattleTech.UI.MechBayChassisInfoWidget __instance)
* static bool CustomUnits.MechBayChassisInfoWidget_OnReadyClicked::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayChassisInfoWidget __instance, BattleTech.ChassisDef ___selectedChassis, BattleTech.UI.MechBayPanel ___mechBay, BattleTech.UI.MechBayChassisUnitElement ___chassisElement)

14:10:45.150 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayChassisInfoWidget::OnReadyClicked()
14:10:45.152 [Info] Writing prefixes
14:10:45.158 [Info] Patching virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.MechBayPanel_ViewBays::Postfix(BattleTech.UI.MechBayPanel __instance)
* static void CustomUnits.MechBayPanel_::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisInfoWidget ___chassisInfoWidget)

14:10:45.160 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechBayPanel::OnAddedToHierarchy()
14:10:45.162 [Info] Writing postfixes
14:10:45.168 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

14:10:45.170 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
14:10:45.172 [Info] Writing prefixes
14:10:45.175 [Info] Writing postfixes
14:10:45.182 [Info] Patching virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Get::Prefix(object __instance, String& id)

14:10:45.185 [Info] Running ILHook manipulator on virtual BattleTech.MechDef HBS.Data.DictionaryStore<BattleTech.MechDef>::Get(string id)
14:10:45.187 [Info] Writing prefixes
14:10:45.192 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_Exists::Prefix(object __instance, String& id)

14:10:45.195 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::Exists(string id)
14:10:45.197 [Info] Writing prefixes
14:10:45.201 [Info] Patching virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.MechDefs_TryGet::Prefix(object __instance, String& id)

14:10:45.203 [Info] Running ILHook manipulator on virtual bool HBS.Data.DictionaryStore<BattleTech.MechDef>::TryGet(string id, BattleTech.MechDef& t)
14:10:45.205 [Info] Writing prefixes
14:10:45.210 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

14:10:45.213 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
14:10:45.215 [Info] Writing prefixes
14:10:45.217 [Info] Writing postfixes
14:10:45.221 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

14:10:45.223 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
14:10:45.225 [Info] Writing prefixes
14:10:45.227 [Info] Writing postfixes
14:10:45.231 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
1 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:45.233 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:45.235 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:45.237 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:45.246 [Info] Writing prefixes
14:10:45.248 [Info] Writing postfixes
14:10:45.255 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 1 postfixes, 2 transpilers, 0 finalizers
1 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:45.257 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:45.259 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:45.261 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:45.263 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:45.265 [Info] Writing postfixes
14:10:45.274 [Info] Patching void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_SetOccupiedDesignMask::Prefix(BattleTech.AbstractActor __instance, BattleTech.DesignMaskDef& mask, int stackItemUID, System.Collections.Generic.List`1[[BattleTech.DesignMaskDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& approvedMasks)

14:10:45.277 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::SetOccupiedDesignMask(BattleTech.DesignMaskDef mask, int stackItemUID, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks)
14:10:45.279 [Info] Writing prefixes
14:10:45.284 [Info] Patching virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.AbstractActor_OnPositionUpdate::Prefix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, Boolean& updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
1 postfixes:
* static void CustomUnits.AbstractActor_OnPositionUpdate::Postfix(BattleTech.AbstractActor __instance, UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging, BattleTech.DesignMaskDef& ___opuDesignMask)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:45.286 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
14:10:45.288 [Info] Transpiling virtual void BattleTech.AbstractActor::OnPositionUpdate(UnityEngine.Vector3 position, UnityEngine.Quaternion heading, int stackItemUID, bool updateDesignMask, System.Collections.Generic.List<BattleTech.DesignMaskDef> approvedMasks, bool skipAbilityLogging)
14:10:45.290 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Performance.Patches.AbstractActor_OnPositionUpdate_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:45.293 [Info] Writing prefixes
14:10:45.295 [Info] Writing postfixes
14:10:45.384 [Info] Patching float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Weapon_DamagePerShotFromPosition::Prefix(BattleTech.Weapon __instance, BattleTech.DesignMaskDef& designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)

14:10:45.386 [Info] Running ILHook manipulator on float BattleTech.Weapon::DamagePerShotPredicted(BattleTech.DesignMaskDef designMask, BattleTech.AttackImpactQuality blowQuality, BattleTech.ICombatant target, BattleTech.LineOfFireLevel lofLevel)
14:10:45.388 [Info] Writing prefixes
14:10:45.394 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_FindBlockerBetween::Postfix(BattleTech.PathNodeGrid __instance, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

14:10:45.397 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerBetween(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
14:10:45.399 [Info] Writing postfixes
14:10:45.412 [Info] Patching bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNodeGrid_FindBlockerReciprocal::Prefix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, UnityEngine.Vector3 from, UnityEngine.Vector3 to, Boolean& __result)

14:10:45.415 [Info] Running ILHook manipulator on bool BattleTech.PathNodeGrid::FindBlockerReciprocal(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
14:10:45.417 [Info] Writing prefixes
14:10:45.422 [Info] Patching virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleRepresentation_GetDestructibleObject::Postfix(BattleTech.VehicleRepresentation __instance, MechDestructibleObject& __result)

14:10:45.424 [Info] Running ILHook manipulator on virtual MechDestructibleObject BattleTech.VehicleRepresentation::GetDestructibleObject(int location)
14:10:45.426 [Info] Writing postfixes
14:10:45.432 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:45.434 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:45.436 [Info] Writing postfixes
14:10:45.445 [Info] Patching float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatGameState_GetTargetTerrainModifier::Postfix(BattleTech.ToHit __instance, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee, Single& __result)

14:10:45.447 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetTargetTerrainModifier(BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, bool isMelee)
14:10:45.448 [Info] Writing postfixes
14:10:45.453 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatableEquipment.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)
* static bool CustomUnits.DestructibleUrbanFlimsy_OnTriggerEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collider other)

14:10:45.455 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnTriggerEnter(UnityEngine.Collider other)
14:10:45.457 [Info] Writing prefixes
14:10:45.462 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnCollisionEnter::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.Collision other)

14:10:45.464 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnCollisionEnter(UnityEngine.Collision other)
14:10:45.465 [Info] Writing prefixes
14:10:45.470 [Info] Patching void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.DestructibleUrbanFlimsy_OnParticleCollision::Prefix(BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy __instance, UnityEngine.GameObject other)

14:10:45.472 [Info] Running ILHook manipulator on void BattleTech.Rendering.UrbanWarfare.DestructibleUrbanFlimsy::OnParticleCollision(UnityEngine.GameObject other)
14:10:45.474 [Info] Writing prefixes
14:10:45.479 [Info] Patching virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Vehicle_Init::Postfix(BattleTech.Vehicle __instance, UnityEngine.Vector3 position, float facing, bool checkEncounterCells)

14:10:45.482 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::Init(UnityEngine.Vector3 position, float facing, bool checkEncounterCells)
14:10:45.484 [Info] Writing postfixes
14:10:45.491 [Info] Patching static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathingUtil_DoesMovementLineCollide::Prefix(BattleTech.AbstractActor thisActor, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& actors)
1 postfixes:
* static void CustomUnits.PathingUtil_DoesMovementLineCollide::Postfix(BattleTech.AbstractActor thisActor, BattleTech.AbstractActor& collision, Boolean& __result)

14:10:45.494 [Info] Running ILHook manipulator on static bool BattleTech.PathingUtil::DoesMovementLineCollide(BattleTech.AbstractActor thisActor, System.Collections.Generic.List<BattleTech.AbstractActor> actors, UnityEngine.Vector3 start, UnityEngine.Vector3 end, BattleTech.AbstractActor& collision, float meleeRangeMultiplier)
14:10:45.496 [Info] Writing prefixes
14:10:45.498 [Info] Writing postfixes
14:10:45.504 [Info] Patching static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.PathNode_HasCollisionAt::Prefix(BattleTech.AbstractActor unit, System.Collections.Generic.List`1[[BattleTech.AbstractActor, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& allActors)
1 postfixes:
* static void CustomUnits.PathNode_HasCollisionAt::Postfix(BattleTech.AbstractActor unit, Boolean& __result)

14:10:45.506 [Info] Running ILHook manipulator on static bool BattleTech.PathNode::HasCollisionAt(UnityEngine.Vector3 pos, BattleTech.AbstractActor unit, System.Collections.Generic.List<BattleTech.AbstractActor> allActors, BattleTech.AbstractActor& occupyingActor)
14:10:45.508 [Info] Writing prefixes
14:10:45.510 [Info] Writing postfixes
14:10:45.516 [Info] Patching float BattleTech.PathNodeGrid::GetGradeModifier(float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetGradeModifier::Postfix(BattleTech.PathNodeGrid __instance, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

14:10:45.518 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetGradeModifier(float grade)
14:10:45.520 [Info] Writing postfixes
14:10:45.525 [Info] Patching float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.PathNodeGrid_GetSteepnessMultiplier::Postfix(BattleTech.PathNodeGrid __instance, float steepness, float grade, BattleTech.AbstractActor ___owningActor, Single& __result)

14:10:45.527 [Info] Running ILHook manipulator on float BattleTech.PathNodeGrid::GetSteepnessMultiplier(float steepness, float grade)
14:10:45.529 [Info] Writing postfixes
14:10:45.534 [Info] Patching bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_WillFireAtTarget::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, Boolean& __result)

14:10:45.536 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTarget(BattleTech.ICombatant target)
14:10:45.538 [Info] Writing postfixes
14:10:45.544 [Info] Patching bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
* static void CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:45.546 [Info] Running ILHook manipulator on bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
14:10:45.548 [Info] Transpiling bool BattleTech.Weapon::WillFireAtTargetFromPosition(BattleTech.ICombatant target, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
14:10:45.551 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.Weapon_WillFireAtTargetFromPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:45.553 [Info] Writing postfixes
14:10:45.558 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

14:10:45.561 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
14:10:45.563 [Info] Writing prefixes
14:10:45.570 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)

14:10:45.572 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
14:10:45.574 [Info] Writing postfixes
14:10:45.585 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForMelee::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

14:10:45.587 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForMelee(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
14:10:45.589 [Info] Writing postfixes
14:10:45.595 [Info] Patching float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HostileDamageFactor_expectedDamageForDFA::Postfix(BattleTech.AbstractActor attackingUnit, BattleTech.ICombatant targetUnit, Single& __result)

14:10:45.597 [Info] Running ILHook manipulator on float BattleTech.HostileDamageFactor::expectedDamageForDFA(BattleTech.AbstractActor attackingUnit, UnityEngine.Vector3 attackingPosition, UnityEngine.Quaternion attackingRotation, BattleTech.ICombatant targetUnit, UnityEngine.Vector3 targetPosition, UnityEngine.Quaternion targetRotation, bool targetIsEvasive)
14:10:45.599 [Info] Writing postfixes
14:10:45.606 [Info] Patching bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDWeaponSlot_contemplatingMelee::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, Boolean& __result)

14:10:45.608 [Info] Running ILHook manipulator on bool BattleTech.UI.CombatHUDWeaponSlot::contemplatingMelee(BattleTech.ICombatant target)
14:10:45.610 [Info] Writing postfixes
14:10:45.615 [Info] Patching float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Weapon_GetToHitFromPosition::Postfix(BattleTech.Weapon __instance, BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack, Single& __result)

14:10:45.618 [Info] Running ILHook manipulator on float BattleTech.Weapon::GetToHitFromPosition(BattleTech.ICombatant target, int numTargets, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool bakeInEvasiveModifier, bool targetIsEvasive, bool isMoraleAttack)
14:10:45.620 [Info] Writing postfixes
14:10:45.628 [Info] Patching float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)
* static void CustomUnits.ToHit_GetToHitChance::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack, Single& __result)

14:10:45.631 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetToHitChance(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, int numTargets, BattleTech.MeleeAttackType meleeAttackType, bool isMoraleAttack)
14:10:45.633 [Info] Writing postfixes
14:10:45.642 [Info] Patching void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_AddInstability::Prefix(BattleTech.Mech __instance, float amt, BattleTech.StabilityChangeSource source, string sourceGuid)

14:10:45.645 [Info] Running ILHook manipulator on void BattleTech.Mech::AddInstability(float amt, BattleTech.StabilityChangeSource source, string sourceGuid)
14:10:45.647 [Info] Writing prefixes
14:10:45.658 [Info] Patching virtual void BattleTech.MechDef::RefreshChassis() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.MechDef_RefreshChassis_Patch::Postfix(BattleTech.MechDef __instance)
* static void CustomUnits.MechDef_RefreshChassis::Postfix(BattleTech.MechDef __instance)

14:10:45.661 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::RefreshChassis()
14:10:45.663 [Info] Writing postfixes
14:10:45.671 [Info] Patching virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_GetActorInfoFromVisLevel::Postfix(BattleTech.Mech __instance, BattleTech.VisibilityLevel visLevel, Localize.Text& __result)

14:10:45.674 [Info] Running ILHook manipulator on virtual Localize.Text BattleTech.Mech::GetActorInfoFromVisLevel(BattleTech.VisibilityLevel visLevel)
14:10:45.676 [Info] Writing postfixes
14:10:45.684 [Info] Patching void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetHeatData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetHeatData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:45.687 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetHeatData(BattleTech.MechDef def)
14:10:45.689 [Info] Writing prefixes
14:10:45.691 [Info] Writing postfixes
14:10:45.700 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data) with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void CustomComponents.Patches.TooltipPrefab_Mech_SetData::Postfix(object data, BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, BattleTech.UI.TMProWrapper.LocalizableText ___JumpjetHP)
* static void MechAffinity.Patches.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.TMProWrapper.LocalizableText ___DetailsField)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.TooltipPrefab_Mech_SetData_Patch::Postfix(BattleTech.UI.LanceStatGraphic ___FirepowerBar, BattleTech.UI.LanceStatGraphic ___HeatEffBar, BattleTech.UI.LanceStatGraphic ___AvgRangeBar, BattleTech.UI.LanceStatGraphic ___DurabilityBar, BattleTech.UI.LanceStatGraphic ___MeleeBar, BattleTech.UI.LanceStatGraphic ___MovementBar)
* static void CustomPilotDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnitDecorator.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data)
* static void CustomUnits.TooltipPrefab_Mech_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Mech __instance, object data, BattleTech.UI.LanceStatGraphic& ___MeleeBar, BattleTech.UI.LanceStatGraphic& ___HeatEffBar)

14:10:45.703 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Mech::SetData(object data)
14:10:45.705 [Info] Writing postfixes
14:10:45.713 [Info] Patching void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.SG_Shop_FullMechDetailPanel_FillInFullMech_Patch::Postfix(BattleTech.UI.LanceStat ___Stat1, BattleTech.UI.LanceStat ___Stat2, BattleTech.UI.LanceStat ___Stat3, BattleTech.UI.LanceStat ___Stat4, BattleTech.UI.LanceStat ___Stat5, BattleTech.UI.LanceStat ___Stat6)
* static void CustomUnits.SG_Shop_FullMechDetailPanel_FillInFullMech::Postfix(BattleTech.UI.SG_Shop_FullMechDetailPanel __instance, BattleTech.MechDef theMech, BattleTech.UI.LanceStat& ___Stat4, BattleTech.UI.LanceStat& ___Stat6)

14:10:45.715 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_FullMechDetailPanel::FillInFullMech(BattleTech.MechDef theMech)
14:10:45.717 [Info] Writing postfixes
14:10:45.724 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_ShopFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:45.727 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
14:10:45.729 [Info] Writing postfixes
14:10:45.736 [Info] Patching virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomPilotDecorator.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_SalvageFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)
* static void CustomUnits.InventoryDataObject_SalvageFullMech_RefreshInfoOnWidget::Postfix(BattleTech.UI.InventoryDataObject_ShopFullMech __instance, BattleTech.UI.InventoryItemElement theWidget)

14:10:45.739 [Info] Running ILHook manipulator on virtual void BattleTech.UI.InventoryDataObject_SalvageFullMech::RefreshInfoOnWidget(BattleTech.UI.InventoryItemElement theWidget)
14:10:45.741 [Info] Writing postfixes
14:10:45.748 [Info] Patching void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.StatTooltipData_SetMeleeData::Prefix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)
1 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.StatTooltipData_SetMeleeData_Patch::Postfix(BattleTech.StatTooltipData __instance, BattleTech.MechDef def)

14:10:45.751 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetMeleeData(BattleTech.MechDef def)
14:10:45.753 [Info] Writing prefixes
14:10:45.755 [Info] Writing postfixes
14:10:45.762 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ChassisLocations location, Single& __result)

14:10:45.765 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.MechDef curMech, BattleTech.ChassisLocations location)
14:10:45.767 [Info] Writing postfixes
14:10:45.771 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetInitialStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location, Single& __result)

14:10:45.774 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetInitialStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ChassisLocations location)
14:10:45.777 [Info] Writing postfixes
14:10:45.781 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationMechDef::Postfix(BattleTech.MechDef curMech, BattleTech.ArmorLocation location, Single& __result)

14:10:45.784 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.MechDef curMech, BattleTech.ArmorLocation location)
14:10:45.787 [Info] Writing postfixes
14:10:45.791 [Info] Patching static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.HUDMechArmorReadout_GetCurrentStructureForLocationChassisDef::Postfix(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location, Single& __result)

14:10:45.794 [Info] Running ILHook manipulator on static float BattleTech.UI.HUDMechArmorReadout::GetCurrentStructureForLocation(BattleTech.ChassisDef chassis, BattleTech.ArmorLocation location)
14:10:45.797 [Info] Writing postfixes
14:10:45.800 [Info] Patching virtual bool BattleTech.Mech::get_IsAnyStructureExposed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_IsAnyStructureExposed::Postfix(BattleTech.Mech __instance, Boolean& __result)

14:10:45.803 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsAnyStructureExposed()
14:10:45.805 [Info] Writing postfixes
14:10:45.814 [Info] Patching virtual float BattleTech.Mech::get_SummaryStructureCurrent() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_SummaryStructureCurrent::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:45.817 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_SummaryStructureCurrent()
14:10:45.820 [Info] Writing postfixes
14:10:45.824 [Info] Patching float BattleTech.MechDef::get_MechDefCurrentStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefCurrentStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

14:10:45.828 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefCurrentStructure()
14:10:45.830 [Info] Writing postfixes
14:10:45.834 [Info] Patching float BattleTech.MechDef::get_MechDefMaxStructure() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_MechDefMaxStructure::Postfix(BattleTech.MechDef __instance, Single& __result)

14:10:45.837 [Info] Running ILHook manipulator on float BattleTech.MechDef::get_MechDefMaxStructure()
14:10:45.839 [Info] Writing postfixes
14:10:45.844 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_ResetArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:45.847 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::ResetArmorStructureBars()
14:10:45.849 [Info] Writing prefixes
14:10:45.860 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.HUDMechArmorReadout_UpdateArmorStructureBars::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:45.862 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateArmorStructureBars()
14:10:45.865 [Info] Writing prefixes
14:10:45.872 [Info] Patching void BattleTech.UI.MechDetails::SetStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechDetails_SetStats_Patch::Postfix(System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList)
* static void CustomUnits.MechDetails_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<BattleTech.UI.LanceStat> ___statList, BattleTech.MechDef ___activeMech)

14:10:45.874 [Info] Running ILHook manipulator on void BattleTech.UI.MechDetails::SetStats()
14:10:45.876 [Info] Writing postfixes
14:10:45.882 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnMechLabClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

14:10:45.884 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnMechLabClicked()
14:10:45.887 [Info] Writing prefixes
14:10:45.892 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)

14:10:45.894 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnUnreadyClicked()
14:10:45.896 [Info] Writing prefixes
14:10:45.901 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result)

14:10:45.904 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
14:10:45.906 [Info] Writing prefixes
14:10:45.910 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnRepairClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

14:10:45.912 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnRepairClicked()
14:10:45.914 [Info] Writing prefixes
14:10:45.920 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechBayMechInfoWidget_OnScrapClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech, BattleTech.UI.MechBayMechUnitElement& ___selectedMechElement)

14:10:45.922 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::OnScrapClicked()
14:10:45.924 [Info] Writing prefixes
14:10:45.930 [Info] Patching static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.CombatHUDHeatDisplay_GetProjectedHeat::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, BattleTech.Mech mech, BattleTech.UI.CombatHUD hud, Int32& __result)

14:10:45.933 [Info] Running ILHook manipulator on static int BattleTech.UI.CombatHUDHeatDisplay::GetProjectedHeat(BattleTech.Mech mech, BattleTech.UI.CombatHUD hud)
14:10:45.935 [Info] Writing postfixes
14:10:45.941 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

14:10:45.943 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::GetPredictedLevel()
14:10:45.945 [Info] Writing prefixes
14:10:45.949 [Info] Patching virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDStabilityDisplay_GetPredictedLevel::Prefix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

14:10:45.952 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDStabilityDisplay::GetPredictedLevel()
14:10:45.954 [Info] Writing prefixes
14:10:45.957 [Info] Patching int BattleTech.Mech::get__heat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech__heat_get::Postfix(BattleTech.Mech __instance, Int32& __result)

14:10:45.960 [Info] Running ILHook manipulator on int BattleTech.Mech::get__heat()
14:10:45.962 [Info] Writing postfixes
14:10:45.965 [Info] Patching void BattleTech.Mech::set__heat(int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech__heat_set::Prefix(BattleTech.Mech __instance, Int32& value)

14:10:45.968 [Info] Running ILHook manipulator on void BattleTech.Mech::set__heat(int value)
14:10:45.970 [Info] Writing prefixes
14:10:45.973 [Info] Patching int BattleTech.Mech::get_TempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_TempHeat_get::Postfix(BattleTech.Mech __instance, Int32& __result, Int32& ____tempHeat)

14:10:45.975 [Info] Running ILHook manipulator on int BattleTech.Mech::get_TempHeat()
14:10:45.977 [Info] Writing postfixes
14:10:45.981 [Info] Patching void BattleTech.Mech::AddEngineDamageHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddEngineDamageHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddEngineDamageHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

14:10:45.984 [Info] Running ILHook manipulator on void BattleTech.Mech::AddEngineDamageHeat()
14:10:45.986 [Info] Writing prefixes
14:10:45.988 [Info] Writing postfixes
14:10:45.992 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)

14:10:45.994 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
14:10:45.996 [Info] Writing prefixes
14:10:45.998 [Info] Writing postfixes
14:10:46.002 [Info] Patching void BattleTech.Mech::AddJumpHeat(float distJumped) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddJumpHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddJumpHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

14:10:46.004 [Info] Running ILHook manipulator on void BattleTech.Mech::AddJumpHeat(float distJumped)
14:10:46.006 [Info] Writing prefixes
14:10:46.007 [Info] Writing postfixes
14:10:46.012 [Info] Patching void BattleTech.Mech::AddWalkHeat() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWalkHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWalkHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

14:10:46.014 [Info] Running ILHook manipulator on void BattleTech.Mech::AddWalkHeat()
14:10:46.016 [Info] Writing prefixes
14:10:46.019 [Info] Writing postfixes
14:10:46.023 [Info] Patching void BattleTech.Mech::AddTempHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Mech_AddSprintHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

14:10:46.025 [Info] Running ILHook manipulator on void BattleTech.Mech::AddTempHeat()
14:10:46.028 [Info] Writing postfixes
14:10:46.032 [Info] Patching virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddWeaponHeat::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CustomUnits.Mech_AddWeaponHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat)

14:10:46.034 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddWeaponHeat(BattleTech.Weapon weapon, int amt)
14:10:46.036 [Info] Writing prefixes
14:10:46.039 [Info] Writing postfixes
14:10:46.044 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 3 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.046 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:46.048 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:46.052 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.055 [Info] Writing prefixes
14:10:46.057 [Info] Writing postfixes
14:10:46.070 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:46.072 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:46.074 [Info] Writing prefixes
14:10:46.076 [Info] Writing postfixes
14:10:46.083 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void MechEngineer.Features.OverrideTonnage.Patches.MechStatisticsRules_CalculateTonnage_Patch::Postfix(Single& currentValue)
* static void CustomUnits.MechStatisticsRules_CalculateTonnage::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:46.085 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateTonnage(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:46.087 [Info] Writing prefixes
14:10:46.089 [Info] Writing postfixes
14:10:46.094 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.MechStatisticsRules_CalculateCBillValues::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateCBillValue::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:46.096 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateCBillValue(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:46.098 [Info] Writing prefixes
14:10:46.099 [Info] Writing postfixes
14:10:46.104 [Info] Patching bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMove_CreateMeleeOrders::Prefix(BattleTech.UI.SelectionStateMove __instance)

14:10:46.106 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMove::CreateMeleeOrders()
14:10:46.108 [Info] Writing prefixes
14:10:46.112 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)

14:10:46.114 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:10:46.116 [Info] Writing prefixes
14:10:46.121 [Info] Patching void BattleTech.UI.MechBayMechInfoWidget::SetStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechBayMechInfoWidget_SetStats::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.LanceStat[] ___mechStats, BattleTech.MechDef ___selectedMech)

14:10:46.123 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayMechInfoWidget::SetStats()
14:10:46.125 [Info] Writing postfixes
14:10:46.131 [Info] Patching void BattleTech.UI.LanceMechEquipmentList::SetLoadout() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.LanceMechEquipmentList __instance)
3 postfixes:
* static void CustomActivatableEquipment.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, System.Collections.Generic.List<UnityEngine.GameObject> ___allComponents, BattleTech.MechDef ___activeMech)
* static void CustomUnits.LanceMechEquipmentList_SetLoadout::Postfix(BattleTech.UI.LanceMechEquipmentList __instance, BattleTech.UI.TMProWrapper.LocalizableText ___headLabel, BattleTech.UI.TMProWrapper.LocalizableText ___centerTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightTorsoLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightArmLabel, BattleTech.UI.TMProWrapper.LocalizableText ___leftLegLabel, BattleTech.UI.TMProWrapper.LocalizableText ___rightLegLabel, BattleTech.MechDef ___activeMech)
* static void MechEngineer.Features.MechLabSlots.Patches.LanceMechEquipmentList_SetLoadout_Patch::Postfix(BattleTech.UI.LanceMechEquipmentList __instance)

14:10:46.133 [Info] Running ILHook manipulator on void BattleTech.UI.LanceMechEquipmentList::SetLoadout()
14:10:46.135 [Info] Writing prefixes
14:10:46.137 [Info] Writing postfixes
14:10:46.143 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:46.145 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
14:10:46.146 [Info] Writing prefixes
14:10:46.148 [Info] Writing postfixes
14:10:46.159 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.162 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
14:10:46.164 [Info] Transpiling void BattleTech.UnitSpawnPointGameLogic::Spawn(bool spawnOffScreen)
14:10:46.175 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.UnitSpawnPointGameLogic_Spawn::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.273 [Info] Patching static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.ActorMovementSequence_AlignVehicleToGround::Prefix(UnityEngine.Transform vehicleTransform, float deltaTime)

14:10:46.275 [Info] Running ILHook manipulator on static void BattleTech.ActorMovementSequence::AlignVehicleToGround(UnityEngine.Transform vehicleTransform, float deltaTime)
14:10:46.277 [Info] Writing prefixes
14:10:46.285 [Info] Patching virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.MechDef_GatherDependencies::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.MechDef_GatherDependencies_fake::Postfix(BattleTech.MechDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.287 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:46.289 [Info] Transpiling virtual void BattleTech.MechDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:46.291 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.MechDef_GatherDependencies::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.293 [Info] Writing postfixes
14:10:46.300 [Info] Patching virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.ChassisDef_GatherDependencies::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
* static void CustomUnits.ChassisDef_GatherDependencies_fake::Postfix(BattleTech.ChassisDef __instance, BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)

14:10:46.302 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::GatherDependencies(BattleTech.Data.DataManager dataManager, BattleTech.Data.DataManager+DependencyLoadRequest dependencyLoad, uint activeRequestWeight)
14:10:46.304 [Info] Writing postfixes
14:10:46.310 [Info] Patching virtual void BattleTech.VehicleDef::RefreshChassis() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.VehicleChassisDef_RefreshChassis::Postfix(BattleTech.VehicleDef __instance)

14:10:46.312 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::RefreshChassis()
14:10:46.314 [Info] Writing postfixes
14:10:46.321 [Info] Patching bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechDef_IsLocationDestroyed::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisLocations loc, Boolean& __result)

14:10:46.323 [Info] Running ILHook manipulator on bool BattleTech.MechDef::IsLocationDestroyed(BattleTech.ChassisLocations loc)
14:10:46.325 [Info] Writing postfixes
14:10:46.330 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechStructureSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

14:10:46.332 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechStructureSimple(BattleTech.MechDef mechDef)
14:10:46.334 [Info] Writing postfixes
14:10:46.340 [Info] Patching void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults) with 3 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
3 prefixes:
* static void CustomSalvage.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
* static void LootMagnet.Contract_GenerateSalvage::Prefix(BattleTech.Contract __instance)
* static void CustomComponents.Contract_GenerateSalvage::Prefix(Boolean& __runOriginal, System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults, BattleTech.Contract __instance, System.Collections.Generic.List`1[[BattleTech.SalvageDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___finalPotentialSalvage)
1 postfixes:
* static void CustomUnits.Contract_GenerateSalvage::Postfix(System.Collections.Generic.List<BattleTech.UnitResult> lostUnits)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.342 [Info] Running ILHook manipulator on void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:46.344 [Info] Transpiling void BattleTech.Contract::GenerateSalvage(System.Collections.Generic.List<BattleTech.UnitResult> enemyMechs, System.Collections.Generic.List<BattleTech.VehicleDef> enemyVehicles, System.Collections.Generic.List<BattleTech.UnitResult> lostUnits, bool logResults)
14:10:46.347 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.Engines.Patches.Contract_GenerateSalvage_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.350 [Info] Writing prefixes
14:10:46.353 [Info] Writing postfixes
14:10:46.367 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomComponents.MechValidationRules_ValidateMechCanBeFielded_Patch::Postfix(BattleTech.MechDef mechDef, Boolean& __result)
* static void CustomUnits.MechValidationRules_ValidateMechCanBeFielded::Postfix(BattleTech.SimGameState sim, BattleTech.MechDef mechDef, Boolean& __result)

14:10:46.369 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechCanBeFielded(BattleTech.SimGameState sim, BattleTech.MechDef mechDef)
14:10:46.372 [Info] Writing postfixes
14:10:46.378 [Info] Patching static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.MechValidationRules_ValidateMechPosessesWeaponsSimple::Postfix(BattleTech.MechDef mechDef, Boolean& __result)

14:10:46.381 [Info] Running ILHook manipulator on static bool BattleTech.MechValidationRules::ValidateMechPosessesWeaponsSimple(BattleTech.MechDef mechDef)
14:10:46.383 [Info] Writing postfixes
14:10:46.388 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)

14:10:46.391 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
14:10:46.394 [Info] Writing prefixes
14:10:46.400 [Info] Patching void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Prefix(BattleTech.Data.ContentPackIndex __instance, System.Collections.Generic.Dictionary<string, string> ___resourceMap)
2 postfixes:
* static void CustomUnits.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)
* static void ModTek.Features.Manifest.Patches.ContentPackIndex_TryFinalizeDataLoad_Patch::Postfix(BattleTech.Data.ContentPackIndex __instance)

14:10:46.402 [Info] Running ILHook manipulator on void BattleTech.Data.ContentPackIndex::TryFinalizeDataLoad()
14:10:46.405 [Info] Writing prefixes
14:10:46.407 [Info] Writing postfixes
14:10:46.414 [Info] Patching void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_OnActorTakeDamage::Prefix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenterMessage message)

14:10:46.416 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::OnActorTakeDamage(MessageCenterMessage message)
14:10:46.419 [Info] Writing prefixes
14:10:46.430 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
1 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

14:10:46.432 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
14:10:46.435 [Info] Writing prefixes
14:10:46.437 [Info] Writing postfixes
14:10:46.446 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)

14:10:46.449 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
14:10:46.452 [Info] Writing prefixes
14:10:46.455 [Info] Writing postfixes
14:10:46.465 [Info] Patching void BattleTech.VehicleDef::Refresh() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleDef_Refresh::Prefix(BattleTech.VehicleDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)
1 postfixes:
* static void CustomAmmoCategoriesPatches.VehicleDef_Refresh::Postfix(BattleTech.VehicleDef __instance)

14:10:46.467 [Info] Running ILHook manipulator on void BattleTech.VehicleDef::Refresh()
14:10:46.471 [Info] Writing prefixes
14:10:46.474 [Info] Writing postfixes
14:10:46.480 [Info] Patching void BattleTech.VehicleChassisDef::Refresh() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.VehicleChassisDef_Refresh::Prefix(BattleTech.VehicleChassisDef __instance, BattleTech.VehicleLocationLoadoutDef[]& ___Locations)

14:10:46.482 [Info] Running ILHook manipulator on void BattleTech.VehicleChassisDef::Refresh()
14:10:46.485 [Info] Writing prefixes
14:10:46.494 [Info] Patching void BattleTech.UI.CombatHUDMechTray::refreshMechInfo() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_refreshMechInfo::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUDStatusPanel ___StatusPanel, BattleTech.AbstractActor ___displayedActor)
1 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_refreshMechInfo::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)

14:10:46.497 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::refreshMechInfo()
14:10:46.499 [Info] Writing prefixes
14:10:46.502 [Info] Writing postfixes
14:10:46.507 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.SkirmishSettingsBetaFinalizeLancesPatch::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result)
1 postfixes:
* static void CustomUnits.SkirmishSettings_Beta_FinalizeLances::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LancePreviewPanel ___playerLancePreview, BattleTech.UI.UIManager ___uiManager)

14:10:46.509 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.SkirmishSettings_Beta::FinalizeLances()
14:10:46.512 [Info] Writing prefixes
14:10:46.514 [Info] Writing postfixes
14:10:46.521 [Info] Patching virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.SkirmishSettings_Beta_OnAddedToHierarchy::Prefix(BattleTech.UI.SkirmishSettings_Beta __instance)

14:10:46.523 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SkirmishSettings_Beta::OnAddedToHierarchy()
14:10:46.525 [Info] Writing prefixes
14:10:46.532 [Info] Patching void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDHeatMeter_RefreshHeatInfo::Prefix(BattleTech.UI.CombatHUDHeatMeter __instance, float ___underlyingHeatTarget, float ___underlyingHeatDisplayed, float ___underlyingPredictionTarget, float ___underlyingPredictionDisplayed)

14:10:46.535 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatMeter::RefreshHeatInfo()
14:10:46.537 [Info] Writing prefixes
14:10:46.547 [Info] Patching bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.SelectionStateMoveBase_CreateMoveOrders::Prefix(BattleTech.UI.SelectionStateMoveBase __instance, bool isJump, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.549 [Info] Running ILHook manipulator on bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
14:10:46.552 [Info] Transpiling bool BattleTech.UI.SelectionStateMoveBase::CreateMoveOrders(bool isJump)
14:10:46.554 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.SelectionStateMoveBase_CreateMoveOrders::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.557 [Info] Writing prefixes
14:10:46.567 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Prefix(BattleTech.UI.CombatHUDWeaponPanel __instance, bool consideringJump, bool useCOILPathingPreview, BattleTech.AbstractActor ___displayedActor, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots)
1 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponPanel_RefreshDisplayedWeapons::Postfix(BattleTech.UI.CombatHUDWeaponPanel __instance, System.Collections.Generic.List<BattleTech.UI.CombatHUDWeaponSlot> ___WeaponSlots, bool consideringJump, bool useCOILPathingPreview, BattleTech.UI.CombatHUDWeaponSlot ___meleeSlot, BattleTech.UI.CombatHUDWeaponSlot ___dfaSlot)

14:10:46.570 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::RefreshDisplayedWeapons(bool consideringJump, bool useCOILPathingPreview)
14:10:46.572 [Info] Writing prefixes
14:10:46.574 [Info] Writing postfixes
14:10:46.584 [Info] Patching void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.ActorMovementSequence_MoveTowardWaypoint::Postfix(BattleTech.ActorMovementSequence __instance, BattleTech.MoveType ___moveType)

14:10:46.587 [Info] Running ILHook manipulator on void BattleTech.ActorMovementSequence::MoveTowardWaypoint(UnityEngine.Vector3 dest)
14:10:46.589 [Info] Writing postfixes
14:10:46.596 [Info] Patching void BattleTech.ActorTwistSequence::update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.ActorTwistSequence_update::Prefix(BattleTech.ActorTwistSequence __instance, Object& __state)
1 postfixes:
* static void CustomUnits.ActorTwistSequence_update::Postfix(BattleTech.ActorTwistSequence __instance, float ___t, Object& __state, BattleTech.PilotableActorRepresentation ___actorRep)

14:10:46.599 [Info] Running ILHook manipulator on void BattleTech.ActorTwistSequence::update()
14:10:46.601 [Info] Writing prefixes
14:10:46.603 [Info] Writing postfixes
14:10:46.655 [Info] ### Harmony id=com.BattleTech.PanicSystem, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void PanicSystem.PanicSystem::Init(string modDir, string settings), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\PanicSystem\PanicSystem.dll
### At 2023-05-07 02.10.46
14:10:46.660 [Info] Patching void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.AAR_UnitStatusWidget __instance)
2 postfixes:
* static void CustAmmoCategories.AAR_UnitStatusWidget_FillInData::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance, BattleTech.UnitResult ___UnitData, BattleTech.Data.DataManager ___dm, UnityEngine.RectTransform ___KillGridParent)
* static void PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Postfix(BattleTech.UI.AAR_UnitStatusWidget __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.663 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
14:10:46.666 [Info] Transpiling void BattleTech.UI.AAR_UnitStatusWidget::FillInData(int xpEarned)
14:10:46.669 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Patches.AAR_UnitStatusWidget_FillInData_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.673 [Info] Writing prefixes
14:10:46.676 [Info] Writing postfixes
14:10:46.685 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:46.688 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:46.690 [Info] Writing postfixes
14:10:46.699 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategoriesPatches.AbstractActor_OnActivationBegin::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static void CustomActivatableEquipment.DamageHelpers.AbstractActor_OnActivationBegin_Patch::Prefix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_OnActivationBegin_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance)

14:10:46.701 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationBegin(string sourceID, int stackItemID)
14:10:46.704 [Info] Writing prefixes
14:10:46.714 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 5 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

14:10:46.716 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:46.719 [Info] Writing prefixes
14:10:46.723 [Info] Writing postfixes
14:10:46.733 [Info] Patching virtual void BattleTech.ActorMovementSequence::CompleteOrders() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_CompleteMove::Postfix(BattleTech.ActorMovementSequence __instance)
* static void CustomActivatablePatches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)
* static void PanicSystem.Patches.ActorMovementSequence_CompleteOrders::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:46.737 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::CompleteOrders()
14:10:46.739 [Info] Writing postfixes
14:10:46.751 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
5 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void PanicSystem.Patches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:46.754 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:46.756 [Info] Writing prefixes
14:10:46.760 [Info] Writing postfixes
14:10:46.770 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
3 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()

14:10:46.773 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:46.775 [Info] Writing prefixes
14:10:46.777 [Info] Writing postfixes
14:10:46.787 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()

14:10:46.789 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
14:10:46.791 [Info] Writing postfixes
14:10:46.798 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.CompressFloatieMessages.Patches.CombatHUDFloatieStack_AddFloatie_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUDFloatieStack __instance, BattleTech.FloatieMessage message, System.Collections.Generic.Queue<BattleTech.FloatieMessage> ___msgQueue)
1 postfixes:
* static void PanicSystem.Patches.CombatHUDFloatieStack_AddFloatie_Patch1::Postfix(BattleTech.UI.CombatHUDFloatieStack __instance)

14:10:46.801 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(BattleTech.FloatieMessage message)
14:10:46.803 [Info] Writing prefixes
14:10:46.805 [Info] Writing postfixes
14:10:46.811 [Info] Patching void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(Localize.Text text, BattleTech.FloatieMessage+MessageNature nature) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.CombatHUDFloatieStack_AddFloatie_Patch2::Postfix(BattleTech.UI.CombatHUDFloatieStack __instance)

14:10:46.813 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatieStack::AddFloatie(Localize.Text text, BattleTech.FloatieMessage+MessageNature nature)
14:10:46.815 [Info] Writing postfixes
14:10:46.822 [Info] Patching void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.GameInstance_LaunchContract::Prefix(BattleTech.GameInstance __instance, BattleTech.Contract contract, string playerGUID)
2 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.GameInstance_LaunchContract_Patch::Postfix()
* static void PanicSystem.Patches.GameInstance_LaunchContract_Patch::Postfix()

14:10:46.824 [Info] Running ILHook manipulator on void BattleTech.GameInstance::LaunchContract(BattleTech.Contract contract, string playerGUID)
14:10:46.827 [Info] Writing prefixes
14:10:46.829 [Info] Writing postfixes
14:10:46.834 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PanicSystem.Patches.GameInstance_Load_Patch::Prefix(Boolean& __runOriginal, BattleTech.Save.GameInstanceSave save)

14:10:46.837 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
14:10:46.839 [Info] Writing prefixes
14:10:46.846 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

14:10:46.848 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
14:10:46.851 [Info] Writing postfixes
14:10:46.858 [Info] Patching virtual void BattleTech.LanceSpawnerGameLogic::OnTriggerSpawn(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.LanceSpawnerGameLogic_OnTriggerSpawn_Patch::Postfix(BattleTech.LanceSpawnerGameLogic __instance)

14:10:46.861 [Info] Running ILHook manipulator on virtual void BattleTech.LanceSpawnerGameLogic::OnTriggerSpawn(MessageCenterMessage message)
14:10:46.864 [Info] Writing postfixes
14:10:46.869 [Info] Patching virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategoriesPatches.Mech_AddExternalHeat::Prefix(BattleTech.Mech __instance)
3 postfixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)
* static void CustomUnits.Mech_AddExternalHeat::Postfix(BattleTech.Mech __instance, Int32& ____tempHeat, string reason, int amt)
* static void PanicSystem.Patches.Mech_AddExternalHeat_Patch::Postfix(BattleTech.Mech __instance, string reason, int amt)

14:10:46.872 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::AddExternalHeat(string reason, int amt)
14:10:46.874 [Info] Writing prefixes
14:10:46.877 [Info] Writing postfixes
14:10:46.882 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:46.885 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:46.887 [Info] Writing prefixes
14:10:46.890 [Info] Writing postfixes
14:10:46.896 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 1 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
* static void PanicSystem.Patches.Mech_OnLocationDestroyed_Patch::Postfix(BattleTech.Mech __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.898 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:46.901 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:46.904 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.907 [Info] Writing prefixes
14:10:46.909 [Info] Writing postfixes
14:10:46.917 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void PanicSystem.Patches.MechMeleeSequence_CompleteOrders::Postfix()

14:10:46.920 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
14:10:46.922 [Info] Writing postfixes
14:10:46.928 [Info] Patching void BattleTech.SimGameState::_OnFirstPlayInit(BattleTech.SimGameState+SimGameType gameType, bool allowDebug) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PanicSystem.Patches.SimGameState__OnFirstPlayInit_Patch::Postfix()

14:10:46.930 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnFirstPlayInit(BattleTech.SimGameState+SimGameType gameType, bool allowDebug)
14:10:46.933 [Info] Writing postfixes
14:10:46.950 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:46.953 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:46.955 [Info] Writing prefixes
14:10:46.957 [Info] Writing postfixes
14:10:46.963 [Info] Patching virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Components.SelectionStateEject_CreateConfirmationOrders_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:46.965 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders()
14:10:46.967 [Info] Transpiling virtual bool BattleTech.UI.SelectionStateEject::CreateConfirmationOrders()
14:10:46.969 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> PanicSystem.Components.SelectionStateEject_CreateConfirmationOrders_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:46.975 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()
* static void PanicSystem.Components.StatusEffect+CombatGameState_LoadComplete_Patch::Postfix()

14:10:46.978 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
14:10:46.980 [Info] Writing postfixes
14:10:47.005 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.007 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
14:10:47.009 [Info] PrefixWrapper created: HXI︳3︳::CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix
14:10:47.012 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
14:10:47.014 [Info] PrefixWrapper created: HXI︳4︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix
14:10:47.016 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 78 ms
14:10:47.020 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_InitializeData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract, Boolean& __runOriginal)
1 postfixes:
* static void CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Postfix(BattleTech.UI.AAR_SkirmishResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, Int32& ___numUnits, BattleTech.Contract& ___theContract, BattleTech.SimGameState& ___simState)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:47.022 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
14:10:47.025 [Info] Transpiling void BattleTech.UI.AAR_UnitsResult_Screen::InitializeData(BattleTech.UI.MissionResults mission, BattleTech.SimGameState sim, BattleTech.Contract contract)
14:10:47.028 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.AAR_UnitsResult_Screen_InitializeSkirmishData::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:47.030 [Info] Writing prefixes
14:10:47.032 [Info] Writing postfixes
14:10:47.038 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.040 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
14:10:47.043 [Info] PrefixWrapper created: HXI︳5︳::CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix
14:10:47.046 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
14:10:47.049 [Info] PrefixWrapper created: HXI︳6︳::BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix
14:10:47.051 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 92 ms
14:10:47.055 [Info] Patching void BattleTech.UI.AAR_UnitsResult_Screen::FillInData() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.AAR_UnitsResult_Screen_InitializeWidgets::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, System.Collections.Generic.List`1[[BattleTech.UI.AAR_UnitStatusWidget, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitWidgets, System.Collections.Generic.List`1[[BattleTech.UnitResult, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___UnitResults, BattleTech.Contract& ___theContract, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.AAR_UnitsResult_Screen_FillInData::Prefix(BattleTech.UI.AAR_UnitsResult_Screen __instance, Boolean& __runOriginal)

14:10:47.057 [Info] Running ILHook manipulator on void BattleTech.UI.AAR_UnitsResult_Screen::FillInData()
14:10:47.059 [Info] Writing prefixes
14:10:47.064 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 92 ms
14:10:47.069 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
2 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:47.071 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:47.073 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:47.076 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:47.079 [Info] Writing prefixes
14:10:47.082 [Info] Writing postfixes
14:10:47.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 92 ms
14:10:47.097 [Info] Patching void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void PanicSystem.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)
* static void BiggerDrops.Patches.GameInstanceSave_Constructor_Patch::Postfix(BattleTech.Save.GameInstanceSave __instance)

14:10:47.099 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::.ctor(BattleTech.GameInstance gameInstance, BattleTech.Save.SaveGameStructure.SaveReason saveReason)
14:10:47.101 [Info] Writing postfixes
14:10:47.108 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 92 ms
14:10:47.111 [Info] Patching void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PanicSystem.Patches.GameInstance_Load_Patch::Prefix(Boolean& __runOriginal, BattleTech.Save.GameInstanceSave save)
* static void BiggerDrops.Patches.GameInstance_Load_Patch::Prefix(BattleTech.Save.GameInstanceSave save)

14:10:47.113 [Info] Running ILHook manipulator on void BattleTech.GameInstance::Load(BattleTech.Save.GameInstanceSave save)
14:10:47.115 [Info] Writing prefixes
14:10:47.120 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 92 ms
14:10:47.124 [Info] Patching void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.SimGameState sim, Int32& maxUnits, BattleTech.Contract contract, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots, Single[]& ___slotMaxTonnages, Single[]& ___slotMinTonnages)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_SetData::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, Int32& maxUnits, BattleTech.Contract contract)

14:10:47.126 [Info] Running ILHook manipulator on void BattleTech.UI.LanceConfiguratorPanel::SetData(BattleTech.SimGameState sim, BattleTech.Contract contract, string playerGUID, System.Collections.Generic.List<BattleTech.MechDef> mechs, System.Collections.Generic.List<BattleTech.Pilot> pilots, bool allowUnevenLances, bool allowDuplicateMechs, int maxValue, int maxUnits, bool showStock, BattleTech.LanceConfiguration overrideLance, BattleTech.LanceConfiguration lastLance, string overrideLanceName, UnityEngine.Events.UnityAction confirmCB, UnityEngine.Events.UnityAction cancelCB)
14:10:47.128 [Info] Writing prefixes
14:10:47.130 [Info] Writing postfixes
14:10:47.139 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.141 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
14:10:47.144 [Info] PrefixWrapper created: HXI︳7︳::CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix
14:10:47.146 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
14:10:47.148 [Info] PrefixWrapper created: HXI︳8︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix
14:10:47.150 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 103 ms
14:10:47.154 [Info] Patching BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots, BattleTech.UI.LanceHeaderWidget ___headerWidget, BattleTech.LanceDef& __result, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceDef::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, string lanceId, BattleTech.LanceDef& __result)

14:10:47.157 [Info] Running ILHook manipulator on BattleTech.LanceDef BattleTech.UI.LanceConfiguratorPanel::CreateLanceDef(string lanceId)
14:10:47.159 [Info] Writing prefixes
14:10:47.161 [Info] Writing postfixes
14:10:47.167 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.174 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
14:10:47.177 [Info] PrefixWrapper created: HXI︳9︳::CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
14:10:47.181 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
14:10:47.183 [Info] PrefixWrapper created: HXI︳10︳::BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix
14:10:47.186 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
14:10:47.188 [Info] Patching BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
* static bool BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Prefix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, Boolean& __runOriginal)
2 postfixes:
* static void CustomUnits.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[]& ___loadoutSlots)
* static void BiggerDrops.Patches.LanceConfiguratorPanel_CreateLanceConfiguration::Postfix(BattleTech.UI.LanceConfiguratorPanel __instance, BattleTech.LanceConfiguration& __result, BattleTech.UI.LanceLoadoutSlot[] ___loadoutSlots)

14:10:47.191 [Info] Running ILHook manipulator on BattleTech.LanceConfiguration BattleTech.UI.LanceConfiguratorPanel::CreateLanceConfiguration()
14:10:47.193 [Info] Writing prefixes
14:10:47.195 [Info] Writing postfixes
14:10:47.199 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 121 ms
14:10:47.202 [Info] Patching void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.LancePreviewPanel_SaveLance::Prefix(BattleTech.UI.LancePreviewPanel __instance, BattleTech.LanceDef lanceToSave)

14:10:47.204 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SaveLance(BattleTech.LanceDef lanceToSave, bool applySave)
14:10:47.205 [Info] Writing prefixes
14:10:47.209 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.211 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.LancePreviewPanelSetData::Prefix
14:10:47.213 [Info] PrefixWrapper created: HXI︳11︳::MissionControl.Patches.LancePreviewPanelSetData::Prefix
14:10:47.215 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.LancePreviewPanel_SetData::Prefix
14:10:47.217 [Info] PrefixWrapper created: HXI︳12︳::CustomUnits.LancePreviewPanel_SetData::Prefix
14:10:47.219 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
14:10:47.221 [Info] PrefixWrapper created: HXI︳13︳::BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix
14:10:47.223 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.226 [Info] Patching void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.LancePreviewPanelSetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Boolean& __runOriginal)
* static void CustomUnits.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)
* static void BiggerDrops.Patches.LancePreviewPanel_SetData::Prefix(BattleTech.UI.LancePreviewPanel __instance, Int32& maxUnits, Boolean& __runOriginal)

14:10:47.229 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::SetData(string title, string randomText, BattleTech.Data.DataManager dataManager, string playerGUID, string heraldryId, System.Collections.Generic.List<BattleTech.LanceDef> stockLances, System.Collections.Generic.List<BattleTech.MechDef> stockMechs, System.Collections.Generic.List<BattleTech.PilotDef> pilots, BattleTech.LanceConfiguration lastLanceConfiguration, int maxUnits, int maxValue, bool allowUnevenLances, bool stockMechsOnly, UnityEngine.Events.UnityAction<BattleTech.LanceDef> OnLanceChanged, string initialLanceId)
14:10:47.231 [Info] Writing prefixes
14:10:47.239 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.242 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorConfirm::Prefix(BattleTech.UI.LancePreviewPanel __instance)

14:10:47.244 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorConfirm()
14:10:47.246 [Info] Writing prefixes
14:10:47.250 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.253 [Info] Patching void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)
* static void BiggerDrops.Patches.LancePreviewPanel_OnLanceConfiguratorCancel::Prefix(BattleTech.UI.LancePreviewPanel __instance)

14:10:47.256 [Info] Running ILHook manipulator on void BattleTech.UI.LancePreviewPanel::OnLanceConfiguratorCancel()
14:10:47.258 [Info] Writing prefixes
14:10:47.262 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.265 [Info] Patching virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGCmdCenterLanceConfigBG_OnAddedToHierarchy::Postfix(BattleTech.UI.SGCmdCenterLanceConfigBG __instance)

14:10:47.267 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCmdCenterLanceConfigBG::OnAddedToHierarchy()
14:10:47.269 [Info] Writing postfixes
14:10:47.273 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.277 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)

14:10:47.280 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
14:10:47.282 [Info] Writing prefixes
14:10:47.296 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.299 [Info] Patching void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_CleanUpAllUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

14:10:47.301 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::CleanUpAllUpgradePips()
14:10:47.303 [Info] Writing postfixes
14:10:47.310 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.313 [Info] Patching void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_ClearUpgradePips::Postfix(BattleTech.UI.SGEngineeringScreen __instance)

14:10:47.315 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::ClearUpgradePips(UnityEngine.Transform container)
14:10:47.317 [Info] Writing postfixes
14:10:47.409 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.413 [Info] Patching void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Patches.SGEngineeringScreen_AddUpgradePip::Prefix(BattleTech.UI.SGEngineeringScreen __instance, BattleTech.ShipModuleUpgrade upgrade)

14:10:47.416 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::AddUpgradePip(BattleTech.ShipModuleUpgrade upgrade)
14:10:47.418 [Info] Writing prefixes
14:10:47.428 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.438 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
6 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:47.440 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:47.442 [Info] Writing prefixes
14:10:47.445 [Info] Writing postfixes
14:10:47.473 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.477 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

14:10:47.480 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
14:10:47.482 [Info] Writing postfixes
14:10:47.490 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.494 [Info] Patching void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_AddArgoUpgrade::Postfix(BattleTech.SimGameState __instance)

14:10:47.496 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddArgoUpgrade(BattleTech.ShipModuleUpgrade upgrade)
14:10:47.499 [Info] Writing postfixes
14:10:47.506 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.509 [Info] Patching void BattleTech.SimGameState::ApplyArgoUpgrades() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BiggerDrops.Patches.SimGameState_ApplyArgoUpgrades::Postfix(BattleTech.SimGameState __instance)

14:10:47.511 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ApplyArgoUpgrades()
14:10:47.514 [Info] Writing postfixes
14:10:47.521 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.524 [Info] Patching void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SkirmishMechBayPanel_SelectLance::Prefix(BattleTech.UI.SkirmishMechBayPanel __instance, BattleTech.LanceDef lance)

14:10:47.526 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishMechBayPanel::SelectLance(BattleTech.LanceDef lance)
14:10:47.529 [Info] Writing prefixes
14:10:47.538 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 136 ms
14:10:47.541 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BiggerDrops.Features.Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance)

14:10:47.543 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::SetTrayState(BattleTech.UI.CombatHUDMechwarriorTray+MWTrayState newState)
14:10:47.545 [Info] Writing prefixes
14:10:47.552 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.554 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
14:10:47.556 [Info] PrefixWrapper created: HXI︳14︳::CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix
14:10:47.558 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
14:10:47.561 [Info] PrefixWrapper created: HXI︳15︳::BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix
14:10:47.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 146 ms
14:10:47.565 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.Team ___displayedTeam, BattleTech.UI.CombatHUD ___HUD, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_RefreshTeam::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.Team team, BattleTech.CombatGameState ___Combat, Boolean& __runOriginal)

14:10:47.567 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::RefreshTeam(BattleTech.Team team)
14:10:47.569 [Info] Writing prefixes
14:10:47.575 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:47.577 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
14:10:47.579 [Info] PrefixWrapper created: HXI︳16︳::CustomUnits.CombatHUDMechwarriorTray_Init::Prefix
14:10:47.581 [Info] PrefixWrapper being created for: BiggerDrops::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
14:10:47.583 [Info] PrefixWrapper created: HXI︳17︳::BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix
14:10:47.585 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
14:10:47.588 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.CombatGameState& ___Combat, BattleTech.UI.CombatHUD& ___HUD, BattleTech.UI.CombatHUDPortrait[]& ___Portraits, Boolean& __runOriginal)
* static bool BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_Init_Postfix::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD, BattleTech.UI.CombatHUDPortrait[] ___Portraits)
* static void BiggerDrops.Features.CombatHUDMechwarriorTray_Init::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

14:10:47.590 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
14:10:47.592 [Info] Writing prefixes
14:10:47.594 [Info] Writing postfixes
14:10:47.700 [Info] ### Harmony id=us.frostraptor.CBTBehaviorsEnhanced, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CBTBehaviorsEnhanced.Mod::Init(string modDirectory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CBTBehaviorsEnhanced\CBTBehaviorsEnhanced.dll
### At 2023-05-07 02.10.47
14:10:47.704 [Info] Patching virtual void BattleTech.MechFallSequence::OnAdded() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Piloting.MechFallSequence_OnAdded::Postfix(BattleTech.MechFallSequence __instance)

14:10:47.707 [Info] Running ILHook manipulator on virtual void BattleTech.MechFallSequence::OnAdded()
14:10:47.709 [Info] Writing postfixes
14:10:47.714 [Info] Patching virtual void BattleTech.MechFallSequence::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Piloting.MechFallSequence_OnComplete::Prefix(BattleTech.MechFallSequence __instance)

14:10:47.716 [Info] Running ILHook manipulator on virtual void BattleTech.MechFallSequence::OnComplete()
14:10:47.718 [Info] Writing prefixes
14:10:47.725 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.Pathing::GetMeleeDestsForTarget(BattleTech.AbstractActor target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.Pathing_GetMeleeDestsForTarget::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor target, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:47.727 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.Pathing::GetMeleeDestsForTarget(BattleTech.AbstractActor target)
14:10:47.729 [Info] Writing prefixes
14:10:47.739 [Info] Patching BattleTech.PathNodeGrid BattleTech.Pathing::getGrid(BattleTech.MoveType moveType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.Pathing_getGrid::Postfix(BattleTech.Pathing __instance, BattleTech.MoveType moveType, BattleTech.PathNodeGrid& __result)

14:10:47.742 [Info] Running ILHook manipulator on BattleTech.PathNodeGrid BattleTech.Pathing::getGrid(BattleTech.MoveType moveType)
14:10:47.744 [Info] Writing postfixes
14:10:47.750 [Info] Patching void BattleTech.Pathing::SetMeleeTarget(BattleTech.AbstractActor target) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.Pathing_SetMeleeTarget::Prefix(BattleTech.Pathing __instance, BattleTech.AbstractActor target)

14:10:47.753 [Info] Running ILHook manipulator on void BattleTech.Pathing::SetMeleeTarget(BattleTech.AbstractActor target)
14:10:47.755 [Info] Writing prefixes
14:10:47.762 [Info] Patching void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomDeploy.Pathing_UpdateMeleePath_Debug::Prefix(BattleTech.Pathing __instance, bool calledFromUI)
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)
* static void CustomUnits.Pathing_UpdateMeleePath::Postfix(BattleTech.Pathing __instance, bool calledFromUI)

14:10:47.764 [Info] Running ILHook manipulator on void BattleTech.Pathing::UpdateMeleePath(bool calledFromUI)
14:10:47.766 [Info] Writing prefixes
14:10:47.768 [Info] Writing postfixes
14:10:47.774 [Info] Patching virtual float BattleTech.UI.SelectionStateJump::get_ProjectedStabilityForState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateJump_ProjectedStabilityForState_Getter::Postfix(BattleTech.UI.SelectionStateJump __instance, Single& __result)

14:10:47.776 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SelectionStateJump::get_ProjectedStabilityForState()
14:10:47.779 [Info] Writing postfixes
14:10:47.784 [Info] Patching virtual float BattleTech.UI.SelectionStateMove::get_ProjectedStabilityForState() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_ProjectedStabilityForState_Getter::Postfix(BattleTech.UI.SelectionStateMove __instance, Single& __result)

14:10:47.786 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SelectionStateMove::get_ProjectedStabilityForState()
14:10:47.788 [Info] Writing postfixes
14:10:47.794 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:10:47.796 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
14:10:47.799 [Info] Writing postfixes
14:10:47.805 [Info] Patching void BattleTech.MechDFASequence::Init(BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination, UnityEngine.Quaternion finalJumpRotation) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_Init::Postfix(BattleTech.MechDFASequence __instance, BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination)

14:10:47.808 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::Init(BattleTech.Mech mech, BattleTech.ICombatant DFATarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 finalJumpDestination, UnityEngine.Quaternion finalJumpRotation)
14:10:47.810 [Info] Writing postfixes
14:10:47.818 [Info] Patching virtual void BattleTech.MechDFASequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_OnAdded::Prefix(BattleTech.MechMeleeSequence __instance)

14:10:47.820 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::OnAdded()
14:10:47.823 [Info] Writing prefixes
14:10:47.831 [Info] Patching void BattleTech.MechDFASequence::BuildMeleeDirectorSequence() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_BuildMeleeDirectorSequence::Postfix(BattleTech.MechDFASequence __instance, System.Collections.Generic.List<BattleTech.Weapon> ___requestedWeapons)

14:10:47.833 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::BuildMeleeDirectorSequence()
14:10:47.836 [Info] Writing postfixes
14:10:47.843 [Info] Patching void BattleTech.MechDFASequence::ExecuteJump() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_ExecuteJump::Prefix(BattleTech.MechDFASequence __instance)

14:10:47.846 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::ExecuteJump()
14:10:47.849 [Info] Writing prefixes
14:10:47.855 [Info] Patching void BattleTech.MechDFASequence::OnMeleeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_OnMeleeComplete::Prefix(BattleTech.MechDFASequence __instance, MessageCenterMessage message, BattleTech.AttackStackSequence ___meleeSequence)

14:10:47.857 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::OnMeleeComplete(MessageCenterMessage message)
14:10:47.860 [Info] Writing prefixes
14:10:47.866 [Info] Patching void BattleTech.MechDFASequence::FireWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_FireWeapons::Prefix(BattleTech.MechDFASequence __instance)

14:10:47.868 [Info] Running ILHook manipulator on void BattleTech.MechDFASequence::FireWeapons()
14:10:47.870 [Info] Writing prefixes
14:10:47.876 [Info] Patching virtual void BattleTech.MechDFASequence::CompleteOrders() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)
* static void CustAmmoCategoriesPatches.MechDFASequence_CompleteOrders::Postfix(BattleTech.MechDFASequence __instance)

14:10:47.878 [Info] Running ILHook manipulator on virtual void BattleTech.MechDFASequence::CompleteOrders()
14:10:47.881 [Info] Writing postfixes
14:10:47.887 [Info] Patching void BattleTech.MechMeleeSequence::.ctor(BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ctor::Postfix(BattleTech.MechMeleeSequence __instance, BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition)

14:10:47.890 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::.ctor(BattleTech.Mech mech, BattleTech.ICombatant meleeTarget, System.Collections.Generic.List<BattleTech.Weapon> requestedWeapons, UnityEngine.Vector3 desiredMeleePosition)
14:10:47.892 [Info] Writing postfixes
14:10:47.900 [Info] Patching virtual void BattleTech.MechMeleeSequence::OnAdded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_OnAdded::Prefix(BattleTech.MechMeleeSequence __instance)

14:10:47.903 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::OnAdded()
14:10:47.905 [Info] Writing prefixes
14:10:47.912 [Info] Patching void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance, System.Collections.Generic.List<BattleTech.Weapon> ___requestedWeapons)
* static bool CustAmmoCategoriesPatches.MechMeleeSequence_BuildMeleeDirectorSequence::Prefix(BattleTech.MechMeleeSequence __instance)

14:10:47.915 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::BuildMeleeDirectorSequence()
14:10:47.917 [Info] Writing prefixes
14:10:47.922 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMove() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ExecuteMove::Prefix(BattleTech.MechMeleeSequence __instance)
1 postfixes:
* static void CustomUnits.MechMeleeSequence_ExecuteMove::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:47.925 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMove()
14:10:47.927 [Info] Writing prefixes
14:10:47.929 [Info] Writing postfixes
14:10:47.934 [Info] Patching void BattleTech.MechMeleeSequence::ExecuteMelee() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Melee.MechMeleeSequence_ExecuteMelee::Prefix(BattleTech.MechMeleeSequence __instance)
1 postfixes:
* static void CustAmmoCategoriesPatches.MechMeleeSequence_ExecuteMelee::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:47.938 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::ExecuteMelee()
14:10:47.940 [Info] Writing prefixes
14:10:47.942 [Info] Writing postfixes
14:10:47.948 [Info] Patching void BattleTech.MechMeleeSequence::OnMeleeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_OnMeleeComplete::Prefix(BattleTech.MechMeleeSequence __instance, MessageCenterMessage message, BattleTech.AttackStackSequence ___meleeSequence)

14:10:47.950 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::OnMeleeComplete(MessageCenterMessage message)
14:10:47.952 [Info] Writing prefixes
14:10:47.958 [Info] Patching void BattleTech.MechMeleeSequence::FireWeapons() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_FireWeapons::Prefix(BattleTech.MechMeleeSequence __instance, BattleTech.AttackStackSequence ___meleeSequence)

14:10:47.960 [Info] Running ILHook manipulator on void BattleTech.MechMeleeSequence::FireWeapons()
14:10:47.962 [Info] Writing prefixes
14:10:47.967 [Info] Patching virtual void BattleTech.MechMeleeSequence::CompleteOrders() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void CustomActivatablePatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void PanicSystem.Patches.MechMeleeSequence_CompleteOrders::Postfix()
* static void CBTBehaviorsEnhanced.Melee.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)
* static void CustAmmoCategoriesPatches.MechMeleeSequence_CompleteOrders::Postfix(BattleTech.MechMeleeSequence __instance)

14:10:47.970 [Info] Running ILHook manipulator on virtual void BattleTech.MechMeleeSequence::CompleteOrders()
14:10:47.972 [Info] Writing postfixes
14:10:47.978 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackSequenceBeginWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CBTBehaviorsEnhanced.HullIntegrity.AttackDirector_OnAttackSequenceBegin::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:47.981 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceBegin(MessageCenterMessage message)
14:10:47.983 [Info] Writing postfixes
14:10:47.990 [Info] Patching void BattleTech.AttackDirector::OnAttackSequenceEnd(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.AttackDirector_OnAttackSequenceEnd::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:47.992 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackSequenceEnd(MessageCenterMessage message)
14:10:47.995 [Info] Writing postfixes
14:10:48.003 [Info] Patching void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
2 postfixes:
* static void CustomUnits.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo& hitInfo, Nullable`1& __state)
* static void CBTBehaviorsEnhanced.HullIntegrity.Mech_ApplyStructureStatDamage::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)

14:10:48.006 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStructureStatDamage(BattleTech.ChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
14:10:48.007 [Info] Writing prefixes
14:10:48.009 [Info] Writing postfixes
14:10:48.017 [Info] Patching void BattleTech.Turret::ApplyStructureStatDamage(BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.Turret_ApplyStructureStatDamage::Postfix(BattleTech.Turret __instance, BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)

14:10:48.020 [Info] Running ILHook manipulator on void BattleTech.Turret::ApplyStructureStatDamage(BattleTech.BuildingLocation location, float damage, BattleTech.WeaponHitInfo hitInfo)
14:10:48.022 [Info] Writing postfixes
14:10:48.027 [Info] Patching void BattleTech.Vehicle::applyStructureStatDamage(BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.HullIntegrity.Vehicle_ApplyStructureStatDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)

14:10:48.030 [Info] Running ILHook manipulator on void BattleTech.Vehicle::applyStructureStatDamage(BattleTech.VehicleChassisLocations location, float damage, BattleTech.WeaponHitInfo hitInfo)
14:10:48.032 [Info] Writing postfixes
14:10:48.038 [Info] Patching virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomActivatablePatches.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState, Boolean& __result)
* static bool CBTBehaviorsEnhanced.Heat.MechStartupInvocation_Invoke::Prefix(BattleTech.MechStartupInvocation __instance, BattleTech.CombatGameState combatGameState)

14:10:48.041 [Info] Running ILHook manipulator on virtual bool BattleTech.MechStartupInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:48.043 [Info] Writing prefixes
14:10:48.048 [Info] Patching int BattleTech.Mech::get_SprintHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Heat.Mech_SprintHeat_Getter::Postfix(BattleTech.Mech __instance, Int32& __result)

14:10:48.050 [Info] Running ILHook manipulator on int BattleTech.Mech::get_SprintHeat()
14:10:48.052 [Info] Writing postfixes
14:10:48.055 [Info] Patching int BattleTech.Mech::get_WalkHeat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Heat.Mech_WalkHeat_Getter::Postfix(BattleTech.Mech __instance, Int32& __result)

14:10:48.058 [Info] Running ILHook manipulator on int BattleTech.Mech::get_WalkHeat()
14:10:48.060 [Info] Writing postfixes
14:10:48.066 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:48.069 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:48.071 [Info] Writing postfixes
14:10:48.078 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

14:10:48.081 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
14:10:48.083 [Info] Writing prefixes
14:10:48.085 [Info] Writing postfixes
14:10:48.090 [Info] Patching void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.AbstractActorOnRecomputePathingPatch::Prefix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnRecomputePathing::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnRecomputePathing::Postfix(BattleTech.AbstractActor __instance)

14:10:48.092 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::OnRecomputePathing(MessageCenterMessage msg)
14:10:48.094 [Info] Writing prefixes
14:10:48.096 [Info] Writing postfixes
14:10:48.101 [Info] Patching void BattleTech.AbstractActor::ResetPathing(bool justStoodUp) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategoriesPatches.ActorMovementSequence_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
* static void CustomUnits.Pathing_ResetPathGrid::Prefix(BattleTech.AbstractActor __instance, bool justStoodUp)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_ResetPathing::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_ResetPathing::Postfix(BattleTech.AbstractActor __instance)

14:10:48.103 [Info] Running ILHook manipulator on void BattleTech.AbstractActor::ResetPathing(bool justStoodUp)
14:10:48.106 [Info] Writing prefixes
14:10:48.108 [Info] Writing postfixes
14:10:48.112 [Info] Patching void BattleTech.Pathing::ResetPathGrid(UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Pathing_ResetPathGrid::Prefix(BattleTech.Pathing __instance, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Pathing_ResetPathGrid::Postfix(BattleTech.Pathing __instance, UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)

14:10:48.114 [Info] Running ILHook manipulator on void BattleTech.Pathing::ResetPathGrid(UnityEngine.Vector3 origin, float beginAngle, BattleTech.AbstractActor actor, bool justStoodUp)
14:10:48.116 [Info] Writing prefixes
14:10:48.119 [Info] Writing postfixes
14:10:48.125 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
4 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()
* static void CBTBehaviorsEnhanced.Patches.CombatGameState_OnCombatGameDestroyed::Postfix()

14:10:48.128 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:48.130 [Info] Writing prefixes
14:10:48.132 [Info] Writing postfixes
14:10:48.139 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatDebugHUDPatches::Postfix(BattleTech.UI.CombatHUD ___combatHUD)

14:10:48.142 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
14:10:48.144 [Info] Writing postfixes
14:10:48.149 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_Init::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)

14:10:48.152 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::Init(BattleTech.CombatGameState Combat, BattleTech.UI.CombatHUD HUD)
14:10:48.155 [Info] Writing postfixes
14:10:48.160 [Info] Patching void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_ShowFireButton::Prefix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, String& additionalDetails, bool showHeatWarnings)
3 postfixes:
* static void CustomActivatableEquipment.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CustomDeploy.CombatHUDHeatDisplayShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_ShowFireButton::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance, BattleTech.UI.CombatHUDFireButton+FireMode mode, String& additionalDetails, bool showHeatWarnings)

14:10:48.162 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDAttackModeSelector::ShowFireButton(BattleTech.UI.CombatHUDFireButton+FireMode mode, string additionalDetails, bool showHeatWarnings)
14:10:48.164 [Info] Writing prefixes
14:10:48.166 [Info] Writing postfixes
14:10:48.171 [Info] Patching void BattleTech.UI.CombatHUDFireButton::set_CurrentFireMode(BattleTech.UI.CombatHUDFireButton+FireMode value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDFireButton_CurrentFireMode_Setter::Postfix(BattleTech.UI.CombatHUDFireButton __instance, BattleTech.UI.CombatHUDFireButton+FireMode value)

14:10:48.173 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::set_CurrentFireMode(BattleTech.UI.CombatHUDFireButton+FireMode value)
14:10:48.175 [Info] Writing postfixes
14:10:48.180 [Info] Patching void BattleTech.UI.CombatHUDFireButton::OnClick() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)
* static bool CBTBehaviorsEnhanced.Patches.CombatHUDFireButton_OnClick::Prefix(BattleTech.UI.CombatHUDFireButton __instance)

14:10:48.182 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFireButton::OnClick()
14:10:48.184 [Info] Writing prefixes
14:10:48.188 [Info] Patching int BattleTech.UI.CombatHUDHeatMeter::GetMaxOuterHeatLevel(BattleTech.Mech mech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatMeter_GetMaxOuterHeatLevel::Postfix(BattleTech.UI.CombatHUDHeatMeter __instance, BattleTech.Mech mech, Int32& __result)

14:10:48.190 [Info] Running ILHook manipulator on int BattleTech.UI.CombatHUDHeatMeter::GetMaxOuterHeatLevel(BattleTech.Mech mech)
14:10:48.192 [Info] Writing postfixes
14:10:48.197 [Info] Patching virtual void BattleTech.UI.CombatHUDHeatDisplay::Init(float dangerLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_Init::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance)

14:10:48.200 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDHeatDisplay::Init(float dangerLevel)
14:10:48.202 [Info] Writing postfixes
14:10:48.207 [Info] Patching virtual float BattleTech.UI.CombatHUDHeatDisplay::get_DangerLevel() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_DangerLevel_Getter::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance, Single& __result)

14:10:48.210 [Info] Running ILHook manipulator on virtual float BattleTech.UI.CombatHUDHeatDisplay::get_DangerLevel()
14:10:48.212 [Info] Writing postfixes
14:10:48.216 [Info] Patching void BattleTech.UI.CombatHUDHeatDisplay::RefreshInfo() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDHeatDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDHeatDisplay __instance)

14:10:48.218 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDHeatDisplay::RefreshInfo()
14:10:48.220 [Info] Writing postfixes
14:10:48.226 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustAmmoCategories.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CustomUnits.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDMechTray_Init::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:48.228 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Init(MessageCenter messageCenter, BattleTech.UI.CombatHUD HUD)
14:10:48.230 [Info] Writing postfixes
14:10:48.237 [Info] Patching void BattleTech.UI.CombatHUDMechTray::Update() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechTray_UpdateDirector::Prefix(BattleTech.UI.CombatHUDMechTray __instance)
2 postfixes:
* static void CustomUnits.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.AbstractActor ___displayedActor)
* static void CBTBehaviorsEnhanced.Patches.CombatHUDMechTray_Update::Postfix(BattleTech.UI.CombatHUDMechTray __instance)

14:10:48.240 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechTray::Update()
14:10:48.242 [Info] Writing prefixes
14:10:48.244 [Info] Writing postfixes
14:10:48.250 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowShutDownIndicator(BattleTech.Mech mech) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.CombatHUDStatusPanel_ShowShutDownIndicator::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDStatusPanel_ShowShutDownIndicator::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.Mech mech)

14:10:48.252 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowShutDownIndicator(BattleTech.Mech mech)
14:10:48.254 [Info] Writing prefixes
14:10:48.255 [Info] Writing postfixes
14:10:48.260 [Info] Patching virtual void BattleTech.UI.CombatHUDAttackModeSelector::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDAttackModeSelector_Update::Postfix(BattleTech.UI.CombatHUDAttackModeSelector __instance)

14:10:48.263 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDAttackModeSelector::Update()
14:10:48.265 [Info] Writing postfixes
14:10:48.271 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

14:10:48.274 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
14:10:48.276 [Info] Writing postfixes
14:10:48.285 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting) with 1 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Prefix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD, BattleTech.UI.CombatHUDWeaponSlot+WeaponSlotType ___weaponSlotType)
2 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
* static void CustAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:48.287 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:48.290 [Info] Transpiling void BattleTech.UI.CombatHUDWeaponSlot::RefreshDisplayedWeapon(BattleTech.ICombatant target, int? evasivePipOverride, bool jumping, bool sprinting)
14:10:48.292 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon1::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.295 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.CombatHUDWeaponSlot_RefreshDisplayedWeapon2::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.297 [Info] Writing prefixes
14:10:48.299 [Info] Writing postfixes
14:10:48.306 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateMeleeWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_UpdateMeleeWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

14:10:48.309 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateMeleeWeapon()
14:10:48.311 [Info] Writing postfixes
14:10:48.315 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::UpdateDFAWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_UpdateDFAWeapon::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

14:10:48.317 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::UpdateDFAWeapon()
14:10:48.319 [Info] Writing postfixes
14:10:48.324 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::GenerateToolTipStrings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_GenerateToolTipStrings::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD, int ___displayedHeat)

14:10:48.326 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::GenerateToolTipStrings()
14:10:48.328 [Info] Writing postfixes
14:10:48.429 [Info] Patching void BattleTech.UI.CombatSelectionHandler::RemoveCompletedItems() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.CombatSelectionHandler_RemoveCompletedItems::Prefix(BattleTech.UI.CombatSelectionHandler __instance, Boolean& __state)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatSelectionHandler_RemoveCompletedItems::Postfix(BattleTech.UI.CombatSelectionHandler __instance, Boolean& __state)

14:10:48.432 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::RemoveCompletedItems()
14:10:48.434 [Info] Writing prefixes
14:10:48.436 [Info] Writing postfixes
14:10:48.449 [Info] Patching virtual void BattleTech.Mech::InitEffectStats() with 4 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.MoveMultiplierStat.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.AccuracyEffects.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_InitEffectStats_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
4 postfixes:
* static void IRBTModUtils.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.HeatSinkCapacityStat.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void MechEngineer.Features.Engines.Patches.Mech_InitEffectStats_Patch::Postfix(BattleTech.Mech __instance)
* static void CBTBehaviorsEnhanced.Patches.Mech_InitEffectStats::Postfix(BattleTech.Mech __instance)

14:10:48.451 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitEffectStats()
14:10:48.454 [Info] Writing prefixes
14:10:48.458 [Info] Writing postfixes
14:10:48.466 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, Single& damageAmount, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:48.469 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:48.471 [Info] Writing prefixes
14:10:48.474 [Info] Writing postfixes
14:10:48.481 [Info] Patching void BattleTech.Mech::ApplyStartupHeatSinks(int stackID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.Mech_ApplyStartupHeatSinks::Prefix(BattleTech.Mech __instance, int stackID)

14:10:48.483 [Info] Running ILHook manipulator on void BattleTech.Mech::ApplyStartupHeatSinks(int stackID)
14:10:48.486 [Info] Writing prefixes
14:10:48.492 [Info] Patching void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_CheckForHeatDamage_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, int stackID, string attackerID)
* static bool CBTBehaviorsEnhanced.Patches.Mech_CheckForHeatDamage::Prefix(BattleTech.Mech __instance, int stackID, string attackerID)
1 postfixes:
* static void AmmoCookOff.AmmoCookOff+Mech_CheckHeatDamage_Patch::Postfix(BattleTech.Mech __instance, int stackID, string attackerID)

14:10:48.494 [Info] Running ILHook manipulator on void BattleTech.Mech::CheckForHeatDamage(int stackID, string attackerID)
14:10:48.496 [Info] Writing prefixes
14:10:48.498 [Info] Writing postfixes
14:10:48.505 [Info] Patching virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ShutdownInjuryProtection.Patches.Mech_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, string sourceID, int stackItemID)
* static void CBTBehaviorsEnhanced.Patches.Mech_OnActivationEnd::Prefix(BattleTech.Mech __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_OnActivationEnd::Postfix(BattleTech.Mech __instance)

14:10:48.508 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::OnActivationEnd(string sourceID, int stackItemID)
14:10:48.510 [Info] Writing prefixes
14:10:48.512 [Info] Writing postfixes
14:10:48.518 [Info] Patching virtual float BattleTech.Mech::get_MaxMeleeEngageRangeDistance() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_MaxMeleeEngageRangeDistance_Get::Postfix(BattleTech.Mech __instance, Single& __result)

14:10:48.520 [Info] Running ILHook manipulator on virtual float BattleTech.Mech::get_MaxMeleeEngageRangeDistance()
14:10:48.522 [Info] Writing postfixes
14:10:48.528 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance)

14:10:48.531 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
14:10:48.533 [Info] Writing prefixes
14:10:48.546 [Info] Patching virtual void BattleTech.Mech::StandFromProne() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Mech_StandFromProne::Prefix(BattleTech.Mech __instance)

14:10:48.549 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::StandFromProne()
14:10:48.551 [Info] Writing prefixes
14:10:48.557 [Info] Patching System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Team::DoneWithAllAvailableActors() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Team_DoneWithAllAvailableActors::Prefix(BattleTech.Team __instance, System.Collections.Generic.List<BattleTech.IStackSequence> __result)

14:10:48.558 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.Team::DoneWithAllAvailableActors()
14:10:48.560 [Info] Writing prefixes
14:10:48.568 [Info] Patching float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllMeleeModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllMeleeModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)

14:10:48.571 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllMeleeModifiers(BattleTech.Mech attacker, BattleTech.ICombatant target, UnityEngine.Vector3 targetPosition, BattleTech.MeleeAttackType meleeAttackType)
14:10:48.573 [Info] Writing prefixes
14:10:48.575 [Info] Writing postfixes
14:10:48.580 [Info] Patching float BattleTech.ToHit::GetDFAModifier(BattleTech.MeleeAttackType meleeAttackType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetDFAModifier::Postfix(BattleTech.ToHit __instance, Single& __result)

14:10:48.582 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetDFAModifier(BattleTech.MeleeAttackType meleeAttackType)
14:10:48.585 [Info] Writing postfixes
14:10:48.591 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
2 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:48.594 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:48.596 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:48.599 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.602 [Info] Writing prefixes
14:10:48.605 [Info] Writing postfixes
14:10:48.614 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 2 postfixes, 2 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, String& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:48.617 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:48.619 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:48.621 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.623 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.625 [Info] Writing postfixes
14:10:48.634 [Info] Patching float BattleTech.ToHit::GetHeatModifier(BattleTech.AbstractActor attacker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetHeatModifier::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker)

14:10:48.636 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetHeatModifier(BattleTech.AbstractActor attacker)
14:10:48.638 [Info] Writing postfixes
14:10:48.644 [Info] Patching void BattleTech.TurnDirector::OnEncounterBegin(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_OnEncounterBegin::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

14:10:48.646 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnEncounterBegin(MessageCenterMessage message)
14:10:48.648 [Info] Writing postfixes
14:10:48.655 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_OnTurnActorActivateComplete::Prefix(BattleTech.TurnDirector __instance)

14:10:48.657 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
14:10:48.659 [Info] Writing prefixes
14:10:48.664 [Info] Patching bool BattleTech.TurnDirector::get_DoAnyUnitsHaveContactWithEnemy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_DoAnyUnitsHaveContactWithEnemy_Getter::Prefix(BattleTech.TurnDirector __instance, Boolean& __result)

14:10:48.666 [Info] Running ILHook manipulator on bool BattleTech.TurnDirector::get_DoAnyUnitsHaveContactWithEnemy()
14:10:48.668 [Info] Writing prefixes
14:10:48.675 [Info] Patching void BattleTech.TurnDirector::NotifyContact(BattleTech.VisibilityLevel contactLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_NotifyContact::Prefix(BattleTech.TurnDirector __instance, BattleTech.VisibilityLevel contactLevel)

14:10:48.677 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::NotifyContact(BattleTech.VisibilityLevel contactLevel)
14:10:48.679 [Info] Writing prefixes
14:10:48.685 [Info] Patching void BattleTech.TurnDirector::EndCurrentRound() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CustomActivatablePatches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_EndCurrentRound::Postfix(BattleTech.TurnDirector __instance)

14:10:48.688 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::EndCurrentRound()
14:10:48.690 [Info] Writing postfixes
14:10:48.695 [Info] Patching void BattleTech.TurnDirector::OnLostContact(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.TurnDirector_OnLostContact::Postfix(BattleTech.TurnDirector __instance)

14:10:48.698 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnLostContact(MessageCenterMessage message)
14:10:48.700 [Info] Writing postfixes
14:10:48.704 [Info] Patching bool BattleTech.Turret::DamageLocation(BattleTech.WeaponHitInfo hitInfo, BattleTech.BuildingLocation bLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Turret_DamageLocation::Prefix(BattleTech.Turret __instance)

14:10:48.706 [Info] Running ILHook manipulator on bool BattleTech.Turret::DamageLocation(BattleTech.WeaponHitInfo hitInfo, BattleTech.BuildingLocation bLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage)
14:10:48.708 [Info] Writing prefixes
14:10:48.717 [Info] Patching bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.Vehicle_DamageLocation::Prefix(BattleTech.Vehicle __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:48.719 [Info] Running ILHook manipulator on bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
14:10:48.721 [Info] Transpiling bool BattleTech.Vehicle::DamageLocation(BattleTech.WeaponHitInfo hitInfo, int originalHitLoc, BattleTech.VehicleChassisLocations vLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, BattleTech.AttackImpactQuality impactQuality)
14:10:48.723 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.Vehicle_DamageLocation_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.726 [Info] Writing prefixes
14:10:48.734 [Info] Patching bool BattleTech.Weapon::get_WillFire() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategoriesPatches.Weapon_WillFire::Postfix(BattleTech.Weapon __instance, Boolean& __result)
* static void CBTBehaviorsEnhanced.Patches.Weapon_WillFire_Getter::Postfix(BattleTech.Weapon __instance, Boolean& __result)

14:10:48.736 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_WillFire()
14:10:48.738 [Info] Writing postfixes
14:10:48.744 [Info] Patching void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)
* static void CBTBehaviorsEnhanced.Patches.Melee.CombatGameConstants_OnDataLoaded::Postfix(BattleTech.CombatGameConstants __instance, string id, string json)

14:10:48.746 [Info] Running ILHook manipulator on void BattleTech.CombatGameConstants::OnDataLoaded(string id, string json)
14:10:48.748 [Info] Writing postfixes
14:10:48.752 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.VehicleChassisLocations, int> BattleTech.HitLocation::GetVehicleHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Melee.HitLocation_GetVehicleHitTable::Postfix(BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.VehicleChassisLocations, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:48.755 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.VehicleChassisLocations, int> BattleTech.HitLocation::GetVehicleHitTable(BattleTech.AttackDirection from, bool log)
14:10:48.757 [Info] Writing postfixes
14:10:48.765 [Info] Patching System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.HitLocation_GetMechHitTableCustom::Postfix(BattleTech.HitLocation __instance, BattleTech.AttackDirection from, bool log, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CustomUnits.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)
* static void CBTBehaviorsEnhanced.Patches.Melee.HitLocation_GetMechHitTable::Postfix(BattleTech.AttackDirection from, System.Collections.Generic.Dictionary`2[[BattleTech.ArmorLocation, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:48.768 [Info] Running ILHook manipulator on System.Collections.Generic.Dictionary<BattleTech.ArmorLocation, int> BattleTech.HitLocation::GetMechHitTable(BattleTech.AttackDirection from, bool log)
14:10:48.770 [Info] Writing postfixes
14:10:48.777 [Info] Patching BattleTech.MeleeAttackType BattleTech.MeleeRules::SelectRandomMeleeAttack(BattleTech.Mech attacker, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant target, float rnd) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.Melee.MeleeRules_SelectRandomMeleeAttack::Postfix(BattleTech.Mech attacker, BattleTech.ICombatant target, BattleTech.MeleeAttackType& __result)

14:10:48.780 [Info] Running ILHook manipulator on BattleTech.MeleeAttackType BattleTech.MeleeRules::SelectRandomMeleeAttack(BattleTech.Mech attacker, UnityEngine.Vector3 attackPosition, BattleTech.ICombatant target, float rnd)
14:10:48.781 [Info] Writing postfixes
14:10:48.789 [Info] Patching static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.Patches.AI.AIUtil_ExpectedDamageForAttack::Prefix(AIUtil __instance, BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
2 postfixes:
* static void CustomUnits.AIUtil_ExpectedDamageForAttack::Postfix(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, BattleTech.ICombatant target, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.AI.AIUtil_ExpectedDamageForAttack::Postfix(AIUtil __instance, BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext, float __result)

14:10:48.792 [Info] Running ILHook manipulator on static float AIUtil::ExpectedDamageForAttack(BattleTech.AbstractActor unit, AIUtil+AttackType attackType, System.Collections.Generic.List<BattleTech.Weapon> weaponList, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, bool useRevengeBonus, BattleTech.AbstractActor unitForBVContext)
14:10:48.794 [Info] Writing prefixes
14:10:48.796 [Info] Writing postfixes
14:10:48.805 [Info] Patching static float AIUtil::GetAcceptableHeatLevelForMech(BattleTech.Mech mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.AI.AIUtil_GetAcceptableHeatLevelForMech::Prefix(BattleTech.Mech mech, Single& __result)

14:10:48.807 [Info] Running ILHook manipulator on static float AIUtil::GetAcceptableHeatLevelForMech(BattleTech.Mech mech)
14:10:48.809 [Info] Writing prefixes
14:10:48.815 [Info] Patching static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomAmmoCategoriesPatches.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, bool isStationary, BehaviorTreeResults __result)
* static void CBTBehaviorsEnhanced.Patches.AI.AttackEvaluator_MakeAttackOrder::Postfix(BattleTech.AbstractActor unit, BehaviorTreeResults& __result)

14:10:48.817 [Info] Running ILHook manipulator on static BehaviorTreeResults AttackEvaluator::MakeAttackOrder(BattleTech.AbstractActor unit, bool isStationary)
14:10:48.819 [Info] Writing postfixes
14:10:48.869 [Info] Patching virtual BehaviorTreeResults CanMeleeHostileTargetsNode::Tick() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.AI.CanMeleeHostileTargetsNode_Tick_Patch::Prefix(BehaviorTreeResults& __result, string ___name, BehaviorTree ___tree, BattleTech.AbstractActor ___unit)

14:10:48.871 [Info] Running ILHook manipulator on virtual BehaviorTreeResults CanMeleeHostileTargetsNode::Tick()
14:10:48.874 [Info] Writing prefixes
14:10:48.924 [Info] Patching virtual BehaviorTreeResults MechStartUpNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AI.MechStartUpNode_Tick::Postfix(BehaviorNode __instance, BehaviorTreeResults& __result)

14:10:48.926 [Info] Running ILHook manipulator on virtual BehaviorTreeResults MechStartUpNode::Tick()
14:10:48.929 [Info] Writing postfixes
14:10:48.934 [Info] Patching virtual void BattleTech.OrderSequence::OnUpdate() with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+OrderSequence_OnUpdate::Prefix(BattleTech.OrderSequence __instance, Boolean& __state)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+OrderSequence_OnUpdate::Postfix(BattleTech.OrderSequence __instance, bool __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:48.937 [Info] Running ILHook manipulator on virtual void BattleTech.OrderSequence::OnUpdate()
14:10:48.939 [Info] Transpiling virtual void BattleTech.OrderSequence::OnUpdate()
14:10:48.941 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustAmmoCategoriesPatches.OrderSequence_OnUpdate::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.943 [Info] Writing prefixes
14:10:48.945 [Info] Writing postfixes
14:10:48.951 [Info] Patching virtual void BattleTech.ActorMovementSequence::OnComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_OnComplete::Prefix(BattleTech.ActorMovementSequence __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_OnComplete::Postfix(BattleTech.ActorMovementSequence __instance)

14:10:48.953 [Info] Running ILHook manipulator on virtual void BattleTech.ActorMovementSequence::OnComplete()
14:10:48.955 [Info] Writing prefixes
14:10:48.957 [Info] Writing postfixes
14:10:48.962 [Info] Patching virtual bool BattleTech.ActorMovementSequence::get_ConsumesFiring() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+ActorMovementSequence_ConsumesFiring_Getter::Postfix(BattleTech.ActorMovementSequence __instance, Boolean& __result)

14:10:48.965 [Info] Running ILHook manipulator on virtual bool BattleTech.ActorMovementSequence::get_ConsumesFiring()
14:10:48.966 [Info] Writing postfixes
14:10:48.971 [Info] Patching virtual bool BattleTech.MechJumpSequence::get_ConsumesFiring() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+MechJumpSequence_ConsumesFiring_Getter::Postfix(BattleTech.MechJumpSequence __instance, Boolean& __result)

14:10:48.973 [Info] Running ILHook manipulator on virtual bool BattleTech.MechJumpSequence::get_ConsumesFiring()
14:10:48.975 [Info] Writing postfixes
14:10:48.980 [Info] Patching virtual void BattleTech.MechJumpSequence::OnComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CBTBehaviorsEnhanced.MovementPatches+MechJumpSequence_OnComplete::Prefix(BattleTech.MechJumpSequence __instance)

14:10:48.982 [Info] Running ILHook manipulator on virtual void BattleTech.MechJumpSequence::OnComplete()
14:10:48.984 [Info] Writing prefixes
14:10:48.989 [Info] Patching virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+AbstractActorMovementInvocation_Invoke::Postfix(BattleTech.AbstractActorMovementInvocation __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:48.992 [Info] Running ILHook manipulator on virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:48.993 [Info] Transpiling virtual bool BattleTech.AbstractActorMovementInvocation::Invoke(BattleTech.CombatGameState combatGameState)
14:10:48.996 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.AbstractActorMovementInvocation_Invoke::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:48.998 [Info] Writing postfixes
14:10:49.004 [Info] Patching virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.AbstractActor_ResolveAttackSequence::Prefix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
* static bool CBTBehaviorsEnhanced.MovementPatches+AbstractActor_ResolveAttackSequence_Patch::Prefix(BattleTech.AbstractActor __instance)
1 postfixes:
* static void CBTBehaviorsEnhanced.MovementPatches+AbstractActor_ResolveAttackSequence_Patch::Postfix(BattleTech.AbstractActor __instance, string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)

14:10:49.005 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::ResolveAttackSequence(string sourceID, int sequenceID, int stackItemID, BattleTech.AttackDirection attackDirection)
14:10:49.007 [Info] Writing prefixes
14:10:49.010 [Info] Writing postfixes
14:10:49.016 [Info] Patching virtual void BattleTech.Mech::ResolveWeaponDamage(BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CBTBehaviorsEnhanced.PilotingPatches+Mech_ResolveWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType)

14:10:49.018 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ResolveWeaponDamage(BattleTech.WeaponHitInfo hitInfo, BattleTech.Weapon weapon, BattleTech.MeleeAttackType meleeAttackType)
14:10:49.020 [Info] Writing postfixes
14:10:49.245 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
14:10:49.250 [Info] Patching void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.CombatHUD_InitTags::Prefix(Boolean& __runOriginal, BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static bool CustAmmoCategories.CombatHUD_Init::Prefix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
7 postfixes:
* static void us.frostraptor.modUtils.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void Sheepy.BattleTechMod.BattleMod::RunCombatStarts(BattleTech.UI.CombatHUD __instance)
* static void CustAmmoCategories.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomActivatableEquipment.CombatHUD_InitReapair::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void CustomMaps.CombatHUD_Init::Postfix(BattleTech.UI.CombatHUD __instance)
* static void CustomUnits.CombatHUD_Init_Hotdrop::Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_Init_Postfix(BattleTech.UI.CombatHUD __instance, BattleTech.CombatGameState Combat)

14:10:49.252 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::Init(BattleTech.CombatGameState Combat)
14:10:49.254 [Info] Writing prefixes
14:10:49.256 [Info] Writing postfixes
14:10:49.267 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
14:10:49.270 [Info] Patching void BattleTech.UI.CombatHUD::OnCombatGameDestroyed() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void us.frostraptor.modUtils.CombatHUD_OnCombatGameDestroyed::Prefix()
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCombatEnds(BattleTech.UI.CombatHUD __instance)
* static void IRTweaks.Modules.UI.CombatLog::CombatHUD_OnCombatGameDestroyed_Postfix()

14:10:49.272 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUD::OnCombatGameDestroyed()
14:10:49.274 [Info] Writing prefixes
14:10:49.276 [Info] Writing postfixes
14:10:49.281 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
14:10:49.284 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Init() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Init_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.ActiveChatListView ____activeChatList)

14:10:49.286 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Init()
14:10:49.287 [Info] Writing postfixes
14:10:49.296 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
14:10:49.299 [Info] Patching void BattleTech.UI.CombatChatModule::CombatInit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_CombatInit_Postfix(BattleTech.UI.CombatChatModule __instance, MessageCenter ____messageCenter, BattleTech.UI.HBSDOTweenButton ____chatBtn, BattleTech.UI.HBSDOTweenButton ____muteBtn, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField, UnityEngine.GameObject ____activeChatWindow, BattleTech.UI.ActiveChatListView ____activeChatList, BattleTech.UI.PassiveChatListView ____passiveChatList)

14:10:49.302 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::CombatInit()
14:10:49.304 [Info] Writing postfixes
14:10:49.312 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 157 ms
14:10:49.315 [Info] Patching void BattleTech.UI.CombatChatModule::Active_OnEnter() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatLog::CombatChatModule_Active_OnEnter_Postfix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.TMProWrapper.HBS_InputField ____inputField)

14:10:49.317 [Info] Running ILHook manipulator on void BattleTech.UI.CombatChatModule::Active_OnEnter()
14:10:49.319 [Info] Writing postfixes
14:10:49.324 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:49.326 [Info] PrefixWrapper being created for: CustomLocalization::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
14:10:49.329 [Info] PrefixWrapper created: HXI︳18︳::CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix
14:10:49.331 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
14:10:49.333 [Info] PrefixWrapper created: HXI︳19︳::IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix
14:10:49.335 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.337 [Info] Patching void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomTranslation.CombatHUDInWorldElementMgr_AddFloatieMessage::Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.CombatLog::CombatHUDInWorldElementMgr_AddFloatieMessage_Prefix(BattleTech.UI.CombatHUDInWorldElementMgr __instance, MessageCenterMessage message, BattleTech.CombatGameState ___combat, Boolean& __runOriginal)

14:10:49.339 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDInWorldElementMgr::AddFloatieMessage(MessageCenterMessage message)
14:10:49.341 [Info] Writing prefixes
14:10:49.346 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.348 [Info] Patching void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatLog::MessageCenter_RemoveSubscriber_Prefix(MessageCenter __instance, MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber, System.Collections.Generic.Dictionary<MessageCenterMessageType, System.Collections.Generic.List<MessageSubscription>> ___messageTable)

14:10:49.351 [Info] Running ILHook manipulator on void MessageCenter::RemoveSubscriber(MessageCenterMessageType GUID, ReceiveMessageCenterMessage subscriber)
14:10:49.354 [Info] Writing prefixes
14:10:49.361 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.365 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

14:10:49.367 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
14:10:49.377 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.380 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

14:10:49.382 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
14:10:49.390 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.392 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

14:10:49.394 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
14:10:49.398 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.400 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

14:10:49.402 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
14:10:49.407 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.409 [Info] Patching void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

14:10:49.411 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetupElement(BattleTech.UI.SGNavigationList listWidget, BattleTech.UI.HBSRadioSet radioSet, string labelText, SVGImporter.SVGAsset Icon, BattleTech.SimGameState simGameState)
14:10:49.417 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.421 [Info] Patching void BattleTech.CombatGameState::OnCombatGameDestroyed() with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void us.frostraptor.modUtils.CombatGameState_OnCombatGameDestroyed::Prefix()
* static bool CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomActivatableEquipment.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
* static bool CustomUnits.CombatGameState_OnCombatGameDestroyedMap::Prefix(BattleTech.CombatGameState __instance)
5 postfixes:
* static void MissionControl.Patches.CombatGameStateOnCombatDestroyedPatch::Postfix()
* static void CustomAmmoCategoriesPatches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_OnCombatGameDestroyedMap::Postfix()
* static void CBTBehaviorsEnhanced.Patches.CombatGameState_OnCombatGameDestroyed::Postfix()
* static void IRTweaks.Patches.CombatGameState_OnCombatGameDestroyed::Postfix(BattleTech.CombatGameState __instance)

14:10:49.423 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::OnCombatGameDestroyed()
14:10:49.426 [Info] Writing prefixes
14:10:49.428 [Info] Writing postfixes
14:10:49.439 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.442 [Info] Patching void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.CombatHUDActorDetailsDisplay_RefreshInfo::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)
* static void IRTweaks.Modules.UI.TgtComputerTonnage+CombatHUDActorDetailsDisplay_RefreshInfo_Patch::Postfix(BattleTech.UI.CombatHUDActorDetailsDisplay __instance)

14:10:49.444 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDActorDetailsDisplay::RefreshInfo()
14:10:49.446 [Info] Writing postfixes
14:10:49.451 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.454 [Info] Patching virtual void BattleTech.UI.CombatChatModule::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatLog+CombatChatModule_Update::Prefix(BattleTech.UI.CombatChatModule __instance, BattleTech.UI.ActiveChatListView ____activeChatList)

14:10:49.456 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatChatModule::Update()
14:10:49.458 [Info] Writing prefixes
14:10:49.464 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.466 [Info] Patching virtual void BattleTech.UI.SimGameOptionsMenu::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.SimGameOptionsMenu_Update::Postfix(BattleTech.UI.SimGameOptionsMenu __instance, BattleTech.UI.HBSDOTweenButton ___saveGame, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___saveTooltip, BattleTech.UI.HBSDOTweenButton ___restartMission, BattleTech.UI.Tooltips.HBSTooltipHBSButton ___restartTooltip)

14:10:49.469 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameOptionsMenu::Update()
14:10:49.471 [Info] Writing postfixes
14:10:49.475 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.478 [Info] Patching void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.SimGameOptionsMenu_QuitPopup::Prefix(BattleTech.UI.SimGameOptionsMenu __instance, Action quitAction)

14:10:49.480 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameOptionsMenu::QuitPopup(Action quitAction)
14:10:49.482 [Info] Writing prefixes
14:10:49.488 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.490 [Info] Patching void BattleTech.CombatGameState::TriggerAutoSaving() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.CombatGameState_TriggerAutoSaving::Prefix(BattleTech.CombatGameState __instance)

14:10:49.492 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::TriggerAutoSaving()
14:10:49.495 [Info] Writing prefixes
14:10:49.500 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.503 [Info] Patching void BattleTech.UI.MechLabPanel::ToggleLayout() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_ToggleLayout::Postfix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabDismountWidget ___dismountWidget, BattleTech.UI.HBSDOTweenButton ___btn_mechViewerButton)

14:10:49.506 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::ToggleLayout()
14:10:49.508 [Info] Writing postfixes
14:10:49.513 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 168 ms
14:10:49.516 [Info] Patching void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabPanel_SetData_1::Postfix(BattleTech.UI.MechLabPanel __instance)

14:10:49.518 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::SetData(BattleTech.MechDef newMechDef, BattleTech.UI.MechBayPanel mechBay, BattleTech.SimGameState sim, System.Collections.Generic.List<BattleTech.MechComponentRef> startingInventory, BattleTech.WorkOrderEntry_MechLab existingBaseWorkOrder, UnityEngine.Events.UnityAction<System.Collections.Generic.List<BattleTech.WorkOrderEntry>, string, int> simGameConfirmCB, UnityEngine.Events.UnityAction onClosedCB)
14:10:49.521 [Info] Writing postfixes
14:10:49.529 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:49.531 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix
14:10:49.533 [Info] PrefixWrapper created: HXI︳20︳::MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix
14:10:49.535 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix
14:10:49.538 [Info] PrefixWrapper created: HXI︳21︳::IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix
14:10:49.540 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 180 ms
14:10:49.544 [Info] Patching void BattleTech.UI.MechLabPanel::OnMaxArmor() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.ArmorMaximizer.Patches.MechLabPanel_OnMaxArmor_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem, Boolean& __runOriginal)
* static bool IRTweaks.Modules.UI.MechLabPanel_OnMaxArmor_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, BattleTech.UI.MechLabMechInfoWidget ___mechInfoWidget, BattleTech.UI.MechLabItemSlotElement ___dragItem, Boolean& __runOriginal)

14:10:49.547 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnMaxArmor()
14:10:49.549 [Info] Writing prefixes
14:10:49.562 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 180 ms
14:10:49.565 [Info] Patching void BattleTech.UI.MechLabPanel::OnStripEquipment() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.MechLabPanel_OnStripEquipment_Patch::Prefix(BattleTech.UI.MechLabPanel __instance, bool ___batchActionInProgress, BattleTech.UI.MechLabItemSlotElement ___dragItem)

14:10:49.568 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabPanel::OnStripEquipment()
14:10:49.571 [Info] Writing prefixes
14:10:49.576 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 180 ms
14:10:49.579 [Info] Patching bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.MechLabLocationWidget_ValidateAdd::Postfix(BattleTech.UI.MechLabLocationWidget __instance, BattleTech.MechComponentRef newComponent, BattleTech.UI.MechLabPanel ___mechLab)

14:10:49.582 [Info] Running ILHook manipulator on bool BattleTech.UI.MechLabLocationWidget::ValidateAdd(BattleTech.MechComponentRef newComponent)
14:10:49.585 [Info] Writing postfixes
14:10:49.589 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:49.592 [Info] PrefixWrapper being created for: CustomComponents::CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
14:10:49.595 [Info] PrefixWrapper created: HXI︳22︳::CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix
14:10:49.598 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
14:10:49.600 [Info] PrefixWrapper created: HXI︳23︳::IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix
14:10:49.603 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.606 [Info] Patching virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool IRTweaks.Modules.UI.MechLabLocationWidget_OnMechLabDrop::Prefix(BattleTech.UI.MechLabLocationWidget __instance, UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType, BattleTech.UI.MechLabPanel ___mechLab, Localize.Text ____dropErrorMessage, Boolean& __runOriginal)
* static void CustomComponents.Patches.MechLabLocationWidget_OnMechLabDrop_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.MechLabLocationWidget __instance, BattleTech.UI.MechLabPanel ___mechLab, UnityEngine.EventSystems.PointerEventData eventData, Boolean& __runOriginal)

14:10:49.608 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MechLabLocationWidget::OnMechLabDrop(UnityEngine.EventSystems.PointerEventData eventData, BattleTech.MechLabDropTargetType addToType)
14:10:49.611 [Info] Writing prefixes
14:10:49.617 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.621 [Info] Patching void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomComponents.Patches.SkirmishSettings_Beta_OnLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.UIManager ___uiManager, System.Collections.Generic.List`1[[BattleTech.MechDef, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___stockMechs)
1 postfixes:
* static void IRTweaks.Modules.UI.SkirmishSettings_Beta_OnLoadComplete::Postfix(BattleTech.UI.SkirmishSettings_Beta __instance, BattleTech.UI.TMProWrapper.HBS_Dropdown ___lanceBudgetDropdown)

14:10:49.624 [Info] Running ILHook manipulator on void BattleTech.UI.SkirmishSettings_Beta::OnLoadComplete(BattleTech.Data.LoadRequest loadRequest)
14:10:49.626 [Info] Writing prefixes
14:10:49.629 [Info] Writing postfixes
14:10:49.634 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.638 [Info] Patching void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGContractsWidget_Init::Postfix(BattleTech.UI.SGContractsWidget __instance, UnityEngine.GameObject ___ContractList)

14:10:49.641 [Info] Running ILHook manipulator on void BattleTech.UI.SGContractsWidget::Init(BattleTech.SimGameState sim, System.Action<bool> onContractAccepted)
14:10:49.643 [Info] Writing postfixes
14:10:49.654 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.657 [Info] Patching void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_ResetFlyoutsToPrefab::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.TMProWrapper.LocalizableText ___text, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, int ___flyoutButtonCount)

14:10:49.660 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::ResetFlyoutsToPrefab()
14:10:49.662 [Info] Writing postfixes
14:10:49.667 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.670 [Info] Patching void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_SetStateAccordingToSimDropship::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipType shipType, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

14:10:49.672 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::SetStateAccordingToSimDropship(BattleTech.DropshipType shipType)
14:10:49.674 [Info] Writing postfixes
14:10:49.681 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.684 [Info] Patching virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnPointerEnter::Postfix(BattleTech.UI.SGNavigationButton __instance, UnityEngine.EventSystems.PointerEventData eventData, System.Collections.Generic.List<BattleTech.UI.SGNavFlyoutButton> ___FlyoutButtonList, BattleTech.UI.TMProWrapper.LocalizableText ___text)

14:10:49.686 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGNavigationButton::OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData)
14:10:49.689 [Info] Writing postfixes
14:10:49.694 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.697 [Info] Patching void BattleTech.UI.SGNavigationButton::OnClick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_OnClick::Postfix(BattleTech.UI.SGNavigationButton __instance, BattleTech.UI.SGNavigationList ___buttonParent, BattleTech.UI.TMProWrapper.LocalizableText ___text)

14:10:49.699 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::OnClick()
14:10:49.701 [Info] Writing postfixes
14:10:49.705 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.708 [Info] Patching void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationWidgetLeft_Init::Postfix(BattleTech.UI.SGNavigationWidgetLeft __instance, BattleTech.UI.SGShipMap ___shipMap, BattleTech.UI.SGNavigationList ___locationList)

14:10:49.711 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationWidgetLeft::Init(BattleTech.SimGameState simGame, BattleTech.UI.SGRoomManager theManager)
14:10:49.714 [Info] Writing postfixes
14:10:49.719 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.722 [Info] Patching void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationButton_FlyoutClicked::Prefix(BattleTech.UI.SGNavigationButton __instance, BattleTech.DropshipMenuType buttonID, BattleTech.UI.TMProWrapper.LocalizableText ___text, BattleTech.UI.SGNavigationList ___buttonParent)

14:10:49.724 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationButton::FlyoutClicked(BattleTech.DropshipMenuType buttonID)
14:10:49.727 [Info] Writing prefixes
14:10:49.731 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.734 [Info] Patching void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.SimGameState simState)

14:10:49.737 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::RefreshButtonStates(BattleTech.SimGameState simState)
14:10:49.739 [Info] Writing postfixes
14:10:49.745 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.748 [Info] Patching void BattleTech.UI.SGNavigationList::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_Start::Postfix(BattleTech.UI.SGNavigationList __instance, BattleTech.UI.HBSRadioSet ___radioSet, BattleTech.UI.SGNavigationButton ___argoButton)

14:10:49.750 [Info] Running ILHook manipulator on void BattleTech.UI.SGNavigationList::Start()
14:10:49.752 [Info] Writing postfixes
14:10:49.758 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.761 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

14:10:49.763 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::ShowCurrent()
14:10:49.765 [Info] Writing postfixes
14:10:49.769 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.772 [Info] Patching void BattleTech.UI.CombatHUDPipBar::CalcPipsAndActivate(float min, float max, int targetPointsPerPip, int targetMinPips) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_CalcPipsAndActivate::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)

14:10:49.775 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDPipBar::CalcPipsAndActivate(float min, float max, int targetPointsPerPip, int targetMinPips)
14:10:49.778 [Info] Writing postfixes
14:10:49.782 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.785 [Info] Patching void BattleTech.UI.CombatHUDEvasiveBarPips::CacheActorData(BattleTech.AbstractActor actor, bool actorTargeted, bool actorSelected) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_CacheActorData::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance, BattleTech.AbstractActor actor)

14:10:49.788 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDEvasiveBarPips::CacheActorData(BattleTech.AbstractActor actor, bool actorTargeted, bool actorSelected)
14:10:49.790 [Info] Writing postfixes
14:10:49.798 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.801 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMoveIndicators(BattleTech.AbstractActor target, float currentEvasive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.UI.CombatHUDStatusPanel_ShowMoveIndicators::Postfix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor target, float currentEvasive)

14:10:49.803 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMoveIndicators(BattleTech.AbstractActor target, float currentEvasive)
14:10:49.805 [Info] Writing postfixes
14:10:49.810 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.814 [Info] Patching System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.EffectManager_CreateEffect::Prefix(BattleTech.EffectManager __instance, BattleTech.EffectData effectData, BattleTech.ICombatant target)
1 postfixes:
* static void IRTweaks.Modules.UI.EffectManager_CreateEffect::Postfix(BattleTech.ICombatant target)

14:10:49.816 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Effect> BattleTech.EffectManager::CreateEffect(BattleTech.EffectData effectData, string effectID, int stackItemUID, BattleTech.ICombatant creator, BattleTech.ICombatant target, BattleTech.WeaponHitInfo hitInfo, int attackIndex, bool skipLogging)
14:10:49.817 [Info] Writing prefixes
14:10:49.820 [Info] Writing postfixes
14:10:49.829 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.832 [Info] Patching void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomActivatableEquipment.EffectManager_EffectComplete::Postfix(BattleTech.EffectManager __instance, BattleTech.Effect e)
* static void IRTweaks.Modules.UI.EffectManager_EffectComplete::Postfix(BattleTech.Effect e)

14:10:49.834 [Info] Running ILHook manipulator on void BattleTech.EffectManager::EffectComplete(BattleTech.Effect e)
14:10:49.836 [Info] Writing postfixes
14:10:49.841 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.843 [Info] Patching static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.CombatHUDEvasiveBarPips_ShowCurrent_Postfix_Patch::Prefix()

14:10:49.846 [Info] Running ILHook manipulator on static void CustAmmoCategories.CombatHUDEvasiveBarPips_ShowCurrent::Postfix(BattleTech.UI.CombatHUDEvasiveBarPips __instance)
14:10:49.848 [Info] Writing prefixes
14:10:49.853 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.856 [Info] Patching void BattleTech.AttackStackSequence::FireSequence(BattleTech.AttackDirector+AttackSequence sequence) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.UI.AttackStackSequence_FireSequence::Prefix(BattleTech.AttackStackSequence __instance, BattleTech.AttackDirector+AttackSequence sequence)

14:10:49.859 [Info] Running ILHook manipulator on void BattleTech.AttackStackSequence::FireSequence(BattleTech.AttackDirector+AttackSequence sequence)
14:10:49.861 [Info] Writing prefixes
14:10:49.873 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.878 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)

14:10:49.880 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
14:10:49.882 [Info] Writing postfixes
14:10:49.895 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.902 [Info] Patching void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_FromPilotDef::Postfix(BattleTech.Pilot __instance)

14:10:49.903 [Info] Running ILHook manipulator on void BattleTech.Pilot::FromPilotDef(BattleTech.PilotDef def)
14:10:49.905 [Info] Writing postfixes
14:10:49.909 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.912 [Info] Patching void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_AddXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, int value)

14:10:49.914 [Info] Running ILHook manipulator on void BattleTech.Pilot::AddExperience(int stackID, string sourceID, int value)
14:10:49.916 [Info] Writing postfixes
14:10:49.921 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.924 [Info] Patching bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Prefix(BattleTech.Pilot __instance)
1 postfixes:
* static void IRTweaks.Modules.Misc.Pilot_SpendXP::Postfix(BattleTech.Pilot __instance, int stackID, string sourceID, uint value)

14:10:49.926 [Info] Running ILHook manipulator on bool BattleTech.Pilot::SpendExperience(int stackID, string sourceID, uint value)
14:10:49.929 [Info] Writing prefixes
14:10:49.931 [Info] Writing postfixes
14:10:49.937 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.940 [Info] Patching void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksMWDetailPanel_OnPilotReset::Postfix(BattleTech.UI.SGBarracksMWDetailPanel __instance)

14:10:49.942 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksMWDetailPanel::OnPilotReset()
14:10:49.945 [Info] Writing postfixes
14:10:49.949 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.952 [Info] Patching virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGBarracksWidget_ReceiveButtonPress::Postfix(BattleTech.UI.SGBarracksWidget __instance, string button)

14:10:49.954 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGBarracksWidget::ReceiveButtonPress(string button)
14:10:49.956 [Info] Writing postfixes
14:10:49.961 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.964 [Info] Patching void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SGBarracksAdvancementPanel_OnValueClick_Patch::Prefix(BattleTech.UI.SGBarracksAdvancementPanel __instance, string type, int value)

14:10:49.967 [Info] Running ILHook manipulator on void BattleTech.UI.SGBarracksAdvancementPanel::OnValueClick(string type, int value)
14:10:49.969 [Info] Writing prefixes
14:10:49.976 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.979 [Info] Patching virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGRoomController_Barracks_Close_Patch::Postfix(BattleTech.UI.SGRoomController_Barracks __instance)

14:10:49.982 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Barracks::LeaveRoom(bool ignoreFader)
14:10:49.984 [Info] Writing postfixes
14:10:49.990 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:49.994 [Info] Patching void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Prefix(BattleTech.SimGameState __instance, int val)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddFunds::Postfix(BattleTech.SimGameState __instance, int val)

14:10:49.997 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddFunds(int val, string sourceID, bool updateBurndown, bool updateFundsGained)
14:10:49.999 [Info] Writing prefixes
14:10:50.002 [Info] Writing postfixes
14:10:50.008 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.013 [Info] Patching static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SGS_SetSimGameStat::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)

14:10:50.016 [Info] Running ILHook manipulator on static void BattleTech.SimGameState::SetSimGameStat(BattleTech.SimGameStat stat, BattleTech.StatCollection statCol)
14:10:50.018 [Info] Writing postfixes
14:10:50.028 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.038 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
7 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)

14:10:50.041 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:50.043 [Info] Writing prefixes
14:10:50.046 [Info] Writing postfixes
14:10:50.075 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.083 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)

14:10:50.085 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
14:10:50.088 [Info] Writing prefixes
14:10:50.107 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.110 [Info] Patching virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CommanderBackgrounds.Mod+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
* static bool InnerSphereMap.StarmapRenderer_Update_Patch+SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Prefix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance, Boolean& __runOriginal)
1 postfixes:
* static void IRTweaks.Modules.Misc.SGCharacterCreationCareerBackgroundSelectionPanel_Done_Patch::Postfix(BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel __instance)

14:10:50.112 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGCharacterCreationCareerBackgroundSelectionPanel::Done()
14:10:50.114 [Info] Writing prefixes
14:10:50.116 [Info] Writing postfixes
14:10:50.120 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.122 [Info] Patching bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_AddAllyFaction::Postfix(BattleTech.SimGameState __instance)

14:10:50.124 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::AddAllyFaction(BattleTech.FactionValue faction, bool checkRequirement)
14:10:50.126 [Info] Writing postfixes
14:10:50.131 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.134 [Info] Patching void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_RemoveAllyFaction::Postfix(BattleTech.SimGameState __instance, BattleTech.FactionValue faction)

14:10:50.137 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RemoveAllyFaction(BattleTech.FactionValue faction)
14:10:50.139 [Info] Writing postfixes
14:10:50.146 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.149 [Info] Patching BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetStatsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, BattleTech.StatCollection& __result)

14:10:50.152 [Info] Running ILHook manipulator on BattleTech.StatCollection BattleTech.SimGameState::GetStatsByScope(BattleTech.EventScope scope)
14:10:50.155 [Info] Writing postfixes
14:10:50.161 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 193 ms
14:10:50.165 [Info] Patching HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_GetTagsByScope::Postfix(BattleTech.SimGameState __instance, BattleTech.EventScope scope, HBS.Collections.TagSet& __result)

14:10:50.167 [Info] Running ILHook manipulator on HBS.Collections.TagSet BattleTech.SimGameState::GetTagsByScope(BattleTech.EventScope scope)
14:10:50.169 [Info] Writing postfixes
14:10:50.179 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.182 [Info] Patching void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Prefix(BattleTech.Contract __instance)
1 postfixes:
* static void MissionControl.Patches.ContractFinalizeKilledMechwarriorsPatch::Postfix(BattleTech.Pilot __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:50.184 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
14:10:50.187 [Info] Transpiling void BattleTech.Contract::FinalizeKilledMechWarriors(BattleTech.SimGameState sim)
14:10:50.190 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Misc.Contract_FinalizeKilledMechWarriors::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:50.202 [Info] Writing prefixes
14:10:50.203 [Info] Writing postfixes
14:10:50.210 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.213 [Info] Patching void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.MechDef_constructor::Postfix(BattleTech.MechDef __instance, BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)

14:10:50.216 [Info] Running ILHook manipulator on void BattleTech.MechDef::.ctor(BattleTech.ChassisDef chassis, string newGUID, BattleTech.MechDef stockMech)
14:10:50.218 [Info] Writing postfixes
14:10:50.224 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.227 [Info] Patching static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState_ApplySimGameEventResult::Postfix(BattleTech.SimGameState __instance, BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)

14:10:50.230 [Info] Running ILHook manipulator on static bool BattleTech.SimGameState::ApplySimGameEventResult(BattleTech.SimGameEventResult result, System.Collections.Generic.List<object> objects, BattleTech.SimGameEventTracker tracker)
14:10:50.232 [Info] Writing postfixes
14:10:50.338 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.341 [Info] Patching void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficulty_RefreshCareerScoreMultiplier::Prefix(BattleTech.SimGameDifficulty __instance, System.Collections.Generic.Dictionary<string, BattleTech.SimGameDifficulty+DifficultySetting> ___difficultyDict, System.Collections.Generic.Dictionary<string, int> ___difficultyIndices, Single& ___curCareerModifier)

14:10:50.344 [Info] Running ILHook manipulator on void BattleTech.SimGameDifficulty::RefreshCareerScoreMultiplier()
14:10:50.346 [Info] Writing prefixes
14:10:50.355 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.359 [Info] Patching float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_CalculateRawScoreMod::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, Single& __result)

14:10:50.361 [Info] Running ILHook manipulator on float BattleTech.UI.SimGameDifficultySettingsModule::CalculateRawScoreMod()
14:10:50.364 [Info] Writing postfixes
14:10:50.374 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.385 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
8 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:50.388 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:50.391 [Info] Writing prefixes
14:10:50.393 [Info] Writing postfixes
14:10:50.425 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.429 [Info] Patching void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.UnityGameInstance_CalcGameHash::Prefix()

14:10:50.432 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::CalcGameHash(BattleTech.Data.DataManager dm)
14:10:50.434 [Info] Writing prefixes
14:10:50.440 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.443 [Info] Patching void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.UnitSpawnPointGameLogic_initializeActor::Prefix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
1 postfixes:
* static void IRTweaks.Modules.Misc.UnitSpawnPointGameLogic_initializeActor::Postfix(BattleTech.UnitSpawnPointGameLogic __instance, BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)

14:10:50.446 [Info] Running ILHook manipulator on void BattleTech.UnitSpawnPointGameLogic::initializeActor(BattleTech.AbstractActor actor, BattleTech.Team team, Lance lance)
14:10:50.448 [Info] Writing prefixes
14:10:50.450 [Info] Writing postfixes
14:10:50.456 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 196 ms
14:10:50.460 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
7 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:50.463 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:50.464 [Info] Writing postfixes
14:10:50.476 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 198 ms
14:10:50.481 [Info] Patching void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void BiggerDrops.Patches.SGEngineeringScreen_PopulateUpgradeDictionary::Prefix(BattleTech.UI.SGEngineeringScreen __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:50.483 [Info] Running ILHook manipulator on void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
14:10:50.485 [Info] Transpiling void BattleTech.UI.SGEngineeringScreen::PopulateUpgradeDictionary()
14:10:50.488 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Misc.SGEngineeringScreen_PopulateUpgradeDictionary_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:50.503 [Info] Writing prefixes
14:10:50.514 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 198 ms
14:10:50.517 [Info] Patching virtual void BattleTech.UI.MainMenu::Init() with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void InnerSphereMap.MainMenu_Init_Patch::Prefix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Prefix(BattleTech.UI.MainMenu __instance)
4 postfixes:
* static void LogoReplacement.Patches.MainMenu_Init_Patch::Postfix()
* static void MissionControl.Patches.MainMenuInitPatch::Postfix(BattleTech.UI.MainMenu __instance)
* static void CustomTranslation.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)
* static void IRTweaks.Modules.Misc.MainMenu_Init::Postfix(BattleTech.UI.MainMenu __instance)

14:10:50.519 [Info] Running ILHook manipulator on virtual void BattleTech.UI.MainMenu::Init()
14:10:50.521 [Info] Writing prefixes
14:10:50.523 [Info] Writing postfixes
14:10:50.529 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.531 [Info] Patching void BattleTech.SimGameState::ShowLowFundsWarning() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameState_ShowLowFundsWarning::Prefix()

14:10:50.533 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ShowLowFundsWarning()
14:10:50.535 [Info] Writing prefixes
14:10:50.541 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.544 [Info] Patching bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.LineOfSight_FindSecondaryImpactTarget::Postfix(BattleTech.LineOfSight __instance, UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3& impactPoint, Boolean& __result)

14:10:50.547 [Info] Running ILHook manipulator on bool BattleTech.LineOfSight::FindSecondaryImpactTarget(UnityEngine.RaycastHit[] rayInfos, BattleTech.AbstractActor attacker, BattleTech.ICombatant initialTarget, UnityEngine.Vector3 attackPosition, String& impactTargetId, Int32& impactHitLocation, BattleTech.AttackDirection& attackDirection, UnityEngine.Vector3& impactPoint)
14:10:50.549 [Info] Writing postfixes
14:10:50.558 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.561 [Info] Patching void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_UpdateDifficultyScoreBar_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)

14:10:50.563 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameDifficultySettingsModule::UpdateDifficultyScoreBar()
14:10:50.565 [Info] Writing prefixes
14:10:50.570 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.573 [Info] Patching void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.PreGameCareerModeSettingsTotalScoreDescAndBar_RefreshInfo_Patch::Prefix(BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar __instance, float newMod)

14:10:50.575 [Info] Running ILHook manipulator on void BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar::RefreshInfo(float newMod)
14:10:50.576 [Info] Writing prefixes
14:10:50.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.585 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

14:10:50.587 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
14:10:50.589 [Info] Writing postfixes
14:10:50.605 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.608 [Info] Patching void BattleTech.SimGameState::Destroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__Destroy_Patch::Postfix(BattleTech.SimGameState __instance)

14:10:50.610 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Destroy()
14:10:50.613 [Info] Writing postfixes
14:10:50.619 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.623 [Info] Patching virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Prefix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, BattleTech.UI.PreGameCareerModeSettingsTotalScoreDescAndBar ___difficultyBarAndMod)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameDifficultySettingsModule_InitSettings_Patch::Postfix(BattleTech.UI.SimGameDifficultySettingsModule __instance, BattleTech.SimGameDifficulty ___cachedDiff, string ___ironManModeId, string ___autoEquipMechsId, string ___mechPartsReqId, string ___skipPrologueId, string ___randomMechId, string ___argoUpgradeCostId, BattleTech.UI.SGDSToggle ___ironManModeToggle, BattleTech.UI.SGDSDropdown ___mechPartsReqDropdown, UnityEngine.GameObject ___disabledOverlay, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___activeDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___activeToggles, System.Collections.Generic.List<BattleTech.UI.SGDSDropdown> ___cachedDropdowns, System.Collections.Generic.List<BattleTech.UI.SGDSToggle> ___cachedToggles, BattleTech.UI.SGDSToggle ___togglePrefab, BattleTech.UI.SGDSDropdown ___dropdownPrefab)

14:10:50.626 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SimGameDifficultySettingsModule::InitSettings()
14:10:50.629 [Info] Writing prefixes
14:10:50.632 [Info] Writing postfixes
14:10:50.647 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.651 [Info] Patching void BattleTech.SimGameState::AddRandomStartingMechs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameState_AddRandomStartingMechs::Prefix(BattleTech.SimGameState __instance)

14:10:50.654 [Info] Running ILHook manipulator on void BattleTech.SimGameState::AddRandomStartingMechs()
14:10:50.656 [Info] Writing prefixes
14:10:50.669 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.672 [Info] Patching void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Misc.RandomStartByDifficulty_SimGameConstantOverride_ApplyOverride::Postfix(BattleTech.SimGameConstantOverride __instance, string constantType, string constantName)

14:10:50.675 [Info] Running ILHook manipulator on void BattleTech.SimGameConstantOverride::ApplyOverride(string constantType, string constantName)
14:10:50.677 [Info] Writing postfixes
14:10:50.684 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 199 ms
14:10:50.687 [Info] Patching virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Misc.RandomStartByDifficulty_SGDifficultySettingObject_CurCareerModifier::Prefix(BattleTech.UI.SGDifficultySettingObject __instance, Single& __result, int ___curIdx)

14:10:50.689 [Info] Running ILHook manipulator on virtual float BattleTech.UI.SGDifficultySettingObject::CurCareerModifier()
14:10:50.691 [Info] Writing prefixes
14:10:50.699 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.702 [Info] Patching byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:50.705 [Info] Running ILHook manipulator on byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
14:10:50.707 [Info] Transpiling byte[] BattleTech.Save.Core.SaveBlock<BattleTech.Save.GameInstanceSave>::CompressBytes(byte[] bytes)
14:10:50.711 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Misc.SaveBlockGameInstanceSave_CompressBytes_Patch::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:50.724 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.729 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_InitStats::Postfix(BattleTech.Weapon __instance)

14:10:50.731 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
14:10:50.733 [Info] Writing postfixes
14:10:50.747 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.750 [Info] Patching bool BattleTech.Weapon::get_IsDisabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_IsDisabled::Postfix(BattleTech.Weapon __instance, Boolean& __result)

14:10:50.753 [Info] Running ILHook manipulator on bool BattleTech.Weapon::get_IsDisabled()
14:10:50.755 [Info] Writing postfixes
14:10:50.760 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.764 [Info] Patching void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ObstructionGameLogic_ExplodeBuildingIfNeeded::Prefix(BattleTech.ObstructionGameLogic __instance)

14:10:50.767 [Info] Running ILHook manipulator on void BattleTech.ObstructionGameLogic::ExplodeBuildingIfNeeded()
14:10:50.769 [Info] Writing prefixes
14:10:50.780 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.784 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)

14:10:50.787 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
14:10:50.790 [Info] Writing postfixes
14:10:50.797 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.801 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)

14:10:50.804 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
14:10:50.806 [Info] Writing postfixes
14:10:50.815 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.818 [Info] Patching virtual void CustomUnits.CustomMech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced::Postfix(CustomUnits.CustomMech __instance)
* static void IRTweaks.Modules.Combat.CustomMech_ApplyBraced_OnFire::Postfix(CustomUnits.CustomMech __instance)

14:10:50.821 [Info] Running ILHook manipulator on virtual void CustomUnits.CustomMech::ApplyBraced()
14:10:50.823 [Info] Writing postfixes
14:10:50.830 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.832 [Info] Patching virtual void BattleTech.Mech::ApplyBraced() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced::Postfix(BattleTech.Mech __instance)
* static void IRTweaks.Modules.Combat.Mech_ApplyBraced_OnFire::Postfix(BattleTech.Mech __instance)

14:10:50.835 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::ApplyBraced()
14:10:50.837 [Info] Writing postfixes
14:10:50.845 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.849 [Info] Patching void BattleTech.Weapon::ProcessOnFiredFloatieEffects() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_ProcessOnFiredFloatieEffects_Patch::Postfix(BattleTech.Weapon __instance, BattleTech.CombatGameState ___combat)

14:10:50.852 [Info] Running ILHook manipulator on void BattleTech.Weapon::ProcessOnFiredFloatieEffects()
14:10:50.854 [Info] Writing postfixes
14:10:50.864 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 201 ms
14:10:50.877 [Info] Patching void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackSequence_OnAttackSequenceResolveDamage::Prefix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage& message)
1 postfixes:
* static void IRTweaks.Modules.Combat.AttackDirectorAttackSequence_OnAttackSequenceResolveDamage::Postfix(BattleTech.AttackDirector+AttackSequence __instance, MessageCenterMessage message)

14:10:50.886 [Info] Running ILHook manipulator on void BattleTech.AttackDirector+AttackSequence::OnAttackSequenceResolveDamage(MessageCenterMessage message)
14:10:50.894 [Info] Writing prefixes
14:10:50.907 [Info] Writing postfixes
14:10:50.934 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:50.937 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
14:10:50.939 [Info] PrefixWrapper created: HXI︳24︳::CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix
14:10:50.941 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.JammingEnabler::Prefix
14:10:50.945 [Info] PrefixWrapper created: HXI︳25︳::CustAmmoCategories.JammingEnabler::Prefix
14:10:50.947 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
14:10:50.950 [Info] PrefixWrapper created: HXI︳26︳::CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix
14:10:50.953 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AttackDirector_OnAttackComplete::Prefix
14:10:50.956 [Info] PrefixWrapper created: HXI︳27︳::CustomUnits.AttackDirector_OnAttackComplete::Prefix
14:10:50.958 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
14:10:50.962 [Info] PrefixWrapper created: HXI︳28︳::IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix
14:10:50.964 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:50.969 [Info] Patching void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message) with 5 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state, Boolean& __runOriginal)
* static bool CustAmmoCategories.JammingEnabler::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void CustomUnits.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.AttackDirector_OnAttackComplete::Prefix(BattleTech.AttackDirector __instance, MessageCenterMessage message, Boolean& __runOriginal)
5 postfixes:
* static void CustomAmmoCategoriesPatches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message, BattleTech.AbstractActor& __state)
* static void CustAmmoCategories.JammingEnabler::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustAmmoCategoriesPatches.AttackDirector_OnAttackCompleteWD::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void CustomActivatableEquipment.DamageHelpers.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)
* static void PanicSystem.Patches.AttackDirector_OnAttackCompleteTA::Postfix(BattleTech.AttackDirector __instance, MessageCenterMessage message)

14:10:50.972 [Info] Running ILHook manipulator on void BattleTech.AttackDirector::OnAttackComplete(MessageCenterMessage message)
14:10:50.974 [Info] Writing prefixes
14:10:50.978 [Info] Writing postfixes
14:10:50.988 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:50.991 [Info] Patching void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Prefix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
2 postfixes:
* static void CustomTranslation.CombatHUDFloatie_Init::Postfix(BattleTech.UI.CombatHUDFloatie __instance, BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
* static void IRTweaks.Modules.Combat.CombatHUDFloatie_Init_Patch::Postfix(BattleTech.UI.CombatHUDFloatie __instance)

14:10:50.995 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDFloatie::Init(BattleTech.UI.CombatHUD HUD, Localize.Text text, float fontSize, UnityEngine.Color color, UnityEngine.Transform parent, UnityEngine.Vector3 worldPos, BattleTech.UI.CombatHUDFloatie+OnDeath onDeath)
14:10:50.997 [Info] Writing prefixes
14:10:50.999 [Info] Writing postfixes
14:10:51.005 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.010 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
8 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)

14:10:51.012 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:51.015 [Info] Writing postfixes
14:10:51.024 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.027 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.HUDMechArmorReadout_SetHoveredAmor::Postfix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.ArmorLocation location, BattleTech.Mech ___displayedMech)

14:10:51.030 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::SetHoveredArmor(BattleTech.ArmorLocation location)
14:10:51.032 [Info] Writing postfixes
14:10:51.038 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.040 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_AL::Postfix(BattleTech.UI.SelectionStateFire __instance, BattleTech.ArmorLocation location)

14:10:51.042 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.ArmorLocation location)
14:10:51.045 [Info] Writing postfixes
14:10:51.051 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.054 [Info] Patching void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SelectionStateFire_SetCalledShot_VCL::Postfix(BattleTech.UI.SelectionStateFire __instance)

14:10:51.056 [Info] Running ILHook manipulator on void BattleTech.UI.SelectionStateFire::SetCalledShot(BattleTech.VehicleChassisLocations location)
14:10:51.058 [Info] Writing postfixes
14:10:51.065 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.068 [Info] Patching virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateMoraleAttack __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMoraleAttack_NeedsCalledShot::Postfix(BattleTech.UI.SelectionStateFire __instance, Boolean& __result)

14:10:51.070 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.SelectionStateMoraleAttack::get_NeedsCalledShot()
14:10:51.072 [Info] Writing postfixes
14:10:51.078 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.081 [Info] Patching float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ToHit_GetMoraleAttackModifier::Postfix(Single& __result)

14:10:51.084 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetMoraleAttackModifier(BattleTech.ICombatant target, bool isMoraleAttack)
14:10:51.087 [Info] Writing postfixes
14:10:51.094 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.098 [Info] Patching float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 1 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.ToHit_GetAllModifiers::Prefix()
3 postfixes:
* static void CustAmmoCategories.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, Single& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiers::Postfix(BattleTech.ToHit __instance, Single& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiers::Postfix(Single& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:51.101 [Info] Running ILHook manipulator on float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:51.104 [Info] Transpiling float BattleTech.ToHit::GetAllModifiers(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:51.107 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetSelfTerrainModifier::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:51.110 [Info] Writing prefixes
14:10:51.113 [Info] Writing postfixes
14:10:51.122 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.126 [Info] Patching string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot) with 0 prefixes, 3 postfixes, 2 transpilers, 0 finalizers
3 postfixes:
* static void CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot, String& __result)
* static void CBTBehaviorsEnhanced.Patches.ToHit_GetAllModifiersDescription::Postfix(BattleTech.ToHit __instance, String& __result, BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
* static void IRTweaks.Modules.Combat.ToHit_GetAllModifiersDescription::Postfix(String& __result, bool isCalledShot, BattleTech.AbstractActor attacker)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:51.129 [Info] Running ILHook manipulator on string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:51.131 [Info] Transpiling string BattleTech.ToHit::GetAllModifiersDescription(BattleTech.AbstractActor attacker, BattleTech.Weapon weapon, BattleTech.ICombatant target, UnityEngine.Vector3 attackPosition, UnityEngine.Vector3 targetPosition, BattleTech.LineOfFireLevel lofLevel, bool isCalledShot)
14:10:51.134 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:51.136 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.ToHit_GetAllModifiersDescription::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:51.139 [Info] Writing postfixes
14:10:51.147 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.150 [Info] Patching void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)
* static void IRTweaks.Modules.Combat.CombatHUDWeaponSlot_SetHitChance::Postfix(BattleTech.UI.CombatHUDWeaponSlot __instance, BattleTech.ICombatant target, BattleTech.Weapon ___displayedWeapon, BattleTech.UI.CombatHUD ___HUD)

14:10:51.154 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponSlot::SetHitChance(BattleTech.ICombatant target)
14:10:51.157 [Info] Writing postfixes
14:10:51.166 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.169 [Info] Patching virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDCalledShotPopUp_Update::Postfix(BattleTech.UI.CombatHUDCalledShotPopUp __instance, BattleTech.UI.CombatHUD ___HUD)

14:10:51.171 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDCalledShotPopUp::Update()
14:10:51.173 [Info] Writing postfixes
14:10:51.178 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.181 [Info] Patching virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechMeleeSequence_ConsumesFiring_Getter::Prefix(BattleTech.MechMeleeSequence __instance)

14:10:51.183 [Info] Running ILHook manipulator on virtual bool BattleTech.MechMeleeSequence::get_ConsumesFiring()
14:10:51.184 [Info] Writing prefixes
14:10:51.189 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.191 [Info] Patching virtual bool BattleTech.MechDFASequence::get_ConsumesFiring() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.MechDFASequence_ConsumesFiring_Getter::Prefix(BattleTech.MechDFASequence __instance)

14:10:51.193 [Info] Running ILHook manipulator on virtual bool BattleTech.MechDFASequence::get_ConsumesFiring()
14:10:51.195 [Info] Writing prefixes
14:10:51.200 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.204 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
9 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)

14:10:51.206 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:51.208 [Info] Writing postfixes
14:10:51.214 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.217 [Info] Patching virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomActivatablePatches.AbstractActor_OnNewRound::Prefix(BattleTech.AbstractActor __instance)
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_OnNewRound::Postfix(BattleTech.AbstractActor __instance)

14:10:51.220 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.IStackSequence> BattleTech.AbstractActor::OnNewRound(int round)
14:10:51.221 [Info] Writing prefixes
14:10:51.223 [Info] Writing postfixes
14:10:51.229 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.232 [Info] Patching virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Melee.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List`1[[BattleTech.ICombatant, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void IRTweaks.Modules.Combat.SelectionStateMove_GetAllMeleeTargets::Postfix(BattleTech.UI.SelectionStateMove __instance, System.Collections.Generic.List<BattleTech.ICombatant> __result)

14:10:51.234 [Info] Running ILHook manipulator on virtual System.Collections.Generic.List<BattleTech.ICombatant> BattleTech.UI.SelectionStateMove::GetAllMeleeTargets()
14:10:51.236 [Info] Writing postfixes
14:10:51.240 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 232 ms
14:10:51.243 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButton::Prefix(BattleTech.UI.CombatHUDMechTray __instance, BattleTech.CombatGameState ___Combat, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

14:10:51.246 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
14:10:51.248 [Info] Writing prefixes
14:10:51.250 [Info] Writing postfixes
14:10:51.256 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.259 [Info] Patching void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDWeaponPanel_ResetAbilityButton::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)

14:10:51.262 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDWeaponPanel::ResetAbilityButton(BattleTech.AbstractActor actor, BattleTech.UI.CombatHUDActionButton button, BattleTech.Ability ability, bool forceInactive)
14:10:51.264 [Info] Writing postfixes
14:10:51.269 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.272 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor)

14:10:51.274 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor)
14:10:51.275 [Info] Writing prefixes
14:10:51.280 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.282 [Info] Patching void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatSelectionHandler_AddFireState2::Prefix(BattleTech.UI.CombatSelectionHandler __instance, BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)

14:10:51.284 [Info] Running ILHook manipulator on void BattleTech.UI.CombatSelectionHandler::AddFireState(BattleTech.AbstractActor actor, BattleTech.ICombatant target, BattleTech.UI.CombatHUDAttackModeSelector+SelectedButton preferredButton)
14:10:51.286 [Info] Writing prefixes
14:10:51.292 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.296 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons_dbg::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
2 postfixes:
* static void CustomUnits.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetMechwarriorButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:51.299 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetMechwarriorButtons(BattleTech.AbstractActor actor)
14:10:51.301 [Info] Writing prefixes
14:10:51.303 [Info] Writing postfixes
14:10:51.315 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.319 [Info] Patching virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDActionButton_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDActionButton __instance, string creatorGUID, string targetGUID)

14:10:51.322 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDActionButton::ActivateAbility(string creatorGUID, string targetGUID)
14:10:51.324 [Info] Writing postfixes
14:10:51.330 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.333 [Info] Patching virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CombatHUDEquipmentSlot_ActivateAbility_Confirmed::Postfix(BattleTech.UI.CombatHUDEquipmentSlot __instance, string creatorGUID, string targetGUID)

14:10:51.336 [Info] Running ILHook manipulator on virtual void BattleTech.UI.CombatHUDEquipmentSlot::ActivateAbility(string creatorGUID, string targetGUID)
14:10:51.338 [Info] Writing postfixes
14:10:51.342 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.345 [Info] Patching void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Prefix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor, BattleTech.CombatGameState ___Combat)
3 postfixes:
* static void CustomAmmoCategoriesPatches.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void CustomUnits.CombatHUDMechwarriorTray_ResetAbilityButtons::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)
* static void IRTweaks.Modules.Combat.CombatHUDMechwarriorTray_ResetAbilityButtons_Patch::Postfix(BattleTech.UI.CombatHUDMechwarriorTray __instance, BattleTech.AbstractActor actor)

14:10:51.348 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDMechwarriorTray::ResetAbilityButtons(BattleTech.AbstractActor actor)
14:10:51.350 [Info] Writing prefixes
14:10:51.352 [Info] Writing postfixes
14:10:51.358 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.361 [Info] Patching static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void MechEngineer.Features.ComponentExplosions.Patches.MechStructureRules_GetPassthroughLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.ArmorLocation location, BattleTech.ArmorLocation& __result)
2 postfixes:
* static void CustomUnits.MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+MechStructureRules_GetPassthroughLocation::Postfix(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection, BattleTech.ArmorLocation& __result)

14:10:51.363 [Info] Running ILHook manipulator on static BattleTech.ArmorLocation BattleTech.MechStructureRules::GetPassthroughLocation(BattleTech.ArmorLocation location, BattleTech.AttackDirection attackDirection)
14:10:51.365 [Info] Writing prefixes
14:10:51.368 [Info] Writing postfixes
14:10:51.374 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 233 ms
14:10:51.377 [Info] Patching virtual bool BattleTech.Mech::get_IsDead() with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void CustomUnits.Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_IsDead::Postfix(BattleTech.Mech __instance, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:51.379 [Info] Running ILHook manipulator on virtual bool BattleTech.Mech::get_IsDead()
14:10:51.381 [Info] Transpiling virtual bool BattleTech.Mech::get_IsDead()
14:10:51.383 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.Mech_IsDead_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:51.386 [Info] Writing postfixes
14:10:51.390 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:51.392 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix
14:10:51.395 [Info] PrefixWrapper created: HXI︳29︳::MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix
14:10:51.397 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix
14:10:51.399 [Info] PrefixWrapper created: HXI︳30︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix
14:10:51.401 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 244 ms
14:10:51.404 [Info] Patching virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.CriticalEffects.Patches.AbstractActor_FlagForDeath_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int stackItemID, string attackerID, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.MechLocationDestructFixes+Turret_FlagForDeath::Prefix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent, Boolean& __runOriginal)
1 postfixes:
* static void CustAmmoCategories.AbstractActor_FlagForDeath::Postfix(BattleTech.AbstractActor __instance, string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)

14:10:51.406 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::FlagForDeath(string reason, BattleTech.DeathMethod deathMethod, BattleTech.DamageType damageType, int location, int stackItemID, string attackerID, bool isSilent)
14:10:51.408 [Info] Writing prefixes
14:10:51.410 [Info] Writing postfixes
14:10:51.416 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:51.419 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
14:10:51.421 [Info] PrefixWrapper created: HXI︳31︳::CustomUnits.Mech_OnLocationDestroyedRules::Prefix
14:10:51.423 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
14:10:51.425 [Info] PrefixWrapper created: HXI︳32︳::IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix
14:10:51.427 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.431 [Info] Patching void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType) with 2 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void IRTweaks.Modules.Combat.MechLocationDestructFixes+Mech_OnLocationDestroyed_Patch::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static bool CustomUnits.Mech_OnLocationDestroyedRules::Prefix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType, Boolean& __runOriginal)
3 postfixes:
* static void CustomUnits.Mech_OnLocationDestroyed::Postfix(BattleTech.Mech __instance, BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
* static void CustomUnits.Mech_OnLocationDestroyedRules::Postfix()
* static void PanicSystem.Patches.Mech_OnLocationDestroyed_Patch::Postfix(BattleTech.Mech __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:51.433 [Info] Running ILHook manipulator on void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:51.435 [Info] Transpiling void BattleTech.Mech::OnLocationDestroyed(BattleTech.ChassisLocations location, UnityEngine.Vector3 attackDirection, BattleTech.WeaponHitInfo hitInfo, BattleTech.DamageType damageType)
14:10:51.438 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.DamageIgnore.Patches.Mech_OnLocationDestroyed_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:51.440 [Info] Writing prefixes
14:10:51.442 [Info] Writing postfixes
14:10:51.449 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.452 [Info] Patching void BattleTech.TurnDirector::StartFirstRound() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.TurnDirector_StartFirstRound::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void CustomUnits.TurnDirector_StartFirstRound::Postfix(BattleTech.TurnDirector __instance)

14:10:51.454 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::StartFirstRound()
14:10:51.456 [Info] Writing prefixes
14:10:51.458 [Info] Writing postfixes
14:10:51.463 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.465 [Info] Patching void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.CombatHUDStatusPanel_ShowMeleeDamageMultipliers::Prefix(BattleTech.UI.CombatHUDStatusPanel __instance, BattleTech.AbstractActor actor)

14:10:51.467 [Info] Running ILHook manipulator on void BattleTech.UI.CombatHUDStatusPanel::ShowMeleeDamageMultipliers(BattleTech.AbstractActor actor)
14:10:51.469 [Info] Writing prefixes
14:10:51.474 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.477 [Info] Patching virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void CBTBehaviorsEnhanced.Patches.Mech_TakeWeaponDamage::Prefix(BattleTech.Mech __instance, Single& damageAmount, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomActivatableEquipment.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Mech_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Mech_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:51.479 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:51.481 [Info] Writing prefixes
14:10:51.483 [Info] Writing postfixes
14:10:51.489 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.492 [Info] Patching virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Vehicle_TakeWeaponDamage::Prefix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
3 postfixes:
* static void CustomActivatableEquipment.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void PanicSystem.Patches.Vehicle_TakeWeaponDamage::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Vehicle_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Vehicle __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:51.495 [Info] Running ILHook manipulator on virtual void BattleTech.Vehicle::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:51.497 [Info] Writing prefixes
14:10:51.499 [Info] Writing postfixes
14:10:51.504 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.507 [Info] Patching virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomActivatableEquipment.DamageHelpers.Turret_TakeWeaponDamage::Prefix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
2 postfixes:
* static void CustomActivatableEquipment.Turret_TakeWeaponDamage::Postfix(BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Turret_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Turret __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:51.510 [Info] Running ILHook manipulator on virtual void BattleTech.Turret::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:51.512 [Info] Writing prefixes
14:10:51.514 [Info] Writing postfixes
14:10:51.520 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 255 ms
14:10:51.523 [Info] Patching virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Building_TakeWeaponDamage_DamageModsBySkill::Postfix(BattleTech.Building __instance, BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)

14:10:51.525 [Info] Running ILHook manipulator on virtual void BattleTech.Building::TakeWeaponDamage(BattleTech.WeaponHitInfo hitInfo, int hitLocation, BattleTech.Weapon weapon, float damageAmount, float directStructureDamage, int hitIndex, BattleTech.DamageType damageType)
14:10:51.527 [Info] Writing postfixes
14:10:51.532 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:51.534 [Info] PrefixWrapper being created for: CustomAmmoCategories::WeaponRealizer.JammingEnabler::Prefix
14:10:51.536 [Info] PrefixWrapper created: HXI︳33︳::WeaponRealizer.JammingEnabler::Prefix
14:10:51.539 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
14:10:51.541 [Info] PrefixWrapper created: HXI︳34︳::CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix
14:10:51.542 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.unJammingEnabler::Prefix
14:10:51.545 [Info] PrefixWrapper created: HXI︳35︳::CustAmmoCategories.unJammingEnabler::Prefix
14:10:51.547 [Info] PrefixWrapper being created for: CustomActivatableEquipment::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
14:10:51.548 [Info] PrefixWrapper created: HXI︳36︳::CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix
14:10:51.551 [Info] PrefixWrapper being created for: PanicSystem::PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix
14:10:51.553 [Info] PrefixWrapper created: HXI︳37︳::PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix
14:10:51.556 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
14:10:51.558 [Info] PrefixWrapper created: HXI︳38︳::IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix
14:10:51.559 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 283 ms
14:10:51.563 [Info] Patching virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID) with 6 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static void WeaponRealizer.JammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static bool CustomAmmoCategoriesPatches.AbstractActor_OnActivationEndFire::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
* static bool CustAmmoCategories.unJammingEnabler::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void PanicSystem.Patches.AbstractActor_OnActivationEnd_Patch::Prefix(Boolean& __runOriginal, BattleTech.AbstractActor __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_OnActivationEnd::Prefix(BattleTech.AbstractActor __instance, string sourceID, int stackItemID, Boolean& __runOriginal)
1 postfixes:
* static void CustomActivatablePatches.AbstractActor_OnActivationEnd_FailRoll::Postfix(BattleTech.AbstractActor __instance)

14:10:51.565 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::OnActivationEnd(string sourceID, int stackItemID)
14:10:51.568 [Info] Writing prefixes
14:10:51.571 [Info] Writing postfixes
14:10:51.577 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 283 ms
14:10:51.582 [Info] Patching virtual void BattleTech.Weapon::InitStats() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void IRTweaks.Modules.Combat.Weapon_InitStats::Postfix(BattleTech.Weapon __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+Weapon_InitStats_Patch::Postfix(BattleTech.Weapon __instance)

14:10:51.584 [Info] Running ILHook manipulator on virtual void BattleTech.Weapon::InitStats()
14:10:51.587 [Info] Writing postfixes
14:10:51.596 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 283 ms
14:10:51.601 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
10 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)

14:10:51.604 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:51.606 [Info] Writing postfixes
14:10:51.614 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:51.616 [Info] PrefixWrapper being created for: MechEngineer::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
14:10:51.619 [Info] PrefixWrapper created: HXI︳39︳::MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix
14:10:51.622 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.Mech_DamageLocation::Prefix
14:10:51.624 [Info] PrefixWrapper created: HXI︳40︳::CustAmmoCategories.Mech_DamageLocation::Prefix
14:10:51.626 [Info] PrefixWrapper being created for: CustomAmmoCategories::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
14:10:51.629 [Info] PrefixWrapper created: HXI︳41︳::CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix
14:10:51.632 [Info] PrefixWrapper being created for: CBTBehaviorsEnhanced::CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix
14:10:51.634 [Info] PrefixWrapper created: HXI︳42︳::CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix
14:10:51.636 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
14:10:51.638 [Info] PrefixWrapper created: HXI︳43︳::IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix
14:10:51.640 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 308 ms
14:10:51.643 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 5 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)

14:10:51.645 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
14:10:51.648 [Info] Writing prefixes
14:10:51.660 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 308 ms
14:10:51.664 [Info] Patching virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void IRTweaks.Modules.Combat.AmmunitionBox_DamageComponent::Prefix(BattleTech.AmmunitionBox __instance, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:51.667 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:51.669 [Info] Transpiling virtual void BattleTech.AmmunitionBox::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:10:51.672 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.AmmunitionBox_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:51.674 [Info] Writing prefixes
14:10:51.679 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:51.682 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.PilotInjurePilotPatch::Prefix
14:10:51.684 [Info] PrefixWrapper created: HXI︳44︳::MissionControl.Patches.PilotInjurePilotPatch::Prefix
14:10:51.687 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
14:10:51.689 [Info] PrefixWrapper created: HXI︳45︳::IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix
14:10:51.691 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 320 ms
14:10:51.694 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
2 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)

14:10:51.697 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:10:51.698 [Info] Writing prefixes
14:10:51.701 [Info] Writing postfixes
14:10:51.707 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 320 ms
14:10:51.710 [Info] Patching void BattleTech.TurnDirector::OnTurnActorActivateComplete() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CBTBehaviorsEnhanced.Patches.TurnDirector_OnTurnActorActivateComplete::Prefix(BattleTech.TurnDirector __instance)
1 postfixes:
* static void IRTweaks.Modules.Combat.TurnDirector_OnTurnActorActivateComplete::Postfix(BattleTech.TurnDirector __instance)

14:10:51.713 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnTurnActorActivateComplete()
14:10:51.716 [Info] Writing prefixes
14:10:51.719 [Info] Writing postfixes
14:10:51.725 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 322 ms
14:10:51.729 [Info] Patching virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:51.732 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
14:10:51.735 [Info] Transpiling virtual void BattleTech.AbstractActor::CheckPilotStatusFromAttack(string sourceID, int sequenceID, int stackItemID)
14:10:51.739 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Combat.AbstractActor_CheckPilotStatusFromAttack::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:51.874 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 324 ms
14:10:51.878 [Info] Patching void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:51.881 [Info] Running ILHook manipulator on void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
14:10:51.884 [Info] Transpiling void BattleTech.Mech::CompleteKnockdown(string sourceID, int stackItemUID)
14:10:51.888 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<IRTweaks.Modules.Combat.Mech_CompleteKnockdown::Transpiler>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:51.923 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 324 ms
14:10:51.930 [Info] Patching virtual void BattleTech.AbstractActor::InitEffectStats() with 0 prefixes, 11 postfixes, 0 transpilers, 0 finalizers
11 postfixes:
* static void MechAffinity.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustAmmoCategoriesPatches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomActivatablePatches.AbstractActor_InitStats::Postfix(BattleTech.AbstractActor __instance)
* static void CustomUnits.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void PanicSystem.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void CBTBehaviorsEnhanced.Patches.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Misc.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_AbilityResourceFix::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.CAC_API_ShotMods+AbstractActor_InitEffectStats_DamageModsBySkill::Postfix(BattleTech.AbstractActor __instance)
* static void IRTweaks.Modules.Combat.AbstractActor_InitEffectStats_PainTolerance::Postfix(BattleTech.AbstractActor __instance)

14:10:51.933 [Info] Running ILHook manipulator on virtual void BattleTech.AbstractActor::InitEffectStats()
14:10:51.937 [Info] Writing postfixes
14:10:51.949 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:51.954 [Info] PrefixWrapper being created for: MissionControl::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
14:10:51.957 [Info] PrefixWrapper created: HXI︳46︳::MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix
14:10:51.960 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.AbstractActor_IsFriendly::Prefix
14:10:51.964 [Info] PrefixWrapper created: HXI︳47︳::CustomUnits.AbstractActor_IsFriendly::Prefix
14:10:51.967 [Info] PrefixWrapper being created for: IRTweaks::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
14:10:51.972 [Info] PrefixWrapper created: HXI︳48︳::IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix
14:10:51.975 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:51.979 [Info] Patching bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.AbstractActorIsFriendlyPatch::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool CustomUnits.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.AbstractActor_IsFriendly::Prefix(BattleTech.AbstractActor __instance, BattleTech.ICombatant target, Boolean& __result, Boolean& __runOriginal)

14:10:51.982 [Info] Running ILHook manipulator on bool BattleTech.AbstractActor::IsFriendly(BattleTech.ICombatant target)
14:10:51.985 [Info] Writing prefixes
14:10:51.994 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.002 [Info] Patching void BattleTech.Pilot::InitStatValidators() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool IRTweaks.Modules.Combat.ExtendedStats_Pilot_InitStatValidators::Prefix(BattleTech.Pilot __instance, BattleTech.StatCollection ___statCollection)

14:10:52.005 [Info] Running ILHook manipulator on void BattleTech.Pilot::InitStatValidators()
14:10:52.008 [Info] Writing prefixes
14:10:52.021 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.027 [Info] Patching void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void us.frostraptor.modUtils.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance)
* static void PanicSystem.Patches.CombatGameState_Init::Postfix()
* static void PanicSystem.Components.StatusEffect+CombatGameState_LoadComplete_Patch::Postfix()
* static void IRTweaks.Modules.Combat.CombatGameState__Init::Postfix(BattleTech.CombatGameState __instance, BattleTech.Contract contract)

14:10:52.031 [Info] Running ILHook manipulator on void BattleTech.CombatGameState::_Init(BattleTech.GameInstance game, BattleTech.Contract contract, string localPlayerTeamGuid)
14:10:52.034 [Info] Writing postfixes
14:10:52.045 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.049 [Info] Patching void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.Building_AttachBuildingToObjective::Postfix(BattleTech.Building __instance, BattleTech.Framework.ObjectiveGameLogic objective)

14:10:52.053 [Info] Running ILHook manipulator on void BattleTech.Building::AttachBuildingToObjective(BattleTech.Framework.ObjectiveGameLogic objective)
14:10:52.057 [Info] Writing postfixes
14:10:52.068 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.072 [Info] Patching void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.ScaleObjectiveBuildingStructure_TurnDirector_OnInitializeContractComplete::Postfix(BattleTech.TurnDirector __instance, MessageCenterMessage message)

14:10:52.076 [Info] Running ILHook manipulator on void BattleTech.TurnDirector::OnInitializeContractComplete(MessageCenterMessage message)
14:10:52.078 [Info] Writing postfixes
14:10:52.086 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.091 [Info] Patching void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void IRTweaks.Modules.Combat.SpawnProtection_Team_AddUnit::Postfix(BattleTech.Team __instance, BattleTech.AbstractActor unit)

14:10:52.094 [Info] Running ILHook manipulator on void BattleTech.Team::AddUnit(BattleTech.AbstractActor unit)
14:10:52.098 [Info] Writing postfixes
14:10:52.151 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.159 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)
* static void CustomTranslation.SG_Stores_MultiPurchasePopup_Refresh::Postfix(BattleTech.UI.SG_Stores_MultiPurchasePopup __instance, BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, string ___itemName)
* static void CustomShops.SG_Stores_MultiPurchasePopup_Refresh::ReplaceTitle(BattleTech.UI.TMProWrapper.LocalizableText ___TitleText, BattleTech.UI.TMProWrapper.LocalizableText ___DescriptionText, string ___itemName, int ___costPerUnit, int ___quantityBeingSold, BattleTech.UI.HBSDOTweenButton ___ConfirmButton)

14:10:52.163 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::Refresh()
14:10:52.167 [Info] Writing postfixes
14:10:52.182 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.187 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnCancel::Postfix()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnCancel::HandleExit()

14:10:52.190 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnCancel()
14:10:52.195 [Info] Writing postfixes
14:10:52.206 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.212 [Info] Patching void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CustomSalvage.SG_Stores_MultiPurchasePopup_OnConfirm::Postfix()
* static void CustomShops.SG_Stores_MultiPurchasePopup_OnConfirm::HandleExit()

14:10:52.216 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Stores_MultiPurchasePopup::OnConfirm()
14:10:52.221 [Info] Writing postfixes
14:10:52.235 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 350 ms
14:10:52.250 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)

14:10:52.257 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
14:10:52.262 [Info] Writing prefixes
14:10:52.308 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 353 ms
14:10:52.313 [Info] Patching bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.317 [Info] Running ILHook manipulator on bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
14:10:52.322 [Info] Transpiling bool BattleTech.UI.SG_Shop_Screen::CheckHaveNoFunds()
14:10:52.326 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.SG_Shop_Screen_CheckHaveNoFunds::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.342 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 356 ms
14:10:52.346 [Info] Patching void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.349 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
14:10:52.351 [Info] Transpiling void BattleTech.UI.SG_Shop_Screen::UpdateMoneySpot()
14:10:52.355 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.SG_Shop_Screen_UpdateMoneySpot::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.373 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 359 ms
14:10:52.377 [Info] Patching bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.380 [Info] Running ILHook manipulator on bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
14:10:52.385 [Info] Transpiling bool BattleTech.Shop::Purchase(string id, BattleTech.Shop+PurchaseType purchaseType, BattleTech.ShopItemType itemType)
14:10:52.392 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.Shop_Purchase::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.414 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 363 ms
14:10:52.418 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.423 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.426 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopFullMech::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.431 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopFullMech_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.448 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 367 ms
14:10:52.451 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.455 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.458 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopGear::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.463 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopGear_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.479 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 370 ms
14:10:52.483 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.487 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.491 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopMechPart::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.495 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopMechPart_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.512 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.515 [Info] Patching void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )

14:10:52.519 [Info] Running ILHook manipulator on void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.522 [Info] Transpiling void BattleTech.UI.InventoryDataObject_ShopWeapon::RefreshPriceOnWidget(bool isSelling, BattleTech.UI.InventoryItemElement theWidget)
14:10:52.525 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> DMD<>?-344792576::TranspilerWrapper<CustomShops.InventoryDataObject_ShopWeapon_RefreshPriceOnWidget::RepalceGetPrice>(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> , System.Reflection.Emit.ILGenerator , System.Reflection.MethodBase )
14:10:52.537 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.541 [Info] Patching void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_RefreshColorAreas::Prefix()

14:10:52.544 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::RefreshColorAreas()
14:10:52.547 [Info] Writing prefixes
14:10:52.563 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.566 [Info] Patching void BattleTech.UI.SG_Shop_Screen::BeginShop() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.SG_Shop_Screen_BeginShop::BeginShop(BattleTech.UI.SG_Shop_Screen __instance)

14:10:52.570 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::BeginShop()
14:10:52.573 [Info] Writing prefixes
14:10:52.581 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.589 [Info] Patching void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Dehydrate::Prefix(BattleTech.SimGameState __instance, BattleTech.Save.Test.SerializableReferenceContainer references, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedMechs, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& ___LastUsedPilots)
* static void IRTweaks.Modules.Misc.SimGameState_Dehydrate_CH::Prefix(BattleTech.SimGameState __instance)
1 postfixes:
* static void CustomShops.Patches.SimGameState_Dehydrate::SaveShops(BattleTech.Save.Test.SerializableReferenceContainer references)

14:10:52.592 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Dehydrate(BattleTech.Save.SimGameSave save, BattleTech.Save.Test.SerializableReferenceContainer references)
14:10:52.595 [Info] Writing prefixes
14:10:52.598 [Info] Writing postfixes
14:10:52.627 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.631 [Info] Patching void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunCampaignStarts()
* static void CustomShops.Patches.SimGameState_Init::OnInit(BattleTech.SimGameState __instance)

14:10:52.633 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Init(BattleTech.GameInstance game, BattleTech.SimGameState+SimGameType campaignType, bool allowDebug, BattleTech.SimGameDifficulty difficulty)
14:10:52.636 [Info] Writing postfixes
14:10:52.644 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.649 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()

14:10:52.652 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
14:10:52.657 [Info] Writing postfixes
14:10:52.672 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.675 [Info] Patching void BattleTech.StarSystem::RefreshShops() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.StarSystem_RefreshShops::RefreshShops()

14:10:52.677 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshShops()
14:10:52.680 [Info] Writing prefixes
14:10:52.685 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 373 ms
14:10:52.688 [Info] Patching void BattleTech.StarSystem::CompletedContract() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.StarSystem_CompletedContract::RefreshShops()

14:10:52.690 [Info] Running ILHook manipulator on void BattleTech.StarSystem::CompletedContract()
14:10:52.692 [Info] Writing postfixes
14:10:52.700 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.703 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

14:10:52.705 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
14:10:52.708 [Info] Writing postfixes
14:10:52.714 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.725 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
9 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)

14:10:52.728 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:52.731 [Info] Writing prefixes
14:10:52.733 [Info] Writing postfixes
14:10:52.767 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.771 [Info] Patching void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.SimGameState_SetCurrentSystem::UpdateSystem(BattleTech.StarSystem system)
1 postfixes:
* static void CustAmmoCategories.SimGameState_SetCurrentSystem::Postfix(BattleTech.SimGameState __instance, BattleTech.StarSystem system, bool force, bool timeSkip)

14:10:52.774 [Info] Running ILHook manipulator on void BattleTech.SimGameState::SetCurrentSystem(BattleTech.StarSystem system, bool force, bool timeSkip)
14:10:52.777 [Info] Writing prefixes
14:10:52.779 [Info] Writing postfixes
14:10:52.788 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.793 [Info] Patching void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Dehydrate::OverrideSaveShops(Boolean& saveShops)

14:10:52.796 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Dehydrate(BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool saveShops)
14:10:52.798 [Info] Writing prefixes
14:10:52.807 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.813 [Info] Patching void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.Patches.StarSystem_Rehydrate::OverrideLoadShops(Boolean& loadShops)

14:10:52.816 [Info] Running ILHook manipulator on void BattleTech.StarSystem::Rehydrate(BattleTech.SimGameState sim, BattleTech.Save.Test.SerializableReferenceContainer globalReferences, bool loadShops)
14:10:52.819 [Info] Writing prefixes
14:10:52.839 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.844 [Info] Patching BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerate(BattleTech.ItemCollectionDef collection, int count, string parentGUID)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGeneratore_GenerateItemCollection::OnICGenerated(BattleTech.ItemCollectionDef collection, BattleTech.ItemCollectionResult __result)

14:10:52.847 [Info] Running ILHook manipulator on BattleTech.ItemCollectionResult BattleTech.ItemCollectionResultGenerator::GenerateItemCollection(BattleTech.ItemCollectionDef collection, int count, System.Action<BattleTech.ItemCollectionResult> cb, string parentGUID)
14:10:52.850 [Info] Writing prefixes
14:10:52.853 [Info] Writing postfixes
14:10:52.877 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.880 [Info] Patching void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_InsertItemCollectionEntry::OnInsert(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)

14:10:52.883 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::InsertItemCollectionEntry(BattleTech.ItemCollectionDef+Entry entry, System.Collections.Generic.List<BattleTech.ShopDefItem> items)
14:10:52.885 [Info] Writing prefixes
14:10:52.892 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.895 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnComplete(BattleTech.ItemCollectionResult collectionResult)
1 postfixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionComplete::OnCompleted(BattleTech.ItemCollectionResult collectionResult)

14:10:52.898 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionComplete(BattleTech.ItemCollectionResult collectionResult)
14:10:52.901 [Info] Writing prefixes
14:10:52.904 [Info] Writing postfixes
14:10:52.910 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.914 [Info] Patching void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_OnCollectionDefRetrieved::OnComplete(BattleTech.ItemCollectionDef& def, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<BattleTech.ItemCollectionDef+Entry, string>>> ____pendingGenerateRequests)

14:10:52.916 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::OnCollectionDefRetrieved(BattleTech.ItemCollectionDef def)
14:10:52.919 [Info] Writing prefixes
14:10:52.927 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.933 [Info] Patching void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.ItemCollectionResultGenerator_ProcessQueuedReferenceCollections::OnComplete(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)

14:10:52.935 [Info] Running ILHook manipulator on void BattleTech.ItemCollectionResultGenerator::ProcessQueuedReferenceCollections(System.Collections.Generic.List<BattleTech.ItemCollectionDef+Entry> queuedReferences, BattleTech.ItemCollectionResult result)
14:10:52.938 [Info] Writing prefixes
14:10:52.949 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.952 [Info] Patching void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomShops.DEBUG_Patches.Shop_OnItemsCollected::OnResultReveived(BattleTech.ItemCollectionResult result)

14:10:52.955 [Info] Running ILHook manipulator on void BattleTech.Shop::OnItemsCollected(BattleTech.ItemCollectionResult result)
14:10:52.957 [Info] Writing prefixes
14:10:52.963 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.967 [Info] Patching virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.DEBUG_Patches.SG_Shop_Screen_ReceiveButtonPress::Prefix(string button)

14:10:52.970 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SG_Shop_Screen::ReceiveButtonPress(string button)
14:10:52.972 [Info] Writing prefixes
14:10:52.984 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:52.988 [Info] Patching static bool IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::IsShopActive(BattleTech.SimGameState simState) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomShops.Patches.IsShopActive::ShowButton(Boolean& __result)

14:10:52.990 [Info] Running ILHook manipulator on static bool IRTweaks.Modules.UI.StreamlinedMainMenu+SGNavigationList_RefreshButtonStates::IsShopActive(BattleTech.SimGameState simState)
14:10:52.993 [Info] Writing prefixes
14:10:53.010 [Info] ### Harmony id=LewdableTanks, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void LewdableTanks.Control::init(string directory, string settingsJSON), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\LewdableTanks\LewdableTanks.dll
### At 2023-05-07 02.10.53
14:10:53.016 [Info] Patching void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value) with 1 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Prefix(HBS.Logging.LogLevel? ___level, Nullable`1& __state)
7 postfixes:
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void NullableLogging.NullableLogger::LogImpl_set_Level_Postfix()
* static void ModTek.Features.Logging.Patches.LogImpl_set_Level_Patch::Postfix(string ___name, HBS.Logging.LogLevel? ___level, HBS.Logging.LogLevel? __state)

14:10:53.019 [Info] Running ILHook manipulator on void HBS.Logging.Logger+LogImpl::set_Level(HBS.Logging.LogLevel? value)
14:10:53.022 [Info] Writing prefixes
14:10:53.025 [Info] Writing postfixes
14:10:53.030 [Info] Patching virtual string BattleTech.UI.ListElementController_SalvageMechPart_NotListView::GetName() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.SortFix.ListElementController_SalvageMechPart_NotListView_GetName::Prefix(Boolean& __runOriginal, BattleTech.UI.ListElementController_SalvageMechPart_NotListView __instance, String& __result)

14:10:53.033 [Info] Running ILHook manipulator on virtual string BattleTech.UI.ListElementController_SalvageMechPart_NotListView::GetName()
14:10:53.036 [Info] Writing prefixes
14:10:53.041 [Info] Patching static System.Collections.Generic.HashSet<string> CustomSalvage.ChassisHandler::build_mech_tags(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_build_mech_tags::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

14:10:53.045 [Info] Running ILHook manipulator on static System.Collections.Generic.HashSet<string> CustomSalvage.ChassisHandler::build_mech_tags(BattleTech.MechDef mech)
14:10:53.048 [Info] Writing prefixes
14:10:53.055 [Info] Patching static string CustomSalvage.ChassisHandler::GetMechType(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetMechType::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, String& __result)

14:10:53.059 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetMechType(BattleTech.MechDef mech)
14:10:53.060 [Info] Writing prefixes
14:10:53.069 [Info] Patching static string CustomSalvage.ChassisHandler::GetPrefabId(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetPrefabId::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, String& __result)

14:10:53.072 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetPrefabId(BattleTech.MechDef mech)
14:10:53.075 [Info] Writing prefixes
14:10:53.082 [Info] Patching static CustomSalvage.IAssemblyVariant CustomSalvage.ChassisHandler::get_variant(BattleTech.MechDef mech) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_get_variant::Prefix(Boolean& __runOriginal, BattleTech.MechDef mech, CustomSalvage.IAssemblyVariant& __result)

14:10:53.085 [Info] Running ILHook manipulator on static CustomSalvage.IAssemblyVariant CustomSalvage.ChassisHandler::get_variant(BattleTech.MechDef mech)
14:10:53.089 [Info] Writing prefixes
14:10:53.096 [Info] Patching static void CustomSalvage.ChassisHandler::MakeMech(BattleTech.SimGameState sim, int other_parts) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_MakeMech::Prefix(Boolean& __runOriginal)
1 postfixes:
* static void LewdableTanks.Patches.ChassisHandler_MakeMech::Postfix()

14:10:53.099 [Info] Running ILHook manipulator on static void CustomSalvage.ChassisHandler::MakeMech(BattleTech.SimGameState sim, int other_parts)
14:10:53.102 [Info] Writing prefixes
14:10:53.105 [Info] Writing postfixes
14:10:53.120 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 3 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
3 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void LewdableTanks.Patches.Contract_CompleteContract::Postfix(BattleTech.Contract __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:53.123 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:53.126 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:53.131 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:53.136 [Info] Writing prefixes
14:10:53.139 [Info] Writing postfixes
14:10:53.156 [Info] Patching static void CustomSalvage.Contract_GenerateSalvage::ProccessPlayerMech(BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.Contract_GenerateSalvage_ProccessPlayerMech::Prefix(Boolean& __runOriginal, BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract)

14:10:53.159 [Info] Running ILHook manipulator on static void CustomSalvage.Contract_GenerateSalvage::ProccessPlayerMech(BattleTech.UnitResult unitResult, CustomSalvage.ContractHelper Contract)
14:10:53.163 [Info] Writing prefixes
14:10:53.170 [Info] Patching static void CustomSalvage.Contract_GenerateSalvage::AddVechicleToSalvage(BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.GenerateSalvage_AddVechicleToSalvage::Prefix(Boolean& __runOriginal, BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame)

14:10:53.173 [Info] Running ILHook manipulator on static void CustomSalvage.Contract_GenerateSalvage::AddVechicleToSalvage(BattleTech.Vehicle vechicle, CustomSalvage.ContractHelper contract, BattleTech.SimGameState simgame)
14:10:53.176 [Info] Writing prefixes
14:10:53.184 [Info] Patching static string CustomSalvage.ChassisHandler::GetMDefFromCDef(string cdefid) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ChassisHandler_GetMDefFromCDef::Prefix(Boolean& __runOriginal, String& __result, string cdefid)

14:10:53.187 [Info] Running ILHook manipulator on static string CustomSalvage.ChassisHandler::GetMDefFromCDef(string cdefid)
14:10:53.190 [Info] Writing prefixes
14:10:53.195 [Info] Patching static string CustomShops.Control::GetMDefFromCDef(string id) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.Control_GetMDefFromCDef::Prefix(Boolean& __runOriginal, String& __result, string id)

14:10:53.198 [Info] Running ILHook manipulator on static string CustomShops.Control::GetMDefFromCDef(string id)
14:10:53.200 [Info] Writing prefixes
14:10:53.205 [Info] Patching static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.MechBayMechInfoWidget_OnUnreadyClicked_Prefix::Prefix(Boolean& __runOriginal)
1 postfixes:
* static void LewdableTanks.Patches.MechBayMechInfoWidget_OnUnreadyClicked_Prefix::Postfix()

14:10:53.208 [Info] Running ILHook manipulator on static bool CustomUnits.MechBayMechInfoWidget_OnUnreadyClicked::Prefix(BattleTech.UI.MechBayMechInfoWidget __instance, BattleTech.MechDef& ___selectedMech)
14:10:53.211 [Info] Writing prefixes
14:10:53.214 [Info] Writing postfixes
14:10:53.220 [Info] Patching void BattleTech.UI.MechBayPanel::RefreshData(bool resetFilters) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void LewdableTanks.Patches.MechBayPanel_Init::Postfix(BattleTech.UI.MechBayPanel __instance)

14:10:53.223 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::RefreshData(bool resetFilters)
14:10:53.226 [Info] Writing postfixes
14:10:53.234 [Info] Patching void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Prefix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget, Boolean& __state)
* static void LewdableTanks.Patches.MechBayPanel_OnReadyMech::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, BattleTech.UI.MechBayChassisUnitElement& ___selectedChassis, BattleTech.UI.MechBayRowGroupWidget ___bayGroupWidget)
1 postfixes:
* static void CustomUnits.MechBayPanel_OnReadyMech::Postfix(BattleTech.UI.MechBayPanel __instance, BattleTech.UI.MechBayChassisUnitElement chassisElement, Boolean& __state)

14:10:53.237 [Info] Running ILHook manipulator on void BattleTech.UI.MechBayPanel::OnReadyMech(BattleTech.UI.MechBayChassisUnitElement chassisElement)
14:10:53.241 [Info] Writing prefixes
14:10:53.246 [Info] Writing postfixes
14:10:53.257 [Info] Patching void BattleTech.ShopDefItem::ToSalvageDef(BattleTech.SalvageDef& salvageDef) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.ShopDefItem_ToSalvageDef::Prefix(Boolean& __runOriginal, BattleTech.SalvageDef& salvageDef, BattleTech.ShopDefItem __instance)

14:10:53.260 [Info] Running ILHook manipulator on void BattleTech.ShopDefItem::ToSalvageDef(BattleTech.SalvageDef& salvageDef)
14:10:53.263 [Info] Writing prefixes
14:10:53.284 [Info] Patching void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomShops.SH_Shop_Screen_AddShopItemToWidget::ReplaceShopDefItem(BattleTech.ShopDefItem& itemDef)
* static void LewdableTanks.Patches.SH_Shop_Screen_AddShopItemToWidget::Prefix(Boolean& __runOriginal, BattleTech.ShopDefItem& itemDef, BattleTech.Shop shop, bool isBulkAdd, bool isSelling, BattleTech.UI.IMechLabDropTarget targetWidget, BattleTech.UI.MechLabInventoryWidget_ListView ___inventoryWidget, bool ___isInBuyingState, BattleTech.SimGameState ___simState, BattleTech.UI.SG_Shop_Screen __instance)

14:10:53.287 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::AddShopItemToWidget(BattleTech.ShopDefItem itemDef, BattleTech.Shop shop, BattleTech.UI.IMechLabDropTarget targetWidget, bool isSelling, bool isBulkAdd)
14:10:53.290 [Info] Writing prefixes
14:10:53.310 [Info] Patching void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_ScrapActiveMech::Prefix(Boolean& __runOriginal, int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)
1 postfixes:
* static void SortByTonnage.SimGameState_ScrapActiveMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

14:10:53.314 [Info] Running ILHook manipulator on void BattleTech.SimGameState::ScrapActiveMech(int baySlot, BattleTech.MechDef def)
14:10:53.317 [Info] Writing prefixes
14:10:53.321 [Info] Writing postfixes
14:10:53.330 [Info] Patching bool BattleTech.SimGameState::ScrapMechPart(string id, float partCount, float partMax, bool pay) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_ScrapMechPart::Prefix(Boolean& __runOriginal, string id, float partCount, float partMax, bool pay, BattleTech.SimGameState __instance, Boolean& __result)

14:10:53.333 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::ScrapMechPart(string id, float partCount, float partMax, bool pay)
14:10:53.337 [Info] Writing prefixes
14:10:53.345 [Info] Patching void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void LewdableTanks.Patches.SimGameState_UnreadyMech::Prefix(Boolean& __runOriginal, int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)
1 postfixes:
* static void SortByTonnage.SimGameState_UnreadyMech_Patch::Postfix(int baySlot, BattleTech.MechDef def, BattleTech.SimGameState __instance)

14:10:53.349 [Info] Running ILHook manipulator on void BattleTech.SimGameState::UnreadyMech(int baySlot, BattleTech.MechDef def)
14:10:53.351 [Info] Writing prefixes
14:10:53.355 [Info] Writing postfixes
14:10:53.580 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:53.584 [Info] Patching int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SGContractsWidget_GetContractComparePriority_Patch::Prefix(BattleTech.UI.SGContractsWidget __instance, Int32& __result, BattleTech.Contract contract)

14:10:53.588 [Info] Running ILHook manipulator on int BattleTech.UI.SGContractsWidget::GetContractComparePriority(BattleTech.Contract contract)
14:10:53.590 [Info] Writing prefixes
14:10:53.598 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:53.601 [Info] Patching void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_OnTargetSystemFound::Prefix(BattleTech.SimGameState __instance)

14:10:53.604 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnTargetSystemFound(AStar+AStarResult result)
14:10:53.608 [Info] Writing prefixes
14:10:53.620 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:53.627 [Info] Patching BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Prefix(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
1 postfixes:
* static void PersistentMapClient.SimGameState_GenerateContractParticipants_Patch::Postfix(BattleTech.FactionDef employer)

14:10:53.630 [Info] Running ILHook manipulator on BattleTech.WeightedList<BattleTech.SimGameState+ContractParticipants> BattleTech.SimGameState::GenerateContractParticipants(BattleTech.FactionDef employer, BattleTech.StarSystemDef system)
14:10:53.633 [Info] Writing prefixes
14:10:53.636 [Info] Writing postfixes
14:10:53.667 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 374 ms
14:10:53.670 [Info] Patching void BattleTech.StarSystem::RefreshBreadcrumbs() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_RefreshBreadcrumbs::Prefix(BattleTech.StarSystem __instance)

14:10:53.673 [Info] Running ILHook manipulator on void BattleTech.StarSystem::RefreshBreadcrumbs()
14:10:53.675 [Info] Writing prefixes
14:10:53.684 [Info] Detected a mix of skippable and skipping prefixes, wrapping for harmony 1 interoperability
14:10:53.688 [Info] PrefixWrapper being created for: CustomUnits::CustomUnits.SimGameState_GeneratePotentialContracts::Prefix
14:10:53.691 [Info] PrefixWrapper created: HXI︳49︳::CustomUnits.SimGameState_GeneratePotentialContracts::Prefix
14:10:53.693 [Info] PrefixWrapper being created for: PersistentMapClient::PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix
14:10:53.697 [Info] PrefixWrapper created: HXI︳50︳::PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix
14:10:53.699 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 389 ms
14:10:53.703 [Info] Patching void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine, Boolean& __runOriginal)
* static bool PersistentMapClient.SimGameState_GeneratePotentialContracts::Prefix(BattleTech.SimGameState __instance, bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine, Boolean& __runOriginal)

14:10:53.705 [Info] Running ILHook manipulator on void BattleTech.SimGameState::GeneratePotentialContracts(bool clearExistingContracts, Action onContractGenComplete, BattleTech.StarSystem systemOverride, bool useCoroutine)
14:10:53.707 [Info] Writing prefixes
14:10:53.715 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 389 ms
14:10:53.719 [Info] Patching void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Contract_FinalizeSalvage_Patch::Postfix(BattleTech.Contract __instance, System.Collections.Generic.List<BattleTech.SalvageDef> ___finalPotentialSalvage)

14:10:53.722 [Info] Running ILHook manipulator on void BattleTech.Contract::FinalizeSalvage(System.Collections.Generic.List<BattleTech.SalvageDef> priorityItems)
14:10:53.725 [Info] Writing postfixes
14:10:53.740 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 389 ms
14:10:53.743 [Info] Patching void BattleTech.UI.SG_Shop_Screen::OnCompleted() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SG_Shop_Screen_OnCompleted_Patch::Postfix()

14:10:53.746 [Info] Running ILHook manipulator on void BattleTech.UI.SG_Shop_Screen::OnCompleted()
14:10:53.749 [Info] Writing postfixes
14:10:53.757 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 389 ms
14:10:53.762 [Info] Patching void BattleTech.SimGameState::InitCompanyStats() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void MechAffinity.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void CustAmmoCategories.SimGameState_InitCompanyStats::Postfix(BattleTech.SimGameState __instance)
* static void BiggerDrops.Patches.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_InitCompanyStatsPatch::Postfix(BattleTech.SimGameState __instance)

14:10:53.765 [Info] Running ILHook manipulator on void BattleTech.SimGameState::InitCompanyStats()
14:10:53.769 [Info] Writing postfixes
14:10:53.781 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 389 ms
14:10:53.793 [Info] Patching void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave) with 2 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.RemovedFlashpointFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BattletechPerformanceFix.RemovedContractsFix::Rehydrate_Pre(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
10 postfixes:
* static void CustomComponents.Patches.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.StatCollection ___companyStats, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ActiveMechs, System.Collections.Generic.Dictionary<int, BattleTech.MechDef> ___ReadyingMechs)
* static void MechAffinity.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustAmmoCategories.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomActivatableEquipment.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance)
* static void CustomUnits.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void BiggerDrops.Patches.SimGameState_RehydratePatch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate_CH::Postfix(BattleTech.SimGameState __instance)
* static void IRTweaks.Modules.Misc.SimGameState_Rehydrate::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)
* static void CustomShops.Patches.SimGameState_Rehydrate::LoadShops(BattleTech.Save.GameInstanceSave gameInstanceSave, BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_Rehydrate_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Save.GameInstanceSave gameInstanceSave)

14:10:53.797 [Info] Running ILHook manipulator on void BattleTech.SimGameState::Rehydrate(BattleTech.Save.GameInstanceSave gameInstanceSave)
14:10:53.800 [Info] Writing prefixes
14:10:53.802 [Info] Writing postfixes
14:10:53.837 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 389 ms
14:10:53.839 [Info] Patching void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_DeductQuarterlyFunds_Patch::Prefix(BattleTech.SimGameState __instance, int quarterPassed)
1 postfixes:
* static void CustomShops.Patches.SimGameState_DeductQuarterlyFunds::RefreshShops()

14:10:53.842 [Info] Running ILHook manipulator on void BattleTech.SimGameState::DeductQuarterlyFunds(int quarterPassed)
14:10:53.846 [Info] Writing prefixes
14:10:53.849 [Info] Writing postfixes
14:10:53.856 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.860 [Info] Patching void BattleTech.UI.SGDebugEventWidget::Submit() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGDebugEventWidget_Submit_Patch::Postfix(BattleTech.UI.SGDebugEventWidget __instance, BattleTech.UI.SGDebugEventWidget+DebugType ___curType, BattleTech.SimGameState ___Sim)

14:10:53.863 [Info] Running ILHook manipulator on void BattleTech.UI.SGDebugEventWidget::Submit()
14:10:53.866 [Info] Writing postfixes
14:10:53.881 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.885 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CompleteAllContractObjectives_Patch::Postfix()

14:10:53.887 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CompleteAllContractObjectives()
14:10:53.890 [Info] Writing postfixes
14:10:53.901 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.906 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillTarget_Patch::Postfix()

14:10:53.911 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillTarget()
14:10:53.916 [Info] Writing postfixes
14:10:53.926 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.930 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_KillAllEnemies_Patch::Postfix()

14:10:53.933 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KillAllEnemies()
14:10:53.935 [Info] Writing postfixes
14:10:53.944 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.947 [Info] Patching void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_SetGodMode_Patch::Postfix()

14:10:53.951 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::SetGodMode(BattleTech.Team team)
14:10:53.954 [Info] Writing postfixes
14:10:53.964 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.969 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_DamageTarget_Patch::Postfix()

14:10:53.971 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_DamageTarget()
14:10:53.974 [Info] Writing postfixes
14:10:53.990 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:53.994 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_CritTarget_Patch::Postfix()

14:10:53.997 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_CritTarget()
14:10:54.000 [Info] Writing postfixes
14:10:54.008 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.011 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUD_DEBUG_ApplyInstability_Patch::Postfix()

14:10:54.014 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_ApplyInstability()
14:10:54.017 [Info] Writing postfixes
14:10:54.025 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.028 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.CombatDebugHUDDEBUG_KnockdownTarget_Patch::Postfix()

14:10:54.031 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_KnockdownTarget()
14:10:54.033 [Info] Writing postfixes
14:10:54.040 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.044 [Info] Patching void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CBTBehaviorsEnhanced.Patches.CombatDebugHUDPatches::Postfix(BattleTech.UI.CombatHUD ___combatHUD)
* static void PersistentMapClient.CombatDebugHUD_DEBUG_OverheatTarget_Patch::Postfix()

14:10:54.046 [Info] Running ILHook manipulator on void BattleTech.UI.CombatDebugHUD::DEBUG_OverheatTarget()
14:10:54.049 [Info] Writing postfixes
14:10:54.055 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.058 [Info] Patching void BattleTech.StarSystem::ResetContracts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.StarSystem_ResetContracts_Patch::Postfix(BattleTech.StarSystem __instance)

14:10:54.061 [Info] Running ILHook manipulator on void BattleTech.StarSystem::ResetContracts()
14:10:54.064 [Info] Writing postfixes
14:10:54.071 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.075 [Info] Patching void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_PrepareBreadcrumb_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract& contract)

14:10:54.078 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepareBreadcrumb(BattleTech.Contract contract)
14:10:54.081 [Info] Writing postfixes
14:10:54.092 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.098 [Info] Patching BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SimGameState_AddPredefinedContract_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.Contract __result)

14:10:54.100 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::AddPredefinedContract2(BattleTech.SimGameState+AddContractData contractData)
14:10:54.103 [Info] Writing postfixes
14:10:54.118 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.123 [Info] Patching void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.SGSystemViewPopulator_UpdateRoutedSystem_Patch::Postfix(BattleTech.UI.SGSystemViewPopulator __instance, BattleTech.StarSystem ___starSystem, BattleTech.SimGameState ___simState)

14:10:54.127 [Info] Running ILHook manipulator on void BattleTech.UI.SGSystemViewPopulator::UpdateRoutedSystem()
14:10:54.129 [Info] Writing postfixes
14:10:54.151 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.156 [Info] Patching void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PersistentMapClient.Starmap_PopulateMap_Patch::Postfix(BattleTech.Starmap __instance, BattleTech.SimGameState simGame)

14:10:54.159 [Info] Running ILHook manipulator on void BattleTech.Starmap::PopulateMap(BattleTech.SimGameState simGame)
14:10:54.162 [Info] Writing postfixes
14:10:54.170 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.176 [Info] Patching void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort) with 4 prefixes, 4 postfixes, 1 transpilers, 0 finalizers
4 prefixes:
* static void LootMagnet.Contract_CompleteContract::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void CustAmmoCategories.Contract_CompleteContractAmmoRestore::Prefix(BattleTech.Contract __instance)
* static void CustomUnits.Contract_CompleteContract_log_only::Prefix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void BiggerDrops.Patches.Contract_CompleteContract::Prefix(BattleTech.Contract __instance)
4 postfixes:
* static void MechAffinity.Patches.Contract_CompleteContract_Patch::Postfix()
* static void CustomUnits.Contract_CompleteContract_log_only::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result, bool isGoodFaithEffort)
* static void LewdableTanks.Patches.Contract_CompleteContract::Postfix(BattleTech.Contract __instance)
* static void PersistentMapClient.Contract_CompleteContract_Patch::Postfix(BattleTech.Contract __instance, BattleTech.MissionResult result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:10:54.179 [Info] Running ILHook manipulator on void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:54.182 [Info] Transpiling void BattleTech.Contract::CompleteContract(BattleTech.MissionResult result, bool isGoodFaithEffort)
14:10:54.186 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomUnits.Contract_CompleteContract::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:10:54.190 [Info] Writing prefixes
14:10:54.193 [Info] Writing postfixes
14:10:54.211 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.214 [Info] Patching void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Prefix(BattleTech.StarSystem __instance, Action onContractsFetched)
1 postfixes:
* static void PersistentMapClient.StarSystem_GenerateInitialContracts_Patch::Postfix(BattleTech.StarSystem __instance)

14:10:54.217 [Info] Running ILHook manipulator on void BattleTech.StarSystem::GenerateInitialContracts(Action onContractsFetched)
14:10:54.220 [Info] Writing prefixes
14:10:54.223 [Info] Writing postfixes
14:10:54.230 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.234 [Info] Patching BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PersistentMapClient.SimGameState_CreateTravelContract_Patch::Prefix(BattleTech.FactionValue& employer, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& neutralToAll, BattleTech.FactionValue& hostileToAll)

14:10:54.237 [Info] Running ILHook manipulator on BattleTech.Contract BattleTech.SimGameState::CreateTravelContract(string mapName, string mapPath, string encounterGuid, BattleTech.ContractTypeValue contractTypeValue, BattleTech.Framework.ContractOverride ovr, BattleTech.GameContext context, BattleTech.FactionValue employer, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue employersAlly, BattleTech.FactionValue neutralToAll, BattleTech.FactionValue hostileToAll, bool isGlobal, int difficulty)
14:10:54.239 [Info] Writing prefixes
14:10:54.250 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.254 [Info] Patching void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Pre(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)
* static void PersistentMapClient.SimGameState_PrepContract_Patch::Prefix(BattleTech.SimGameState __instance, BattleTech.FactionValue& employer, BattleTech.FactionValue& employersAlly, BattleTech.FactionValue& target, BattleTech.FactionValue& targetsAlly, BattleTech.FactionValue& NeutralToAll, BattleTech.FactionValue& HostileToAll, BattleTech.StarSystem& system)
1 postfixes:
* static void BattletechPerformanceFix.ExtraLogging::PrepContract_Post(BattleTech.SimGameState __instance, BattleTech.Contract contract, BattleTech.StarSystem system)

14:10:54.257 [Info] Running ILHook manipulator on void BattleTech.SimGameState::PrepContract(BattleTech.Contract contract, BattleTech.FactionValue employer, BattleTech.FactionValue employersAlly, BattleTech.FactionValue target, BattleTech.FactionValue targetsAlly, BattleTech.FactionValue NeutralToAll, BattleTech.FactionValue HostileToAll, Biome+BIOMESKIN skin, int presetSeed, BattleTech.StarSystem system)
14:10:54.259 [Info] Writing prefixes
14:10:54.262 [Info] Writing postfixes
14:10:54.272 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.275 [Info] Patching void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool PersistentMapClient.SimGameState_CreateBreakContractWarning_Patch::Prefix(BattleTech.SimGameState __instance, Action continueAction, Action cancelAction)

14:10:54.278 [Info] Running ILHook manipulator on void BattleTech.SimGameState::CreateBreakContractWarning(Action continueAction, Action cancelAction)
14:10:54.280 [Info] Writing prefixes
14:10:54.289 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.294 [Info] Patching void BattleTech.SimGameState::OnDayPassed(int timeLapse) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MechAffinity.Patches.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)
* static void CustomShops.Patches.SimGameState_OnDayPassed::RefreshShop()
* static void PersistentMapClient.SimGameState_OnDayPassed::Postfix(BattleTech.SimGameState __instance)

14:10:54.297 [Info] Running ILHook manipulator on void BattleTech.SimGameState::OnDayPassed(int timeLapse)
14:10:54.299 [Info] Writing postfixes
14:10:54.314 [Info] Cumulative overhead setting up Harmony 1<>X interoperability: 390 ms
14:10:54.320 [Info] Patching void BattleTech.SimGameState::_OnAttachUXComplete() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void MechAffinity.Patches.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)
* static void PersistentMapClient.SimGameState_OnAttachUXComplete::Postfix(BattleTech.SimGameState __instance)

14:10:54.323 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnAttachUXComplete()
14:10:54.326 [Info] Writing postfixes
14:11:00.275 [Info] ### Harmony id=io.kmission.fastload, version=2.10.1.0, location=E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\ModTek\Harmony12X\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CustomPrewarm.Core::FinishedLoading(System.Collections.Generic.List<string> loadOrder), location E:\SteamLibrary\steamapps\common\BATTLETECH\Mods\CustomPrewarm\CustomPrewarm.dll
### At 2023-05-07 02.11.00
14:11:00.280 [Info] Patching void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameContext_Rehydrate::Prefix(BattleTech.SimGameContext __instance, BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

14:11:00.282 [Info] Running ILHook manipulator on void BattleTech.SimGameContext::Rehydrate(BattleTech.SimGameState simState, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
14:11:00.285 [Info] Writing prefixes
14:11:00.293 [Info] Patching void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MetadataDatabase_WriteInMemoryDBToDisk::Prefix(BattleTech.Data.MetadataDatabase __instance, string filePath)

14:11:00.296 [Info] Running ILHook manipulator on void BattleTech.Data.MetadataDatabase::WriteInMemoryDBToDisk(string filePath)
14:11:00.299 [Info] Writing prefixes
14:11:00.309 [Info] Patching void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameUXCreator_OnSimGameInitializeComplete::Prefix(BattleTech.UI.SimGameUXCreator __instance, MessageCenterMessage message)

14:11:00.312 [Info] Running ILHook manipulator on void BattleTech.UI.SimGameUXCreator::OnSimGameInitializeComplete(MessageCenterMessage message)
14:11:00.315 [Info] Writing prefixes
14:11:00.321 [Info] Patching virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SGRoomController_Navigation_LeaveRoom::Prefix(BattleTech.UI.SGRoomController_Navigation __instance, bool ignoreFader)

14:11:00.324 [Info] Running ILHook manipulator on virtual void BattleTech.UI.SGRoomController_Navigation::LeaveRoom(bool ignoreFader)
14:11:00.327 [Info] Writing prefixes
14:11:00.334 [Info] Patching virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MechDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+MechDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

14:11:00.337 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+MechDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
14:11:00.340 [Info] Writing prefixes
14:11:00.350 [Info] Patching virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.PilotHandler_Rehydrate::Prefix(BattleTech.SimGameContext+PilotHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

14:11:00.353 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+PilotHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
14:11:00.356 [Info] Writing prefixes
14:11:00.364 [Info] Patching virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.StarSystemHandler_Rehydrate::Prefix(BattleTech.SimGameContext+StarSystemHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

14:11:00.366 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+StarSystemHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
14:11:00.369 [Info] Writing prefixes
14:11:00.377 [Info] Patching virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FactionDefHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FactionDefHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

14:11:00.381 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FactionDefHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
14:11:00.384 [Info] Writing prefixes
14:11:00.392 [Info] Patching virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.FlashpointHandler_Rehydrate::Prefix(BattleTech.SimGameContext+FlashpointHandler __instance, BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)

14:11:00.395 [Info] Running ILHook manipulator on virtual void BattleTech.SimGameContext+FlashpointHandler::Rehydrate(BattleTech.SimGameState simState, BattleTech.GameContext gameContext, BattleTech.Save.SimGameSave simGameSave, BattleTech.Save.Test.SerializableReferenceContainer references)
14:11:00.398 [Info] Writing prefixes
14:11:00.405 [Info] Patching void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.GameInstance_CreateSim::Prefix(BattleTech.GameInstance __instance, BattleTech.SimGameState+SimGameType gameType, bool debug)

14:11:00.408 [Info] Running ILHook manipulator on void BattleTech.GameInstance::CreateSim(BattleTech.SimGameState+SimGameType gameType, bool debug)
14:11:00.411 [Info] Writing prefixes
14:11:00.419 [Info] Patching System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SaveGameStructure_GetAllCareerSlots::Postfix(BattleTech.Save.SaveGameStructure.SaveGameStructure __instance, System.Collections.Generic.List`1[[BattleTech.Save.SaveGameStructure.SlotModel, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:11:00.422 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.Save.SaveGameStructure.SlotModel> BattleTech.Save.SaveGameStructure.SaveGameStructure::GetAllCareerSlots()
14:11:00.424 [Info] Writing postfixes
14:11:00.433 [Info] Patching bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.MainMenu_EnableCareerLoadIfCareerSaves::Prefix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

14:11:00.436 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::EnableCareerLoadIfCareerSaves(MessageCenterMessage message)
14:11:00.439 [Info] Writing prefixes
14:11:00.450 [Info] Patching bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.MainMenu_ShowRefreshingSaves::Postfix(BattleTech.UI.MainMenu __instance, MessageCenterMessage message)

14:11:00.452 [Info] Running ILHook manipulator on bool BattleTech.UI.MainMenu::ShowRefreshingSaves(MessageCenterMessage message)
14:11:00.455 [Info] Writing postfixes
14:11:00.464 [Info] Patching static void HBS.Util.JSONSerializationUtility::LogWarning(string error) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.JSONSerializationUtility_JSONSerializationUtility::Prefix()

14:11:00.467 [Info] Running ILHook manipulator on static void HBS.Util.JSONSerializationUtility::LogWarning(string error)
14:11:00.469 [Info] Writing prefixes
14:11:00.478 [Info] Patching void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.SimGameState__OnInit::Prefix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
1 postfixes:
* static void IRTweaks.Modules.Misc.SimGameState__OnInit_Patch::Postfix(BattleTech.SimGameState __instance, BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)

14:11:00.481 [Info] Running ILHook manipulator on void BattleTech.SimGameState::_OnInit(BattleTech.GameInstance game, BattleTech.SimGameDifficulty difficulty)
14:11:00.483 [Info] Writing prefixes
14:11:00.487 [Info] Writing postfixes
14:11:00.496 [Info] Patching bool BattleTech.SimGameState::_OnHeadlessComplete() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomPrewarm.SimGameState__OnHeadlessComplete::Postfix(BattleTech.SimGameState __instance, Boolean& __result)

14:11:00.499 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::_OnHeadlessComplete()
14:11:00.502 [Info] Writing postfixes
14:11:00.513 [Info] Patching bool BattleTech.SimGameState::HandleSaveHydrate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_HandleSaveHydrate::Prefix(BattleTech.SimGameState __instance, Boolean& __result, BattleTech.Save.GameInstanceSave& ___save)

14:11:00.515 [Info] Running ILHook manipulator on bool BattleTech.SimGameState::HandleSaveHydrate()
14:11:00.518 [Info] Writing prefixes
14:11:00.526 [Info] Patching void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomComponents.SimGameState_RespondToDefsLoadComplete_Patch::Prefix(Boolean& __runOriginal, BattleTech.SimGameState __instance)
* static void CustomPrewarm.SimGameState_RespondToDefsLoadComplete::Prefix()

14:11:00.529 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RespondToDefsLoadComplete(BattleTech.Data.LoadRequest request)
14:11:00.532 [Info] Writing prefixes
14:11:00.540 [Info] Patching void BattleTech.SimGameState::RequestDataManagerResources() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.SimGameState_RequestDataManagerResources::Prefix(BattleTech.SimGameState __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:11:00.543 [Info] Running ILHook manipulator on void BattleTech.SimGameState::RequestDataManagerResources()
14:11:00.545 [Info] Transpiling void BattleTech.SimGameState::RequestDataManagerResources()
14:11:00.549 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomComponents.Fixes.SimGameState_RequestDataManagerResources_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:11:00.554 [Info] Writing prefixes
14:11:00.572 [Info] Patching void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Prefix(System.Diagnostics.Stopwatch& __state)
1 postfixes:
* static void CustomPrewarm.GameInstanceSave_RequestResourcesCustom::Postfix(System.Diagnostics.Stopwatch& __state)

14:11:00.574 [Info] Running ILHook manipulator on void BattleTech.Save.GameInstanceSave::RequestResourcesCustom(BattleTech.Data.DataManager dataManager)
14:11:00.577 [Info] Writing prefixes
14:11:00.580 [Info] Writing postfixes
14:11:00.589 [Info] Patching void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void CustomSettings.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomUnits.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)
* static void CustomPrewarm.SaveManager_Constructor::Postfix(BattleTech.Save.SaveManager __instance)

14:11:00.591 [Info] Running ILHook manipulator on void BattleTech.Save.SaveManager::.ctor(MessageCenter messageCenter)
14:11:00.594 [Info] Writing postfixes
14:11:00.601 [Info] Patching void BattleTech.UnityGameInstance::InitUserSettings() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_InitUserSettings::Prefix(BattleTech.UnityGameInstance __instance)
1 postfixes:
* static void Sheepy.BattleTechMod.BattleMod::RunGameStarts()

14:11:00.604 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::InitUserSettings()
14:11:00.607 [Info] Writing prefixes
14:11:00.610 [Info] Writing postfixes
14:11:00.617 [Info] Patching void BattleTech.UnityGameInstance::OnModsInitComplete() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UnityGameInstance_OnModsInitComplete::Prefix(BattleTech.UnityGameInstance __instance)

14:11:00.621 [Info] Running ILHook manipulator on void BattleTech.UnityGameInstance::OnModsInitComplete()
14:11:00.623 [Info] Writing prefixes
14:11:00.632 [Info] Patching void BattleTech.Save.UserSettings::Save() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Save::Prefix(BattleTech.Save.UserSettings __instance)

14:11:00.635 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Save()
14:11:00.637 [Info] Writing prefixes
14:11:00.648 [Info] Patching void BattleTech.BTInput::LoadSavedBindings() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomPrewarm.BTInput_LoadSavedBindings::Prefix(BattleTech.BTInput __instance)

14:11:00.651 [Info] Running ILHook manipulator on void BattleTech.BTInput::LoadSavedBindings()
14:11:00.654 [Info] Writing prefixes
14:11:00.667 [Info] Patching void BattleTech.Save.UserSettings::Load(Action loadComplete) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.UserSettings_Load::Prefix(BattleTech.Save.UserSettings __instance, Action loadComplete)

14:11:00.670 [Info] Running ILHook manipulator on void BattleTech.Save.UserSettings::Load(Action loadComplete)
14:11:00.673 [Info] Writing prefixes
14:11:00.684 [Info] Patching virtual void BattleTech.AbilityDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomUnits.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance, String& json, CustomUnits.AbilityDefEx& __state)
* static bool CustomPrewarm.Serialize.AbilityDef_FromJSON::Prefix(BattleTech.AbilityDef __instance)
1 postfixes:
* static void CustomUnits.AbilityDef_FromJSON::Postfix(BattleTech.AbilityDef __instance, string json, CustomUnits.AbilityDefEx __state)

14:11:00.687 [Info] Running ILHook manipulator on virtual void BattleTech.AbilityDef::FromJSON(string json)
14:11:00.690 [Info] Writing prefixes
14:11:00.692 [Info] Writing postfixes
14:11:00.698 [Info] Patching virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.AmmunitionBoxDef __instance, String& json, String& __state)
* static bool CustomPrewarm.Serialize.AmmunitionBoxDef_FromJSON::Prefix(BattleTech.MechDef __instance)
2 postfixes:
* static void CustAmmoCategories.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance, String& __state)
* static void CustAmmoCategoriesPatches.AmmunitionBoxDef_FromJSON::Postfix(BattleTech.AmmunitionBoxDef __instance)

14:11:00.701 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionBoxDef::FromJSON(string json)
14:11:00.704 [Info] Writing prefixes
14:11:00.706 [Info] Writing postfixes
14:11:00.713 [Info] Patching virtual void BattleTech.AmmunitionDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Prefix(BattleTech.AmmunitionDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static bool CustomPrewarm.Serialize.AmmunitionDef_FromJSON::Prefix(BattleTech.AmmunitionDef __instance)
1 postfixes:
* static void CustomAmmoCategoriesPatches.BattleTech_AmmunitionDef_fromJSON_Patch::Postfix(BattleTech.AmmunitionDef __instance, CustAmmoCategories.ExtDefinitionParceInfo& __state)

14:11:00.716 [Info] Running ILHook manipulator on virtual void BattleTech.AmmunitionDef::FromJSON(string json)
14:11:00.719 [Info] Writing prefixes
14:11:00.721 [Info] Writing postfixes
14:11:00.728 [Info] Patching virtual void BattleTech.BackgroundDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BackgroundDef_FromJSON::Prefix(BattleTech.BackgroundDef __instance)

14:11:00.731 [Info] Running ILHook manipulator on virtual void BattleTech.BackgroundDef::FromJSON(string json)
14:11:00.733 [Info] Writing prefixes
14:11:00.739 [Info] Patching virtual void BattleTech.BaseDescriptionDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.BaseDescriptionDef_FromJSON::Prefix(BattleTech.BaseDescriptionDef __instance)

14:11:00.742 [Info] Running ILHook manipulator on virtual void BattleTech.BaseDescriptionDef::FromJSON(string json)
14:11:00.745 [Info] Writing prefixes
14:11:00.752 [Info] Patching virtual void BattleTech.ChassisDef::FromJSON(string json) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Prefix(BattleTech.ChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.ChassisDef_FromJSON::Prefix(BattleTech.ChassisDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.ChassisDef_FromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)
* static void CustomUnits.BattleTech_ChassisDef_fromJSON_Patch::Postfix(BattleTech.ChassisDef __instance)

14:11:00.755 [Info] Running ILHook manipulator on virtual void BattleTech.ChassisDef::FromJSON(string json)
14:11:00.757 [Info] Writing prefixes
14:11:00.760 [Info] Writing postfixes
14:11:00.767 [Info] Patching virtual void BattleTech.HardpointDataDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance, String& json, CustomUnits.CustomHardpointsDef& __state)
* static bool CustomPrewarm.Serialize.HardpointDataDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)
1 postfixes:
* static void CustomUnits.HardpointDataDef_FromJSON::Postfix(BattleTech.HardpointDataDef __instance, CustomUnits.CustomHardpointsDef& __state)

14:11:00.769 [Info] Running ILHook manipulator on virtual void BattleTech.HardpointDataDef::FromJSON(string json)
14:11:00.773 [Info] Writing prefixes
14:11:00.775 [Info] Writing postfixes
14:11:00.781 [Info] Patching virtual void BattleTech.MechDef::FromJSON(string json) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.MechDef_FromJSON_fake::Prefix(BattleTech.MechDef __instance, String& json)
* static bool CustomPrewarm.Serialize.MechDef_FromJSON::Prefix(BattleTech.MechDef __instance)

14:11:00.784 [Info] Running ILHook manipulator on virtual void BattleTech.MechDef::FromJSON(string json)
14:11:00.787 [Info] Writing prefixes
14:11:00.793 [Info] Patching virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.MovementCapabilitiesDef_FromJSON::Prefix(BattleTech.HardpointDataDef __instance)

14:11:00.796 [Info] Running ILHook manipulator on virtual void BattleTech.MovementCapabilitiesDef::FromJSON(string json)
14:11:00.799 [Info] Writing prefixes
14:11:00.805 [Info] Patching virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.PathingCapabilitiesDef_FromJSON::Prefix(BattleTech.PathingCapabilitiesDef __instance)

14:11:00.808 [Info] Running ILHook manipulator on virtual void BattleTech.PathingCapabilitiesDef::FromJSON(string json)
14:11:00.811 [Info] Writing prefixes
14:11:00.817 [Info] Patching virtual void BattleTech.StarSystemDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.StarSystemDef_FromJSON::Prefix(BattleTech.StarSystemDef __instance)

14:11:00.820 [Info] Running ILHook manipulator on virtual void BattleTech.StarSystemDef::FromJSON(string json)
14:11:00.823 [Info] Writing prefixes
14:11:00.829 [Info] Patching virtual void BattleTech.HeatSinkDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.HeatSinkDef_FromJSON::Prefix(BattleTech.HeatSinkDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.HeatSinkDef_FromJSON_Patch::Postfix(BattleTech.HeatSinkDef __instance)

14:11:00.832 [Info] Running ILHook manipulator on virtual void BattleTech.HeatSinkDef::FromJSON(string json)
14:11:00.835 [Info] Writing prefixes
14:11:00.837 [Info] Writing postfixes
14:11:00.846 [Info] Patching virtual void BattleTech.JumpJetDef::FromJSON(string json) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.JumpJetDef_FromJSON::Prefix(BattleTech.JumpJetDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.JumpJetDef_FromJSON_Patch::Postfix(BattleTech.JumpJetDef __instance)

14:11:00.849 [Info] Running ILHook manipulator on virtual void BattleTech.JumpJetDef::FromJSON(string json)
14:11:00.851 [Info] Writing prefixes
14:11:00.854 [Info] Writing postfixes
14:11:00.861 [Info] Patching virtual void BattleTech.UpgradeDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategoriesPatches.UpgradeDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.UpgradeDef_FromJSON::Prefix(BattleTech.UpgradeDef __instance)
1 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.UpgradeDef_FromJSON_Patch::Postfix(BattleTech.UpgradeDef __instance)

14:11:00.864 [Info] Running ILHook manipulator on virtual void BattleTech.UpgradeDef::FromJSON(string json)
14:11:00.867 [Info] Writing prefixes
14:11:00.870 [Info] Writing postfixes
14:11:00.878 [Info] Patching virtual void BattleTech.VehicleChassisDef::FromJSON(string json) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Prefix(BattleTech.VehicleChassisDef __instance, String& json)
* static bool CustomPrewarm.Serialize.VehicleChassisDef_FromJSON::Prefix(BattleTech.VehicleChassisDef __instance)
1 postfixes:
* static void CustomUnits.BattleTech_VehicleChassisDef_fromJSON_Patch::Postfix(BattleTech.VehicleChassisDef __instance)

14:11:00.881 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleChassisDef::FromJSON(string json)
14:11:00.883 [Info] Writing prefixes
14:11:00.887 [Info] Writing postfixes
14:11:00.894 [Info] Patching virtual void BattleTech.VehicleDef::FromJSON(string json) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomPrewarm.Serialize.VehicleDef_FromJSON::Prefix(BattleTech.VehicleDef __instance)

14:11:00.897 [Info] Running ILHook manipulator on virtual void BattleTech.VehicleDef::FromJSON(string json)
14:11:00.901 [Info] Writing prefixes
14:11:00.908 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
2 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)

14:11:00.911 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
14:11:00.915 [Info] Writing prefixes
14:11:00.918 [Info] Writing postfixes
14:11:01.016 [Info] Patching void BattleTech.StackManager::Update() with 0 prefixes, 0 postfixes, 0 transpilers, 1 finalizers
1 finalizers:
* static Exception CustomAmmoCategoriesPrivate.StackManager_Update::Finalizer(BattleTech.StackManager __instance, Exception __exception)

14:11:01.020 [Info] Running ILHook manipulator on void BattleTech.StackManager::Update()
14:11:01.022 [Info] Writing finalizers
14:11:01.036 [Info] Patching virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Prefix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, Object& data, bool __result, BattleTech.BaseComponentRef& __state)
4 postfixes:
* static void MechEngineer.Features.OverrideDescriptions.Patches.TooltipPrefab_WeaponSetData_Patch::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data)
* static void CustomActivatableEquipment.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result)
* static void IRTweaks.Modules.UI.WeaponTooltips_TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, object data, TMPro.TextMeshProUGUI ___rangeType, TMPro.TextMeshProUGUI ___damage)
* static void CustAmmoCategories.TooltipPrefab_Weapon_SetData::Postfix(BattleTech.UI.Tooltips.TooltipPrefab_Weapon __instance, bool __result, BattleTech.BaseComponentRef& __state)

14:11:01.040 [Info] Running ILHook manipulator on virtual bool BattleTech.UI.Tooltips.TooltipPrefab_Weapon::SetData(object data)
14:11:01.043 [Info] Writing prefixes
14:11:01.046 [Info] Writing postfixes
14:11:01.064 [Info] Patching void BattleTech.UI.MechLabItemSlotElement::RefreshInfo() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.MechLabItemSlotElement_RefreshInfo::Prefix(BattleTech.UI.MechLabItemSlotElement __instance)

14:11:01.067 [Info] Running ILHook manipulator on void BattleTech.UI.MechLabItemSlotElement::RefreshInfo()
14:11:01.070 [Info] Writing prefixes
14:11:01.079 [Info] Patching void BattleTech.UI.Tooltips.TooltipManager::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.TooltipManager_Awake::Prefix(BattleTech.UI.Tooltips.TooltipManager __instance, System.Collections.Generic.List`1[[BattleTech.UI.Tooltips.TooltipManager+TooltipObject, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___TooltipPool)

14:11:01.082 [Info] Running ILHook manipulator on void BattleTech.UI.Tooltips.TooltipManager::Awake()
14:11:01.086 [Info] Writing prefixes
14:11:01.096 [Info] Patching BehaviorTreeResults BehaviorTree::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Prefix(BehaviorTree __instance)
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::BehaviorTree_Update_Postfix(BehaviorTree __instance, BehaviorTreeResults& __result)

14:11:01.099 [Info] Running ILHook manipulator on BehaviorTreeResults BehaviorTree::Update()
14:11:01.102 [Info] Writing prefixes
14:11:01.105 [Info] Writing postfixes
14:11:01.135 [Info] Patching virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

14:11:01.138 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateMoveCandidatesNode::Tick()
14:11:01.140 [Info] Writing postfixes
14:11:01.172 [Info] Patching virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

14:11:01.174 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateSprintMoveCandidatesNode::Tick()
14:11:01.177 [Info] Writing postfixes
14:11:01.207 [Info] Patching virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

14:11:01.210 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateForwardMoveCandidatesNode::Tick()
14:11:01.215 [Info] Writing postfixes
14:11:01.246 [Info] Patching virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

14:11:01.249 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateReverseMoveCandidatesNode::Tick()
14:11:01.252 [Info] Writing postfixes
14:11:01.283 [Info] Patching virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::MoveCandidatesFilter(LeafBehaviorNode __instance, BehaviorTree ___tree)

14:11:01.286 [Info] Running ILHook manipulator on virtual BehaviorTreeResults GenerateJumpMoveCandidatesNode::Tick()
14:11:01.288 [Info] Writing postfixes
14:11:01.319 [Info] Patching virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

14:11:01.322 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasDirectLOFToAnyHostileFromReachableLocationsNode::Tick()
14:11:01.324 [Info] Writing prefixes
14:11:01.327 [Info] Writing postfixes
14:11:01.356 [Info] Patching virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

14:11:01.359 [Info] Running ILHook manipulator on virtual BehaviorTreeResults HasLOFToAnyHostileFromReachableLocationsNode::Tick()
14:11:01.361 [Info] Writing prefixes
14:11:01.364 [Info] Writing postfixes
14:11:01.372 [Info] Patching static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.AIPathingLimiter::Prefix()
1 postfixes:
* static void CustAmmoCategories.AIPathingLimiter::Postfix()

14:11:01.375 [Info] Running ILHook manipulator on static float AIUtil::CalcHighFidelityMaxExpectedDamageToHostile(BattleTech.AbstractActor unit, BattleTech.ICombatant target, bool isInspired, bool ignoreHitChance, bool accurateWeaponDmg)
14:11:01.379 [Info] Writing prefixes
14:11:01.382 [Info] Writing postfixes
14:11:01.389 [Info] Patching System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Prefix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
2 postfixes:
* static void CustomUnits.PathNodeGrid_GetSampledPathNodes::Postfix(BattleTech.PathNodeGrid __instance, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)
* static void CustAmmoCategories.AIPathingLimiter::GetSampledPathNodes_Postfix(BattleTech.PathNodeGrid __instance, BattleTech.AbstractActor ___owningActor, BattleTech.MoveType ___moveType, BattleTech.CombatGameState ___combat, System.Collections.Generic.List`1[[BattleTech.PathNode, Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

14:11:01.392 [Info] Running ILHook manipulator on System.Collections.Generic.List<BattleTech.PathNode> BattleTech.PathNodeGrid::GetSampledPathNodes()
14:11:01.394 [Info] Writing prefixes
14:11:01.397 [Info] Writing postfixes
14:11:01.852 [Info] Patching static void PanicSystem.Components.DamageHandler::ProcessBatchedTurnDamage(BattleTech.AbstractActor actor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.UnitCombatStatisticHelper::DamageHandler_ProcessBatchedTurnDamage_Prefix(BattleTech.AbstractActor actor, Boolean& __state)
1 postfixes:
* static void CustAmmoCategories.UnitCombatStatisticHelper::DamageHandler_ProcessBatchedTurnDamage_Postfix(BattleTech.AbstractActor actor, Boolean& __state)

14:11:01.855 [Info] Running ILHook manipulator on static void PanicSystem.Components.DamageHandler::ProcessBatchedTurnDamage(BattleTech.AbstractActor actor)
14:11:01.858 [Info] Writing prefixes
14:11:01.861 [Info] Writing postfixes
14:11:01.888 [Info] Patching static void PanicSystem.Components.AARIcons::AddEjectedMech(UnityEngine.RectTransform KillGridParent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.UnitCombatStatisticHelper::AARIcons_AddEjectedMech_Prefix()

14:11:01.891 [Info] Running ILHook manipulator on static void PanicSystem.Components.AARIcons::AddEjectedMech(UnityEngine.RectTransform KillGridParent)
14:11:01.893 [Info] Writing prefixes
14:11:01.900 [Info] Patching static void PanicSystem.Components.AARIcons::AddEjectedVehicle(UnityEngine.RectTransform KillGridParent) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustAmmoCategories.UnitCombatStatisticHelper::AARIcons_AddEjectedVehicle_Prefix()

14:11:01.903 [Info] Running ILHook manipulator on static void PanicSystem.Components.AARIcons::AddEjectedVehicle(UnityEngine.RectTransform KillGridParent)
14:11:01.905 [Info] Writing prefixes
14:11:01.913 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
2 postfixes:
* static void CustomUnits.MechStatisticsRules_CalculateHeatEfficiencyStat::Postfix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateHeatEfficiencyStat_Postfix(BattleTech.MechDef mechDef)

14:11:01.917 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:11:01.919 [Info] Writing prefixes
14:11:01.922 [Info] Writing postfixes
14:11:01.932 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateRangeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateRangeStat_Postfix(BattleTech.MechDef mechDef)

14:11:01.935 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateRangeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:11:01.937 [Info] Writing prefixes
14:11:01.940 [Info] Writing postfixes
14:11:01.946 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateFirepowerStat_Postfix(BattleTech.MechDef mechDef)

14:11:01.949 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateFirepowerStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:11:01.951 [Info] Writing prefixes
14:11:01.954 [Info] Writing postfixes
14:11:01.961 [Info] Patching static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Prefix(BattleTech.MechDef mechDef)
* static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMeleeStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
* static bool CustomUnits.MechStatisticsRules_CalculateMeleeStat::Prefix(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::CalculateMeleeStat_Postfix(BattleTech.MechDef mechDef)

14:11:01.964 [Info] Running ILHook manipulator on static void BattleTech.MechStatisticsRules::CalculateMeleeStat(BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue)
14:11:01.967 [Info] Writing prefixes
14:11:01.969 [Info] Writing postfixes
14:11:01.977 [Info] Patching void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Prefix(BattleTech.MechDef def)
1 postfixes:
* static void CustAmmoCategories.WeaponDefModesCollectHelper::StatTooltipData_SetData_Postfix(BattleTech.MechDef def)

14:11:01.979 [Info] Running ILHook manipulator on void BattleTech.StatTooltipData::SetData(BattleTech.MechDef def)
14:11:01.982 [Info] Writing prefixes
14:11:01.985 [Info] Writing postfixes
14:11:01.992 [Info] Patching void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool MissionControl.Patches.PilotInjurePilotPatch::Prefix(BattleTech.Pilot __instance, Boolean& __runOriginal)
* static bool IRTweaks.Modules.Combat.Pilot_InjurePilot::Prefix(BattleTech.Pilot __instance, BattleTech.DamageType damageType, Boolean& ___needsInjury, BattleTech.InjuryReason& ___injuryReason, Boolean& __runOriginal)
* static void CustomActivatablePatches.InjurePilot_Check::Prefix(BattleTech.Pilot __instance, BattleTech.Pilot& __state)
3 postfixes:
* static void PilotHealthPopup.Patches.Pilot_InjurePilot_Patch::Postfix(BattleTech.Pilot __instance)
* static void CustomUnits.Pilot_InjurePilot::Postfix(BattleTech.Pilot __instance, string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
* static void CustomActivatablePatches.InjurePilot_Check::Postfix(BattleTech.Pilot __instance, BattleTech.Pilot& __state)

14:11:01.995 [Info] Running ILHook manipulator on void BattleTech.Pilot::InjurePilot(string sourceID, int stackItemUID, int dmg, BattleTech.DamageType damageType, BattleTech.Weapon sourceWeapon, BattleTech.AbstractActor sourceActor)
14:11:01.998 [Info] Writing prefixes
14:11:02.001 [Info] Writing postfixes
14:11:02.008 [Info] Patching virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects) with 3 prefixes, 5 postfixes, 2 transpilers, 0 finalizers
3 prefixes:
* static void CustomActivatableEquipment.MechComponent_DamageComponent_Stack::Prefix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.DamageIgnore.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.ComponentDamageLevel& damageLevel)
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel& damageLevel)
5 postfixes:
* static void MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance)
* static void MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel)
* static void CustomUnits.MechComponent_DamageComponent::Postfix(BattleTech.MechComponent __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
* static void CustomActivatableEquipment.MechComponent_DamageComponent_Stack::Postfix(BattleTech.MechComponent __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:11:02.012 [Info] Running ILHook manipulator on virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:11:02.014 [Info] Transpiling virtual void BattleTech.MechComponent::DamageComponent(BattleTech.WeaponHitInfo hitInfo, BattleTech.ComponentDamageLevel damageLevel, bool applyEffects)
14:11:02.017 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.CriticalEffects.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:11:02.021 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> MechEngineer.Features.ComponentExplosions.Patches.MechComponent_DamageComponent_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:11:02.024 [Info] Writing prefixes
14:11:02.027 [Info] Writing postfixes
14:11:02.760 [Info] Patching virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.762 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerMovementFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:02.765 [Info] Writing prefixes
14:11:02.768 [Info] Writing postfixes
14:11:02.774 [Info] Patching virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.777 [Info] Running ILHook manipulator on virtual float BattleTech.PreferStationaryWhenHostilesInMeleeRangeFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:02.780 [Info] Writing prefixes
14:11:02.783 [Info] Writing postfixes
14:11:02.791 [Info] Patching virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.793 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:02.795 [Info] Writing prefixes
14:11:02.798 [Info] Writing postfixes
14:11:02.805 [Info] Patching virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.808 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessSteepPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:02.811 [Info] Writing prefixes
14:11:02.814 [Info] Writing postfixes
14:11:02.820 [Info] Patching virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.823 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFarthestAwayFromClosestHostilePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:02.826 [Info] Writing prefixes
14:11:02.828 [Info] Writing postfixes
14:11:02.834 [Info] Patching virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.837 [Info] Running ILHook manipulator on virtual float BattleTech.PreferOutsideCoolDownRangePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:02.840 [Info] Writing prefixes
14:11:02.843 [Info] Writing postfixes
14:11:02.851 [Info] Patching virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.855 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotLethalPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
14:11:02.858 [Info] Writing prefixes
14:11:02.861 [Info] Writing postfixes
14:11:02.868 [Info] Patching virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.871 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFriendlyECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.874 [Info] Writing prefixes
14:11:02.876 [Info] Writing postfixes
14:11:02.882 [Info] Patching virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.885 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHostileECMPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.888 [Info] Writing prefixes
14:11:02.891 [Info] Writing postfixes
14:11:02.899 [Info] Patching virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.902 [Info] Running ILHook manipulator on virtual float BattleTech.PreferActiveProbePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.905 [Info] Writing prefixes
14:11:02.909 [Info] Writing postfixes
14:11:02.917 [Info] Patching virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.920 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLessTargetablePositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.923 [Info] Writing prefixes
14:11:02.926 [Info] Writing postfixes
14:11:02.934 [Info] Patching virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.937 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLocationsThatGrantGuardPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.940 [Info] Writing prefixes
14:11:02.943 [Info] Writing postfixes
14:11:02.951 [Info] Patching virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.955 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatSinkPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.957 [Info] Writing prefixes
14:11:02.960 [Info] Writing postfixes
14:11:02.967 [Info] Patching virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.970 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHeatPerTurnPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.973 [Info] Writing prefixes
14:11:02.976 [Info] Writing postfixes
14:11:02.983 [Info] Patching virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:02.986 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherDamageReductionPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:02.990 [Info] Writing prefixes
14:11:02.993 [Info] Writing postfixes
14:11:02.999 [Info] Patching virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.002 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherHigherMeleeToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.005 [Info] Writing prefixes
14:11:03.007 [Info] Writing postfixes
14:11:03.016 [Info] Patching virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.019 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherMovementBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode_unused)
14:11:03.022 [Info] Writing prefixes
14:11:03.025 [Info] Writing postfixes
14:11:03.037 [Info] Patching virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.042 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerStabilityDamageMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.047 [Info] Writing prefixes
14:11:03.052 [Info] Writing postfixes
14:11:03.065 [Info] Patching virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.068 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherVisibilityCostPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.071 [Info] Writing prefixes
14:11:03.074 [Info] Writing postfixes
14:11:03.082 [Info] Patching virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.085 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherSensorRangeMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.087 [Info] Writing prefixes
14:11:03.091 [Info] Writing postfixes
14:11:03.098 [Info] Patching virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.101 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerSignatureMultiplierPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.103 [Info] Writing prefixes
14:11:03.106 [Info] Writing postfixes
14:11:03.113 [Info] Patching virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.116 [Info] Running ILHook manipulator on virtual float BattleTech.PreferLowerRangedToHitPenaltyPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.119 [Info] Writing prefixes
14:11:03.122 [Info] Writing postfixes
14:11:03.129 [Info] Patching virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.132 [Info] Running ILHook manipulator on virtual float BattleTech.PreferHigherRangedDefenseBonusPositionFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode)
14:11:03.134 [Info] Writing prefixes
14:11:03.137 [Info] Writing postfixes
14:11:03.144 [Info] Patching virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.147 [Info] Running ILHook manipulator on virtual float BattleTech.PreferProximityToTaggedTargetFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.150 [Info] Writing prefixes
14:11:03.152 [Info] Writing postfixes
14:11:03.163 [Info] Patching virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.166 [Info] Running ILHook manipulator on virtual float BattleTech.PreferSurroundingHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.169 [Info] Writing prefixes
14:11:03.172 [Info] Writing postfixes
14:11:03.180 [Info] Patching virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.183 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNotSurroundedByHostileUnitsFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.185 [Info] Writing prefixes
14:11:03.188 [Info] Writing postfixes
14:11:03.195 [Warn] io.mission.customunits: You should only patch implemented methods/constructors to avoid issues. Patch the declared method virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) instead of virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused).
14:11:03.199 [Info] Patching virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix_Unused(BattleTech.AbstractActor unit_unused, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix_Unused(BattleTech.AbstractActor unit_unused, Nullable`1& __state)

14:11:03.202 [Info] Running ILHook manipulator on virtual float BattleTech.PreferEqualizeQuantityOverTeamFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit_unused, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.204 [Info] Writing prefixes
14:11:03.207 [Info] Writing postfixes
14:11:03.217 [Info] Patching virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.219 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideFenceNegativeLogicPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.223 [Info] Writing prefixes
14:11:03.225 [Info] Writing postfixes
14:11:03.233 [Info] Patching virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.235 [Info] Running ILHook manipulator on virtual float BattleTech.PreferInsideExcludedRegionPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.238 [Info] Writing prefixes
14:11:03.240 [Info] Writing postfixes
14:11:03.249 [Info] Patching virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void CustomDeploy.PreferExposedAlonePositionalFactor_EvaluateInfluenceMapFactorAtPosition::Prefix(BattleTech.PreferExposedAlonePositionalFactor __instance, BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused, Single& __result)
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.253 [Info] Running ILHook manipulator on virtual float BattleTech.PreferExposedAlonePositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.257 [Info] Writing prefixes
14:11:03.260 [Info] Writing postfixes
14:11:03.270 [Info] Patching virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

14:11:03.274 [Info] Running ILHook manipulator on virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.277 [Info] Transpiling virtual float BattleTech.PreferFiringSolutionWhenExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.281 [Info] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> CustomAmmoCategoriesPatches.PreferFiringSolutionWhenExposedAllyPositionalFactor_EvaluateInfluenceMapFactorAtPosition::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
14:11:03.285 [Info] Writing prefixes
14:11:03.288 [Info] Writing postfixes
14:11:03.297 [Info] Patching virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.301 [Info] Running ILHook manipulator on virtual float BattleTech.PreferNearExposedAllyPositionalFactor::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle_unused, BattleTech.MoveType moveType_unused, BattleTech.PathNode pathNode_unused)
14:11:03.304 [Info] Writing prefixes
14:11:03.308 [Info] Writing postfixes
14:11:03.318 [Info] Patching virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferAvoidMeleeWhenOutTonned::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.320 [Info] Running ILHook manipulator on virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferAvoidMeleeWhenOutTonned::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
14:11:03.323 [Info] Writing prefixes
14:11:03.326 [Info] Writing postfixes
14:11:03.337 [Info] Patching virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferStationaryWithMeleeWeapon::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Prefix(BattleTech.AbstractActor unit, Nullable`1& __state)
1 postfixes:
* static void CustomUnits.InfluenceMapPositionFactorPatch::Postfix(BattleTech.AbstractActor unit, Nullable`1& __state)

14:11:03.340 [Info] Running ILHook manipulator on virtual float CBTBehaviorsEnhanced.Patches.AI.InfluenceMap.PreferStationaryWithMeleeWeapon::EvaluateInfluenceMapFactorAtPosition(BattleTech.AbstractActor unit, UnityEngine.Vector3 position, float angle, BattleTech.MoveType moveType, BattleTech.PathNode pathNode)
14:11:03.343 [Info] Writing prefixes
14:11:03.346 [Info] Writing postfixes
14:11:03.358 [Info] Patching float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.Core::MechDefMovementStatistics_GetJumpCapacity(object __instance, BattleTech.MechDef& ___mechDef, Single& __result)

14:11:03.360 [Info] Running ILHook manipulator on float MechEngineer.Features.OverrideStatTooltips.Helper.MechDefMovementStatistics::GetJumpCapacity()
14:11:03.363 [Info] Writing postfixes
14:11:03.635 [Info] Patching virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance)
* static bool CustomUnits.CustomMech::InitGameRepStatic(BattleTech.Mech __instance, UnityEngine.Transform parentTransform)
1 postfixes:
* static void MechEngineer.Features.HardpointFix.Patches.Mech_InitGameRep_Patch::Postfix()

14:11:03.638 [Info] Running ILHook manipulator on virtual void BattleTech.Mech::InitGameRep(UnityEngine.Transform parentTransform)
14:11:03.640 [Info] Writing prefixes
14:11:03.643 [Info] Writing postfixes
14:11:03.663 [Info] Patching bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType) with 6 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static bool CustAmmoCategories.CustomAmmoCategoriesPatches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void MechEngineer.Features.ComponentExplosions.Patches.Mech_DamageLocation_Patch::Prefix(Boolean& __runOriginal, BattleTech.Mech __instance, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, Single& directStructureDamage, Boolean& __result, Boolean& __runOriginal)
* static bool CustAmmoCategories.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, Single& totalArmorDamage, Single& directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __runOriginal)
* static void CBTBehaviorsEnhanced.Patches.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, Boolean& __runOriginal)
* static void IRTweaks.Modules.Combat.Mech_DamageLocation::Prefix(BattleTech.Mech __instance, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, Boolean& __runOriginal)
* static bool CustomUnits.CustomMech::DamageLocation_Override(BattleTech.Mech __instance, int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType, Boolean& __result)

14:11:03.666 [Info] Running ILHook manipulator on bool BattleTech.Mech::DamageLocation(int originalHitLoc, BattleTech.WeaponHitInfo hitInfo, BattleTech.ArmorLocation aLoc, BattleTech.Weapon weapon, float totalArmorDamage, float directStructureDamage, int hitIndex, BattleTech.AttackImpactQuality impactQuality, BattleTech.DamageType damageType)
14:11:03.669 [Info] Writing prefixes
14:11:03.684 [Info] Patching bool BattleTech.Pilot::get_IsIncapacitated() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomUnits.TrooperSquad::Pilot_IsIncapacitated_Patch(BattleTech.Pilot __instance, Boolean& __result)

14:11:03.688 [Info] Running ILHook manipulator on bool BattleTech.Pilot::get_IsIncapacitated()
14:11:03.690 [Info] Writing postfixes
14:11:03.697 [Info] Patching UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent) with 1 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Prefix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
5 postfixes:
* static void CustomSettings.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomAmmoCategoriesPatches.DataManager_PooledInstantiate_CombatHUD::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomUnits.DataManager_PooledInstantiate::Postfix(BattleTech.Data.DataManager __instance, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.GameObject& __result)
* static void CustomDeploy.Core::PooledInstantiate_Fallback(BattleTech.Data.DataManager __instance, UnityEngine.GameObject& __result, string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)

14:11:03.701 [Info] Running ILHook manipulator on UnityEngine.GameObject BattleTech.Data.DataManager::PooledInstantiate(string id, BattleTech.BattleTechResourceType resourceType, UnityEngine.Vector3? position, UnityEngine.Quaternion? rotation, UnityEngine.Transform parent)
14:11:03.704 [Info] Writing prefixes
14:11:03.707 [Info] Writing postfixes
14:11:04.401 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::ShowStructureDamageThroughArmour(BattleTech.UI.HUDMechArmorReadout __instance)

14:11:04.404 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::RefreshMechStructureAndArmor()
14:11:04.408 [Info] Writing postfixes
14:11:04.424 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
* static bool CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor::Prefix(BattleTech.UI.HUDMechArmorReadout __instance)
3 postfixes:
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmorSquad::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void CustomUnits.HUDMechArmorReadout_UpdateMechStructureAndArmor_info::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::FixRearStructureDisplay(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.AttackDirection shownAttackDirection)

14:11:04.427 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::UpdateMechStructureAndArmor(BattleTech.AttackDirection shownAttackDirection)
14:11:04.430 [Info] Writing prefixes
14:11:04.432 [Info] Writing postfixes
14:11:04.445 [Info] Patching void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomUnits.HUDMechArmorReadout_Init_info::Prefix(BattleTech.UI.HUDMechArmorReadout __instance, BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
2 postfixes:
* static void CustomUnits.HUDMechArmorReadout_Init::Postfix(BattleTech.UI.HUDMechArmorReadout __instance)
* static void Sheepy.BattleTechMod.AttackImprovementMod.UserInterfacePanels::AddPaperDollSideLabel(BattleTech.UI.HUDMechArmorReadout __instance)

14:11:04.449 [Info] Running ILHook manipulator on void BattleTech.UI.HUDMechArmorReadout::Init(BattleTech.UI.CombatHUD HUD, bool useHoversForCalledShots, bool hideArmorWhenStructureDamage, bool showArmorAllOrNothing)
14:11:04.452 [Info] Writing prefixes
14:11:04.454 [Info] Writing postfixes
14:11:04.464 [Info] Patching virtual void BattleTech.WeaponDef::FromJSON(string json) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Prefix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void CustAmmoCategoriesPatches.WeaponDef_FromJSONAuras::Prefix(BattleTech.MechComponentDef __instance, String& json)
* static bool CustomPrewarm.Serialize.WeaponDef_FromJSON::Prefix(BattleTech.WeaponDef __instance)
3 postfixes:
* static void MechEngineer.Features.AutoFix.Patches.WeaponDef_FromJSON_Patch::Postfix(BattleTech.WeaponDef __instance)
* static void CustomAmmoCategoriesPatches.BattleTech_WeaponDef_fromJSON_Patch::Postfix(BattleTech.WeaponDef __instance, String& json, CustAmmoCategories.ExtDefinitionParceInfo& __state)
* static void Sheepy.BattleTechMod.AttackImprovementMod.GameData::FixWeaponStats(BattleTech.WeaponDef __instance)

14:11:04.467 [Info] Running ILHook manipulator on virtual void BattleTech.WeaponDef::FromJSON(string json)
14:11:04.470 [Info] Writing prefixes
14:11:04.473 [Info] Writing postfixes
14:13:46.280 [Error] Error while running static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance). Error: System.Exception: Weapon definition Weapon_SRM_SRM2_Streak does not exists
  at CustAmmoCategories.WeaponRefModes..ctor (BattleTech.BaseComponentRef weaponRef) [0x00046] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.UpdateModes (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.WeaponModes (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00029] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.CustomAmmoCategories.isWeaponCanShootNoAmmo (BattleTech.MechComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00027] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustomAmmoCategoriesPatches.MechValidationRules_ValidateMechHasAppropriateAmmo.Prefix (BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, BattleTech.MechValidationLevel validationLevel, BattleTech.WorkOrderEntry_MechLab baseWorkOrder, System.Collections.Generic.Dictionary`2[BattleTech.MechValidationType,System.Collections.Generic.List`1[Localize.Text]]& errorMessages) [0x00134] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at (wrapper dynamic-method) BattleTech.MechValidationRules.DMD<BattleTech.MechValidationRules::ValidateMechHasAppropriateAmmo>(BattleTech.Data.DataManager,BattleTech.MechDef,BattleTech.MechValidationLevel,BattleTech.WorkOrderEntry_MechLab,System.Collections.Generic.Dictionary`2<BattleTech.MechValidationType, System.Collections.Generic.List`1<Localize.Text>>&)
  at (wrapper dynamic-method) BattleTech.MechValidationRules.DMD<BattleTech.MechValidationRules::ValidateMechDef>(BattleTech.MechValidationLevel,BattleTech.Data.DataManager,BattleTech.MechDef,BattleTech.WorkOrderEntry_MechLab)
  at (wrapper dynamic-method) BattleTech.MechValidationRules.DMD<BattleTech.MechValidationRules::GetMechFieldableWarnings>(BattleTech.Data.DataManager,BattleTech.MechDef)
  at BattleTech.UI.LanceLoadoutMechItem.SetData (BattleTech.UI.IMechLabDropTarget dropParent, BattleTech.Data.DataManager dataManager, BattleTech.MechDef mechDef, System.Boolean hideMechDetailsData, System.Boolean canInteract) [0x0005b] in <4184af8dbeb44635831353f4d349631c>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.SetInventoryItemData (BattleTech.UI.IMechLabDraggableItem inventoryItem, BattleTech.UI.IMechLabDraggableItem fakeItem) [0x00022] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.PooledInstantiate (BattleTech.UI.IMechLabDraggableItem fakeItem, System.Boolean addToItemListParent, System.Boolean addItemToRadioSet) [0x00041] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.Render () [0x00127] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.FilterAndSort (System.Boolean reset) [0x000ff] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering.Prefix (System.Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance) [0x00029] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at (wrapper dynamic-method) BattleTech.UI.MechBayMechStorageWidget.DMD<BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering>(BattleTech.UI.MechBayMechStorageWidget)
14:13:46.730 [Error] Error while running static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance). Error: System.ArgumentException: An item with the same key has already been added. Key: MechDef@-964885504
  at System.Collections.Generic.Dictionary`2[TKey,TValue].TryInsert (TKey key, TValue value, System.Collections.Generic.InsertionBehavior behavior) [0x000c1] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at System.Collections.Generic.Dictionary`2[TKey,TValue].Add (TKey key, TValue value) [0x00000] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at System.Linq.Enumerable.ToDictionary[TSource,TKey] (System.Collections.Generic.List`1[T] source, System.Func`2[T,TResult] keySelector, System.Collections.Generic.IEqualityComparer`1[T] comparer) [0x00026] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToDictionary[TSource,TKey] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] keySelector, System.Collections.Generic.IEqualityComparer`1[T] comparer) [0x00057] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToDictionary[TSource,TKey] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] keySelector) [0x00000] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.Render () [0x00038] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.FilterAndSort (System.Boolean reset) [0x000ff] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering.Prefix (System.Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance) [0x00029] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at (wrapper dynamic-method) BattleTech.UI.MechBayMechStorageWidget.DMD<BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering>(BattleTech.UI.MechBayMechStorageWidget)
14:13:48.024 [Error] Error while running static void CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering::Prefix(Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance). Error: System.ArgumentException: An item with the same key has already been added. Key: MechDef@-964885504
  at System.Collections.Generic.Dictionary`2[TKey,TValue].TryInsert (TKey key, TValue value, System.Collections.Generic.InsertionBehavior behavior) [0x000c1] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at System.Collections.Generic.Dictionary`2[TKey,TValue].Add (TKey key, TValue value) [0x00000] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 
  at System.Linq.Enumerable.ToDictionary[TSource,TKey] (System.Collections.Generic.List`1[T] source, System.Func`2[T,TResult] keySelector, System.Collections.Generic.IEqualityComparer`1[T] comparer) [0x00026] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToDictionary[TSource,TKey] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] keySelector, System.Collections.Generic.IEqualityComparer`1[T] comparer) [0x00057] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToDictionary[TSource,TKey] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] keySelector) [0x00000] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.Render () [0x00038] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.CustomStorageWidget.FilterAndSort (System.Boolean reset) [0x000ff] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at CustomFilters.MechBayScrolling.Patches.MechBayMechStorageWidget_ApplyFiltering.Prefix (System.Boolean& __runOriginal, BattleTech.UI.MechBayMechStorageWidget __instance) [0x00029] in <4f9df6d9dae740d1a6e5151204f6752f>:0 
  at (wrapper dynamic-method) BattleTech.UI.MechBayMechStorageWidget.DMD<BattleTech.UI.MechBayMechStorageWidget::ApplyFiltering>(BattleTech.UI.MechBayMechStorageWidget)
14:14:12.166 [Error] Error while running static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue). Error: System.Exception: Weapon definition Weapon_SRM_SRM2_Streak does not exists
  at CustAmmoCategories.WeaponRefModes..ctor (BattleTech.BaseComponentRef weaponRef) [0x00046] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.UpdateModes (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.WeaponModesDict (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x0001f] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoModeNoCache (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00006] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoMode (BattleTech.BaseComponentRef weaponRef, BattleTech.MechComponentRef[] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponRefDataHelper.MinRange (BattleTech.BaseComponentRef weaponRef) [0x00035] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at (wrapper dynamic-method) System.Object.lambda_method(System.Runtime.CompilerServices.Closure,BattleTech.BaseComponentRef)
  at MechEngineer.Features.OverrideStatTooltips.Helper.WeaponRefDataHelper.get_MinRange () [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics+<>c__DisplayClass15_0.<.ctor>b__0 (BattleTech.BaseComponentRef x) [0x00012] in <9f22e498ea894e908b616fc337ee540b>:0 
  at System.Linq.Enumerable+WhereSelectEnumerableIterator`2[TSource,TResult].ToList () [0x0001b] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics..ctor (BattleTech.MechDef mechDef, System.Func`2[T,TResult] customFilter) [0x0007d] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics..ctor (BattleTech.MechDef mechDef, System.Int32 minRange, System.Int32 maxRange) [0x00014] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.CloseRangeStat.GetFirepower (BattleTech.MechDef mechDef, System.Nullable`1[T] canUseInMelee) [0x00039] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.CloseRangeStat.BarValue (BattleTech.MechDef mechDef) [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateFirepowerStat_Patch.Prefix (System.Boolean& __runOriginal, BattleTech.MechDef mechDef, System.Single& currentValue, System.Single& maxValue) [0x00005] in <9f22e498ea894e908b616fc337ee540b>:0 
  at (wrapper dynamic-method) BattleTech.MechStatisticsRules.DMD<BattleTech.MechStatisticsRules::CalculateFirepowerStat>(BattleTech.MechDef,single&,single&)
14:14:12.169 [Error] Error while running static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue). Error: System.Exception: Weapon definition Weapon_SRM_SRM2_Streak does not exists
  at CustAmmoCategories.WeaponRefModes..ctor (BattleTech.BaseComponentRef weaponRef) [0x00046] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.UpdateModes (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.WeaponModesDict (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x0001f] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoModeNoCache (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00006] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoMode (BattleTech.BaseComponentRef weaponRef, BattleTech.MechComponentRef[] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponRefDataHelper.HeatGenerated (BattleTech.BaseComponentRef weaponRef) [0x00031] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at (wrapper dynamic-method) System.Object.lambda_method(System.Runtime.CompilerServices.Closure,BattleTech.BaseComponentRef)
  at MechEngineer.Features.OverrideStatTooltips.Helper.WeaponRefDataHelper.get_HeatGenerated () [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefHeatEfficiencyStatistics+<>c.<GetHeatGenerated>b__26_2 (BattleTech.MechComponentRef x) [0x00007] in <9f22e498ea894e908b616fc337ee540b>:0 
  at System.Linq.Enumerable.Sum[TSource] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`2[T,TResult] selector) [0x0002e] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefHeatEfficiencyStatistics.GetHeatGenerated () [0x00053] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefHeatEfficiencyStatistics..ctor (BattleTech.MechDef mechDef) [0x00042] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.HeatEfficiencyStat.BarValue (BattleTech.MechDef mechDef) [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateHeatEfficiencyStat_Patch.Prefix (System.Boolean& __runOriginal, BattleTech.MechDef mechDef, System.Single& currentValue, System.Single& maxValue) [0x00005] in <9f22e498ea894e908b616fc337ee540b>:0 
  at (wrapper dynamic-method) BattleTech.MechStatisticsRules.DMD<BattleTech.MechStatisticsRules::CalculateHeatEfficiencyStat>(BattleTech.MechDef,single&,single&)
14:14:12.172 [Error] Error while running static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateDurabilityStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue). Error: System.Exception: Weapon definition Weapon_SRM_SRM2_Streak does not exists
  at CustAmmoCategories.WeaponRefModes..ctor (BattleTech.BaseComponentRef weaponRef) [0x00046] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.UpdateModes (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.WeaponModesDict (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x0001f] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoModeNoCache (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00006] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoMode (BattleTech.BaseComponentRef weaponRef, BattleTech.MechComponentRef[] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponRefDataHelper.MinRange (BattleTech.BaseComponentRef weaponRef) [0x00035] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at (wrapper dynamic-method) System.Object.lambda_method(System.Runtime.CompilerServices.Closure,BattleTech.BaseComponentRef)
  at MechEngineer.Features.OverrideStatTooltips.Helper.WeaponRefDataHelper.get_MinRange () [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics+<>c__DisplayClass15_0.<.ctor>b__0 (BattleTech.BaseComponentRef x) [0x00012] in <9f22e498ea894e908b616fc337ee540b>:0 
  at System.Linq.Enumerable+WhereSelectEnumerableIterator`2[TSource,TResult].ToList () [0x0001b] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics..ctor (BattleTech.MechDef mechDef, System.Func`2[T,TResult] customFilter) [0x0007d] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics..ctor (BattleTech.MechDef mechDef, System.Int32 minRange, System.Int32 maxRange) [0x00014] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.LongRangeStat.GetFirepower (BattleTech.MechDef mechDef) [0x0000b] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.LongRangeStat.BarValue (BattleTech.MechDef mechDef) [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateDurabilityStat_Patch.Prefix (System.Boolean& __runOriginal, BattleTech.MechDef mechDef, System.Single& currentValue, System.Single& maxValue) [0x00005] in <9f22e498ea894e908b616fc337ee540b>:0 
  at (wrapper dynamic-method) BattleTech.MechStatisticsRules.DMD<BattleTech.MechStatisticsRules::CalculateDurabilityStat>(BattleTech.MechDef,single&,single&)
14:14:12.176 [Error] Error while running static void MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMovementStat_Patch::Prefix(Boolean& __runOriginal, BattleTech.MechDef mechDef, Single& currentValue, Single& maxValue). Error: System.Exception: Weapon definition Weapon_SRM_SRM2_Streak does not exists
  at CustAmmoCategories.WeaponRefModes..ctor (BattleTech.BaseComponentRef weaponRef) [0x00046] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.UpdateModes (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.WeaponModesDict (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x0001f] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoModeNoCache (BattleTech.BaseComponentRef weaponRef, System.Collections.Generic.List`1[T] inventory) [0x00006] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponDefModesCollectHelper.GetCurrentAmmoMode (BattleTech.BaseComponentRef weaponRef, BattleTech.MechComponentRef[] inventory) [0x00018] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at CustAmmoCategories.WeaponRefDataHelper.MinRange (BattleTech.BaseComponentRef weaponRef) [0x00035] in <05b219d107c04942bb89c709b4aabd5a>:0 
  at (wrapper dynamic-method) System.Object.lambda_method(System.Runtime.CompilerServices.Closure,BattleTech.BaseComponentRef)
  at MechEngineer.Features.OverrideStatTooltips.Helper.WeaponRefDataHelper.get_MinRange () [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics+<>c__DisplayClass15_0.<.ctor>b__0 (BattleTech.BaseComponentRef x) [0x00012] in <9f22e498ea894e908b616fc337ee540b>:0 
  at System.Linq.Enumerable+WhereSelectEnumerableIterator`2[TSource,TResult].ToList () [0x0001b] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <1b13ba6391c74847bbc3eddc86df7eee>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics..ctor (BattleTech.MechDef mechDef, System.Func`2[T,TResult] customFilter) [0x0007d] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Helper.MechDefFirepowerStatistics..ctor (BattleTech.MechDef mechDef, System.Int32 minRange, System.Int32 maxRange) [0x00014] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.MediumRangeStat.GetFirepower (BattleTech.MechDef mechDef) [0x0001c] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Stats.MediumRangeStat.BarValue (BattleTech.MechDef mechDef) [0x00000] in <9f22e498ea894e908b616fc337ee540b>:0 
  at MechEngineer.Features.OverrideStatTooltips.Patches.MechStatisticsRules_CalculateMovementStat_Patch.Prefix (System.Boolean& __runOriginal, BattleTech.MechDef mechDef, System.Single& currentValue, System.Single& maxValue) [0x00005] in <9f22e498ea894e908b616fc337ee540b>:0 
  at (wrapper dynamic-method) BattleTech.MechStatisticsRules.DMD<BattleTech.MechStatisticsRules::CalculateMovementStat>(BattleTech.MechDef,single&,single&)
